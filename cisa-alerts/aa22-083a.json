{
  "markdown": "\n\nSummary\n\nActions to Take Today to Protect Energy Sector Networks:\u2022 Implement and ensure robust network segmentation between IT and ICS networks.\u2022 Enforce MFA to authenticate to a system.\u2022 Manage the creation of, modification of, use of\u2014and permissions associated with\u2014privileged accounts.\nThis joint Cybersecurity Advisory (CSA)\u2014coauthored by the Cybersecurity and Infrastructure Security Agency (CISA), the Federal Bureau of Investigation (FBI), and the Department of Energy (DOE)\u2014provides information on multiple intrusion campaigns conducted by state-sponsored Russian cyber actors from 2011 to 2018 and targeted U.S. and international Energy Sector organizations. CISA, the FBI, and DOE responded to these campaigns with appropriate action in and around the time that they occurred. CISA, the FBI, and DOE are sharing this information in order to highlight historical tactics, techniques, and procedures (TTPs) used by adversaries to target U.S. and international Energy Sector organizations.\nOn March 24, 2022, the U.S. Department of Justice unsealed indictments of three Russian Federal Security Service (FSB) officers and a Russian Federation Central Scientific Research Institute of Chemistry and Mechanics (TsNIIKhM) employee for their involvement in the following intrusion campaigns against U.S. and international oil refineries, nuclear facilities, and energy companies.[1]\n\nGlobal Energy Sector Intrusion Campaign, 2011 to 2018: the FSB conducted a multi-stage campaign in which they gained remote access to U.S. and international Energy Sector networks, deployed ICS-focused malware, and collected and exfiltrated enterprise and ICS-related data.\u00a0\n\nOne of the indicted FSB officers was involved in campaign activity that involved deploying Havex malware to victim networks.\u00a0\nThe other two indicted FSB officers were involved in activity targeting U.S. Energy Sector networks from 2016 through 2018.\n\n\nCompromise of Middle East-based Energy Sector organization with TRITON Malware, 2017: Russian cyber actors with ties to the TsNIIKhM gained access to and leveraged TRITON (also known as HatMan) malware to manipulate a foreign oil refinery\u2019s ICS controllers. TRITON was designed to specifically target Schneider Electric\u2019s Triconex Tricon safety systems and is capable of disrupting those systems. Schneider Electric has issued a patch to mitigate the risk of the TRITON malware\u2019s attack vector; however, network defenders should install the patch and remain vigilant against these threat actors\u2019 TTPs.\n\nThe indicted TsNIIKhM cyber actor is charged with attempt to access U.S. protected computer networks and to cause damage to an energy facility.\nThe indicted TsNIIKhM cyber actor was a co-conspirator in the deployment of the TRITON malware in 2017.\n\n\n\nThis CSA provides the TTPs used by indicted FSB and TsNIIKhM actors in cyber operations against the global Energy Sector. Specifically, this advisory maps TTPs used in the global Energy Sector campaign and the compromise of the Middle East-based Energy Sector organization to the MITRE ATT&CK for Enterprise and ATT&CK for ICS frameworks.\nCISA, the FBI, and DOE assess that state-sponsored Russian cyber operations continue to pose a threat to U.S. Energy Sector networks. CISA, the FBI, and DOE urge the Energy Sector and other critical infrastructure organizations to apply the recommendations listed in the Mitigations section of this advisory and Appendix A to reduce the risk of compromise.\u00a0\nFor more information on Russian state-sponsored malicious cyber activity, see CISA's Russia Cyber Threat Overview and Advisories webpage. For more information on the threat of Russian state-sponsored malicious cyber actors to U.S. critical infrastructure as well as additional mitigation recommendations, see joint CSA Understanding and Mitigating Russian State-Sponsored Cyber Threats to U.S. Critical Infrastructure and CISA's Shields Up Technical Guidance webpage.\u00a0\nRewards for Justice Program\nIf you have information on state-sponsored Russian cyber operations targeting U.S. critical infrastructure, contact the Department of State\u2019s (DOS) Rewards for Justice program. You may be eligible for a reward of up to $10 million, which DOS is offering for information leading to the identification or location of any person who, while acting under the direction or control of a foreign government, participates in malicious cyber activity against U.S. critical infrastructure in violation of the Computer Fraud and Abuse Act (CFAA). Contact +1-202-702-7843 on WhatsApp, Signal, or Telegram, or send information via the Rewards for Justice secure Tor-based tips line located on the Dark Web. For more details refer to rewardsforjustice.net.\nClick here\u00a0for a PDF version of this report.\u00a0\n\nTechnical Details\n\nNote:\u00a0This advisory uses the MITRE ATT&CK\u00ae for Enterprise framework, version 10, and the ATT&CK for ICSs framework. See the ATT&CK for Enterprise and ATT&CK for ICS frameworks for all referenced threat actor tactics and techniques.\nGlobal Energy Sector Intrusion Campaign, 2011 to 2018\nFrom at least 2011 through 2018, the FSB (also known as Berserk Bear, Energetic Bear, TeamSpy, Dragonfly, Havex, Crouching Yeti, and Koala) conducted an intrusion campaign against international and U.S. Energy Sector organizations. The threat actor gained remote access to and deployed malware designed to collect ICS-related information on compromised Energy Sector networks, and exfiltrated enterprise and ICS data.\nBeginning in 2013 and continuing through 2014, the threat actor leveraged Havex malware on Energy Sector networks. The threat actor gained access to these victim networks via spearphishing emails, redirects to compromised websites, and malicious versions of legitimate software updates on multiple ICS vendor websites. The new software updates contained installations of Havex malware, which infected systems of users who downloaded the compromised updates.\nHavex is a remote access Trojan (RAT) that communicates with a command and control (C2) server. The C2 server deploys payloads that enumerate all collected network resources and uses the Open Platform Communications (OPC) standard to gather information about connected control systems devices and resources within the network. Havex allowed the actor to install additional malware and extract data, including system information, lists of files and installed programs, e-mail address books, and virtual private network (VPN) configuration files. The Havex payload can cause common OPC platforms to crash, which could cause a denial-of-service condition on applications that rely on OPC communications. Note: for additional information on Havex, see to CISA ICS Advisory ICS Focused Malware and CISA ICS Alert ICS Focused Malware (Update A).\nBeginning in 2016, the threat actor began widely targeting U.S. Energy Sector networks. The actor conducted these attacks in two stages: first targeting third-party commercial organizations (such as vendors, integrators, and suppliers) and then targeting Energy Sector organizations. The threat actor used the compromised third-party infrastructure to conduct spearphishing, watering hole, and supply chain attacks to harvest Energy Sector credentials and to pivot to Energy Sector enterprise networks. After obtaining access to the U.S. Energy Sector networks, the actor conducted network discovery, moved laterally, gained persistence, then collected and exfiltrated information pertaining to ICS from the enterprise, and possibly operational technology (OT), environments. Exfiltrated information included: vendor information, reference documents, ICS architecture, and layout diagrams.\nFor more detailed information on FSB targeting of U.S. Energy Sector networks, See CISA Alert Russian Government Cyber Activity Targeting Energy Sector and Other Critical Infrastructure Sectors. \u00a0\nRefer to Appendix A for TTPs of Havex malware and TTPs used by the actor in the 2016 to 2018 targeting of U.S. Energy Sector networks, as well as associated mitigations.\nCompromise of Middle East-based Energy Sector Organization with TRITON Malware, 2017\nIn 2017, Russian cyber actors with ties to TsNIIKhM gained access to and manipulated a foreign oil refinery\u2019s safety devices. TsNIIKhM actors used TRITON malware on the ICS controllers, which resulted in the refinery shutting down for several days.\u00a0\nTRITON is a custom-built, sophisticated, multi-stage malware affecting Schneider Electric\u2019s Triconex Tricon, a safety programmable logic controller (PLC) (also referred to as a safety instrumented system [SIS]), which monitors industrial processes to prevent hazardous conditions. TRITON is capable of directly interacting with, remotely controlling, and compromising these safety systems. As these systems are used in a large number of environments, the capacity to disable, inhibit, or modify the ability of a process to fail safely could result in physical consequences. Note: for additional information on affected products, see to CISA ICS Advisory\u00a0Schneider Electric Triconex Tricon (Update B).\nTRITON malware affects Triconex Tricon PLCs by modifying in-memory firmware to add additional programming. The extra functionality allows an attacker to read/modify memory contents and execute custom code, disabling the safety system.\u00a0\nTRITON malware has multiple components, including a custom Python script, four Python modules, and malicious shellcode that contains an injector and a payload. For detailed information on TRITON\u2019s components, refer to CISA Malware Analysis Report (MAR): HatMan: Safety System Targeted Malware (Update B).\nNote: the indicted TsNIIKhM cyber actor was also involved in activity targeting U.S. Energy Sector companies in 2018, and other TsNIIKhM-associated actors have targeted a U.S.-based company\u2019s facilities in an attempt to access the company\u2019s OT systems. To date, CISA, FBI, and DOE have no information to indicate these actors have intentionally disrupted any U.S. Energy Sector infrastructure.\u00a0\nRefer to Appendix A for TTPs used by TRITON as well as associated mitigations.\u00a0\n\nMitigations\n\nEnterprise Environment\nCISA, the FBI, and DOE recommend Energy Sector and other critical infrastructure organizations implement the following mitigations to harden their corporate enterprise network. These mitigations are tailored to combat multiple enterprise techniques observed in these campaigns (refer to Appendix A for observed TTPs and additional mitigations).\nPrivileged Account Management\u00a0\n\nManage the creation of, modification of, use of\u2014and permissions associated with\u2014privileged accounts, including SYSTEM and root.\n\nPassword Policies\n\nSet and enforce secure password policies for accounts.\n\nDisable or Remove Features or Programs\n\nRemove or deny access to unnecessary and potentially vulnerable software to prevent abuse by adversaries.\n\nAudit\u00a0\n\nPerform audits or scans of systems, permissions, insecure software, insecure configurations, etc., to identify potential weaknesses.\n\nOperating System Configuration\u00a0\n\nMake configuration changes related to the operating system or a common feature of the operating system that result in system hardening against techniques.\n\nMultifactor Authentication\n\nEnforce multifactor authentication (MFA) by requiring users to provide two or more pieces of information (such as username and password plus a token, e.g., a physical smart card or token generator) to authenticate to a system.\n\nFilter Network Traffic\u00a0\u00a0 \u00a0\n\nUse network appliances to filter ingress or egress traffic and perform protocol-based filtering. Configure software on endpoints to filter network traffic.\n\nNetwork Segmentation\n\nArchitect sections of the network to isolate critical systems, functions, or resources. Use physical and logical segmentation to prevent access to potentially sensitive systems and information. Use a demilitarized zone (DMZ) to contain any internet-facing services that should not be exposed from the internal network.\n\nLimit Access to Resources over the Network\n\nPrevent access to file shares, remote access to systems, and unnecessary services. Mechanisms to limit access may include use of network concentrators, Remote Desktop Protocol (RDP) gateways, etc.\n\nExecution Prevention\n\nBlock execution of code on a system through application control, and/or script blocking.\n\nIndustrial Control System Environment\nCISA, the FBI, and DOE recommend Energy Sector and other critical infrastructure organizations implement the following mitigations to harden their ICS/OT environment.\nNetwork Segmentation\n\nImplement and ensure robust network segmentation between IT and ICS networks to limit the ability of cyber threat actors to move laterally to ICS networks if the IT network is compromised.\u00a0\n\nImplement a network topology for ICS that has multiple layers, with the most critical communications occurring in the most secure and reliable layer. For more information refer to National Institute of Standard and Technology Special Publication 800-82: Guide to Industrial Control Systems (ICS) Security. Further segmentation should be applied to portions of the network that are reliant on one another by functionality. Figure 5 on page 26 of the CISA ICS Defense in Depth Strategy document describes this architecture.\nUse one-way communication diodes to prevent external access, whenever possible.\nSet up DMZs to create a physical and logical subnetwork that acts as an intermediary for connected security devices to avoid exposure.\nEmploy reliable network security protocols and services where feasible.\n\n\nConsider using virtual local area networks (VLANs) for additional network segmentation, for example, by placing all printers in separate, dedicated VLANs and restricting users\u2019 direct printer access. This same principle can be applied to segmentation of portions of the process for which devices are used. As an example, systems that are only involved in the creation of one component within an assembly line that is not directly related to another component can be on separate VLANs, which allows for identification of any unexpected communication, as well as segmentation against potential risk exposure on a larger scale.\nImplement perimeter security between network segments to limit the ability of cyber threat actors to move laterally.\u00a0\n\nControl traffic between network segments by using firewalls, intrusion detection systems (IDSs), and rules for filtering traffic on routers and switches.\nImplement network monitoring at key chokepoints\u2014including egress points to the internet, between network segments, core switch locations\u2014and at key assets or services (e.g., remote access services).\nConfigure an IDS to create alarms for any ICS traffic outside normal operations (after establishing a baseline of normal operations and network traffic).\nConfigure security incident and event monitoring to monitor, analyze, and correlate event logs from across the ICS network to identify intrusion attempts.\n\n\n\nICS Best Practices\n\nUpdate all software. Use a risk-based assessment strategy to determine which ICS networks, assets, and zones should participate in the patch management program.\u00a0\nTest all patches in out-of-band testing environments before implementation into production environments.\nImplement application allow listing on human machine interfaces and engineering workstations.\nHarden software configuration on field devices, including tablets and smartphones.\nReplace all end-of-life software and hardware devices.\nDisable unused ports and services on ICS devices (after testing to ensure this will not affect ICS operation).\nRestrict and manage remote access software. Enforce MFA for remote access to ICS networks.\nConfigure encryption and security for network protocols within the ICS environment.\nDo not allow vendors to connect their devices to the ICS network. Use of a compromised device could introduce malware.\u00a0\nDisallow any devices that do not live solely on the ICS environment from communicating on the platform. \u2018Transient devices\u2019 provide risk exposure to the ICS environment from malicious activity in the IT or other environments to which they connect.\nMaintain an ICS asset inventory of all hardware, software, and supporting infrastructure technologies.\u00a0\nMaintain robust host logging on critical devices within the ICS environment, such as jump boxes, domain controllers, repository servers, etc. These logs should be aggregated into a centralized log server for review.\u00a0\nEnsure robust physical security is in place to prevent unauthorized personal from accessing controlled spaces that house ICS equipment.\nRegularly test manual controls so that critical functions can be kept running if ICS/OT networks need to be taken offline.\n\nContact Information\nOrganizations can also report anomalous cyber activity and/or cyber incidents 24/7 to\u00a0report@cisa.gov\u00a0or by calling 1-844-Say-CISA (1-844-729-2472). and/or to the FBI via your local FBI field office or the FBI\u2019s 24/7 CyWatch at (855) 292-3937 or CyWatch@fbi.gov.\nReferences\n[1]\u00a0https://www.justice.gov/opa/pr/four-russian-government-employees-charged-two-historical-hacking-campaigns-targeting-critical[2] https://collaborate.mitre.org/attackics/index.php/Software/S0003\u00a0[3] https://collaborate.mitre.org/attackics/index.php/Software/S0003[4] https://collaborate.mitre.org/attackics/index.php/Software/S0013\u00a0\nAPPENDIX A:\u00a0CAMPAIGN AND MALWARE TACTICS, TECHNIQUES, AND PROCEDURES\nGlobal Energy Sector Campaign: Havex Malware\u00a0\nTable 1 maps Havex\u2019s capabilities to the ATT&CK for Enterprise framework, and table 2 maps Havex\u2019s capabilities to the ATT&CK for ICS framework. Table 1 also provides associated mitigations. For additional mitigations, refer to the Mitigations section of this advisory.\nTable 1: Enterprise Domain Tactics and Techniques for Havex [2]\n\n\n\nTactic\nTechnique\nUse\nDetection/Mitigations\n\n\nPersistence [TA0003]\nBoot or Logon Autostart Execution: Registry Run Keys / Startup Folder [T1547.001]\nHavex adds Registry Run keys to achieve persistence.\nMonitor: monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders. Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\n\nPrivilege Escalation [TA0004]\n\nProcess Injection [T1055]\nNote: this technique also applies to:\n\nTactic: Defense Evasion [TA0005]\n\n\nHavex injects itself into explorer.exe.\n\nBehavior Prevention on End Point: use capabilities to prevent suspicious behavior patterns from occurring on endpoint systems. This could include suspicious process, file, Application Programming Interface (API) call, etc., behavior.\nPrivileged Account Management: manage the creation of, modification of, use of, and permissions associated with privileged accounts, including SYSTEM and root.\n\n\n\nDefense Evasion [TA0005]\nIndicator Removal on Host: File Deletion [T1070.004]\nHavex contains a cleanup module that removes traces of itself from victim networks.\nMonitor: monitoring for command-line deletion functions to correlate with binaries or other files that an adversary may drop and remove may lead to detection of malicious activity. Another good practice is monitoring for known deletion and secure deletion tools that are not already on systems within an enterprise network, which an adversary could introduce. Some monitoring tools may collect command-line arguments but may not capture DEL commands since DEL is a native function within cmd.exe.\n\n\nCredential Access [TA0006]\nCredentials from Password Stores: Credentials from Web Browsers [T1555.003]\nHavex may contain a publicly available web browser password recovery tool.\nPassword Policies: set and enforce secure password policies for accounts.\n\n\nDiscovery [TA0007]\nAccount Discovery: Email Account [T1087.003]\nHavex collects address book information from Outlook\nMonitor: monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation (WMI) and PowerShell.\n\n\nFile and Directory Discovery [T1083]\nHavex collects information about available drives, default browser, desktop file list, My Documents, internet history, program files, and root of available drives.\nMonitor: monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as WMI and PowerShell.\n\n\nProcess Discovery [T1057]\nHavex collects information about running processes.\nMonitor: normal, benign system and network events that look like process discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as WMI and PowerShell.\n\n\nSystem Information Discovery [T1082]\nHavex collects information about the OS and computer name.\n\nMonitor: monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as WMI and PowerShell.\nIn cloud-based systems, native logging can be used to identify access to certain APIs and dashboards that may contain system information. Depending on how the environment is used, that data alone may not be useful due to benign use during normal operations.\n\n\n\nSystem Network Configuration Discovery [T1016]\nHavex collects information about the internet adapter configuration.\nMonitor: monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as WMI and PowerShell.\n\n\nSystem Owner/User Discovery [T1033]\nHavex collects usernames.\n\n\nCollection [TA0009]\nArchive Collected Data [T1560]\nHavex writes collected data to a temporary file in an encrypted form before exfiltration to a C2 server.\nAudit: audit or scan systems, permissions, insecure software, insecure configurations, etc., to identify potential weaknesses.\n\n\nCommand and Control [TA0011]\nData Encoding: Standard Encoding [T1132.001]\nHavex uses standard Base64 + bzip2 or standard Base64 + reverse XOR + RSA-2048 to decrypt data received from C2 servers.\nDetect: analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes using the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.\n\n\n\n\u00a0\nTable 2:\u00a0ICS Domain Tactics and Techniques for Havex [3]\n\n\n\nTactic\nTechnique\nUse\n\n\nInitial Access\nSpearphishing Attachment [T0865]\nHavex is distributed through a Trojanized installer attached to emails.\n\n\n\nSupply Chain Compromise [T0862]\nNote: this activity also applies to Tactic: Drive by Compromise [T0817]\n\nHavex is distributed through Trojanized installers planted on compromised vendor websites.\n\n\nExecution\nUser Execution [T0863]\nExecution of Havex relies on a user opening a Trojanized installer attached to an email.\n\n\nDiscovery\nRemote System Discovery [T0846]\nHavex uses Windows networking (WNet) to discover all the servers, including OPC servers that are reachable by the compromised machine over the network.\n\n\nRemote System Information Discovery [T0888]\nHavex gathers server information, including CLSID, server name, Program ID, OPC version, vendor information, running state, group count, and server bandwidth.\n\n\nCollection\nAutomated Collection [T0802]\nHavex gathers information about connected control systems devices.\n\n\nPoint & Tag Identification [T0861]\nHavex can enumerate OPC tags; specifically tag name, type, access, and ID.\n\n\nInhibit Response Function\nDenial of Service [T0814]\nHavex has caused multiple common OPC platforms to intermittently crash.\u00a0\n\n\nImpact\nDenial of Control [T0813]\nHavex can cause PLCs inability to control connected systems.\n\n\n\n\u00a0\nGlobal Energy Sector Campaign: 2016 to 2018 U.S. Energy Sector Targeting\nTable 3 maps the 2016 to 2018 U.S. Energy Sector targeting activity to the MITRE ATT&CK Enterprise framework. Mitigations for techniques are also provided in table. For additional mitigations, refer to the Mitigations section of this advisory.\nTable 3:\u00a0Energy Sector Campaign, 2016 to 2018 targeting U.S. Energy Sector: Observed MITRE ATT&CK Enterprise Tactics and Techniques\n\n\n\nTactic\nTechnique\nUse\u00a0\nDetection/Mitigations\n\n\nReconnaissance [TA0043]\nGather Victim Identity Information: Credentials [T1589.001]\n\nThe threat actor harvested credentials of third-party commercial organizations by sending spearphishing emails that contained a PDF attachment. The PDF attachment contained a shortened URL that, when clicked, led users to a website that prompted the user for their email address and password.The threat actor harvested credentials of Energy Sector targets by sending spearphishing emails with a malicious Microsoft Word document or links to the watering holes created on compromised third-party websites.\nNote: this activity also applies to:\u00a0\n\nTactic: Reconnaissance [TA0043], Technique: Phishing for Information [T1598]:\n\nSpearphishing Attachment [T1598.002]\nSpearphishing Link [T1598.003]\n\n\n\n\n\nSoftware Configuration: implement configuration changes to software (other than the operating system) to mitigate security risks associated to how the software operates.\nUser Training: train users to be aware of access or manipulation attempts by an adversary to reduce the risk of successful spearphishing, social engineering, and other techniques that involve user interaction.\n\n\n\nResource Development [TA0042]\nCompromise Infrastructure: Server [T1584.004]\nThe threat actor created watering holes on compromised third-party organizations\u2019 domains.\nThis activity typically takes place outside the visibility of target organizations, making detection of this behavior difficult. Ensure that users browse the internet securely. Prevent intentional and unintentional download of malware or rootkits, and users from accessing infected or malicious websites. Treat all traffic as untrusted, even if it comes from a partner website or popular domain.\n\n\nInitial Access [TA0001]\nValid Accounts [T1078]\nThe threat actor obtained access to Energy Sector targets by leveraging compromised third-party infrastructure and previously compromised Energy Sector credentials against remote access services and infrastructure\u2014specifically VPN, RDP, and Outlook Web Access\u2014where MFA was not enabled.\n\nNetwork Segmentation: architect sections of the network to isolate critical systems, functions, or resources. Use physical and logical segmentation to prevent access to potentially sensitive systems and information. Use a DMZ to contain any internet-facing services that should not be exposed from the internal network.\nMFA: enforce use of two or more pieces of evidence (such as username and password plus a token, e.g., a physical smart card or token generator) to authenticate to a system.\nPrivileged Account Management: manage the creation of, modification of, use of, and permissions associated with privileged accounts, including SYSTEM and root.\nUpdate Software: perform regular software updates to mitigate exploitation risk.\nExploit Protection: use capabilities to detect and block conditions that may lead to or be indicative of a software exploit occurring.\nApplication Isolation and Sandboxing: restrict execution of code to a virtual environment on or in transit to an endpoint system.\n\n\n\nExternal Remote Services [T1133]\nThe threat actor installed VPN clients on compromised third-party targets to connect to Energy Sector networks.\n\nNetwork Segmentation: architect sections of the network to isolate critical systems, functions, or resources. Use physical and logical segmentation to prevent access to potentially sensitive systems and information. Use a DMZ to contain any internet-facing services that should not be exposed from the internal network.\nMFA: enforce use of two or more pieces of evidence (such as username and password plus a token, e.g., a physical smart card or token generator) to authenticate to a system.\nLimit Access to Resource Over Network: prevent access to file shares, remote access to systems, and unnecessary services. Mechanisms to limit access may include use of network concentrators, RDP gateways, etc.\nDisable or Remove Program: remove or deny access to unnecessary and potentially vulnerable software to prevent abuse by adversaries.\n\n\n\nExecution\u00a0[TA0002]\nCommand and Scripting Interpreter: PowerShell [T1059.001]\n\nDuring an RDP session, the threat actor used a PowerShell Script to create an account within a victim\u2019s Microsoft Exchange Server.\u00a0\nNote: this activity also applies to:\u00a0\n\nTactic: Persistence [TA0003], Technique: Create Account: Local Account [T1136.001]\u00a0\n\n\n\nAntivirus/Antimalware: use signatures or heuristics to detect malicious software.\nCode Signing: enforce binary and application integrity with digital signature verification to prevent untrusted code from executing.\nDisable or Remove Program: remove or deny access to unnecessary and potentially vulnerable software to prevent abuse by adversaries.\nPrivileged Account Management: manage the creation of, modification of, use of, and permissions associated with privileged accounts, including SYSTEM and root.\n\n\n\nCommand and Scripting Interpreter: Windows Command Shell [T1059.003]\n\nThe threat actor used a JavaScript with an embedded Command Shell script to:\n\nCreate a local administrator account;\u00a0\nDisable the host-based firewall;\nGlobally open port 3389 for RDP access; and\nAttempt to add the newly created account to the administrators group to gain elevated privileges.\u00a0\n\nNote: this activity also applies to:\u00a0\n\nTactic: Credential Access [TA0006], Technique: Input Capture [T1056]\nTactic: Execution [TA0002], Technique: Command and Scripting Interpreter: JavaScript [T1059.007]\nTactic: Persistence [TA0003], Technique: Create Account: Local Account [T1136.001]\n\n\nExecution Prevention: block execution of code on a system through application control, and/or script blocking.\n\n\nScheduled Task/Job: Scheduled Task [T1053.005]\nThe threat actor created a Scheduled Task to automatically log out of a newly created account every eight hours.\n\nAudit: audit or scan systems, permissions, insecure software, insecure configurations, etc., to identify potential weaknesses.\nHarden Operating System Configuration: make configuration changes related to the operating system or a common feature of the operating system that result in system hardening against techniques.\nPrivileged Account Management: manage the creation of, modification of, use of, and permissions associated with privileged accounts, including SYSTEM and root.\nUser Account Management: manage the creation of, modification of, use of, and permissions associated with user accounts.\n\n\n\nPersistence [TA0003]\nCreate Account: Local Account [T1136.001]\u00a0\nThe threat actor created local administrator accounts on previously compromised third-party organizations for reconnaissance and to remotely access Energy Sector targets.\u00a0\u00a0 \u00a0MFA: enforce use of two or more pieces of evidence (such as username and password plus a token, e.g., a physical smart card or token generator) to authenticate to a system.\n\nMFA: enforce use of two or more pieces of evidence (such as username and password plus a token, e.g., a physical smart card or token generator) to authenticate to a system.\nPrivileged Account Management: manage the creation of, modification of, use of, and permissions associated with privileged accounts, including SYSTEM and root.\n\n\n\nServer Software Component: Web Shell [T1505.003]\nThe threat actor created webshells on Energy Sector targets\u2019 publicly accessible email and web servers.\nDetect: the portion of the webshell that is on the server may be small and look innocuous. Process monitoring may be used to detect Web servers that perform suspicious actions such as running cmd.exe or accessing files that are not in the Web directory. File monitoring may be used to detect changes to files in the Web directory of a Web server that do not match with updates to the Web server's content and may indicate implantation of a Web shell script. Log authentication attempts to the server and any unusual traffic patterns to or from the server and internal network.\n\n\nDefense Evasion [TA0005]\nIndicator Removal on Host: Clear Windows Event Logs [T1070.001]\n\nThe threat actor created new accounts on victim networks to perform cleanup operations. The accounts created were used to clear the following Windows event logs: System, Security, Terminal Services, Remote Services, and Audit.\u00a0\nThe threat actor also removed applications they installed while they were in the network along with any logs produced. For example, the VPN client installed at one third-party commercial facility was deleted along with the logs that were produced from its use. Finally, data generated by other accounts used on the systems accessed were deleted.\nNote: this activity also applies to:\n\nTactic: Persistence [TA0003], Technique: Create Account: Local Account [T1136.001]\n\n\n\nEncrypt Sensitive Information: protect sensitive information with strong encryption.\nRemote Data Storage: use remote security log and sensitive file storage where access can be controlled better to prevent exposure of intrusion detection log data or sensitive information.\nRestrict File and Directory Permissions: restrict access by setting directory and file permissions that are not specific to users or privileged accounts.\n\n\n\nIndicator Removal on Host: File Deletion [T1070.004]\n\nThe threat actor cleaned up target networks by deleting created screenshots and specific registry keys.\u00a0\nThe threat actor also deleted all batch scripts, output text documents, and any tools they brought into the environment, such as scr.exe.\nNote: this activity also applies to:\n\nTechnique: Modify Registry [T1112]\n\n\nMonitor: monitoring for command-line deletion functions to correlate with binaries or other files that an adversary may drop and remove may lead to detection of malicious activity. Another good practice is monitoring for known deletion and secure deletion tools that are not already on systems within an enterprise network that an adversary could introduce. Some monitoring tools may collect command-line arguments, but may not capture DEL commands since DEL is a native function within cmd.exe.\u00a0\n\n\nTechnique: Masquerading [T1036]\nAfter downloading tools from a remote server, the threat actor renamed the extensions.\n\nRestrict File and Directory Permissions: restrict access by setting directory and file permissions that are not specific to users or privileged accounts.\nCode Signing: enforce binary and application integrity with digital signature verification to prevent untrusted code from executing.\nExecution Prevention: block execution of code on a system through application control, and/or script blocking.\n\n\n\nCredential Access [TA0006]\nBrute Force: Password Cracking [T1110.002]\n\nThe threat actor used password-cracking techniques to obtain the plaintext passwords from obtained credential hashes.\nThe threat actor dropped and executed open-source and free password cracking tools such as Hydra, SecretsDump, and CrackMapExec, and Python.\n\n\nMFA: enforce use of two or more pieces of evidence (such as username and password plus a token, e.g., a physical smart card or token generator) to authenticate to a system.\nPassword Policies: set and enforce secure password policies for accounts.\n\n\n\nForced Authentication [T1187]\nMicrosoft Word attachments sent via spearphishing emails leveraged legitimate Microsoft Office functions for retrieving a document from a remote server over Server Message Block (SMB) using Transmission Control Protocol ports 445 or 139. As a part of the standard processes executed by Microsoft Word, this request authenticates the client with the server, sending the user\u2019s credential hash to the remote server before retrieving the requested file. (Note: transfer of credentials can occur even if the file is not retrieved.)\n\nPassword Policies: set and enforce secure password policies for accounts.\nFilter Network Traffic: use network appliances to filter ingress or egress traffic and perform protocol-based filtering. Configure software on endpoints to filter network traffic.\n\n\n\nThe threat actor\u2019s watering hole sites contained altered JavaScript and PHP files that requested a file icon using SMB from an IP address controlled by the threat actors.\n\n\n\nThe threat actor manipulated LNK files to repeatedly gather user credentials. Default Windows functionality enables icons to be loaded from a local or remote Windows repository. The threat actor exploited this built-in Windows functionality by setting the icon path to a remote server controller by the actors. When the user browses to the directory, Windows attempts to load the icon and initiate an SMB authentication session. During this process, the active user\u2019s credentials are passed through the attempted SMB connection.\u00a0\nNote: this activity also applies to:\n\nTactic: Persistence [TA0003], Technique: Boot or Logon Autostart Execution: Shortcut Modification [T1547.009]\n\n\n\n\nOS Credential Dumping: Local Security Authority Subsystem Service (LSASS) Memory [T1003.001]\nThe threat actor used an Administrator PowerShell prompt to enable the WDigest authentication protocol to store plaintext passwords in the LSASS memory. With this enabled, credential harvesting tools can dump passwords from this process\u2019s memory.\n\nOperating System Configuration: make configuration changes related to the operating system or a common feature of the operating system that result in system hardening against techniques.\nPassword Policies: set and enforce secure password policies for accounts.\nPrivileged Account Management: manage the creation of, modification of, use of, and permissions associated with privileged accounts, including SYSTEM and root.\nPrivileged Process Integrity: protect processes with high privileges that can be used to interact with critical system components through use of protected process light, anti-process injection defenses, or other process integrity enforcement measures.\nUser Training: train users to be aware of access or manipulation attempts by an adversary to reduce the risk of successful spearphishing, social engineering, and other techniques that involve user interaction.\nCredential Access Protection: use capabilities to prevent successful credential access by adversaries; including blocking forms of credential dumping.\n\n\n\nOS Credential Dumping: NTDS [T1003.003]\nThe threat actor collected the files ntds.dit. The file ntds.dit is the Active Directory (AD) database that contains all information related to the AD, including encrypted user passwords.\n\nMonitor: monitor processes and command-line arguments for program execution that may be indicative of credential dumping, especially attempts to access or copy the NTDS.dit.\nPrivileged Account Management: manage the creation of, modification of, se of, and permissions associated with privileged accounts, including SYSTEM and root.\nUser Training: train users to be aware of access or manipulation attempts by an adversary to reduce the risk of successful spearphishing, social engineering, and other techniques that involve user interaction.\n\n\n\nDiscovery [TA0007]\nRemote System Discovery [T1018]\n\nThe threat actor used privileged credentials to access the Energy Sector victim\u2019s domain controller. Once on the domain controller, the threat actors used batch scripts dc.bat and dit.bat to enumerate hosts, users, and additional information about the environment.\u00a0\nNote: this activity also applies to:\u00a0\n\nTactic: Persistence [TA0003], Technique: Valid Accounts: Domain Accounts [T1078.002]\nTactic: Discovery [TA0007], Technique: System Owner/User Discovery [T1033]\n\n\n\nMonitor: normal, benign system and network events related to legitimate remote system discovery may be uncommon, depending on the environment and how they are used.\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information.\nMonitor for processes that can be used to discover remote systems, such as ping.exe and tracert.exe, especially when executed in quick succession.\n\n\n\nThe threat actor accessed workstations and servers on corporate networks that contained data output from control systems within energy generation facilities. The threat actors accessed files pertaining to ICS or supervisory control and data acquisition (SCADA) systems.\u00a0\n\n\n\nThe actor targeted and copied profile and configuration information for accessing ICS systems on the network. The threat actor copied Virtual Network Connection (VNC) profiles that contained configuration information on accessing ICS systems and took screenshots of a Human Machine Interface (HMI).\nNote: this activity also applies to\n\nTactic: Discovery [TA0007], Technique File and Directory Discovery [T1083]\nTactic: [TA0009], Technique: Screen Capture [T1113]\n\n\n\n\nFile and Directory Discovery [T1083]\n\nThe actor used dirsb.bat to gather folder and file names from hosts on the network.\nNote: this activity also applies to:\u00a0\n\nTactic: Execution [TA0002], Command and Scripting Interpreter: Windows Command Shell [T1059.003]\n\n\nThis type of attack technique cannot be easily mitigated with preventive controls since it is based on the abuse of system features. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information.\n\n\nThe threat actor conducted reconnaissance operations within the network. The threat actor focused on identifying and browsing file servers within the intended victim\u2019s network.\n\n\nLateral Movement [TA0008]\nLateral Tool Transfer [T1570]\n\nThe threat actor moved laterally via PsExec, batch scripts, RDP, VNC, and admin shares.\nNote: this activity also applies to:\n\nTactic: Lateral Movement [TA0008], Techniques:\u00a0\n\nRemote Services: Remote Desktop Protocol [T1021.001]\nRemote Services: SMB/Windows Admin Shares [T1021.002]\nRemote Services: VNC [T1021.005]\n\n\n\n\n\nNetwork Intrusion Prevention: use intrusion detection signatures to block traffic at network boundaries.\nNetwork Segmentation: architect sections of the network to isolate critical systems, functions, or resources. Use physical and logical segmentation to prevent access to potentially sensitive systems and information. Use a DMZ to contain any internet-facing services that should not be exposed from the internal network.\nOperating System Configuration: make configuration changes related to the operating system or a common feature of the operating system that result in system hardening against techniques.\nPrivileged Account Management: manage the creation of, modification of, use of, and permissions associated with privileged accounts, including SYSTEM and root.\nUser Account Management: manage the creation of, modification o, se of, and permissions associated with user accounts.\nDisable or Remove Feature or Program: remove or deny access to unnecessary and potentially vulnerable software to prevent abuse by adversaries.\nAudit: audit or scan systems, permissions, insecure software, insecure configurations, etc. to identify potential weaknesses.\nMFA: enforce use of two or more pieces of evidence (such as username and password plus a token, e.g., a physical smart card or token generator) to authenticate to a system.\nLimit Access to Resource Over Network: prevent access to file shares, remote access to systems, and unnecessary services. Mechanisms to limit access may include use of network concentrators, RDP gateways, etc.\nFilter Network Traffic: use network appliances to filter ingress or egress traffic and perform protocol-based filtering. Configure software on endpoints to filter network traffic.\nLimit Software Installation: block users or groups from installing unapproved software.\n\n\n\nCollection [TA0009]\nData from Local System [T1005]\u00a0\nThe threat actor collected the Windows SYSTEM registry hive file, which contains host configuration information.\n\nMonitor: monitor processes and command-line arguments for actions that could be taken to collect files from a system. Remote access tools with built-in features may interact directly with the Windows API to gather data.\nData may also be acquired through Windows system management tools such as WMI and PowerShell.\n\n\n\nArchive Collected Data: Archive via Utility [T1560.001]\nThe threat actor compressed the ntds.dit file and the SYSTEM registry hive they had collected into archives named SYSTEM.zip and comps.zip.\nAudit: audit or scan systems, permissions, insecure software, insecure configurations, etc. to identify potential weaknesses.\n\n\nScreen Capture [T1113]\n\nThe threat actor used Windows\u2019 Scheduled Tasks and batch scripts, to execute scr.exe and collect additional information from hosts on the network. The tool scr.exe is a screenshot utility that the threat actor used to capture the screen of systems across the network.\nNote: this activity also applies to:\u00a0\n\nTactic: Execution [TA0002], Techniques:\u00a0\n\nCommand and Scripting Interpreter: Windows Command Shell [T1059.003]\nScheduled Task/Job: Scheduled Task [T1053.005]\n\n\n\n\n\nNetwork Segmentation: architect sections of the network to isolate critical systems, functions, or resources. Use physical and logical segmentation to prevent access to potentially sensitive systems and information. Use a DMZ to contain any internet-facing services that should not be exposed from the internal network.\nMFA: enforce use of two or more pieces of evidence (such as username and password plus a token, e.g., a physical smart card or token generator) to authenticate to a system.\nLimit Access to Resource Over Network: prevent access to file shares, remote access to systems, and unnecessary services. Mechanisms to limit access may include use of network concentrators, RDP gateways, etc.\nDisable or Remove Feature or Program: remove or deny access to unnecessary and potentially vulnerable software to prevent abuse by adversaries.\n\n\n\n\nThe actor used batch scripts labeled pss.bat and psc.bat to run the PsExec tool. PsExec was used to execute scr.exe across the network and to collect screenshots of systems in a text file.\nNote: this activity also applies to:\u00a0\n\nTactic: Execution [TA0002], Techniques:\u00a0\n\nCommand and Scripting Interpreter: Windows Command Shell [T1059.003]\nSystem Services: Service Execution [T1569.002]\n\n\n\n\n\n\nCommand and Control [TA0011]\nIngress Tool Transfer [T1105]\nThe threat actor downloaded tools from a remote server.\u00a0\u00a0 \u00a0\n\nMonitor: monitor for file creation and files transferred into the network. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as File Transfer Protocol, that does not normally occur may also be suspicious.\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.\nAnalyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.\nUse intrusion detection signatures to block traffic at network boundaries.\n\n\n\n\n\u00a0\nTRITON Malware\nTable 4 maps TRITON\u2019s capabilities to the ATT&CK for ICS framework. For mitigations to harden ICS/OT environments, refer to the Mitigations section of this advisory.\nTable 4:\u00a0ICS Domain Tactics and Techniques for TRITON [4]\n\n\n\nInitial Access\nEngineering Workstation Compromise [T0818]\nTRITON compromises workstations within the safety network.\u00a0\n\n\nExecution\n\nChange Operating Mode [T0858]\nNote: this technique also applies to Evasion.\n\nTRITON can halt or run a program through the TriStation protocol. (Note: TriStation protocol is the protocol that Triconex System software uses to communicate with the Tricon PLCs.)\u00a0\n\n\nExecution through API [T0871]\nTRITON leverages a custom implementation of the TriStation protocol, which triggers APIs related to program download, program allocation, and program changes.\n\n\n\nHooking [T0874]\nNote: this technique also applies to Tactic: Privilege Escalation.\n\nTRITON's injector modifies the address of the handler for a Tristation protocol command so that when the command is received, the payload may be executed instead of normal processing.\n\n\nModify Controller Tasking [T0821]\nSome TRITON components are added to the program table on the Tricon so that they are executed by the firmware once each cycle.\n\n\nNative API [T0834]\nTRITON's payload takes commands from TsHi.ExplReadRam(Ex), TsHi.ExplWriteRam(Ex), and TsHi.ExplExec functions to perform operations on controller memory and registers using syscalls written in PowerPC shellcode.\n\n\nScripting [T0853]\n\nTRITON communicates with Triconex Tricon PLCs using its custom Python script. This Python script communicates using four Python modules that collectively implement the TriStation protocol via User Datagram Protocol (UDP) 1502.\nNote: this use also applies to:\n\nTactic: Command and Control \u2502Technique: Commonly Used Port [T0885]\n\n\n\n\nPersistence\u00a0\n\nSystem Firmware [T0857]\nNote: this technique also applies to Tactic: Inhibit Response Function.\n\nTRITON's injector injects the payload into the Tricon PLCs\u2019 running firmware. A threat actor can use the payload to read and write memory on the PLC and execute code at an arbitrary address within the firmware. If the memory address it writes to is within the firmware region, the malicious payload disables address translation, writes the code at the provided address, flushes the instruction cache, and re-enables address translation. This allows the malware to change the running firmware.\n\n\nPrivilege Escalation\nExploitation for Privilege Escalation [T0890]\nTRITON can gain supervisor-level access and control system states by exploiting a vulnerability.\n\n\nEvasion\nExploitation for Evasion [T0820]\nTRITON's injector exploits a vulnerability in the device firmware to escalate privileges and then it disables and (later patches) a firmware RAM/ROM consistency check.\u00a0\n\n\nIndicator Removal on Host [T0872]\nAfter running the malicious payload, TRITON's Python script overwrites the malicious payload with a \u201cdummy\u201d program.\n\n\nMasquerading [T0849]\nTRITON\u2019s Python script masquerades as legitimate Triconex software.\n\n\nTRITON\u2019s injector masquerades as a standard compiled PowerPC program for the Triconex PLC.\n\n\nDiscovery\nRemote System Discovery [T0846]\nTRITON\u2019s Python script can autodetect Triconex PLCs on the network by sending a UDP broadcast packet over port 1502.\n\n\nLateral Movement\nProgram Download [T0843]\nTRITON leverages the TriStation protocol to download programs to the Tricon PLCs.\n\n\nCollection\nDetect Operating Mode [T0868]\nA TRITON Python module provides string representations of different features of the TriStation protocol, including message and error codes, key position states, and other values returned by the status functions.\n\n\nProgram Upload [T0845]\nTRITON uploads its payload to the Tricon PLCs.\n\n\nImpair Process Control\nUnauthorized Command Message [T0855]\nA threat actor can use TRITON to prevent the Tricon PLC from functioning appropriately.\n\n\nImpact\nLoss of Safety [T0880]\nTRITON can reprogram the safety PLC logic to allow unsafe conditions or state to persist.\n\n\n\n\nRevisions\n\nMarch 24, 2022: Initial Version\n",
  "cves": [],
  "techniques": [
    "T1589.001",
    "T1505.003",
    "T1070.004",
    "T1560.001",
    "T1110.002",
    "T1136.001",
    "T1598.003",
    "T1070.001",
    "T1053.005",
    "T1078.002",
    "T1547.001",
    "T1003.003",
    "T1059.001",
    "T1021.001",
    "T1021.005",
    "T1059.007",
    "T1547.009",
    "T1569.002",
    "T1598.002",
    "T1087.003",
    "T1021.002",
    "T1132.001",
    "T1555.003",
    "T1003.001",
    "T1059.003",
    "T1584.004"
  ],
  "advisory": "aa22-083a",
  "title": "Tactics, Techniques, and Procedures of Indicted State-Sponsored Russian Cyber Actors Targeting the Energy Sector | CISA",
  "source": "cybersecurity-advisories",
  "id": "ecfe733bc1010ec9360eba0d2b39bc24f5dee2320a1bddee52796c217ccab089"
}