{
  "markdown": "\n\nSummary\n\nActions to Help Protect Against APT Cyber Activity:\n\n\u2022 Enforce multifactor authentication (MFA) on all user accounts.\n\u2022 Implement network segmentation to separate network segments based on role and functionality.\n\u2022 Update software, including operating systems, applications, and firmware, on network assets.\n\u2022 Audit account usage.\nFrom November 2021 through January 2022, the Cybersecurity and Infrastructure Security Agency (CISA) responded to advanced persistent threat (APT) activity on a Defense Industrial Base (DIB) Sector organization\u2019s enterprise network. During incident response activities, CISA uncovered that likely multiple APT groups compromised the organization\u2019s network, and some APT actors had long-term access to the environment. APT actors used an open-source toolkit called Impacket to gain their foothold within the environment and further compromise the network, and also used a custom data exfiltration tool, CovalentStealer, to steal the victim\u2019s sensitive data.\nThis joint Cybersecurity Advisory (CSA) provides APT actors tactics, techniques, and procedures (TTPs) and indicators of compromise (IOCs) identified during the incident response activities by CISA and a third-party incident response organization. The CSA includes detection and mitigation actions to help organizations detect and prevent related APT activity. CISA, the Federal Bureau of Investigation (FBI), and the National Security Agency (NSA) recommend DIB sector and other critical infrastructure organizations implement the mitigations in this CSA to ensure they are managing and reducing the impact of cyber threats to their networks.\nDownload the PDF version of this report: pdf, 692 KB\nFor a downloadable copy of IOCs, see the following files:\n\nMalware Analysis Report (MAR)-10365227-1.stix, 966 kb\nMAR-10365227-2.stix, 249B\nMAR-10365227-3.stix, 3.2 MB\n\n\nTechnical Details\n\nThreat Actor Activity\nNote: This advisory uses the MITRE ATT&CK\u00ae for Enterprise framework, version 11. See the MITRE ATT&CK Tactics and Techniques section for a table of the APT cyber activity mapped to MITRE ATT&CK for Enterprise framework.\nFrom November 2021 through January 2022, CISA conducted an incident response engagement on a DIB Sector organization\u2019s enterprise network. The victim organization also engaged a third-party incident response organization for assistance. During incident response activities, CISA and the trusted \u2013third-party identified APT activity on the victim\u2019s network.\nSome APT actors gained initial access to the organization\u2019s Microsoft Exchange Server as early as mid-January 2021. The initial access vector is unknown. Based on log analysis, the actors gathered information about the exchange environment and performed mailbox searches within a four-hour period after gaining access. In the same period, these actors used a compromised administrator account (\u201cAdmin 1\u201d) to access the EWS Application Programming Interface (API). In early February 2021, the actors returned to the network and used Admin 1 to access EWS API again. In both instances, the actors used a virtual private network (VPN).\nFour days later, the APT actors used Windows Command Shell over a three-day period to interact with the victim\u2019s network. The actors used Command Shell to learn about the organization\u2019s environment and to collect sensitive data, including sensitive contract-related information from shared drives, for eventual exfiltration. The actors manually collected files using the command-line tool, WinRAR. These files were split into approximately 3MB chunks located on the Microsoft Exchange server within the CU2\\he\\debug directory. See Appendix: Windows Command Shell Activity for additional information, including specific commands used.\nDuring the same period, APT actors implanted Impacket, a Python toolkit for programmatically constructing and manipulating network protocols, on another system. The actors used Impacket to attempt to move laterally to another system.\nIn early March 2021, APT actors exploited CVE-2021-26855, CVE-2021-26857, CVE-2021-26858, and CVE-2021-27065 to install 17 China Chopper webshells on the Exchange Server. Later in March, APT actors installed HyperBro on the Exchange Server and two other systems. For more information on the HyperBro and webshell samples, see CISA MAR-10365227-2 and -3.\nIn April 2021, APT actors used Impacket for network exploitation activities. See the Use of Impacket section for additional information. From late July through mid-October 2021, APT actors employed a custom exfiltration tool, CovalentStealer, to exfiltrate the remaining sensitive files. See the Use of Custom Exfiltration Tool: CovalentStealer section for additional information.\nAPT actors maintained access through mid-January 2022, likely by relying on legitimate credentials.\nUse of Impacket\nCISA discovered activity indicating the use of two Impacket tools: wmiexec.py and smbexec.py. These tools use Windows Management Instrumentation (WMI) and Server Message Block (SMB) protocol, respectively, for creating a semi-interactive shell with the target device. Through the Command Shell, an Impacket user with credentials can run commands on the remote device using the Windows management protocols required to support an enterprise network.\nThe APT cyber actors used existing, compromised credentials with Impacket to access a higher privileged service account used by the organization's multifunctional devices. The threat actors first used the service account to remotely access the organization\u2019s Microsoft Exchange server via Outlook Web Access (OWA) from multiple external IP addresses; shortly afterwards, the actors assigned the Application Impersonation role to the service account by running the following PowerShell command for managing Exchange:\npowershell add-pssnapin *exchange*;New-ManagementRoleAssignment - name:\"Journaling-Logs\" -Role:ApplicationImpersonation -User:<account>\nThis command gave the service account the ability to access other users\u2019 mailboxes.\nThe APT cyber actors used virtual private network (VPN) and virtual private server (VPS) providers, M247 and SurfShark, as part of their techniques to remotely access the Microsoft Exchange server. Use of these hosting providers, which serves to conceal interaction with victim networks, are common for these threat actors. According to CISA\u2019s analysis of the victim\u2019s Microsoft Exchange server Internet Information Services (IIS) logs, the actors used the account of a former employee to access the EWS. EWS enables access to mailbox items such as email messages, meetings, and contacts. The source IP address for these connections is mostly from the VPS hosting provider, M247.\nUse of Custom Exfiltration Tool: CovalentStealer\nThe threat actors employed a custom exfiltration tool, CovalentStealer, to exfiltrate sensitive files.\nCovalentStealer is designed to identify file shares on a system, categorize the files, and upload the files to a remote server. CovalentStealer includes two configurations that specifically target the victim's documents using predetermined files paths and user credentials. CovalentStealer stores the collected files on a Microsoft OneDrive cloud folder, includes a configuration file to specify the types of files to collect at specified times and uses a 256-bit AES key for encryption. See CISA MAR-10365227-1 for additional technical details, including IOCs and detection signatures.\nMITRE ATT&CK Tactics and Techniques\nMITRE ATT&CK is a globally accessible knowledge base of adversary tactics and techniques based on real-world observations. CISA uses the ATT&CK Framework as a foundation for the development of specific threat models and methodologies. Table 1 lists the ATT&CK techniques employed by the APT actors.\n\nTable 1: Identified APT Enterprise ATT&CK Tactics and Techniques\n\n\n\nInitial Access\n\n\n\n\nTechnique Title\n\n\nID\n\n\nUse\n\n\n\n\nValid Accounts\n\n\nT1078\n\n\nActors obtained and abused credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. In this case, they exploited an organization\u2019s multifunctional device domain account used to access the organization\u2019s Microsoft Exchange server via OWA.\n\n\n\n\nExecution\n\n\n\n\nTechnique Title\n\n\nID\n\n\nUse\n\n\n\n\nWindows Management Instrumentation\n\n\nT1047\n\n\nActors used Impacket tools wmiexec.py and smbexec.py to leverage Windows Management Instrumentation and execute malicious commands.\n\n\n\n\nCommand and Scripting Interpreter\n\n\nT1059\n\n\nActors abused command and script interpreters to execute commands.\n\n\n\n\nCommand and Scripting Interpreter: PowerShell\n\n\nT1059.001\n\n\nActors abused PowerShell commands and scripts to map shared drives by specifying a path to one location and retrieving the items from another. See Appendix: Windows Command Shell Activity for additional information.\n\n\n\n\nCommand and Scripting Interpreter: Windows Command Shell\n\n\nT1059.003\n\n\nActors abused the Windows Command Shell to learn about the organization\u2019s environment and to collect sensitive data. See Appendix: Windows Command Shell Activity for additional information, including specific commands used.\nThe actors used Impacket tools, which enable a user with credentials to run commands on the remote device through the Command Shell.\n\n\n\n\nCommand and Scripting Interpreter: Python\n\n\nT1059.006\n\n\nThe actors used two Impacket tools: wmiexec.py and smbexec.py.\n\n\n\n\nShared Modules\n\n\nT1129\n\n\nActors executed malicious payloads via loading shared modules. The Windows module loader can be instructed to load DLLs from arbitrary local paths and arbitrary Universal Naming Convention (UNC) network paths.\n\n\n\n\nSystem Services\n\n\nT1569\n\n\nActors abused system services to execute commands or programs on the victim\u2019s network.\n\n\n\n\nPersistence\n\n\n\n\nTechnique Title\n\n\nID\n\n\nUse\n\n\n\n\nValid Accounts\n\n\nT1078\n\n\nActors obtained and abused credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. \n\n\n\n\nCreate or Modify System Process\n\n\nT1543\n\n\nActors were observed creating or modifying system processes.\n\n\n\n\nPrivilege Escalation\n\n\n\n\nTechnique Title\n\n\nID\n\n\nUse\n\n\n\n\nValid Accounts\n\n\nT1078\n\n\nActors obtained and abused credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. In this case, they exploited an organization\u2019s multifunctional device domain account used to access the organization\u2019s Microsoft Exchange server via OWA.\n\n\n\n\nDefense Evasion\n\n\n\n\nTechnique Title\n\n\nID\n\n\nUse\n\n\n\n\nMasquerading: Match Legitimate Name or Location\n\n\nT1036.005\n\n\nActors masqueraded the archive utility WinRAR.exe by renaming it VMware.exe to evade defenses and observation.\n\n\n\n\nIndicator Removal on Host\n\n\nT1070\n\n\nActors deleted or modified artifacts generated on a host system to remove evidence of their presence or hinder defenses.\n\n\n\n\nIndicator Removal on Host: File Deletion\n\n\nT1070.004\n\n\nActors used the del.exe command with the /f parameter to force the deletion of read-only files with the *.rar and tempg* wildcards.\n\n\n\n\nValid Accounts\n\n\nT1078\n\n\nActors obtained and abused credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. In this case, they exploited an organization\u2019s multifunctional device domain account used to access the organization\u2019s Microsoft Exchange server via OWA.\n\n\n\n\nVirtualization/Sandbox Evasion: System Checks\n\n\nT1497.001\n\n\nActors used Windows command shell commands to detect and avoid virtualization and analysis environments. See Appendix: Windows Command Shell Activity for additional information.\n\n\n\n\nImpair Defenses: Disable or Modify Tools\n\n\nT1562.001\n\n\nActors used the taskkill command to probably disable security features. CISA was unable to determine which application was associated with the Process ID.\n\n\n\n\nHijack Execution Flow\n\n\nT1574\n\n\nActors were observed using hijack execution flow.\n\n\n\n\nDiscovery\n\n\n\n\nTechnique Title\n\n\nID\n\n\nUse\n\n\n\n\nSystem Network Configuration Discovery\n\n\nT1016\n\n\nActors used the systeminfo command to look for details about the network configurations and settings and determine if the system was a VMware virtual machine.\nThe threat actor used route print to display the entries in the local IP routing table.\n\n\n\n\nSystem Network Configuration Discovery: Internet Connection Discovery\n\n\nT1016.001\n\n\nActors checked for internet connectivity on compromised systems. This may be performed during automated discovery and can be accomplished in numerous ways.\n\n\n\n\nSystem Owner/User Discovery\n\n\nT1033\n\n\nActors attempted to identify the primary user, currently logged in user, set of users that commonly use a system, or whether a user is actively using the system. \n\n\n\n\nSystem Network Connections Discovery\n\n\nT1049\n\n\nActors used the netstat command to display TCP connections, prevent hostname determination of foreign IP addresses, and specify the protocol for TCP.\n\n\n\n\nProcess Discovery\n\n\nT1057\n\n\nActors used the tasklist command to get information about running processes on a system and determine if the system was a VMware virtual machine.\nThe actors used tasklist.exe and find.exe to display a list of applications and services with their PIDs for all tasks running on the computer matching the string \u201cpowers.\u201d\n\n\n\n\nSystem Information Discovery\n\n\nT1082\n\n\nActors used the ipconfig command to get detailed information about the operating system and hardware and determine if the system was a VMware virtual machine.\n\n\n\n\nFile and Directory Discovery\n\n\nT1083\n\n\nActors enumerated files and directories or may search in specific locations of a host or network share for certain information within a file system.\n\n\n\n\nVirtualization/Sandbox Evasion: System Checks\n\n\nT1497.001\n\n\nActors used Windows command shell commands to detect and avoid virtualization and analysis environments.\n\n\n\n\nLateral Movement\n\n\n\n\nTechnique Title\n\n\nID\n\n\nUse\n\n\n\n\nRemote Services: SMB/Windows Admin Shares\n\n\nT1021.002\n\n\nActors used Valid Accounts to interact with a remote network share using Server Message Block (SMB) and then perform actions as the logged-on user.\n\n\n\n\nCollection\n\n\n\n\nTechnique Title\n\n\nID\n\n\nUse\n\n\n\n\nArchive Collected Data: Archive via Utility\n\n\nT1560.001\n\n\nActor used PowerShell commands and WinRAR to compress and/or encrypt collected data prior to exfiltration.\n\n\n\n\nData from Network Shared Drive\n\n\nT1039\n\n\nActors likely used net share command to display information about shared resources on the local computer and decide which directories to exploit, the powershell dir command to map shared drives to a specified path and retrieve items from another, and the ntfsinfo command to search network shares on computers they have compromised to find files of interest.\nThe actors used dir.exe to display a list of a directory's files and subdirectories matching a certain text string.\n\n\n\n\nData Staged: Remote Data Staging\n\n\nT1074.002\n\n\nThe actors split collected files into approximately\n\t\t\t3 MB chunks located on the Exchange server within the CU2\\he\\debug directory.\n\n\n\n\nCommand and Control\n\n\n\n\nTechnique Title\n\n\nID\n\n\nUse\n\n\n\n\nNon-Application Layer Protocol\n\n\nT1095\n\n\nActors used a non-application layer protocol for communication between host and Command and Control (C2) server or among infected hosts within a network. \n\n\n\n\nIngress Tool Transfer\n\n\nT1105\n\n\nActors used the certutil command with three switches to test if they could download files from the internet.\nThe actors employed CovalentStealer to exfiltrate the files.\n\n\n\n\nProxy\n\n\nT1090\n\n\nActors are known to use VPN and VPS providers, namely M247 and SurfShark, as part of their techniques to access a network remotely.\n\n\n\n\nExfiltration\n\n\n\n\nTechnique Title\n\n\nID\n\n\nUse\n\n\n\n\nSchedule Transfer\n\n\nT1029\n\n\nActors scheduled data exfiltration to be performed only at certain times of day or at certain intervals and blend traffic patterns with normal activity.\n\n\n\n\nExfiltration Over Web Service: Exfiltration to Cloud Storage\n\n\nT1567.002\n\n\nThe actor's CovalentStealer tool stores collected files on a Microsoft OneDrive cloud folder.\n\n\n\n\nDETECTION\nGiven the actors\u2019 demonstrated capability to maintain persistent, long-term access in compromised enterprise environments, CISA, FBI, and NSA encourage organizations to:\n\nMonitor logs for connections from unusual VPSs and VPNs. Examine connection logs for access from unexpected ranges, particularly from machines hosted by SurfShark and M247.\nMonitor for suspicious account use (e.g., inappropriate or unauthorized use of administrator accounts, service accounts, or third-party accounts). To detect use of compromised credentials in combination with a VPS, follow the steps below:\n\nReview logs for \"impossible logins,\" such as logins with changing username, user agent strings, and IP address combinations or logins where IP addresses do not align to the expected user\u2019s geographic location.\nSearch for \"impossible travel,\" which occurs when a user logs in from multiple IP addresses that are a significant geographic distance apart (i.e., a person could not realistically travel between the geographic locations of the two IP addresses in the time between logins). Note: This detection opportunity can result in false positives if legitimate users apply VPN solutions before connecting to networks.\nSearch for one IP used across multiple accounts, excluding expected logins.\n\nTake note of any M247-associated IP addresses used along with VPN providers (e.g., SurfShark). Look for successful remote logins (e.g., VPN, OWA) for IPs coming from M247- or using SurfShark-registered IP addresses.\n\n\nIdentify suspicious privileged account use after resetting passwords or applying user account mitigations.\nSearch for unusual activity in typically dormant accounts.\nSearch for unusual user agent strings, such as strings not typically associated with normal user activity, which may indicate bot activity.\n\n\nReview the YARA rules provided in MAR-10365227-1 to assist in determining whether malicious activity has been observed.\nMonitor for the installation of unauthorized software, including Remote Server Administration Tools (e.g., psexec, RdClient, VNC, and ScreenConnect).\nMonitor for anomalous\u00a0and known malicious command-line use. See Appendix: Windows Command Shell Activity for commands used by the actors to interact with the victim\u2019s environment.\nMonitor for unauthorized changes to user accounts (e.g., creation, permission changes, and enabling a previously disabled account).\n\nCONTAINMENT AND REMEDIATION\nOrganizations affected by active or recently active threat actors in their environment can take the following initial steps to aid in eviction efforts and prevent re-entry:\n\nReport the incident. Report the incident to U.S. Government authorities and follow your organization\u2019s incident response plan.\n\nReport incidents to CISA via CISA\u2019s 24/7 Operations Center (report@cisa.gov or 888-282-0870).\nReport incidents to your local FBI field office at fbi.gov/contact-us/field-offices or to FBI\u2019s 24/7 Cyber Watch (CyWatch) via (855) 292-3937 or CyWatch@fbi.gov.\nFor DIB incident reporting, contact the Defense Cyber Crime Center (DC3) via DIBNET at dibnet.dod.mil/portal/intranet or (410) 981 0104.\n\n\nReset all login accounts.\u00a0Reset all accounts used for authentication since it is possible that the threat actors have additional stolen credentials. Password resets should also include accounts outside of Microsoft Active Directory, such as network infrastructure devices and other non-domain joined devices (e.g., IoT devices).\nMonitor SIEM logs and build detections.\u00a0Create signatures based on the threat actor TTPs and use these signatures to monitor security logs for any signs of threat actor re-entry.\nEnforce MFA on all user accounts. Enforce phishing-resistant MFA on all accounts without exception to the greatest extent possible.\nFollow Microsoft\u2019s security guidance for Active Directory\u2014Best Practices for Securing Active Directory.\nAudit accounts and permissions. Audit all accounts to ensure all unused accounts are disabled or removed and active accounts do not have excessive privileges. Monitor SIEM logs for any changes to accounts, such as permission changes or enabling a previously disabled account, as this might indicate a threat actor using these accounts.\nHarden and monitor PowerShell by reviewing guidance in the joint Cybersecurity Information Sheet\u2014Keeping PowerShell: Security Measures to Use and Embrace.\n\n\nMitigations\n\nMitigation recommendations are usually longer-term efforts that take place before a compromise as part of risk management efforts, or after the threat actors have been evicted from the environment and the immediate response actions are complete. While some may be tailored to the TTPs used by the threat actor, recovery recommendations are largely general best practices and industry standards aimed at bolstering overall cybersecurity posture.\nSegment Networks Based on Function\n\nImplement network segmentation to separate network segments based on role and functionality. Proper network segmentation significantly reduces the ability for ransomware and other threat actor lateral movement by controlling traffic flows between\u2014and access to\u2014various subnetworks. (See CISA\u2019s Infographic on Layering Network Security Through Segmentation and NSA\u2019s Segment Networks and Deploy Application-Aware Defenses.)\nIsolate similar systems and implement micro-segmentation with granular access and policy restrictions to modernize cybersecurity and adopt Zero Trust (ZT) principles for both network perimeter and internal devices. Logical and physical segmentation are critical to limiting and preventing lateral movement, privilege escalation, and exfiltration.\n\nManage Vulnerabilities and Configurations\n\nUpdate software, including operating systems, applications, and firmware, on network assets. Prioritize patching known exploited vulnerabilities and critical and high vulnerabilities that allow for remote code execution or denial-of-service on internet-facing equipment.\nImplement a configuration change control process that securely creates device configuration backups to detect unauthorized modifications. When a configuration change is needed, document the change, and include the authorization, purpose, and mission justification. Periodically verify that modifications have not been applied by comparing current device configurations with the most recent backups. If suspicious changes are observed, verify the change was authorized.\n\nSearch for Anomalous Behavior\n\nUse cybersecurity visibility and analytics tools to improve detection of anomalous behavior and enable dynamic changes to policy and other response actions. Visibility tools include network monitoring tools and host-based logs and monitoring tools, such as an endpoint detection and response (EDR) tool. EDR tools are particularly useful for detecting lateral connections as they have insight into common and uncommon network connections for each host.\nMonitor the use of scripting languages (e.g., Python, Powershell) by authorized and unauthorized users. Anomalous use by either group may be indicative of malicious activity, intentional or otherwise.\n\nRestrict and Secure Use of Remote Admin Tools\n\nLimit the number of remote access tools as well as who and what can be accessed using them. Reducing the number of remote admin tools and their allowed access will increase visibility of unauthorized use of these tools.\nUse encrypted services to protect network communications and disable all clear text administration services(e.g., Telnet, HTTP, FTP, SNMP 1/2c). This ensures that sensitive information cannot be easily obtained by a threat actor capturing network traffic.\n\nImplement a Mandatory Access Control Model\n\nImplement stringent access controls to sensitive data and resources. Access should be restricted to those users who require access and to the minimal level of access needed.\n\nAudit Account Usage\n\nMonitor VPN logins to look for suspicious access (e.g., logins from unusual geo locations, remote logins from accounts not normally used for remote access, concurrent logins for the same account from different locations, unusual times of the day).\nClosely monitor the use of administrative accounts. Admin accounts should be used sparingly and only when necessary, such as installing new software or patches. Any use of admin accounts should be reviewed to determine if the activity is legitimate.\nEnsure standard user accounts do not have elevated privileges Any attempt to increase permissions on standard user accounts should be investigated as a potential compromise.\n\nVALIDATE SECURITY CONTROLS\nIn addition to applying mitigations, CISA, FBI, and NSA recommend exercising, testing, and validating your organization's security program against threat behaviors mapped to the MITRE ATT&CK for Enterprise framework in this advisory. CISA, FBI, and NSA recommend testing your existing security controls inventory to assess how they perform against the ATT&CK techniques described in this advisory.\nTo get started:\n\nSelect an ATT&CK technique described in this advisory (see Table 1).\nAlign your security technologies against the technique.\nTest your technologies against the technique.\nAnalyze the performance of your detection and prevention technologies.\nRepeat the process for all security technologies to obtain a set of comprehensive performance data.\nTune your security program, including people, processes, and technologies, based on the data generated by this process.\n\nCISA, FBI, and NSA recommend continually testing your security program, at scale, in a production environment to ensure optimal performance against the MITRE ATT&CK techniques identified in this advisory.\nRESOURCES\nCISA offers several no-cost scanning and testing services to help organizations reduce their exposure to threats by taking a proactive approach to mitigating attack vectors. See cisa.gov/cyber-hygiene-services.\nU.S. DIB sector organizations may consider signing up for the NSA Cybersecurity Collaboration Center\u2019s DIB Cybersecurity Service Offerings, including Protective Domain Name System (PDNS) services, vulnerability scanning, and threat intelligence collaboration for eligible organizations. For more information on how to enroll in these services, email dib_defense@cyber.nsa.gov.\nACKNOWLEDGEMENTS\nCISA, FBI, and NSA acknowledge Mandiant for its contributions to this CSA.\nAPPENDIX: WINDOWS COMMAND SHELL ACTIVITY\nOver a three-day period in February 2021, APT cyber actors used Windows Command Shell to interact with the victim\u2019s environment. When interacting with the victim\u2019s system and executing commands, the threat actors used /q and /c parameters to turn the echo off, carry out the command specified by a string, and stop its execution once completed.\nOn the first day, the threat actors consecutively executed many commands within the Windows Command Shell to learn about the organization\u2019s environment and to collect sensitive data for eventual exfiltration (see Table 2).\n\nTable 2: Windows Command Shell Activity (Day 1)\n\n\n\nCommand\n\n\nDescription / Use\n\n\n\n\nnet share\n\n\nUsed to create, configure, and delete network shares from the command-line.[1] The threat actor likely used this command to display information about shared resources on the local computer and decide which directories to exploit.\n\n\n\n\npowershell dir\n\n\nAn alias (shorthand) for the PowerShell Get-ChildItem cmdlet. This command maps shared drives by specifying a path to one location and retrieving the items from another.[2] The threat actor added additional switches (aka options, parameters, or flags) to form a \u201cone liner,\u201d an expression to describe commonly used commands used in exploitation: powershell dir -recurse -path e:\\<redacted>|select fullname,length|export-csv c:\\windows\\temp\\temp.txt. This particular command lists subdirectories of the target environment when.\n\n\n\n\nsysteminfo\n\n\nDisplays detailed configuration information [3], tasklist \u2013 lists currently running processes [4], and ipconfig \u2013 displays all current Transmission Control Protocol (TCP)/IP network configuration values and refreshes Dynamic Host Configuration Protocol (DHCP) and Domain Name System (DNS) settings, respectively [5]. The threat actor used these commands with specific switches to determine if the system was a VMware virtual machine: systeminfo > vmware & date /T, tasklist /v > vmware & date /T, and ipconfig /all >> vmware & date /.\n\n\n\n\nroute print\n\n\nUsed to display and modify the entries in the local IP routing table. [6] The threat actor used this command to display the entries in the local IP routing table.\n\n\n\n\nnetstat\n\n\nUsed to display active TCP connections, ports on which the computer is listening, Ethernet statistics, the IP routing table, IPv4 statistics, and IPv6 statistics.[7] The threat actor used this command with three switches to display TCP connections, prevent hostname determination of foreign IP addresses, and specify the protocol for TCP: netstat -anp tcp.\n\n\n\n\ncertutil\n\n\nUsed to dump and display certification authority (CA) configuration information, configure Certificate Services, backup and restore CA components, and verify certificates, key pairs, and certificate chains.[8] The threat actor used this command with three switches to test if they could download files from the internet: certutil -urlcache -split -f https://microsoft.com temp.html.\n\n\n\n\nping\n\n\nSends Internet Control Message Protocol (ICMP) echoes to verify connectivity to another TCP/IP computer.[9] The threat actor used ping -n 2 apple.com to either test their internet connection or to detect and avoid virtualization and analysis environments or network restrictions.\n\n\n\n\ntaskkill\n\n\nUsed to end tasks or processes.[10] The threat actor used taskkill /F /PID 8952 to probably disable security features. CISA was unable to determine what this process was as the process identifier (PID) numbers are dynamic.\n\n\n\n\nPowerShell Compress-Archive cmdlet\n\n\nUsed to create a compressed archive or to zip files from specified files and directories.[11] The threat actor used parameters indicating shared drives as file and folder sources and the destination archive as zipped files. Specifically, they collected sensitive contract-related information from the shared drives.\n\n\n\n\n\u00a0\nOn the second day, the APT cyber actors executed the commands in Table 3 to perform discovery as well as collect and archive data.\n\nTable 3: Windows Command Shell Activity (Day 2)\n\n\n\nCommand\n\n\nDescription / Use\n\n\n\n\nntfsinfo.exe\n\n\nUsed to obtain volume information from the New Technology File System (NTFS) and to print it along with a directory dump of NTFS meta-data files.[12]\n\n\n\n\nWinRAR.exe\n\n\nUsed to compress files and subsequently masqueraded WinRAR.exe by renaming it VMware.exe.[13]\n\n\n\n\n\u00a0\nOn the third day, the APT cyber actors returned to the organization\u2019s network and executed the commands in Table 4.\n\nTable 4: Windows Command Shell Activity (Day 3)\n\n\n\nCommand\n\n\nDescription / Use\n\n\n\n\npowershell -ep bypass import-module .\\vmware.ps1;export-mft -volume e\n\n\nThreat actors ran a PowerShell command with parameters to change the execution mode and bypass the Execution Policy to run the script from PowerShell and add a module to the current section: powershell -ep bypass import-module .\\vmware.ps1;export-mft -volume e. This module appears to acquire and export the Master File Table (MFT) for volume E for further analysis by the cyber actor.[14]\n\n\n\n\nset.exe\n\n\nUsed to display the current environment variable settings.[15] (An environment variable is a dynamic value pointing to system or user environments (folders) of the system. System environment variables are defined by the system and used globally by all users, while user environment variables are only used by the user who declared that variable and they override the system environment variables (even if the variables are named the same).\n\n\n\n\ndir.exe\n\n\nUsed to display a list of a directory's files and subdirectories matching the eagx* text string, likely to confirm the existence of such file.\n\n\n\n\ntasklist.exe and find.exe\n\n\nUsed to display a list of applications and services with their PIDs for all tasks running on the computer matching the string \u201cpowers\u201d.[16][17][18]\n\n\n\n\nping.exe\n\n\nUsed to send two ICMP echos to amazon.com. This could have been to detect or avoid virtualization and analysis environments, circumvent network restrictions, or test their internet connection.[19]\n\n\n\n\ndel.exe with the /f parameter\n\n\nUsed to force the deletion of read-only files with the *.rar and tempg* wildcards.[20]\n\n\n\n\n\nReferences\n\n[1] Microsoft Net Share\n[2] Microsoft Get-ChildItem\n[3] Microsoft systeminfo\n[4] Microsoft tasklist\n[5] Microsoft ipconfig\n[6] Microsoft Route\n[7] Microsoft netstat\n [8] Microsoft certutil\n[9] Microsoft ping\n[10] Microsoft taskkill\n[11] Microsoft Compress-Archive\n[12] NTFSInfo v1.2\n[13] rarlab\n[14] Microsoft Import-Module\n[15] Microsoft set (environment variable)\n[16] Microsoft tasklist\n[17] Mitre ATT&CK - Sofware: TaskList\n[18] Microsoft find\n[19] Microsoft ping\n[20] Microsoft del\n\nRevisions\n\nOctober 4, 2022: Initial version\n",
  "cves": [
    "CVE-2021-26858",
    "CVE-2021-27065",
    "CVE-2021-26857",
    "CVE-2021-26855"
  ],
  "techniques": [
    "T1059.001",
    "T1497.001",
    "T1562.001",
    "T1070.004",
    "T1021.002",
    "T1567.002",
    "T1059.006",
    "T1074.002",
    "T1560.001",
    "T1059.003",
    "T1016.001",
    "T1036.005"
  ],
  "advisory": "aa22-277a",
  "title": "Impacket and Exfiltration Tool Used to Steal Sensitive Information from Defense Industrial Base Organization | CISA",
  "source": "cybersecurity-advisories",
  "id": "e2e9c147ba68c693d93107100da0ffc34a5795093db36ffe719e828144ab3cf4"
}