{
  "markdown": "\n\n\n\n\n\nNotification\n\nThis report is provided \"as is\" for informational purposes only. The Department of Homeland Security (DHS) does not provide any warranties of any kind regarding any information contained within. The DHS does not endorse any commercial product or service, referenced in this bulletin or otherwise.\nThis document is marked TLP:WHITE. Disclosure is not limited. Sources may use TLP:WHITE when information carries minimal or no foreseeable risk of misuse, in accordance with applicable rules and procedures for public release. Subject to standard copyright rules, TLP:WHITE information may be distributed without restriction. For more information on the Traffic Light Protocol, see http://www.us-cert.gov/tlp.\n\nSummary\n\nDescription\n14 files were submitted for analysis. These files are designed to encrypt a victim's system files for a ransom payment.\nFor a downloadable copy of IOCs, see:\n\nMAR-10158513.r1.v1.stix\n\nSubmitted Files (17)\n036071786d7db553e2415ec2e71f3967baf51bdc31d0a640aa4afb87d3ce3050 (samsam.exe)\n0f2c5c39494f15b7ee637ad5b6b5d00a3e2f407b4f27d140cd5a821ff08acfac (samsam.exe)\n32445c921079aa3e26a376d70ef6550bafeb1f6b0b7037ef152553bb5dad116f (selfdel.exe)\n45e00fe90c8aa8578fce2b305840e368d62578c77e352974da6b8f8bc895d75b (samsam.exe)\n553967d05b83364c6954d2b55b8cfc2ea3808a17c268b2eee49090e71976ba29 (553967d05b83364c6954d2b55b8cfc...)\n58ef87523184d5df3ed1568397cea65b3f44df06c73eadeb5d90faebe4390e3e (samsam.exe)\n6245a51e78526c25510d0aa0909576119fdf0244619f670036538063b88f1c21 (HELP_DECRYPT_YOUR_FILES.html)\n6bc2aa391b8ef260e79b99409e44011874630c2631e4487e82b76e5cb0a49307 (samsam.exe)\n7aa585e6fd0a895c295c4bea2ddb071eed1e5775f437602b577a54eef7f61044 (samsam.exe)\n89b4abb78970cd524dd887053d5bcd982534558efdf25c83f96e13b56b4ee805 (samsam.exe)\n939efdc272e8636fd63c1b58c2eec94cf10299cd2de30c329bd5378b6bbbd1c8 (samsam.exe)\n946dd4c4f3c78e7e4819a712c7fd6497722a3d616d33e3306a556a9dc99656f4 (samsam.exe)\n979692a34201f9fc1e1c44654dc8074a82000946deedfdf6b8985827da992868 (samsam.exe)\n97d27e1225b472a63c88ac9cfb813019b72598b9dd2d70fe93f324f7d034fb95 (del.exe)\na763ed678a52f77a7b75d55010124a8fccf1628eb4f7a815c6d635034227177e (samsam.exe)\ne682ac6b874e0a6cfc5ff88798315b2cb822d165a7e6f72a5eb74e6da451e155 (samsam.exe)\nffef0f1c2df157e9c2ee65a12d5b7b0f1301c4da22e7e7f3eac6b03c6487a626 (samsam.exe)\nDomains (10)\nanonyme.com\nevilsecure9.wordpress.com\nfollowsec7.wordpress.com\nkey88secu7.wordpress.com\nkeytwocode.wordpress.com\nlordsecure4u.wordpress.com\npayforsecure7.wordpress.com\nsecangel7d.wordpress.com\nunion83939k.wordpress.com\nzeushelpu.wordpress.com\n\nFindings\n\n0f2c5c39494f15b7ee637ad5b6b5d00a3e2f407b4f27d140cd5a821ff08acfac\nTags\ndropperransomwaretrojan\nDetails\n\n\n\nName\nsamsam.exe\n\n\nSize\n218624 bytes\n\n\nType\nPE32 executable (GUI) Intel 80386 Mono/.Net assembly, for MS Windows\n\n\nMD5\na14ea969014b1145382ffcd508d10156\n\n\nSHA1\nff6aa732320d21697024994944cf66f7c553c9cd\n\n\nSHA256\n0f2c5c39494f15b7ee637ad5b6b5d00a3e2f407b4f27d140cd5a821ff08acfac\n\n\nSHA512\n73f28bed4ee700e15d1c0eb9871e37bdda77e3ef3c14b63a1597b9628e7407dc31f8382e0ec52c8c65f68c00a4f321f5971359f865eb35b35dc62e9f5e8e7be1\n\n\nssdeep\n3072:ZVdp01i6vcHV1LI5FLV0pZeZKfOJizjrBnNtRg+ur199J+n9fCbP:Za1i6UHVyLV0poZa1jrD099on9\n\n\nEntropy\n6.249245\n\n\n\nAntivirus\n\n\n\nAhnlab\nTrojan/Win32.Samas\n\n\nAntiy\nTrojan/Win32.SGeneric\n\n\nAvira\nTR/Ransom.lhumd\n\n\nBitDefender\nGeneric.Ransom.SamSam.12451789\n\n\nClamAV\nWin.Trojan.Samas-1\n\n\nCyren\nW32/Trojan.MPPP-7951\n\n\nESET\nMSIL/Filecoder.AR trojan\n\n\nEmsisoft\nGeneric.Ransom.SamSam.12451789 (B)\n\n\nIkarus\nTrojan-Ransom.SamSam\n\n\nK7\nTrojan ( 700000121 )\n\n\nMcAfee\nRansomware-SAMAS!A14EA969014B\n\n\nMicrosoft Security Essentials\nRansom:MSIL/Samas.A\n\n\nNANOAV\nTrojan.Win32.Ransom.eamswz\n\n\nQuick Heal\nTrojan.Inject.TL3\n\n\nSophos\nTroj/RansmSam-A\n\n\nSymantec\nTrojan.Gen.2\n\n\nSystweak\nmalware.gen-r\n\n\nTrendMicro\nRansom_CRYPSAM.B\n\n\nTrendMicro House Call\nRansom_CRYPSAM.B\n\n\nVir.IT eXplorer\nTrojan.Win32.MSIL9.BGXA\n\n\nVirusBlokAda\nTrojan-Ransom.MSIL.Samas\n\n\nZillya!\nDropper.Agent.Win32.229787\n\n\n\nYara Rules\nNo matches found.\nssdeep Matches\n\n\n\n97\n036071786d7db553e2415ec2e71f3967baf51bdc31d0a640aa4afb87d3ce3050\n\n\n\nPE Metadata\n\n\n\nCompile Date\n2016-01-05 19:14:43-05:00\n\n\nImport Hash\nf34d5f2d4577ed6d9ceec516c1f5a744\n\n\nCompany Name\nMicrosoft\n\n\nFile Description\nMicrosoftSAM\n\n\nInternal Name\nsamsam.exe\n\n\nLegal Copyright\nCopyright \\xa9 2014\n\n\nOriginal Filename\nsamsam.exe\n\n\nProduct Name\nMicrosoftSAM\n\n\nProduct Version\n2.4.8.4\n\n\n\nPE Sections\n\n\n\nMD5\nName\nRaw Size\nEntropy\n\n\n37c3e95eb9901183e02df0ba1de6caf2\nheader\n512\n2.774592\n\n\n7a556f246357051b2d82ea445571ddbb\n.text\n216064\n6.270810\n\n\nd0b581056989efaa1de31a61a8f4a9ec\n.rsrc\n1536\n4.110334\n\n\n06441ad348b483e2458a535949e809cf\n.reloc\n512\n0.101910\n\n\n\nPackers/Compilers/Cryptors\n\n\n\nMicrosoft Visual C# v7.0 / Basic .NET\n\n\n\nRelationships\n\n\n\n0f2c5c3949...\nConnected_To\nunion83939k.wordpress.com\n\n\n0f2c5c3949...\nDropped\n6245a51e78526c25510d0aa0909576119fdf0244619f670036538063b88f1c21\n\n\n0f2c5c3949...\nDropped\n32445c921079aa3e26a376d70ef6550bafeb1f6b0b7037ef152553bb5dad116f\n\n\n0f2c5c3949...\nDropped\n97d27e1225b472a63c88ac9cfb813019b72598b9dd2d70fe93f324f7d034fb95\n\n\n\nDescription\nThis file is a 32-bit Windows .NET compiled executable designed to encrypt victim system files for a ransom payment. This file is a variant of SamSam ransomware. It contains two embedded 32-bit Windows executables in its resource section:--Begin resource--\"samsam.del.exe\" ==> del.exe (SDelete) designed to securely delete files\"samsam.selfdel.exe\" ==> selfdel.exe designed to delete the SamSam ransomware from the victim\u2019s system--End resource--It installs the embedded files into the following directory:--Begin files installed--%Currentdirectory%\\del.exe%Currentdirectory%\\Selfdel.exe--End files installed--This file is designed to accept an input text file as the command line argument. The input text file contains an RSA public key in the following format:--Begin RSA public key--\"<RSAKeyValue><Modulus>Base64 encoded RSA public key</Modulus><Exponent>AQAB</Exponent></RSAKeyValue>\"--End RSA public key--The input text file was not available for analysis.Displayed below is the code snippet designed to accept an input text file as the command-line argument:--Begin command line argument--private static void Main(string[] args){\u00a0\u00a0\u00a0if (args.Length != 1)\u00a0\u00a0\u00a0{\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0return;\u00a0\u00a0\u00a0}\u00a0\u00a0\u00a0if (!string.IsNullOrEmpty(args[0]))\u00a0\u00a0\u00a0{\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Program.publickey = File.ReadAllText(args[0]);\u00a0\u00a0\u00a0}\u00a0\u00a0\u00a0Program.create_from_resource();--End command line argument--It searches the drives installed on the victim system for files with the following file extensions:--Begin file extensions--\"xls\",\".xlsx\",\".pdf\",\".doc\",\".docx\",\".ppt\",\".pptx\",\".txt\",\".dwg\",\".bak\",\".bkf\",\".pst\",\".dbx\",\".zip\",\".rar\",\".mdb\",\".asp\",\".aspx\",\".html\",\".htm\",\".dbf\",\".3dm\",\".3ds\",\".3fr\",\".jar\",\".3g2\",\".xml\",\".png\",\".tif\",\".3gp\",\".java\",\".jpe\",\".jpeg\",\".jpg\",\".jsp\",\".php\",\".3pr\",\".7z\",\".ab4\",\".accdb\",\".accde\",\".accdr\",\".accdt\",\".ach\",\".kbx\",\".acr\",\".act\",\".adb\",\".ads\",\".agdl\",\".ai\",\".ait\",\".al\",\".apj\",\".arw\",\".asf\",\".asm\",\".asx\",\".avi\",\".awg\",\".back\",\".backup\",\".backupdb\",\".pbl\",\".bank\",\".bay\",\".bdb\",\".bgt\",\".bik\",\".bkp\",\".blend\",\".bpw\",\".c\",\".cdf\",\".cdr\",\".cdr3\",\".cdr4\",\".cdr5\",\".cdr6\",\".cdrw\",\".cdx\",\".ce1\",\".ce2\",\".cer\",\".cfp\",\".cgm\",\".cib\",\".class\",\".cls\",\".cmt\",\".cpi\",\".cpp\",\".cr2\",\".craw\",\".crt\",\".crw\",\".phtml\",\".php5\",\".cs\",\".csh\",\".csl\",\".tib\",\".csv\",\".dac\",\".db\",\".db3\",\".db-journal\",\".dc2\",\".dcr\",\".dcs\",\".ddd\",\".ddoc\",\".ddrw\",\".dds\",\".der\",\".des\",\".design\",\".dgc\",\".djvu\",\".dng\",\".dot\",\".docm\",\".dotm\",\".dotx\",\".drf\",\".drw\",\".dtd\",\".dxb\",\".dxf\",\".dxg\",\".eml\",\".eps\",\".erbsql\",\".erf\",\".exf\",\".fdb\",\".ffd\",\".fff\",\".fh\",\".fmb\",\".fhd\",\".fla\",\".flac\",\".flv\",\".fpx\",\".fxg\",\".gray\",\".grey\",\".gry\",\".h\",\".hbk\",\".hpp\",\".ibank\",\".ibd\",\".ibz\",\".idx\",\".iif\",\".iiq\",\".incpas\",\".indd\",\".kc2\",\".kdbx\",\".kdc\",\".key\",\".kpdx\",\".lua\",\".m\",\".m4v\",\".max\",\".mdc\",\".mdf\",\".mef\",\".mfw\",\".mmw\",\".moneywell\",\".mos\",\".mov\",\".mp3\",\".mp4\",\".mpg\",\".mrw\",\".msg\",\".myd\",\".nd\",\".ndd\",\".nef\",\".nk2\",\".nop\",\".nrw\",\".ns2\",\".ns3\",\".ns4\",\".nsd\",\".nsf\",\".nsg\",\".nsh\",\".nwb\",\".nx2\",\".nxl\",\".nyf\",\".oab\",\".obj\",\".odb\",\".odc\",\".odf\",\".odg\",\".odm\",\".odp\",\".ods\",\".odt\",\".oil\",\".orf\",\".ost\",\".otg\",\".oth\",\".otp\",\".ots\",\".ott\",\".p12\",\".p7b\",\".p7c\",\".pab\",\".pages\",\".pas\",\".pat\",\".pcd\",\".pct\",\".pdb\",\".pdd\",\".pef\",\".pem\",\".pfx\",\".pl\",\".plc\",\".pot\",\".potm\",\".potx\",\".ppam\",\".pps\",\".ppsm\",\".ppsx\",\".pptm\",\".prf\",\".ps\",\".psafe3\",\".psd\",\".pspimage\",\".ptx\",\".py\",\".qba\",\".qbb\",\".qbm\",\".qbr\",\".qbw\",\".qbx\",\".qby\",\".r3d\",\".raf\",\".rat\",\".raw\",\".rdb\",\".rm\",\".rtf\",\".rw2\",\".rwl\",\".rwz\",\".s3db\",\".sas7bdat\",\".say\",\".sd0\",\".sda\",\".sdf\",\".sldm\",\".sldx\",\".sql\",\".sqlite\",\".sqlite3\",\".sqlitedb\",\".sr2\",\".srf\",\".srt\",\".srw\",\".st4\",\".st5\",\".st6\",\".st7\",\".st8\",\".std\",\".sti\",\".stw\",\".stx\",\".svg\",\".swf\",\".sxc\",\".sxd\",\".sxg\",\".sxi\",\".sxi\",\".sxm\",\".sxw\",\".tex\",\".tga\",\".thm\",\".tlg\",\".vob\",\".war\",\".wallet\",\".wav\",\".wb2\",\".wmv\",\".wpd\",\".wps\",\".x11\",\".x3f\",\".xis\",\".xla\",\".xlam\",\".xlk\",\".xlm\",\".xlr\",\".xlsb\",\".xlsm\",\".xlt\",\".xltm\",\".xltx\",\".xlw\",\".ycbcra\",\".yuv\"--End file extensions--The malware avoids encrypting files in the \"Windows\", \"Reference Assemblies\\\\Microsoft\", and \"Recycle.bin\" folders:Displayed below is the code snippet used to avoid encrypting files in the folders:--Begin code--if (path != Program.sysdir + \"Windows\" && !path.Contains(\"Reference Assemblies\\\\Microsoft\") && !path.Contains(\"Recycle.Bin\"))--End code--It randomly generates the following keys for encrypting the target files:--Begin randomly generates keys--AES key (16 bytes)AES IV (16 bytes)Signature key (64 bytes) for SHA256 HMAC key calculation--End randomly generates keys--Displayed below is the code snippet for generating the unique keys for a target file:--Begin key generation--public static string Encrypt(string plainFilePath, string encryptedFilePath, string manifestFilePath, string rsaKey){\u00a0\u00a0\u00a0byte[] signatureKey = encc.GenerateRandom(64); ===> HMAC key\u00a0\u00a0\u00a0byte[] key = encc.GenerateRandom(16); ==> Rijndael key\u00a0\u00a0\u00a0byte[] iv = encc.GenerateRandom(16); ==> Rijndael IV\u00a0\u00a0\u00a0encc.EncryptFile(plainFilePath, encryptedFilePath, key, iv, signatureKey, rsaKey);\u00a0\u00a0\u00a0return null;--End key generation--It reads the target file into memory and encrypts it using an AES algorithm in CBC mode with the generated AES keys. The encrypted data from the original file is stored into a newly created file. This file has the same name as the original file, but has an \".encryptedRSA\" extension. The ransomware calculates a SHA-256 HMAC of the encrypted data of the file.The generated keys are encrypted using the RSA public key from the key file. The malware Base64 encodes and prepends the following data in XML format at the beginning of the encrypted file:--Begin Base64 encodes data--AES key, encrypted with RSA public keyAES IV, encrypted with RSA public keySHA-256H MAC of the encrypted file dataHMAC key, encrypted with RSA public key--End Base64 encodes data--Displayed below is the code used to RSA encrypt and Base64 encode the data prepended at the beginning of each encrypted file.--Begin encrypting and encoding--byte[] inArray = encc.CalculateSignature(encryptedFilePath, signatureKey);string text = Convert.ToBase64String(encc.RSAEncryptBytes(key, rsaKey));string text2 = Convert.ToBase64String(encc.RSAEncryptBytes(iv, rsaKey));string text3 = Convert.ToBase64String(inArray);string text4 = Convert.ToBase64String(encc.RSAEncryptBytes(signatureKey, rsaKey));string str = string.Concat(new object[]{\u00a0\u00a0\u00a0\"<MtAeSKeYForFile>\",\u00a0\u00a0\u00a0encc.sn,\u00a0\u00a0\u00a0\"<Key>\",\u00a0\u00a0\u00a0text, ==> Base64 encoded AES key, encrypted with RSA public key with OAEP padding\u00a0\u00a0\u00a0\"</Key>\",\u00a0\u00a0\u00a0encc.sn,\u00a0\u00a0\u00a0\"<IV>\",\u00a0\u00a0\u00a0text2, ==> Base64 encoded AES IV, encrypted with RSA public key with OAEP padding\u00a0\u00a0\u00a0\"</IV>\",\u00a0\u00a0\u00a0encc.sn,\u00a0\u00a0\u00a0\"<Value>\",\u00a0\u00a0\u00a0text3, ==> Base64 encoded SHA-256 HMAC of the encrypted file data\u00a0\u00a0\u00a0\"</Value>\",\u00a0\u00a0\u00a0encc.sn,\u00a0\u00a0\u00a0\"<EncryptedKey>\",\u00a0\u00a0\u00a0text4, ==> Base64 encoded HMAC key, encrypted with RSA public key with OAEP padding\u00a0\u00a0\u00a0\"</EncryptedKey>\",\u00a0\u00a0\u00a0encc.sn,\u00a0\u00a0\u00a0\"<OriginalFileLength>\",\u00a0\u00a0\u00a0fileInfo.Length, ==> The length of the original file\u00a0\u00a0\u00a0\"</OriginalFileLength>\",\u00a0\u00a0\u00a0encc.sn,\u00a0\u00a0\u00a0\"</MtAeSKeYForFile>\"});--End encrypting and encoding--Following the encryption of the victim\u2019s files, the ransomware executes \"selfdel.exe\" to delete itself from the system and installs the ransomware note \"HELP_DECRYPT_YOUR_FILES.html\u201d onto the victim\u2019s system.Displayed below is the embedded blog and Bitcoin address for the ransomware note:--Begin blog and Bitcoin address--Blog address: \"http[:]//union83939k.wordpress.com\"Bitcoin address: 19CbDoaZDLTzkkT1uQrMPM42AUvfQN4Kds--End blog and Bitcoin address--\n\n\n7aa585e6fd0a895c295c4bea2ddb071eed1e5775f437602b577a54eef7f61044\nTags\nransomwaretrojan\nDetails\n\n\n\nName\nsamsam.exe\n\n\nSize\n218112 bytes\n\n\nType\nPE32 executable (GUI) Intel 80386 Mono/.Net assembly, for MS Windows\n\n\nMD5\n14721036e16587594ad950d4f2db5f27\n\n\nSHA1\ned1797c282f0817d2ad8f878f8dd50ab062501ac\n\n\nSHA256\n7aa585e6fd0a895c295c4bea2ddb071eed1e5775f437602b577a54eef7f61044\n\n\nSHA512\n4d9e75850713f0bf6892fca8d74f462a5b2c0ccec2ed089fd830b8babcce7aedbd3bcb56e25c81cb6bf285bba9111ef89913d0c665593b2ba8da5f57d9505d32\n\n\nssdeep\n3072:gUOsdp01i6vcHV1LI5FLV0pZeZKfOJizjrBnNtRg+ur199JWbk9f7b1v:gzL1i6UHVyLV0poZa1jrD099Qbk9V\n\n\nEntropy\n6.248108\n\n\n\nAntivirus\n\n\n\nAhnlab\nTrojan/Win32.Samas\n\n\nAntiy\nTrojan[Ransom]/MSIL.Samas\n\n\nAvira\nTR/Ransom.lhumd\n\n\nBitDefender\nGeneric.Ransom.SamSam.B120689A\n\n\nCyren\nW32/Trojan.HBQK-8340\n\n\nESET\na variant of MSIL/Filecoder.AR trojan\n\n\nEmsisoft\nGeneric.Ransom.SamSam.B120689A (B)\n\n\nIkarus\nTrojan-Ransom.SamSam\n\n\nK7\nTrojan ( 700000121 )\n\n\nMcAfee\nRansomware-SAMAS!14721036E165\n\n\nMicrosoft Security Essentials\nRansom:MSIL/Samas.A\n\n\nNANOAV\nTrojan.Win32.Samas.eajeha\n\n\nQuick Heal\nTrojan.Inject.TL3\n\n\nSophos\nTroj/RansmSam-A\n\n\nSymantec\nRansom.SamSam!gen1\n\n\nSystweak\ntrojan-spy.filecryptor\n\n\nTrendMicro\nRansom_.2933F726\n\n\nTrendMicro House Call\nRansom_.2933F726\n\n\nVir.IT eXplorer\nTrojan.Win32.Atros3.CWX\n\n\nVirusBlokAda\nTrojan-Ransom.MSIL.Samas\n\n\nZillya!\nTrojan.Filecoder.Win32.2108\n\n\n\nYara Rules\nNo matches found.\nssdeep Matches\nNo matches found.\nPackers/Compilers/Cryptors\n\n\n\nMicrosoft Visual C# v7.0 / Basic .NET\n\n\n\nRelationships\n\n\n\n7aa585e6fd...\nDropped\n6245a51e78526c25510d0aa0909576119fdf0244619f670036538063b88f1c21\n\n\n7aa585e6fd...\nDropped\n32445c921079aa3e26a376d70ef6550bafeb1f6b0b7037ef152553bb5dad116f\n\n\n7aa585e6fd...\nDropped\n97d27e1225b472a63c88ac9cfb813019b72598b9dd2d70fe93f324f7d034fb95\n\n\n7aa585e6fd...\nConnected_To\nunion83939k.wordpress.com\n\n\n\nDescription\nThis file is a 32-bit Windows .NET compiled executable designed to encrypt victim system files for a ransom payment. This file is a variant of SamSam ransomware. It contains two embedded 32-bit Windows executables in its resource section:--Begin resource--\"samsam.del.exe\" ==> del.exe (SDelete) designed to securely delete files\"samsam.selfdel.exe\" ==> selfdel.exe designed to delete the SamSam ransomware from the victim\u2019s system--End resource--It installs the embedded files into the following directory:--Begin files installed--%Currentdirectory%\\del.exe%Currentdirectory%\\Selfdel.exe--End files installed--This file is designed to accept an input text file as the command line argument. The input text file contains an RSA public key in the following format:--Begin RSA public key--\"<RSAKeyValue><Modulus>Base64 encoded RSA public key</Modulus><Exponent>AQAB</Exponent></RSAKeyValue>\"--End RSA public key--The input text file was not available for analysis.Displayed below is the code snippet designed to accept an input text file as the command-line argument:--Begin command line argument--private static void Main(string[] args){\u00a0\u00a0\u00a0if (args.Length != 1)\u00a0\u00a0\u00a0{\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0return;\u00a0\u00a0\u00a0}\u00a0\u00a0\u00a0if (!string.IsNullOrEmpty(args[0]))\u00a0\u00a0\u00a0{\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Program.publickey = File.ReadAllText(args[0]);\u00a0\u00a0\u00a0}\u00a0\u00a0\u00a0Program.create_from_resource();--End command line argument--It searches the drives installed on the victim system for files with the following file extensions:--Begin file extensions--\"xls\",\".xlsx\",\".pdf\",\".doc\",\".docx\",\".ppt\",\".pptx\",\".txt\",\".dwg\",\".bak\",\".bkf\",\".pst\",\".dbx\",\".zip\",\".rar\",\".mdb\",\".asp\",\".aspx\",\".html\",\".htm\",\".dbf\",\".3dm\",\".3ds\",\".3fr\",\".jar\",\".3g2\",\".xml\",\".png\",\".tif\",\".3gp\",\".java\",\".jpe\",\".jpeg\",\".jpg\",\".jsp\",\".php\",\".3pr\",\".7z\",\".ab4\",\".accdb\",\".accde\",\".accdr\",\".accdt\",\".ach\",\".kbx\",\".acr\",\".act\",\".adb\",\".ads\",\".agdl\",\".ai\",\".ait\",\".al\",\".apj\",\".arw\",\".asf\",\".asm\",\".asx\",\".avi\",\".awg\",\".back\",\".backup\",\".backupdb\",\".pbl\",\".bank\",\".bay\",\".bdb\",\".bgt\",\".bik\",\".bkp\",\".blend\",\".bpw\",\".c\",\".cdf\",\".cdr\",\".cdr3\",\".cdr4\",\".cdr5\",\".cdr6\",\".cdrw\",\".cdx\",\".ce1\",\".ce2\",\".cer\",\".cfp\",\".cgm\",\".cib\",\".class\",\".cls\",\".cmt\",\".cpi\",\".cpp\",\".cr2\",\".craw\",\".crt\",\".crw\",\".phtml\",\".php5\",\".cs\",\".csh\",\".csl\",\".tib\",\".csv\",\".dac\",\".db\",\".db3\",\".db-journal\",\".dc2\",\".dcr\",\".dcs\",\".ddd\",\".ddoc\",\".ddrw\",\".dds\",\".der\",\".des\",\".design\",\".dgc\",\".djvu\",\".dng\",\".dot\",\".docm\",\".dotm\",\".dotx\",\".drf\",\".drw\",\".dtd\",\".dxb\",\".dxf\",\".dxg\",\".eml\",\".eps\",\".erbsql\",\".erf\",\".exf\",\".fdb\",\".ffd\",\".fff\",\".fh\",\".fmb\",\".fhd\",\".fla\",\".flac\",\".flv\",\".fpx\",\".fxg\",\".gray\",\".grey\",\".gry\",\".h\",\".hbk\",\".hpp\",\".ibank\",\".ibd\",\".ibz\",\".idx\",\".iif\",\".iiq\",\".incpas\",\".indd\",\".kc2\",\".kdbx\",\".kdc\",\".key\",\".kpdx\",\".lua\",\".m\",\".m4v\",\".max\",\".mdc\",\".mdf\",\".mef\",\".mfw\",\".mmw\",\".moneywell\",\".mos\",\".mov\",\".mp3\",\".mp4\",\".mpg\",\".mrw\",\".msg\",\".myd\",\".nd\",\".ndd\",\".nef\",\".nk2\",\".nop\",\".nrw\",\".ns2\",\".ns3\",\".ns4\",\".nsd\",\".nsf\",\".nsg\",\".nsh\",\".nwb\",\".nx2\",\".nxl\",\".nyf\",\".oab\",\".obj\",\".odb\",\".odc\",\".odf\",\".odg\",\".odm\",\".odp\",\".ods\",\".odt\",\".oil\",\".orf\",\".ost\",\".otg\",\".oth\",\".otp\",\".ots\",\".ott\",\".p12\",\".p7b\",\".p7c\",\".pab\",\".pages\",\".pas\",\".pat\",\".pcd\",\".pct\",\".pdb\",\".pdd\",\".pef\",\".pem\",\".pfx\",\".pl\",\".plc\",\".pot\",\".potm\",\".potx\",\".ppam\",\".pps\",\".ppsm\",\".ppsx\",\".pptm\",\".prf\",\".ps\",\".psafe3\",\".psd\",\".pspimage\",\".ptx\",\".py\",\".qba\",\".qbb\",\".qbm\",\".qbr\",\".qbw\",\".qbx\",\".qby\",\".r3d\",\".raf\",\".rat\",\".raw\",\".rdb\",\".rm\",\".rtf\",\".rw2\",\".rwl\",\".rwz\",\".s3db\",\".sas7bdat\",\".say\",\".sd0\",\".sda\",\".sdf\",\".sldm\",\".sldx\",\".sql\",\".sqlite\",\".sqlite3\",\".sqlitedb\",\".sr2\",\".srf\",\".srt\",\".srw\",\".st4\",\".st5\",\".st6\",\".st7\",\".st8\",\".std\",\".sti\",\".stw\",\".stx\",\".svg\",\".swf\",\".sxc\",\".sxd\",\".sxg\",\".sxi\",\".sxi\",\".sxm\",\".sxw\",\".tex\",\".tga\",\".thm\",\".tlg\",\".vob\",\".war\",\".wallet\",\".wav\",\".wb2\",\".wmv\",\".wpd\",\".wps\",\".x11\",\".x3f\",\".xis\",\".xla\",\".xlam\",\".xlk\",\".xlm\",\".xlr\",\".xlsb\",\".xlsm\",\".xlt\",\".xltm\",\".xltx\",\".xlw\",\".ycbcra\",\".yuv\"--End file extensions--The malware avoids encrypting files in the \"Windows\", \"Reference Assemblies\\\\Microsoft\", and \"Recycle.bin\" folders:Displayed below is the code snippet used to avoid encrypting files in the folders:--Begin code--if (path != Program.sysdir + \"Windows\" && !path.Contains(\"Reference Assemblies\\\\Microsoft\") && !path.Contains(\"Recycle.Bin\"))--End code--It randomly generates the following keys for encrypting the target files:--Begin randomly generates keys--AES key (16 bytes)AES IV (16 bytes)Signature key (64 bytes) for SHA256 HMAC key calculation--End randomly generates keys--Displayed below is the code snippet for generating the unique keys for a target file:--Begin key generation--public static string Encrypt(string plainFilePath, string encryptedFilePath, string manifestFilePath, string rsaKey){\u00a0\u00a0\u00a0byte[] signatureKey = encc.GenerateRandom(64); ===> HMAC key\u00a0\u00a0\u00a0byte[] key = encc.GenerateRandom(16); ==> Rijndael key\u00a0\u00a0\u00a0byte[] iv = encc.GenerateRandom(16); ==> Rijndael IV\u00a0\u00a0\u00a0encc.EncryptFile(plainFilePath, encryptedFilePath, key, iv, signatureKey, rsaKey);\u00a0\u00a0\u00a0return null;--End key generation--It reads the target file into memory and encrypts it using an AES algorithm in CBC mode with the generated AES keys. The encrypted data from the original file is stored into a newly created file. This file has the same name as the original file, but has an \".encryptedRSA\" extension. The ransomware calculates a SHA-256 HMAC of the encrypted data of the file.The generated keys are encrypted using the RSA public key from the key file. The malware Base64 encodes and prepends the following data in XML format at the beginning of the encrypted file:--Begin Base64 encodes data--AES key, encrypted with RSA public keyAES IV, encrypted with RSA public keySHA-256H MAC of the encrypted file dataHMAC key, encrypted with RSA public key--End Base64 encodes data--Displayed below is the code used to RSA encrypt and Base64 encode the data prepended at the beginning of each encrypted file.--Begin encrypting and encoding--byte[] inArray = encc.CalculateSignature(encryptedFilePath, signatureKey);string text = Convert.ToBase64String(encc.RSAEncryptBytes(key, rsaKey));string text2 = Convert.ToBase64String(encc.RSAEncryptBytes(iv, rsaKey));string text3 = Convert.ToBase64String(inArray);string text4 = Convert.ToBase64String(encc.RSAEncryptBytes(signatureKey, rsaKey));string str = string.Concat(new object[]{\u00a0\u00a0\u00a0\"<MtAeSKeYForFile>\",\u00a0\u00a0\u00a0encc.sn,\u00a0\u00a0\u00a0\"<Key>\",\u00a0\u00a0\u00a0text, ==> Base64 encoded AES key, encrypted with RSA public key with OAEP padding\u00a0\u00a0\u00a0\"</Key>\",\u00a0\u00a0\u00a0encc.sn,\u00a0\u00a0\u00a0\"<IV>\",\u00a0\u00a0\u00a0text2, ==> Base64 encoded AES IV, encrypted with RSA public key with OAEP padding\u00a0\u00a0\u00a0\"</IV>\",\u00a0\u00a0\u00a0encc.sn,\u00a0\u00a0\u00a0\"<Value>\",\u00a0\u00a0\u00a0text3, ==> Base64 encoded SHA-256 HMAC of the encrypted file data\u00a0\u00a0\u00a0\"</Value>\",\u00a0\u00a0\u00a0encc.sn,\u00a0\u00a0\u00a0\"<EncryptedKey>\",\u00a0\u00a0\u00a0text4, ==> Base64 encoded HMAC key, encrypted with RSA public key with OAEP padding\u00a0\u00a0\u00a0\"</EncryptedKey>\",\u00a0\u00a0\u00a0encc.sn,\u00a0\u00a0\u00a0\"<OriginalFileLength>\",\u00a0\u00a0\u00a0fileInfo.Length, ==> The length of the original file\u00a0\u00a0\u00a0\"</OriginalFileLength>\",\u00a0\u00a0\u00a0encc.sn,\u00a0\u00a0\u00a0\"</MtAeSKeYForFile>\"});--End encrypting and encoding--Following the encryption of the victim\u2019s files, the ransomware executes \"selfdel.exe\" to delete itself from the system and installs the ransomware note \"HELP_DECRYPT_YOUR_FILES.html\u201d onto the victim\u2019s system.Displayed below is the embedded blog and Bitcoin address for the ransomware note:--Begin blog and Bitcoin address--blog address: \"http://union83939k.wordpress.com\"Bitcoin address: 19CbDoaZDLTzkkT1uQrMPM42AUvfQN4Kds--End blog and Bitcoin address--\n\n\nunion83939k.wordpress.com\nURLs\n\nhttp://union83939k.wordpress.com\n\nWhois\nDomain Name: WORDPRESS.COMRegistry Domain ID: 21242797_DOMAIN_COM-VRSNRegistrar WHOIS Server: whois.markmonitor.comRegistrar URL: http://www.markmonitor.comUpdated Date: 2017-01-12T22:53:10ZCreation Date: 2000-03-03T12:13:23ZRegistry Expiry Date: 2020-03-03T12:13:23ZRegistrar: MarkMonitor Inc.Registrar IANA ID: 292Registrar Abuse Contact Email: abusecomplaints@markmonitor.comRegistrar Abuse Contact Phone: +1.2083895740Domain Status: clientDeleteProhibited https://icann.org/epp#clientDeleteProhibitedDomain Status: clientTransferProhibited https://icann.org/epp#clientTransferProhibitedDomain Status: clientUpdateProhibited https://icann.org/epp#clientUpdateProhibitedDomain Status: serverDeleteProhibited https://icann.org/epp#serverDeleteProhibitedDomain Status: serverTransferProhibited https://icann.org/epp#serverTransferProhibitedDomain Status: serverUpdateProhibited https://icann.org/epp#serverUpdateProhibitedName Server: NS1.WORDPRESS.COMName Server: NS2.WORDPRESS.COMName Server: NS3.WORDPRESS.COMName Server: NS4.WORDPRESS.COMDNSSEC: unsignedURL of the ICANN Whois Inaccuracy Complaint Form: https://www.icann.org/wicf/>>> Last update of whois database: 2018-03-27T18:16:17Z <<<NetRange: \u00a0\u00a0\u00a0 192.0.64.0 - 192.0.127.255CIDR: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 192.0.64.0/18NetName: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0AUTOMATTICNetHandle: \u00a0\u00a0\u00a0 NET-192-0-64-0-1Parent: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 NET192 (NET-192-0-0-0-0)NetType: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Direct AssignmentOriginAS: \u00a0\u00a0\u00a0 AS2635Organization: Automattic, Inc (AUTOM-93)RegDate: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a02012-11-20Updated: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a02012-11-20Ref: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0https://whois.arin.net/rest/net/NET-192-0-64-0-1OrgName: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Automattic, IncOrgId: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 AUTOM-93Address: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a060 29th Street #343City: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 San FranciscoStateProv: \u00a0\u00a0\u00a0 CAPostalCode: \u00a0\u00a0\u00a0 94110Country: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0USRegDate: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a02011-10-05Updated: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a02013-11-01Ref: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0https://whois.arin.net/rest/org/AUTOM-93OrgAbuseHandle: ABUSE3970-ARINOrgAbuseName: AbuseOrgAbusePhone: +1-877-273-8550OrgAbuseEmail: abuse@automattic.comOrgAbuseRef: \u00a0\u00a0\u00a0https://whois.arin.net/rest/poc/ABUSE3970-ARINOrgTechHandle: NOC12276-ARINOrgTechName: NOCOrgTechPhone: +1-877-273-8550OrgTechEmail: ipadmin@automattic.comOrgTechRef: \u00a0\u00a0\u00a0https://whois.arin.net/rest/poc/NOC12276-ARINOrgNOCHandle: NOC12276-ARINOrgNOCName: NOCOrgNOCPhone: +1-877-273-8550OrgNOCEmail: ipadmin@automattic.comOrgNOCRef: \u00a0\u00a0\u00a0https://whois.arin.net/rest/poc/NOC12276-ARIN\nRelationships\n\n\n\nunion83939k.wordpress.com\nConnected_From\n0f2c5c39494f15b7ee637ad5b6b5d00a3e2f407b4f27d140cd5a821ff08acfac\n\n\nunion83939k.wordpress.com\nConnected_From\n7aa585e6fd0a895c295c4bea2ddb071eed1e5775f437602b577a54eef7f61044\n\n\n\n\n\n036071786d7db553e2415ec2e71f3967baf51bdc31d0a640aa4afb87d3ce3050\nTags\ndropperransomwaretrojan\nDetails\n\n\n\nName\nsamsam.exe\n\n\nSize\n218624 bytes\n\n\nType\nPE32 executable (GUI) Intel 80386 Mono/.Net assembly, for MS Windows\n\n\nMD5\nfe998080463665412b65850828bce41f\n\n\nSHA1\n203bb8ec1da6b237a092bab71fa090849c7db9bd\n\n\nSHA256\n036071786d7db553e2415ec2e71f3967baf51bdc31d0a640aa4afb87d3ce3050\n\n\nSHA512\n9ade6edde3f063fc935f53366ffc9cb6cf7e17691d22fd2fe107d779da3b61eaed006ef7679b456bc16aca8b686d035f09aaf42bf06fa62b872e0a89046994eb\n\n\nssdeep\n3072:bVdp01i6vcHV1LI5FLV0pZeZKfOJizjrBnNtRg+ur199J+n9fCbM:ba1i6UHVyLV0poZa1jrD099on9\n\n\nEntropy\n6.249304\n\n\n\nAntivirus\n\n\n\nAhnlab\nTrojan/Win32.Samas\n\n\nAntiy\nTrojan/Win32.SGeneric\n\n\nAvira\nTR/Ransom.lhumd\n\n\nBitDefender\nGeneric.Ransom.SamSam.CDB17A36\n\n\nClamAV\nWin.Trojan.Samas-1\n\n\nCyren\nW32/SamSam.D.gen!Eldorado\n\n\nESET\nMSIL/Filecoder.AR trojan\n\n\nEmsisoft\nGeneric.Ransom.SamSam.CDB17A36 (B)\n\n\nIkarus\nTrojan-Ransom.SamSam\n\n\nK7\nTrojan ( 700000121 )\n\n\nMcAfee\nRansomware-SAMAS!FE9980804636\n\n\nMicrosoft Security Essentials\nRansom:MSIL/Samas.A\n\n\nNANOAV\nTrojan.Win32.Ransom.eamenb\n\n\nNetGate\nTrojan.Win32.Malware\n\n\nQuick Heal\nTrojan.Inject.TL3\n\n\nSophos\nTroj/RansmSam-A\n\n\nSymantec\nRansom.SamSam!gen1\n\n\nSystweak\nmalware.gen-r\n\n\nTrendMicro\nRansom_.2933F726\n\n\nTrendMicro House Call\nRansom_.2933F726\n\n\nVir.IT eXplorer\nTrojan.Win32.MSIL9.BGXA\n\n\nVirusBlokAda\nTrojan-Ransom.MSIL.Samas\n\n\nZillya!\nDropper.Agent.Win32.229787\n\n\n\nYara Rules\nNo matches found.\nssdeep Matches\n\n\n\n97\n0f2c5c39494f15b7ee637ad5b6b5d00a3e2f407b4f27d140cd5a821ff08acfac\n\n\n\nPackers/Compilers/Cryptors\n\n\n\nMicrosoft Visual C# v7.0 / Basic .NET\n\n\n\nRelationships\n\n\n\n036071786d...\nDropped\n6245a51e78526c25510d0aa0909576119fdf0244619f670036538063b88f1c21\n\n\n036071786d...\nDropped\n32445c921079aa3e26a376d70ef6550bafeb1f6b0b7037ef152553bb5dad116f\n\n\n036071786d...\nDropped\n97d27e1225b472a63c88ac9cfb813019b72598b9dd2d70fe93f324f7d034fb95\n\n\n036071786d...\nConnected_To\nkeytwocode.wordpress.com\n\n\n\nDescription\nThis file is a 32-bit Windows .NET compiled executable designed to encrypt victim system files for a ransom payment. This file is a variant of SamSam ransomware. It contains two embedded 32-bit Windows executables in its resource section:--Begin resource--\"samsam.del.exe\" ==> del.exe (SDelete) designed to securely delete files\"samsam.selfdel.exe\" ==> selfdel.exe designed to delete the SamSam ransomware from the victim\u2019s system--End resource--It installs the embedded files into the following directory:--Begin files installed--%Currentdirectory%\\del.exe%Currentdirectory%\\Selfdel.exe--End files installed--This file is designed to accept an input text file as the command line argument. The input text file contains an RSA public key in the following format:--Begin RSA public\n\n\n\n\n\n\nRevisions\n\nDecember 3, 2018: Initial version\n",
  "cves": [
    "CVE-2022-42475",
    "CVE-2022-47966"
  ],
  "techniques": [],
  "advisory": "ar18-337c",
  "title": "MAR-10158513.r1.v1 \u2013 SamSam3 | CISA",
  "source": "analysis-reports",
  "id": "b8dd46a0dadce7a7b5ff0f0fa36002c2540a3d16691a168f645a2de843686c8b"
}