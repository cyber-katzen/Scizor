{"markdown": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n AppleJeus: Analysis of North Korea\u2019s Cryptocurrency Malware \\| CISA\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[Skip to main content](#main) \n\n\n\n\n\n\n\n\n\n\n\n\n![U.S. flag](/profiles/cisad8_gov/themes/custom/gesso/dist/images/us_flag_small.png)\n\n\n\n An official website of the United States government\n \n\n\n\n Here\u2019s how you know\n \n\n\n\n\n\n Here\u2019s how you know\n \n\n\n\n\n\n\n![Dot gov](/profiles/cisad8_gov/themes/custom/gesso/dist/images/icon-dot-gov.svg)\n\n\n**Official websites use .gov** \n  \n\n A\n **.gov** \n website belongs to an official government organization in the United States.\n \n\n\n\n\n\n![HTTPS](/profiles/cisad8_gov/themes/custom/gesso/dist/images/icon-https.svg)\n\n\n**Secure .gov websites use HTTPS** \n  \n\n A\n **lock** \n (\n \n\n\n Lock\n \n\n A locked padlock\n \n\n\n\n\n ) or\n **https://** \n means you\u2019ve safely connected to the .gov website. Share sensitive information only on official, secure websites.\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[Free Cyber Services](/resources-tools/resources/free-cybersecurity-services-and-tools \"Free Cyber Services\") \n[\\#protect2024](/protect2024) \n[Secure Our World](/node/18883) \n[Shields Up](/node/8056) \n[Report A Cyber Issue](/node/16591) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[![CISA Logo Americas Cyber Defense Agency](/sites/default/files/images/SVG/header_logo_tagline_update.svg)](/)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[![CISA Logo](/sites/default/files/images/SVG/mobile_logo_wordmark.svg)](/)\n\n\n\n\n\n\n\n\n\n\n Search\n \n\n\n\n\n\n\n\n\n\n Menu\n \n\n\n\n\n\n\n\n\n\n\n\n\n![America's Cyber Defense Agency](/sites/default/files/images/SVG/header_tagline_mobile_update.svg)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n Close\n \n\n\n\n\n* Topics\n \n\n\n\n[Topics](/topics) \n\n\n\n\n[Cybersecurity Best Practices](/topics/cybersecurity-best-practices)\n\n\n\n\n[Cyber Threats and Advisories](/topics/cyber-threats-and-advisories)\n\n\n\n\n[Critical Infrastructure Security and Resilience](/topics/critical-infrastructure-security-and-resilience)\n\n\n\n\n[Election Security](/topics/election-security)\n\n\n\n\n[Emergency Communications](/topics/emergency-communications)\n\n\n\n\n[Industrial Control Systems](/topics/industrial-control-systems)\n\n\n\n\n[Information and Communications Technology Supply Chain Security](/topics/information-communications-technology-supply-chain-security)\n\n\n\n\n[Partnerships and Collaboration](/topics/partnerships-and-collaboration)\n\n\n\n\n[Physical Security](/topics/physical-security)\n\n\n\n\n[Risk Management](/topics/risk-management)\n\n\n\n\n\n[How can we help?](/audiences) \n\n\n[Government](/topics/government) \n[Educational Institutions](/topics/educational-institutions) \n[Industry](/topics/industry) \n[State, Local, Tribal, and Territorial](/topics/state-local-tribal-and-territorial) \n[Individuals and Families](/topics/individuals-and-families) \n[Small and Medium Businesses](/topics/small-and-medium-businesses) \n[Find Help Locally](/audiences/find-help-locally) \n[Faith\\-Based Community](/audiences/faith-based-community) \n[Executives](/audiences/executives) \n[High\\-Risk Communities](/audiences/high-risk-communities)\n* [Spotlight](/spotlight)\n* Resources \\& Tools\n \n\n\n\n[Resources \\& Tools](/resources-tools) \n\n\n\n\n[All Resources \\& Tools](/resources-tools/all-resources-tools)\n\n\n\n\n[Services](/resources-tools/services)\n\n\n\n\n[Programs](/resources-tools/programs)\n\n\n\n\n[Resources](/resources-tools/resources)\n\n\n\n\n[Training](/resources-tools/training)\n\n\n\n\n[Groups](/resources-tools/groups)\n* News \\& Events\n \n\n\n\n[News \\& Events](/news-events) \n\n\n\n\n[News](/news-events/news)\n\n\n\n\n[Events](/news-events/events)\n\n\n\n\n[Cybersecurity Alerts \\& Advisories](/news-events/cybersecurity-advisories)\n\n\n\n\n[Directives](/news-events/directives)\n\n\n\n\n[Request a CISA Speaker](/news-events/request-speaker)\n\n\n\n\n[Congressional Testimony](/news-events/congressional-testimony)\n\n\n\n\n[CISA Conferences](/cisa-conferences)\n\n\n\n\n[CISA Live!](/cisa-live)\n* Careers\n \n\n\n\n[Careers](/careers) \n\n\n\n\n[Benefits \\& Perks](/careers/benefits-perks)\n\n\n\n\n[HireVue Applicant Reasonable Accommodations Process](/careers/hirevue-applicant-reasonable-accommodations-process)\n\n\n\n\n[Hiring](/general-recruitment-and-hiring-faqs)\n\n\n\n\n[Resume \\& Application Tips](/careers/resume-application-tips)\n\n\n\n\n[Students \\& Recent Graduates](/students-recent-graduates-employment-opportunities)\n\n\n\n\n[Veteran and Military Spouses](/careers/veteran-and-military-spouse-employment-opportunities)\n\n\n\n\n[Work @ CISA](/careers/work-cisa)\n* About\n \n\n\n\n[About](/about) \n\n\n\n\n[Culture](/about/culture)\n\n\n\n\n[Divisions \\& Offices](/about/divisions-offices)\n\n\n\n\n[Regions](/about/regions)\n\n\n\n\n[Leadership](/about/leadership)\n\n\n\n\n[Doing Business with CISA](/doing-business-cisa)\n\n\n\n\n[Site Links](/site-links)\n\n\n\n\n[Reporting Employee and Contractor Misconduct](/reporting-employee-and-contractor-misconduct)\n\n\n\n\n[CISA GitHub](/cisa-github)\n\n\n\n\n[CISA Central](/cisa-central)\n\n\n\n\n[2023 Year In Review](/about/2023YIR)\n\n\n\n\n[Contact Us](/about/contact-us)\n\n\n\n\n\n\n\n\n\n[Free Cyber Services](/resources-tools/resources/free-cybersecurity-services-and-tools \"Free Cyber Services\") \n[\\#protect2024](/protect2024) \n[Secure Our World](/node/18883) \n[Shields Up](/node/8056) \n[Report A Cyber Issue](/node/16591) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n Breadcrumb\n \n1. [Home](/)\n2. [News \\& Events](/news-events)\n3. [Cybersecurity Advisories](/news-events/cybersecurity-advisories)\n4. [Cybersecurity Advisory](/news-events/cybersecurity-advisories?f%5B0%5D=advisory_type%3A94)\n\n\n\n\n\n\n\n\n Share:\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n Cybersecurity Advisory\n \nAppleJeus: Analysis of North Korea\u2019s Cryptocurrency Malware\n===========================================================\n\n\n\n\n\n Last Revised\n \n\n\n April 15, 2021\n \n\n\n\n\n Alert Code\n \n\n AA21\\-048A\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Summary\n\n\n\n\n*This Advisory uses the MITRE Adversarial Tactics, Techniques, and Common Knowledge (ATT\\&CK\u00ae) framework. See the\n [ATT\\&CK for Enterprise](https://attack.mitre.org/versions/v8/techniques/enterprise/) \n for all referenced threat actor tactics and techniques.* \n\n\n\n\n This joint advisory is the result of analytic efforts among the Federal Bureau of Investigation (FBI), the Cybersecurity and Infrastructure Security Agency (CISA), and the Department of Treasury (Treasury) to highlight the cyber threat to cryptocurrency posed by North Korea, formally known as the Democratic People\u2019s Republic of Korea (DPRK), and provide mitigation recommendations. Working with U.S. government partners, FBI, CISA, and Treasury assess that Lazarus Group\u2014which these agencies attribute to North Korean state\\-sponsored\u00a0advanced persistent threat (APT) actors\u2014is targeting individuals and companies, including cryptocurrency exchanges and financial service companies, through the dissemination of cryptocurrency trading applications that have been modified to include malware that facilitates theft of cryptocurrency.\n \n\n\n\n These cyber actors have targeted organizations for cryptocurrency theft in over 30 countries during the past year alone. It is likely that these actors view modified cryptocurrency trading applications as a means to circumvent international sanctions on North Korea\u2014the applications enable them to gain entry into companies that conduct cryptocurrency transactions and steal cryptocurrency from victim accounts. As highlighted in\n [FASTCash 2\\.0: North Korea's BeagleBoyz Robbing Banks](https://us-cert.cisa.gov/ncas/alerts/aa20-239a) \n and\n [Guidance on the North Korean Cyber Threat](https://us-cert.cisa.gov/ncas/alerts/aa20-106a) \n , North Korea\u2019s state\\-sponsored cyber actors are targeting cryptocurrency exchanges and accounts to steal and launder hundreds of millions of dollars in cryptocurrency.\\[\n [1](https://us-cert.cisa.gov/ncas/alerts/aa20-239a) \n ]\\[\n [2](https://home.treasury.gov/news/press-releases/sm924) \n ]\\[\n [3](https://www.justice.gov/opa/pr/two-chinese-nationals-charged-laundering-over-100-million-cryptocurrency-exchange-hack) \n ] The U.S. Government refers to malicious cyber activity by the North Korean government as HIDDEN COBRA. For more information on HIDDEN COBRA activity, visit\n [https://www.us\\-cert.cisa.gov/northkorea](https://us-cert.cisa.gov/northkorea) \n .\n \n\n\n\n The U.S. Government has identified malware and indicators of compromise (IOCs) used by the North Korean government to facilitate cryptocurrency thefts; the cybersecurity community refers to this activity as \u201cAppleJeus.\u201d This report catalogues AppleJeus malware in detail. North Korea has used AppleJeus malware posing as cryptocurrency trading platforms since at least 2018\\. In most instances, the malicious application\u2014seen on both Windows and Mac operating systems\u2014appears to be from a legitimate cryptocurrency trading company, thus fooling individuals into downloading it as a third\\-party application from a website that seems legitimate. In addition to infecting victims through legitimate\\-looking websites, HIDDEN COBRA actors also use phishing, social networking, and social engineering techniques to lure users into downloading the malware.\n \n\n\n\n Refer to the following Malware Analysis Reports (MARs) for full technical details of AppleJeus malware and associated IOCs.\n \n\n\n* [MAR\\-10322463\\-1\\.v1: AppleJeus \u2013 Celas Trade Pro](https://us-cert.gov/ncas/analysis-reports/ar21-048a)\n* [MAR\\-10322463\\-2\\.v1: AppleJeus \u2013 JMT Trading](https://us-cert.gov/ncas/analysis-reports/ar21-048b)\n* [MAR\\-10322463\\-3\\.v1: AppleJeus \u2013 Union Crypto](https://us-cert.gov/ncas/analysis-reports/ar21-048c)\n* [MAR\\-10322463\\-4\\.v1: AppleJeus \u2013 Kupay Wallet](https://us-cert.gov/ncas/analysis-reports/ar21-048d)\n* [MAR\\-10322463\\-5\\.v1: AppleJeus \u2013 CoinGoTrade](https://us-cert.gov/ncas/analysis-reports/ar21-048e)\n* [MAR\\-10322463\\-6\\.v1: AppleJeus \u2013 Dorusio](https://us-cert.gov/ncas/analysis-reports/ar21-048f)\n* [MAR\\-10322463\\-7\\.v1: AppleJeus \u2013 Ants2Whale](https://us-cert.gov/ncas/analysis-reports/ar21-048g)\n\n\n\n[Click here](/sites/default/files/publications/Joint_Cybersecurity_Advisory_AppleJeus%E2%80%93Analysis%20of%20North%20Korea%E2%80%99s%20Cryptocurrency%20Malware.pdf) \n for a PDF version of this report.\n \n\n\n\n### Technical Details\n\n\n\n\n The North Korean government has used multiple versions of AppleJeus since the malware was initially discovered in 2018\\. This section outlines seven of the versions below. The MARs listed above provide further technical details of these versions. Initially, HIDDEN COBRA actors used websites that appeared to host legitimate cryptocurrency trading platforms to infect victims with AppleJeus; however, these actors are now also using other initial infection vectors, such as phishing, social networking, and social engineering techniques, to get users to download the malware.\n \n\n\n### Targeted Nations\n\n\n\n HIDDEN COBRA actors have targeted institutions with AppleJeus malware in several sectors, including energy, finance, government, industry, technology, and telecommunications. Since January 2020, the threat actors have targeted these sectors in the following countries: Argentina, Australia, Belgium, Brazil, Canada, China, Denmark, Estonia, Germany, Hong Kong, Hungary, India, Ireland, Israel, Italy, Japan, Luxembourg, Malta, the Netherlands, New Zealand, Poland, Russia, Saudi Arabia, Singapore, Slovenia, South Korea, Spain, Sweden, Turkey, the United Kingdom, Ukraine, and the United States (figure 1\\).\n \n\n\n\n\n\n\n\n![]()\n  \n\n  \n\n  \n\n  \n\n*Figure 1: Countries targeted with AppleJeus by HIDDEN COBRA threat actors since 2020* \n\n\n\n### AppleJeus Versions Note\n\n\n\n The version numbers used for headings in this document correspond to the order the AppleJeus campaigns were identified in open source or through other investigative means. These versions may or may not be in the correct order to develop or deploy the AppleJeus campaigns.\n \n\n\n### AppleJeus Version 1: Celas Trade Pro\n\n\n#### **Introduction and Infrastructure**\n\n\n\n In August 2018, open\\-source reporting disclosed information about a trojanized version of a legitimate cryptocurrency trading application on an undisclosed victim\u2019s computer. The malicious program, known as Celas Trade Pro, was a modified version of the benign Q.T. Bitcoin Trader application. This incident led to the victim company being infected with a Remote Administration Tool (RAT) known as FALLCHILL, which was attributed to North Korea (HIDDEN COBRA) by the U.S. Government. FALLCHILL is a fully functional RAT with multiple commands that the adversary can issue from a command and control (C2\\) server to infected systems via various proxies. FALLCHILL typically infects a system as a file dropped by other HIDDEN COBRA malware (\n *Develop Capabilities: Malware* \n \\[\n [T1587\\.001](https://attack.mitre.org/versions/v8/techniques/T1587/001/) \n ]). Because of this, additional HIDDEN COBRA malware may be present on systems compromised with FALLCHILL.\\[\n [4](https://us-cert.cisa.gov/ncas/alerts/TA17-318A) \n ]\n \n\n\n\n Further research revealed that a phishing email from a Celas LLC company (\n *Phishing: Spearphishing Link* \n \\[\n [T1566\\.002](https://attack.mitre.org/versions/v8/techniques/T1566/002/) \n ]) recommended the trojanized cryptocurrency trading application to victims. The email provided a link to the Celas\u2019 website,\n `celasllc[.]com` \n (\n *Acquire Infrastructure: Domain* \n \\[\n [T1583\\.001](https://attack.mitre.org/versions/v8/techniques/T1583/001/) \n ]), where the victim could download a Windows or macOS version of the trojanized application.\n \n\n\n\n The\n `celasllc[.]com` \n domain resolved to the following Internet Protocol (IP) addresses from May 29, 2018, to January 23, 2021\\.\n \n\n\n* `45.199.63[.]220`\n* `107.187.66[.]103`\n* `145.249.106[.]19`\n* `175.29.32[.]160`\n* `185.142.236[.]213`\n* `185.181.104[.]82`\n* `198.251.83[.]27`\n* `208.91.197[.]46`\n* `209.99.64[.]18`\n\n\n\n The\n `celasllc[.]com` \n domain had a valid Sectigo (previously known as Comodo) Secure Sockets Layer (SSL) certificate (\n *Obtain Capabilities: Digital Certificates* \n \\[\n [T1588\\.004](https://attack.mitre.org/versions/v8/techniques/T1588/004/) \n ]). The SSL certificate was \u201cDomain Control Validated,\u201d a weak security verification level that does not require validation of the owner\u2019s identity or the actual business\u2019s existence.\n \n\n\n#### **Celas Trade Pro Application Analysis**\n\n\n#### ***Windows Program***\n\n\n\n The Windows version of the malicious Celas Trade Pro application is an MSI Installer (\n `.msi` \n ). The MSI Installer installation package comprises a software component and an application programming interface (API) that Microsoft uses for the installation, maintenance, and removal of software. The installer looks legitimate and is signed by a valid Sectigo certificate that was purchased by the same user as the SSL certificate for celasllc\\[.]com (\n *Obtain Capabilities: Code Signing Certificates* \n \\[\n [T1588\\.003](https://attack.mitre.org/versions/v8/techniques/T1588/003/) \n ]). The MSI Installer asks the victim for administrative privileges to run (\n *User Execution: Malicious File* \n \\[\n [T1204\\.002](https://attack.mitre.org/versions/v8/techniques/T1204/002) \n ]).\n \n\n\n\n Once permission is granted, the threat actor is able to run the program with elevated privileges (\n *Abuse Elevation Control Mechanism* \n \\[\n [T1548](https://attack.mitre.org/versions/v8/techniques/T1548/) \n ]) and MSI executes the following actions.\n \n\n\n* Installs\n `CelasTradePro.exe` \n in folder\n `C:\\Program Files (x86)\\CelasTradePro`\n* Installs\n `Updater.exe` \n in folder\n `C:\\Program Files (x86)\\CelasTradePro`\n* Runs\n `Updater.exe` \n with the\n `CheckUpdate` \n parameters\n\n\n\n The\n `CelasTradePro.exe` \n program asks for the user\u2019s exchange and loads a legitimate\\-looking cryptocurrency trading platform\u2014very similar to the benign Q.T. Bitcoin Trader\u2014that exhibits no signs of malicious activity.\n \n\n\n\n The\n `Updater.exe` \n program has the same program icon as\n `CelasTradePro.exe` \n . When run, it checks for the\n `CheckUpdate` \n parameter, collects the victim\u2019s host information (\n *System Owner/User Discovery* \n \\[\n [T1033](https://attack.mitre.org/versions/v8/techniques/T1033) \n ]), encrypts the collected information with a hardcoded XOR encryption, and sends information to a C2 website (\n *Exfiltration Over C2 Channe* \n l \\[\n [T1041](https://attack.mitre.org/versions/v8/techniques/T1041) \n ]).\n \n\n\n#### ***macOS X Program***\n\n\n\n The macOS version of the malicious application is a DMG Installer that has a disk image format that Apple commonly uses to distribute software over the internet. The installer looks legitimate and has a valid digital signature from Sectigo (\n *Obtain Capabilities: Digital Certificates* \n \\[\n [T1588\\.004](https://attack.mitre.org/versions/v8/techniques/T1588/004/) \n ]). It has very similar functionality to the Windows version. The installer executes the following actions.\n \n\n\n* Installs\n `CelasTradePro` \n in folder\n `/Applications/CelasTradePro.app/Contents/MacOS/`\n* Installs\n `Updater` \n in folder\n `/Applications/CelasTradePro.app/Contents/MacOS`\n* Executes a\n `postinstall` \n script\n\t+ Moves\n\t `.com.celastradepro.plist` \n\t to folder\n\t `LaunchDaemons`\n\t+ Runs\n\t `Updater` \n\t with the\n\t `CheckUpdate` \n\t parameter\n\n\n\n`CelasTradePro` \n asks for the user\u2019s exchange and loads a legitimate\\-looking cryptocurrency trading platform\u2014very similar to the benign Q.T. Bitcoin Trader\u2014that exhibits no signs of malicious activity.\n \n\n\n\n`Updater` \n checks for the\n `CheckUpdate` \n parameter and, when found, it collects the victim\u2019s host information (\n *System Owner/User Discovery* \n \\[\n [T1033]](https://attack.mitre.org/versions/v8/techniques/T1033) \n ), encrypts the collected information with a hardcoded XOR key before exfiltration, and sends the encrypted information to a C2 website (\n *Exfiltration Over C2 Channel* \n \\[\n [T1041](https://attack.mitre.org/versions/v8/techniques/T1041) \n ]). This process helps the adversary obtain persistence on a victim\u2019s network.\n \n\n\n\n The\n `postinstall` \n script is a sequence of instructions that runs after successfully installing an application (\n *Command and Scripting Interpreter: Unix Shell* \n \\[\n [T1059\\.004](https://attack.mitre.org/versions/v8/techniques/T1059/004/) \n ]). This script moves property list (\n `plist` \n ) file\n `.com.celastradepro.plist` \n from the installer package to the\n `LaunchDaemons` \n folder (\n *Scheduled Task/Job: Launchd* \n \\[\n [T1053\\.004](https://attack.mitre.org/versions/v8/techniques/T1053/004/) \n ]). The leading \u201c.\u201d makes it unlisted in the Finder app or default Terminal directory listing (\n *Hide Artifacts: Hidden Files and Directories* \n \\[\n [T1564\\.001](https://attack.mitre.org/versions/v8/techniques/T1564/001/) \n ]). Once in the folder, this property list (\n `plist` \n ) file will launch the\n `Updater` \n program with the\n `CheckUpdate` \n parameter on system load as Root for every user. Because the\n `LaunchDaemon` \n will not run automatically after the\n `plist` \n file is moved, the\n `postinstall` \n script launches the\n `Updater` \n program with the\n `CheckUpdate` \n parameter and runs it in the background (Create or\n *Modify System Process: Launch Daemon* \n \\[\n [T1543\\.004](https://attack.mitre.org/versions/v8/techniques/T1543/004/) \n ]).\n \n\n\n#### ***Payload***\n\n\n\n After a cybersecurity company published a report detailing the above programs and their malicious extras, the website was no longer accessible. Since this site was the C2 server, the payload cannot be confirmed. The cybersecurity company that published the report states the payload was an encrypted and obfuscated binary (\n *Obfuscated Files or Information* \n \\[\n [T1027](https://attack.mitre.org/versions/v8/techniques/T1027) \n ]), which eventually drops FALLCHILL onto the machine and installs it as a service (\n *Create or Modify System Process: Windows Service* \n \\[\n [T1543\\.003](https://attack.mitre.org/versions/v8/techniques/T1543/003) \n ]). FALLCHILL malware uses an RC4 encryption algorithm with a 16\\-byte key to protect its communications (\n *Encrypted Channel: Symmetric Cryptography* \n \\[\n [T1573\\.001](https://attack.mitre.org/versions/v8/techniques/T1573/001) \n ]). The key employed in these versions has also been used in a previous version of FALLCHILL.\\[\n [5](https://us-cert.cisa.gov/ncas/alerts/TA17-318A) \n ]\\[\n [6](https://attack.mitre.org/versions/v8/software/S0181/) \n ]\n \n\n\n\n For more details on AppleJeus Version 1: Celas Trade Pro, see\n [MAR\\-10322463\\-1\\.v1](https://us-cert.gov/ncas/analysis-reports/ar21-048a) \n .\n \n\n\n### **AppleJeus Version 2: JMT Trading**\n\n\n#### **Introduction and Infrastructure**\n\n\n\n In October 2019, a cybersecurity company identified a new version of the AppleJeus malware\u2014JMT Trading\u2014thanks to its many similarities to the original AppleJeus malware. Again, the malware was in the form of a cryptocurrency trading application, which a legitimate\\-looking company, called JMT Trading, marketed and distributed on their website,\n `jmttrading[.]org` \n (\n *Acquire Infrastructure: Domain* \n \\[\n [T1583\\.001](https://attack.mitre.org/versions/v8/techniques/T1583/001/) \n ]). This website contained a \u201cDownload from GitHub\u201d button, which linked to JMT Trading\u2019s GitHub page (\n *Acquire Infrastructure: Web Services* \n \\[\n [T1583\\.006](https://attack.mitre.org/versions/v8/techniques/T1583/006) \n ]), where Windows and macOS X versions of the JMT Trader application were available for download (\n *Develop Capabilities: Malware* \n \\[\n [T1587\\.001](https://attack.mitre.org/versions/v8/techniques/T1587/001/) \n ]). The GitHub page also included .zip and tar.gz files containing the source code.\n \n\n\n\n The\n `jmttrading[.]org` \n domain resolved to the following IP addresses from October 15, 2016, to January 22, 2021\\.\n \n\n\n* `45.33.2[.]79`\n* `45.33.23[.]183`\n* `45.56.79[.]23`\n* `45.79.19[.]196`\n* `96.126.123[.]244`\n* `146.112.61[.]107`\n* `184.168.221[.]40`\n* `184.168.221[.]57`\n* `198.187.29[.]20`\n* `198.54.117[.]197`\n* `198.54.117[.]198`\n* `198.54.117[.]199`\n* `198.54.117[.]200`\n* `198.58.118[.]167`\n\n\n\n The\n `jmttrading[.]org` \n domain had a valid Sectigo SSL certificate (\n *Obtain Capabilities: Digital Certificates* \n \\[\n [T1588\\.004](https://attack.mitre.org/versions/v8/techniques/T1588/004/) \n ]). The SSL certificate was \u201cDomain Control Validated,\u201d a weak security verification level that does not require validation of the owner\u2019s identity or the actual business\u2019s existence. The current SSL certificate was issued by Let\u2019s Encrypt.\n \n\n\n#### **JMT Trading Application Analysis**\n\n\n#### ***Windows Program***\n\n\n\n The Windows version of the malicious cryptocurrency application is an MSI Installer. The installer looks legitimate and has a valid digital signature from Sectigo (\n *Obtain Capabilities: Digital Certificates* \n \\[\n [T1588\\.004](https://attack.mitre.org/versions/v8/techniques/T1588/004/) \n ]). The signature was signed with a code signing certificate purchased by the same user as the SSL certificate for\n `jmttrading[.]org` \n (\n *Obtain Capabilities: Code Signing Certificates* \n \\[\n [T1588\\.003](https://attack.mitre.org/versions/v8/techniques/T1588/003/) \n ]). The MSI Installer asks the victim for administrative privileges to run (\n *User Execution: Malicious File* \n \\[\n [T1204\\.002](https://attack.mitre.org/versions/v8/techniques/T1204/002) \n ]).\n \n\n\n\n Once permission is granted, the MSI executes the following actions.\n \n\n\n* Installs\n `JMTTrader.exe` \n in folder\n `C:\\Program Files (x86)\\JMTTrader`\n* Installs\n `CrashReporter.exe` \n in folder\n `C:\\Users\\<username>\\AppData\\Roaming\\JMTTrader`\n* Runs\n `CrashReporter.exe` \n with the\n `Maintain` \n parameter\n\n\n\n The\n `JMTTrader.exe` \n program asks for the user\u2019s exchange and loads a legitimate\\-looking cryptocurrency trading platform\u2014very similar to\n `CelasTradePro.exe` \n and the benign Q.T. Bitcoin Trader\u2014that exhibits no signs of malicious activity.\n \n\n\n\n The program\n `CrashReporter.exe` \n is heavily obfuscated with the ADVObfuscation library, renamed \u201csnowman\u201d (\n *Obfuscated Files or Information* \n \\[\n [T1027](https://attack.mitre.org/versions/v8/techniques/T1027) \n ]). When run, it checks for the\n `Maintain` \n parameter and collects the victim\u2019s host information (\n *System Owner/User Discovery* \n \\[\n [T1033](https://attack.mitre.org/versions/v8/techniques/T1033) \n ]), encrypts the collected information with a hardcoded XOR key before exfiltration, and sends the encrypted information to a C2 website (\n *Exfiltration Over C2 Channel* \n \\[\n [T1041](https://attack.mitre.org/versions/v8/techniques/T1041) \n ]). The program also creates a scheduled SYSTEM task, named\n `JMTCrashReporter` \n , which runs\n `CrashReporter.exe` \n with the\n `Maintain` \n parameter at any user\u2019s login (\n *Scheduled Task/Job: Scheduled Task* \n \\[\n [T1053\\.005](https://attack.mitre.org/versions/v8/techniques/T1053/005) \n ]).\n \n\n\n#### ***macOS X Program***\n\n\n\n The macOS version of the malicious application is a DMG Installer. The installer looks legitimate and has very similar functionality to the Windows version, but it does not have a digital certificate and will warn the user of that before installation. The installer executes the following actions.\n \n\n\n* Installs\n `JMTTrader` \n in folder\n `/Applications/JMTTrader.app/Contents/MacOS/`\n* Installs\n `.CrashReporter` \n in folder\n `/Applications/JMTTrader.app/Contents/Resources/` \n\t+ Note: the leading \u201c.\u201d makes it unlisted in the Finder app or default Terminal directory listing.\n* Executes a\n `postinstall` \n script\n\t+ Moves\n\t `.com.jmttrading.plist` \n\t to folder\n\t `LaunchDaemons`\n\t+ Changes the file permissions on the\n\t `plist`\n\t+ Runs\n\t `CrashReporter` \n\t with the\n\t `Maintain` \n\t parameter\n\t+ Moves\n\t `.CrashReporter` \n\t to folder\n\t `/Library/JMTTrader/CrashReporter`\n\t+ Makes\n\t `.CrashReporter` \n\t executable\n\n\n\n The\n `JMTTrader` \n program asks for the user\u2019s exchange and loads a legitimate\\-looking cryptocurrency trading platform\u2014very similar to\n `CelasTradePro` \n and the benign Q.T. Bitcoin Trader\u2014that exhibits no signs of malicious activity.\n \n\n\n\n The\n `CrashReporter` \n program checks for the\n `Maintain` \n parameter and is not obfuscated. This lack of obfuscation makes it easier to determine the program\u2019s functionality in detail. When it finds the\n `Maintain` \n parameter, it collects the victim\u2019s host information (\n *System Owner/User Discovery* \n \\[\n [T1033](https://attack.mitre.org/versions/v8/techniques/T1033) \n ]), encrypts the collected information with a hardcoded XOR key before exfiltration, and sends the encrypted information to a C2 website (\n *Exfiltration Over C2 Channel* \n \\[\n [T1041](https://attack.mitre.org/versions/v8/techniques/T1041) \n ]).\n \n\n\n\n The\n `postinstall` \n script has similar functionality to the one used by\n `CelasTradePro` \n , but it has a few additional features (\n *Command and Scripting Interpreter: Unix Shell* \n \\[\n [T1059\\.004](https://attack.mitre.org/versions/v8/techniques/T1059/004/) \n ]). It moves the property list (\n `plist` \n ) file\n `.com.jmttrading.plis` \n t from the Installer package to the\n `LaunchDaemons` \n folder (\n *Scheduled Task/Job: Launchd* \n \\[\n [T1053\\.004](https://attack.mitre.org/versions/v8/techniques/T1053/004/) \n ]), but also changes the file permissions on the\n `plist` \n file. Once in the folder, this property list (\n `plist` \n ) file will launch the\n `CrashReporter` \n program with the\n `Maintain` \n parameter on system load as Root for every user. Also, the\n `postinstall` \n script moves the\n `.CrashReporter` \n program to a new location\n `/Library/JMTTrader/CrashReporter` \n and makes it executable. Because the\n `LaunchDaemon` \n will not run automatically after the\n `plist` \n file is moved, the\n `postinstall` \n script launches\n `CrashReporter` \n with the\n `Maintain` \n parameter and runs it in the background (\n *Create or Modify System Process: Launch Daemon* \n \\[\n [T1543\\.004](https://attack.mitre.org/versions/v8/techniques/T1543/004/) \n ]).\n \n\n\n#### ***Payload***\n\n\n\n Soon after the cybersecurity company tweeted about JMT Trader on October 11, 2019, the files on GitHub were updated to clean, non\\-malicious installers. Then on October 13, 2019, a different cybersecurity company published an article detailing the macOS X JMT Trader, and soon after, the C2\n `beastgoc[.]com` \n website went offline. There is not a confirmed sample of the payload to analyze at this point.\n \n\n\n\n For more details on AppleJeus Version 2: JMT Trading, see\n [MAR\\-10322463\\-2\\.v1](https://us-cert.gov/ncas/analysis-reports/ar21-048b) \n .\n \n\n\n### AppleJeus Version 3: Union Crypto\n\n\n#### **Introduction and Infrastructure**\n\n\n\n In December 2019, another version of the AppleJeus malware was identified on Twitter by a cybersecurity company based on many similarities to the original AppleJeus malware. Again, the malware was in the form of a cryptocurrency trading application, which was marketed and distributed by a legitimate\\-looking company, called Union Crypto, on their website,\n `unioncrypto[.]vip` \n (\n *Acquire Infrastructure: Domain* \n \\[\n [T1583\\.001](https://attack.mitre.org/versions/v8/techniques/T1583/001/) \n ]). Although this website is no longer available, a cybersecurity researcher discovered a download link,\n `https://www.unioncrypto[.]vip/download/W6c2dq8By7luMhCmya2v97YeN` \n , recorded on VirusTotal for the macOS X version of\n `UnionCryptoTrader` \n . In contrast, open\\-source reporting stated that the Windows version might have been downloaded via instant messaging service Telegram, as it was found in a \u201cTelegram Downloads\u201d folder on an unnamed victim.\\[\n [7](https://securelist.com/operation-applejeus-sequel/95596/) \n ]\n \n\n\n\n The\n `unioncrypto[.]vip` \n domain resolved to the following IP addresses from June 5, 2019, to July 15, 2020\\.\n \n\n\n* `104.168.167[.]16`\n* `198.54.117[.]197`\n* `198.54.117[.]198`\n* `198.54.117[.]199`\n* `198.54.117[.]200`\n\n\n\n The domain\n `unioncrypto[.]vip` \n had a valid Sectigo SSL certificate (\n *Obtain Capabilities: Digital Certificates* \n \\[\n [T1588\\.004](https://attack.mitre.org/versions/v8/techniques/T1588/004/) \n ]). The SSL certificate was \u201cDomain Control Validated,\u201d a weak security verification level that does not require validation of the owner\u2019s identity or the actual business\u2019s existence.\n \n\n\n#### **Union Crypto Trader Application Analysis**\n\n\n#### ***Windows Program***\n\n\n\n The Windows version of the malicious cryptocurrency application is a Windows executable (\n `.exe` \n ) (\n *User Execution: Malicious File* \n \\[\n [T1204\\.002](https://attack.mitre.org/versions/v8/techniques/T1204/002) \n ]), which acts as an installer that extracts a temporary MSI Installer.\n \n\n\n\n The Windows program executes the following actions.\n \n\n\n* Extracts\n `UnionCryptoTrader.msi` \n to folder\n `C:\\Users\\<username>\\AppData\\Local\\Temp\\{82E4B719-90F74BD1-9CF1-56CD777E0C42}`\n* Runs\n `UnionCryptoUpdater.msi` \n\t+ Installs\n\t `UnionCryptoTrader.exe` \n\t in folder\n\t `C:\\Program Files\\UnionCryptoTrader`\n\t+ Installs\n\t `UnionCryptoUpdater.exe in folder C:\\Users\\<username>\\AppData\\Local\\UnionCryptoTrader`\n* Deletes\n `UnionCryptoUpdater.msi`\n* Runs\n `UnionCryptoUpdater.exe`\n\n\n\n The program\n `UnionCryptoTrader.exe` \n loads a legitimate\\-looking cryptocurrency arbitrage application\u2014defined as \u201cthe simultaneous buying and selling of securities, currency, or commodities in different markets or in derivative forms to take advantage of differing prices for the same asset\u201d\u2014which exhibits no signs of malicious activity. This application is very similar to another cryptocurrency arbitrage application known as Blackbird Bitcoin Arbitrage.\\[\n [8](https://github.com/butor/blackbird) \n ]\n \n\n\n\n The program\n `UnionCryptoUpdater.exe` \n first installs itself as a service (\n *Create or Modify System Process: Windows Service* \n \\[\n [T1543\\.003](https://attack.mitre.org/versions/v8/techniques/T1543/003) \n ]), which will automatically start when any user logs on (\n *Boot or Logon Autostart Execution* \n \\[\n [T1547](https://attack.mitre.org/versions/v8/techniques/T1547/) \n ]). The service is installed with a description stating it \u201cAutomatically installs updates for Union Crypto Trader.\u201d When launched, it collects the victim\u2019s host information (\n *System Owner/User Discovery* \n \\[\n [T1033](https://attack.mitre.org/versions/v8/techniques/T1033) \n ]), combines the information in a string that is MD5 hashed and stored in the\n `auth_signature` \n variable before exfiltration, and sends it to a C2 website (\n *Exfiltration Over C2 Channel* \n \\[\n [T1041](https://attack.mitre.org/versions/v8/techniques/T1041) \n ]).\n \n\n\n#### ***macOS X Program***\n\n\n\n The macOS version of the malicious application is a DMG Installer. The installer looks legitimate and has very similar functionality to the Windows version, but it does not have a digital certificate and will warn the user of that before installation. The installer executes the following actions.\n \n\n\n* Installs\n `UnionCryptoTrader` \n in folder\n `/Applications/UnionCryptoTrader.app/Contents/MacOS/`\n* Installs\n `.unioncryptoupdater` \n in folder\n `/Applications/UnionCryptoTrader.app/Contents/Resources/` \n\t+ Note: the leading \u201c.\u201d makes it unlisted in the Finder app or default Terminal directory listing\n* Executes a\n `postinstall` \n script\n\t+ Moves\n\t `.vip.unioncrypto.plist` \n\t to folder\n\t `LaunchDaemons`\n\t+ Changes the file permissions on the\n\t `plist` \n\t to Root\n\t+ Runs\n\t `unioncryptoupdater`\n\t+ Moves\n\t `.unioncryptoupdater` \n\t to folder\n\t `/Library/UnionCrypto/unioncryptoupdater`\n\t+ Makes\n\t `.unioncryptoupdater` \n\t executable\n\n\n\n The\n `UnionCryptoTrader` \n program loads a legitimate\\-looking cryptocurrency arbitrage application, which exhibits no signs of malicious activity. The application is very similar to another cryptocurrency arbitrage application known as Blackbird Bitcoin Arbitrage.\n \n\n\n\n The\n `.unioncryptoupdater` \n program is signed ad\\-hoc, meaning it is not signed with a valid code\\-signing identity. When launched, it collects the victim\u2019s host information (\n *System Owner/User Discovery* \n \\[\n [T1033](https://attack.mitre.org/versions/v8/techniques/T1033) \n ]), combines the information in a string that is MD5 hashed and stored in the\n `auth_signature` \n variable before exfiltration, and sends it to a C2 website (\n *Exfiltration Over C2 Channel* \n \\[\n [T1041](https://attack.mitre.org/versions/v8/techniques/T1041) \n ]).\n \n\n\n\n The\n `postinstall` \n script has similar functionality to the one used by JMT Trading (\n *Command and Scripting Interpreter: Unix Shell* \n \\[\n [T1059\\.004](https://attack.mitre.org/versions/v8/techniques/T1059/004/) \n ]). It moves the property list (\n `plist` \n ) file\n `.vip.unioncrypto.plist` \n from the Installer package to the\n `LaunchDaemons` \n folder (\n *Scheduled Task/Job: Launchd* \n \\[\n [T1053\\.004](https://attack.mitre.org/versions/v8/techniques/T1053/004/) \n ]), but also changes the file permissions on the\n `plist` \n file to Root. Once in the folder, this property list (\n `plist` \n ) file will launch the\n `.unioncryptoupdater` \n on system load as Root for every user. The\n `postinstall` \n script moves the\n `.unioncryptoupdater` \n program to a new location\n `/Library/UnionCrypto/unioncryptoupdater` \n and makes it executable. Because the\n `LaunchDaemon` \n will not run automatically after the\n `plist` \n file is moved, the\n `postinstall` \n script launches\n `.unioncryptoupdater` \n and runs it in the background (\n *Create or Modify System* \n*Process: Launch Daemon* \n \\[\n [T1543\\.004](https://attack.mitre.org/versions/v8/techniques/T1543/004/) \n ]).\n \n\n\n#### ***Payload***\n\n\n\n The payload for the Windows malware is a Windows Dynamic\\-Link\\-Library.\n `UnionCryptoUpdater.exe` \n does not immediately download the stage 2 malware but instead downloads it after a time specified by the C2 server. This delay could be implemented to prevent researchers from directly obtaining the stage 2 malware.\n \n\n\n\n The macOS X malware\u2019s payload could not be downloaded, as the C2 server is no longer accessible. Additionally, none of the open\\-source reporting for this sample contained copies of the macOS X payload. The macOS X payload is likely similar in functionality to the Windows stage 2 detailed above.\n \n\n\n\n For more details on AppleJeus Version 3: Union Crypto, see\n [MAR\\-10322463\\-3\\.v1](https://us-cert.gov/ncas/analysis-reports/ar21-048c) \n .\n \n\n\n### Commonalities between Celas Trade Pro, JMT Trading, and Union Crypto\n\n\n#### **Hardcoded Values**\n\n\n\n In each AppleJeus version, there are hardcoded values used for encryption or to create a signature when combined with the time (table 1\\).\n \n\n\n\n*Table 1: AppleJeus hardcoded values and uses* \n\n\n\n\n\n| **AppleJeus Version** | **Value** | **Use** |\n| --- | --- | --- |\n| 1: Celas Trade Pro | Moz\\&Wie;\\#t/6T!2y | XOR encryption to send data |\n| 1: Celas Trade Pro | W29ab@ad%Df324V$Yd | RC4 decryption |\n| 2: JMT Trader Windows | X,%\\`PMk\\-\\-Jj8s\\+6\\=15:20:11 | XOR encryption to send data |\n| 2: JMT Trader OSX | X,%\\`PMk\\-\\-Jj8s\\+6\\=\\\\x02 | XOR encryption to send data |\n| 3: Union Crypto Trader | 12GWAPCT1F0I1S14 | Combined with time for signature |\n\n\n\n\n\n\n\n The Union Crypto Trader and Celas LLC (XOR) values are 16 bytes in length. For JMT Trader, the first 16 bytes of the Windows and macOS X values are identical, and the additional bytes are in a time format for the Windows sample. The structure of a 16\\-byte value combined with the time is also used in Union Crypto Trader to create the\n `auth_signature` \n .\n \n\n\n\n As mentioned, FALLCHILL was reported as the final payload for Celas Trade Pro. All FALLCHILL samples use 16\\-byte hardcoded RC4 keys for sending data, similar to the 16\\-byte keys in the AppleJeus samples.\n \n\n\n#### **Open\\-Source Cryptocurrency Applications**\n\n\n\n All three AppleJeus samples are bundled with modified copies of legitimate cryptocurrency applications and can be used as originally designed to trade cryptocurrency. Both Celas LLC and JMT Trader modified the same cryptocurrency application, Q.T. Bitcoin Trader; Union Crypto Trader modified the Blackbird Bitcoin Arbitrage application.\n \n\n\n#### **Postinstall Scripts, Property List Files, and LaunchDaemons**\n\n\n\n The macOS X samples of all three AppleJeus versions contain\n `postinstall` \n scripts with similar logic. The Celas LLC\n `postinstall` \n script only moves the\n `plist` \n file to a new location and launches\n `Updater` \n with the\n `CheckUpdate` \n parameter in the background. The JMT Trader and Union Crypto Trader also perform these actions and have identical functionality. The additional actions performed by both\n `postinstall` \n scripts are to change the file permissions on the\n `plist` \n , make a new directory in the\n `/Library` \n folder, move\n `CrashReporter` \n or\n `UnionCryptoUpdater` \n to the newly created folder, and make them executable.\n \n\n\n\n The\n `plist` \n files for all three AppleJeus files have identical functionality. They only differ in the files\u2019 names and one default comment that was not removed from the Celas LLC\n `plist` \n . As the logic and functionality of the postinstall scripts and plist files are almost identical, the\n `LaunchDaemons` \n created also function the same.\n \n\n\n\n They will all launch the secondary executable as Root on system load for every user.\n \n\n\n### AppleJeus Version 4: Kupay Wallet\n\n\n#### **Introduction and Infrastructure**\n\n\n\n On March 13, 2020, a new version of the AppleJeus malware was identified. The malware was marketed and distributed by a legitimate\\-looking company, called Kupay Wallet, on their website\n `kupaywallet[.]com` \n (\n *Acquire Infrastructure: Domain* \n \\[\n [T1583\\.001](https://attack.mitre.org/versions/v8/techniques/T1583/001/) \n ]).\n \n\n\n\n The domain\n `www.kupaywallet[.]com` \n resolved to IP address\n `104.200.67[.]96` \n from March 20, 2020, to January 16, 2021\\. CrownCloud US, LLC controlled the IP address (autonomous system number \\[ASN] 8100\\), and is located in New York, NY.\n \n\n\n\n The domain\n `www.kupaywallet[.]com` \n had a valid Sectigo SSL certificate (\n *Obtain Capabilities: Digital Certificates* \n \\[\n [T1588\\.004](https://attack.mitre.org/versions/v8/techniques/T1588/004/) \n ]). The SSL certificate was \u201cDomain Control Validated,\u201d a weak security verification level that does not require validation of the owner\u2019s identity or the actual business\u2019s existence.\n \n\n\n#### **Kupay Wallet Application Analysis**\n\n\n#### *Windows Program*\n\n\n\n The Windows version of the malicious cryptocurrency application is an MSI Installer. The MSI executes the following actions.\n \n\n\n* Installs\n `Kupay.exe` \n in folder\n `C:\\Program Files (x86)\\Kupay`\n* Installs\n `KupayUpgrade.exe` \n in folder\n `C:\\Users\\<username>\\AppData\\Roaming\\KupaySupport`\n* Runs\n `KupayUpgrade.exe`\n\n\n\n The program\n `Kupay.exe` \n loads a legitimate\\-looking cryptocurrency wallet platform, which exhibits no signs of malicious activity and is very similar to an open\\-source platform known as Copay, distributed by Atlanta\\-based company BitPay.\n \n\n\n\n The program\n `KupayUpgrade.exe` \n first installs itself as a service (\n *Create or Modify System Process:* \n*Windows Service* \n \\[\n [T1543\\.003](https://attack.mitre.org/versions/v8/techniques/T1543/003) \n ]), which will automatically start when any user logs on (\n *Boot or Logon* \n*Autostart Execution* \n \\[\n [T1547](https://attack.mitre.org/versions/v8/techniques/T1547/) \n ]). The service is installed with a description stating it is an \u201cAutomatic Kupay Upgrade.\u201d When launched, it collects the victim\u2019s host information (\n *System Owner/User Discovery* \n \\[\n [T1033](https://attack.mitre.org/versions/v8/techniques/T1033) \n ]), combines the information in strings before exfiltration, and sends it to a C2 website (\n *Exfiltration Over C2* \n*Channel* \n \\[\n [T1041](https://attack.mitre.org/versions/v8/techniques/T1041) \n ]).\n \n\n\n#### ***macOS X Program***\n\n\n\n The macOS version of the malicious application is a DMG Installer. The installer looks legitimate and has very similar functionality to the Windows version, but it does not have a digital certificate and will warn the user of that before installation. The installer executes the following actions.\n \n\n\n* Installs\n `Kupay` \n in folder\n `/Applications/Kupay.app/Contents/MacOS/`\n* Installs\n `kupay_upgrade` \n in folder\n `/Applications/Kupay.app/Contents/MacOS/`\n* Executes a\n `postinstall` \n script\n\t+ Creates\n\t `KupayDaemon` \n\t folder in\n\t `/Library/Application Support` \n\t folder\n\t+ Moves\n\t `kupay_upgrade` \n\t to the new folder\n\t+ Moves\n\t `com.kupay.pkg.wallet.plist` \n\t to folder\n\t `/Library/LaunchDaemons/`\n\t+ Runs the command\n\t `launchctl load` \n\t to load the\n\t `plist` \n\t without a restart\n\t+ Runs\n\t `kupay_upgrade` \n\t in the background\n\n\n\n`Kupay` \n is likely a copy of an open\\-source cryptocurrency wallet application, loads a legitimate\\-looking wallet program (fully functional), and its functionality is identical to the Windows\n `Kupay.exe` \n program.\n \n\n\n\n The\n `kupay_upgrade` \n program calls its function\n `CheckUpdate` \n (which contains most of the logic functionality of the malware) and sends a\n `POST` \n to the C2 server with a connection named \u201cKupay Wallet 9\\.0\\.1 (Check Update Osx)\u201d (\n *Application Layer Protocol: Web Protocols* \n \\[\n [T1071\\.001](https://attack.mitre.org/versions/v8/techniques/T1071/001) \n ]). If the C2 server returns a file, it is decoded and written to the victim\u2019s folder\n `/private/tmp/kupay_update` \n with permissions set by the command\n `chmod 700` \n (only the user can read, write, and execute) (\n *Command and Scripting Interpreter* \n \\[\n [T1059](https://attack.mitre.org/versions/v8/techniques/T1059/) \n ]). Stage 2 is then launched, and the malware,\n `kupay_upgrade` \n , returns to sleeping and checking in with the C2 server at predetermined intervals (\n *Application Layer Protocol: Web Protocols* \n \\[\n [T1071\\.001](https://attack.mitre.org/versions/v8/techniques/T1071/001) \n ]).\n \n\n\n\n The\n `postinstall` \n script has similar functionality to other AppleJeus scripts (\n *Command and Scripting Interpreter: Unix Shell* \n \\[\n [T1059\\.004](https://attack.mitre.org/versions/v8/techniques/T1059/004/) \n ]). It creates the\n `KupayDaemon` \n folder in\n `/Library/Application` \n Support folder and then moves\n `kupay_upgrade` \n to the new folder. It moves the property list (\n `plist` \n ) file\n `com.kupay.pkg.wallet.plist` \n from the Installer package to the\n `/Library/LaunchDaemons/` \n folder (\n *Scheduled Task/Job: Launchd* \n \\[\n [T1053\\.004](https://attack.mitre.org/versions/v8/techniques/T1053/004/) \n ]). The script runs the command\n `launchctl load` \n to load the\n `plist` \n without a restart (\n *Command and Scripting Interpreter* \n \\[\n [T1059](https://attack.mitre.org/versions/v8/techniques/T1059/) \n ]). But, since the LaunchDaemon will not run automatically after the\n `plist` \n file is moved, the\n `postinstall` \n script launches\n `kupay_upgrade` \n and runs it in the background (\n *Create or Modify System Process: Launch Daemon* \n \\[\n [T1543\\.004](https://attack.mitre.org/versions/v8/techniques/T1543/004/) \n ]).\n \n\n\n#### ***Payload***\n\n\n\n The Windows malware\u2019s payload could not be downloaded since the C2 server is no longer accessible. Additionally, none of the open\\-source reporting for this sample contained copies of the payload. The Windows payload is likely similar in functionality to the macOS X stage 2 detailed below.\n \n\n\n\n The stage 2 payload for the macOS X malware was decoded and analyzed. The stage 2 malware has a variety of functionalities. Most importantly, it checks in with a C2 and, after connecting to the C2, can send or receive a payload, read and write files, execute commands via the terminal, etc.\n \n\n\n\n For more details on AppleJeus Version 4: Kupay Wallet, see\n [MAR\\-10322463\\-4\\.v1](https://us-cert.gov/ncas/analysis-reports/ar21-048d) \n .\n \n\n\n### AppleJeus Version 5: CoinGoTrade\n\n\n#### **Introduction and Infrastructure**\n\n\n\n In early 2020, another version of the AppleJeus malware was identified. This time the malware was marketed and distributed by a legitimate\\-looking company called CoinGoTrade on their website\n `coingotrade[.]com` \n (\n *Acquire Infrastructure: Domain* \n \\[\n [T1583\\.001](https://attack.mitre.org/versions/v8/techniques/T1583/001/) \n ]).\n \n\n\n\n The domain\n `CoinGoTrade[.]com` \n resolved to IP address\n `198.54.114[.]175` \n from February 28, 2020, to January 23, 2021\\. The IP address is controlled by NameCheap Inc. (ASN 22612\\) and is located in Atlanta, GA. This IP address is in the same ASN for\n `Dorusio[.]com` \n and\n `Ants2Whale[.]com` \n .\n \n\n\n\n The domain\n `CoinGoTrade[.]com` \n had a valid Sectigo SSL certificate (\n *Obtain Capabilities: Digital Certificates* \n \\[\n [T1588\\.004](https://attack.mitre.org/versions/v8/techniques/T1588/004/) \n ]). The SSL certificate was \u201cDomain Control Validated,\u201d a weak security verification level that does not require validation of the owner\u2019s identity or the actual business\u2019s existence.\n \n\n\n#### **CoinGoTrade Application Analysis**\n\n\n#### ***Windows Program***\n\n\n\n The Windows version of the malicious application is an MSI Installer. The installer appears to be legitimate and will execute the following actions.\n \n\n\n* Installs\n `CoinGoTrade.exe` \n in folder\n `C:\\Program Files (x86)\\CoinGoTrade`\n* Installs\n `CoinGoTradeUpdate.exe` \n in folder\n `C:\\Users\\<username>\\AppData\\Roaming\\CoinGoTradeSupport`\n* Runs\n `CoinGoTradeUpdate.exe`\n\n\n\n`CoinGoTrade.exe` \n loads a legitimate\\-looking cryptocurrency wallet platform with no signs of malicious activity and is a copy of an open\\-source cryptocurrency application.\n \n\n\n\n`CoinGoTradeUpdate.exe` \n first installs itself as a service (\n *Create or Modify System Process: Windows Service* \n \\[\n [T1543\\.003](https://attack.mitre.org/versions/v8/techniques/T1543/003) \n ]), which will automatically start when any user logs on (\n *Boot or Logon Autostart Execution* \n \\[\n [T1547](https://attack.mitre.org/versions/v8/techniques/T1547/) \n ]). The service is installed with a description stating it is an \u201cAutomatic CoinGoTrade Upgrade.\u201d When launched, it collects the victim\u2019s host information (\n *System Owner/User Discovery* \n \\[\n [T1033](https://attack.mitre.org/versions/v8/techniques/T1033) \n ]), combines the information in strings before exfiltration, and sends it to a C2 website (\n *Exfiltration Over C2* \n*Channel* \n \\[\n [T1041](https://attack.mitre.org/versions/v8/techniques/T1041) \n ]).\n \n\n\n#### ***macOS X Program***\n\n\n\n The macOS version of the malicious application is a DMG Installer. The installer looks legitimate and has very similar functionality to the Windows version, but it does not have a digital certificate and will warn the user of that before installation. The installer executes the following actions.\n \n\n\n* Installs\n `CoinGoTrade` \n in folder\n `/Applications/CoinGoTrade.app/Contents/MacOS/`\n* Installs\n `CoinGoTradeUpgradeDaemon` \n in folder\n `/Applications/CoinGoTrade.app/Contents/MacOS/`\n* Executes a\n `postinstall` \n script\n\t+ Creates\n\t `CoinGoTradeService` \n\t folder in\n\t `/Library/Application Support` \n\t folder\n\t+ Moves\n\t `CoinGoTradeUpgradeDaemon` \n\t to the new folder\n\t+ Moves\n\t `com.coingotrade.pkg.product.plist` \n\t to folder\n\t `/Library/LaunchDaemons/`\n\t+ Runs\n\t `CoinGoTradeUpgradeDaemon` \n\t in the background\n\n\n\n The\n `CoinGoTrade` \n program is likely a copy of an open\\-source cryptocurrency wallet application and loads a legitimate\\-looking, fully functional wallet program).\n \n\n\n\n The\n `CoinGoTradeUpgradeDaemon` \n program calls its function\n `CheckUpdate` \n (which contains most of the logic functionality of the malware) and sends a\n `POST` \n to the C2 server with a connection named \u201cCoinGoTrade 1\\.0 (Check Update Osx)\u201d (\n *Application Layer Protocol: Web Protocols* \n \\[\n [T1071\\.001]](https://attack.mitre.org/versions/v8/techniques/T1071/001) \n ). If the C2 server returns a file, it is decoded and written to the victim\u2019s folder\n `/private/tmp/updatecoingotrade` \n with permissions set by the command\n `chmod 700` \n (only the user can read, write, and execute) (\n *Command and* \n*Scripting Interpreter* \n \\[\n [T1059](https://attack.mitre.org/versions/v8/techniques/T1059/) \n ]). Stage 2 is then launched, and the malware,\n `CoinGoTradeUpgradeDaemon` \n , returns to sleeping and checking in with the C2 server at predetermined intervals (\n *Application Layer Protocol: Web Protocols* \n \\[\n [T1071\\.001](https://attack.mitre.org/versions/v8/techniques/T1071/001) \n ]).\n \n\n\n\n The\n `postinstall` \n script has similar functionality to the other scripts (\n *Command and Scripting Interpreter: Unix Shell* \n \\[\n [T1059\\.004](https://attack.mitre.org/versions/v8/techniques/T1059/004/) \n ]) and installs\n `CoinGoTrade` \n and\n `CoinGoTradeUpgradeDaemon` \n in folder\n `/Applications/CoinGoTrade.app/Contents/MacOS/` \n . It moves the property list (plist) file\n `com.coingotrade.pkg.product.plist` \n to the\n `/Library/LaunchDaemons/` \n folder (\n *Scheduled Task/Job: Launchd* \n \\[\n [T1053\\.004](https://attack.mitre.org/versions/v8/techniques/T1053/004/) \n ]). Because the\n `LaunchDaemon` \n will not run automatically after the\n `plist` \n file is moved, the\n `postinstall` \n script launches\n `CoinGoTradeUpgradeDaemon` \n and runs it in the background (\n *Create or Modify* \n*System Process: Launch Daemon* \n \\[\n [T1543\\.004](https://attack.mitre.org/versions/v8/techniques/T1543/004/) \n ]).\n \n\n\n#### ***Payload***\n\n\n\n The Windows malware\u2019s payload could not be downloaded because the C2 server is no longer accessible. Additionally, none of the open\\-source reporting for this sample contained copies of the payload. The Windows payload is likely similar in functionality to the macOS X stage 2 detailed below.\n \n\n\n\n The stage 2 payload for the macOS X malware was no longer available from the specified download URL. Still, a file was submitted to VirusTotal by the same user on the same date as the macOS X\n `CoinGoTradeUpgradeDaemon` \n . These clues suggest that the submitted file may be related to the macOS X version of the malware and the downloaded payload.\n \n\n\n\n The file\n `prtspool` \n is a 64\\-bit Mach\\-O executable with a large variety of features that have all been confirmed as functionality. The file has three C2 URLs hardcoded into the file and communicates to these with HTTP POST multipart\\-form data boundary string. Like other HIDDEN COBRA malware,\n `prtspool` \n uses format strings to store data collected about the system and sends it to the C2s.\n \n\n\n\n For more details on AppleJeus Version 5: CoinGoTrade, see\n [MAR\\-10322463\\-5\\.v1](https://us-cert.gov/ncas/analysis-reports/ar21-048e) \n .\n \n\n\n### AppleJeus Version 6: Dorusio\n\n\n#### **Introduction and Infrastructure**\n\n\n\n In March 2020, an additional version of the AppleJeus malware was identified. This time the malware was marketed and distributed by a legitimate\\-looking company called Dorusio on their website,\n `dorusio[.]com` \n (\n *Acquire Infrastructure: Domain* \n \\[\n [T1583\\.001](https://attack.mitre.org/versions/v8/techniques/T1583/001/) \n ]). Researchers collected samples for Windows and macOS X versions of the Dorusio Wallet (\n *Develop Capabilities: Malware* \n \\[\n [T1587\\.001](https://attack.mitre.org/versions/v8/techniques/T1587/001/) \n ]). As of at least early 2020, the actual download links result in\n `404` \n errors. The download page has release notes with version revisions claiming to start with version 1\\.0\\.0, released on April 15, 2019\\.\n \n\n\n\n The domain dorusio\\[.]com resolved to IP address\n `198.54.115[.]51` \n from March 30, 2020 to January 23, 2021\\. The IP address is controlled by NameCheap Inc. (ASN 22612\\) and is located in Atlanta, GA. This IP address is in the same ASN for\n `CoinGoTrade[.]com` \n and\n `Ants2Whale[.]com.` \n\n\n\n\n The domain\n `dorusio[.]com` \n had a valid Sectigo SSL certificate (\n *Obtain Capabilities: Digital Certificates* \n \\[\n [T1588\\.004](https://attack.mitre.org/versions/v8/techniques/T1588/004/) \n ]). The SSL certificate was \u201cDomain Control Validated,\u201d a weak security verification level that does not require validation of the owner\u2019s identity or the actual business\u2019s existence.\n \n\n\n#### **Dorusio Application Analysis**\n\n\n#### ***Windows Program***\n\n\n\n The Windows version of the malicious application is an MSI Installer. The installer appears to be legitimate and will install the following two programs.\n \n\n\n* Installs\n `Dorusio.exe` \n in folder\n `C:\\Program Files (x86)\\Dorusio`\n* Installs\n `DorusioUpgrade.exe` \n in folder\n `C:\\Users\\<username>\\AppData\\Roaming\\DorusioSupport`\n* Runs\n `DorusioUpgrade.exe`\n\n\n\n The program,\n `Dorusio.exe` \n , loads a legitimate\\-looking cryptocurrency wallet platform with no signs of malicious activity and is a copy of an open\\-source cryptocurrency application.\n \n\n\n\n The program\n `DorusioUpgrade.exe` \n first installs itself as a service (\n *Create or Modify System Process:* \n*Windows Service* \n \\[\n [T1543\\.003](https://attack.mitre.org/versions/v8/techniques/T1543/003) \n ]), which will automatically start when any user logs on (\n *Boot or Logon Autostart Execution* \n \\[\n [T1547](https://attack.mitre.org/versions/v8/techniques/T1547/) \n ]). The service is installed with a description stating it \u201cAutomatic Dorusio Upgrade.\u201d When launched, it collects the victim\u2019s host information (\n *System Owner/User Discovery* \n \\[\n [T1033](https://attack.mitre.org/versions/v8/techniques/T1033) \n ]), combines the information in strings before exfiltration, and sends it to a C2 website (\n *Exfiltration Over C2 Channel* \n \\[\n [T1041](https://attack.mitre.org/versions/v8/techniques/T1041) \n ]).\n \n\n\n#### ***macOS X Program***\n\n\n\n The macOS version of the malicious application is a DMG Installer. The installer looks legitimate and has very similar functionality to the Windows version, but it does not have a digital certificate and will warn the user of that before installation. The installer executes the following actions.\n \n\n\n* Installs\n `Dorusio` \n in folder\n `/Applications/Dorusio.app/Contents/MacOS/`\n* Installs\n `Dorusio_upgrade` \n in folder\n `/Applications/Dorusio.app/Contents/MacOS/`\n* Executes a\n `postinstall` \n script\n\t+ Creates\n\t `DorusioDaemon` \n\t folder in\n\t `/Library/Application Support` \n\t folder\n\t+ Moves\n\t `Dorusio_upgrade` \n\t to the new folder\n\t+ Moves\n\t `com.dorusio.pkg.wallet.plist` \n\t to folder\n\t `/Library/LaunchDaemons/`\n\t+ Runs\n\t `Dorusio_upgrade` \n\t in the background\n\n\n\n The\n `Dorusio` \n program is likely a copy of an open\\-source cryptocurrency wallet application and loads a legitimate\\-looking wallet program (fully functional). Aside from the Dorusio logo and two new services, the wallet appears to be the same as the Kupay Wallet. This application seems to be a modification of the open\\-source cryptocurrency wallet Copay distributed by Atlanta\\-based company BitPay.\n \n\n\n\n The\n `Dorusio_upgrade` \n program calls its function\n `CheckUpdate` \n (which contains most of the logic functionality of the malware) and sends a\n `POST` \n to the C2 server with a connection named \u201c\n *Dorusio Wallet 2\\.1\\.0 (Check Update Osx)* \n \u201d (\n *Application Layer Protocol: Web Protocols* \n \\[\n [T1071\\.001]](https://attack.mitre.org/versions/v8/techniques/T1071/001) \n ). If the C2 server returns a file, it is decoded and written to the victim\u2019s folder\n `/private/tmp/Dorusio_update` \n with permissions set by the command\n `chmod 700` \n (only the user can read, write, and execute) (\n *Command and Scripting Interpreter* \n \\[\n [T1059](https://attack.mitre.org/versions/v8/techniques/T1059/) \n ]). Stage 2 is then launched, and the malware,\n `Dorusio_upgrade` \n , returns to sleeping and checking in with the C2 server at predetermined intervals (\n *Application Layer Protocol: Web Protocols* \n \\[\n [T1071\\.001](https://attack.mitre.org/versions/v8/techniques/T1071/001) \n ]).\n \n\n\n\n The\n `postinstall` \n script has similar functionality to other AppleJeus scripts (\n *Command and Scripting Interpreter: Unix Shell* \n \\[\n [T1059\\.004](https://attack.mitre.org/versions/v8/techniques/T1059/004/) \n ]). It creates the\n `DorusioDaemon` \n folder in\n `/Library/Application Support` \n folder and then moves\n `Dorusio_upgrade` \n to the new folder. It moves the property list (\n `plist` \n ) file\n `com.dorusio.pkg.wallet.plist` \n from the Installer package to the\n `/Library/LaunchDaemons/` \n folder (\n *Scheduled Task/Job: Launchd* \n \\[\n [T1053\\.004]](https://attack.mitre.org/versions/v8/techniques/T1053/004/) \n ). Because the\n `LaunchDaemon` \n will not run automatically after the\n `plist` \n file is moved, the\n `postinstall` \n script launches\n `Dorusio_upgrade` \n and runs it in the background (\n *Create or Modify System Process: Launch Daemon* \n \\[\n [T1543\\.004](https://attack.mitre.org/versions/v8/techniques/T1543/004/) \n ]).\n \n\n\n#### ***Payload***\n\n\n\n Neither the payload for the Windows nor macOS X malware could be downloaded; the C2 server is no longer accessible. The payloads are likely similar in functionality to the macOS X stage 2 from CoinGoTrade and Kupay Wallet, or the Windows stage 2 from Union Crypto.\n \n\n\n\n For more details on AppleJeus Version 6: Dorusio, see\n [MAR\\-10322463\\-6\\.v1](https://us-cert.gov/ncas/analysis-reports/ar21-048f) \n .\n \n\n\n### AppleJeus 4, 5, and 6 Installation Conflictions\n\n\n\n If a user attempts to install the Kupay Wallet, CoinGoTrade, and Dorusio applications on the same system, they will encounter installation conflicts.\n \n\n\n\n If Kupay Wallet is already installed on a system and the user tries to install CoinGoTrade or Dorusio:\n \n\n\n* Pop\\-up windows appear, stating a more recent version of the program is already installed.\n\n\n\n If CoinGoTrade is already installed on a system and the user attempts to install Kupay Wallet:\n \n\n\n* `Kupay.exe` \n will be installed in the\n `C:\\Program Files (x86)\\CoinGoTrade\\ folder` \n .\n* All\n `CoinGoTrade` \n files will be deleted.\n* The folders and files contained in the\n `C:\\Users\\<username>\\AppData\\Roaming\\CoinGoTradeSupport` \n will remain installed.\n* `KupayUpgrade.exe` \n is installed in the new folder\n `C:\\Users\\<username>\\AppData\\Roaming\\KupaySupport` \n .\n\n\n\n If Dorusio is already installed on a system and the user attempts to install Kupay Wallet:\n \n\n\n* `Kupay.exe` \n will be installed in the\n `C:\\Program Files (x86)\\Dorusio\\ folder` \n .\n* All\n `Dorusio.exe` \n files will be deleted.\n* The folders and files contained in\n `C:\\Users\\<username>\\AppData\\Roaming\\DorusioSupport` \n will remain installed.\n* `KupayUpgrade.exe` \n is installed in the new folder\n `C:\\Users\\<username>\\AppData\\Roaming\\KupaySupport` \n .\n\n\n### AppleJeus Version 7: Ants2Whale\n\n\n#### **Introduction and Infrastructure**\n\n\n\n In late 2020, a new version of AppleJeus was identified called \u201cAnts2Whale.\u201d The site for this version of AppleJeus is\n `ants2whale[.]com` \n (\n *Acquire Infrastructure: Domain* \n \\[\n [T1583\\.001](https://attack.mitre.org/versions/v8/techniques/T1583/001/) \n ]). The website shows a legitimate\\-looking cryptocurrency company and application. The website contains multiple spelling and grammar mistakes indicating the creator may not have English as a first language. The website states that to download Ants2Whale, a user must contact the administrator, as their product is a \u201cpremium package\u201d (\n *Develop Capabilities: Malware* \n \\[\n [T1587\\.001](https://attack.mitre.org/versions/v8/techniques/T1587/001/) \n ]).\n \n\n\n\n The domain\n `ants2whale[.]com` \n resolved to IP address\n `198.54.114[.]237` \n from September 23, 2020, to January 22, 2021\\. The IP address is controlled by NameCheap, Inc. (ASN 22612\\) and is located in Atlanta, GA. This IP address is in the same ASN for\n `CoinGoTrade[.]com` \n and\n `Dorusio[.]com` \n .\n \n\n\n\n The domain\n `ants2whale[.]com` \n had a valid Sectigo SSL certificate (\n *Obtain Capabilities: Digital Certificates* \n \\[\n [T1588\\.004](https://attack.mitre.org/versions/v8/techniques/T1588/004/) \n ]). The SSL certificate was \u201cDomain Control Validated,\u201d a weak security verification level that does not require validation of the owner\u2019s identity or the actual business\u2019s existence.\n \n\n\n#### **Ants2Whale Application Analysis**\n\n\n#### ***Windows Program***\n\n\n\n As of late 2020, the Windows program was not available on VirusTotal. It is likely very similar to the macOS X version detailed below.\n \n\n\n#### ***macOS X Program***\n\n\n\n The macOS version of the malicious application is a DMG Installer. The installer looks legitimate and has very similar functionality to the Windows version, but it does not have a digital certificate and will warn the user of that before installation. The installer executes the following actions.\n \n\n\n* Installs\n `Ants2Whale` \n in folder\n `/Applications/Ants2whale.app/Contents/MacOS/Ants2whale`\n* Installs\n `Ants2WhaleHelper` \n in folder\n `/Library/Application Support/Ants2WhaleSupport/`\n* Executes a\n `postinstall` \n script\n\t+ Moves\n\t `com.Ants2whale.pkg.wallet.plist` \n\t to folder\n\t `/Library/LaunchDaemons/`\n\t+ Runs\n\t `Ants2WhaleHelper` \n\t in the background\n\n\n\n The\n `Ants2Whale` \n and\n `Ants2WhaleHelper` \n programs and the\n `postinstall` \n script function almost identically to previous versions of AppleJeus and will not be discussed in depth in this advisory.\n \n\n\n\n For more details on AppleJeus Version 7: Ants2Whale, see\n [MAR\\-10322463\\-7\\.v1](https://us-cert.gov/ncas/analysis-reports/ar21-048g) \n .\n \n\n\n### ATT\\&CK Profile\n\n\n\n Figure 2 and table 2 provide summaries of the MITRE ATT\\&CK techniques observed.\n \n\n\n\n![]()\n\n\n\n\n*Figure 2: MITRE ATT\\&CK enterprise techniques used by AppleJeus* \n\n\n\n\n\n\n\n\n*Table 2: MITRE ATT\\&CK techniques observed* \n\n\n\n\n\n| **Tactic Title** | **Technique ID** | **Technique Title** |\n| --- | --- | --- |\n| [Resource Development \\[TA0042]](https://attack.mitre.org/versions/v8/tactics/TA0042/) | T1583\\.001 | Acquire Infrastructure: Domain |\n| [Resource Development \\[TA0042]](https://attack.mitre.org/versions/v8/tactics/TA0042/) | T1583\\.006 | Acquire Infrastructure: Web Services |\n| [Resource Development \\[TA0042]](https://attack.mitre.org/versions/v8/tactics/TA0042/) | T1587\\.001 | Develop Capabilities: Malware |\n| [Resource Development \\[TA0042]](https://attack.mitre.org/versions/v8/tactics/TA0042/) | T1588\\.003 | Obtain Capabilities: Code Signing Certificates |\n| [Resource Development \\[TA0042]](https://attack.mitre.org/versions/v8/tactics/TA0042/) | T1588004 | Obtain Capabilities: Digital Certificates |\n| [Initial Access \\[TA0001]](https://attack.mitre.org/versions/v8/tactics/TA0001) | T1566\\.002 | Phishing: Spearphishing Link |\n| [Execution \\[TA0002]](https://attack.mitre.org/versions/v8/tactics/TA0002) | T1059 | Command and Scripting Interpreter |\n| [Execution \\[TA0002]](https://attack.mitre.org/versions/v8/tactics/TA0002) | T1059\\.004 | Command and Scripting Interpreter: Unix Shell |\n| [Execution \\[TA0002]](https://attack.mitre.org/versions/v8/tactics/TA0002) | T1204\\.002 | User Execution: Malicious File |\n| [Persistence \\[TA0003]](https://attack.mitre.org/versions/v8/tactics/TA0003) | T1053\\.004 | Scheduled Task/Job: Launchd |\n| [Persistence \\[TA0003]](https://attack.mitre.org/versions/v8/tactics/TA0003) | T1543\\.004 | Create or Modify System Process: Launch Daemon |\n| [Persistence \\[TA0003]](https://attack.mitre.org/versions/v8/tactics/TA0003) | T1547 | Boot or Logon Autostart Execution |\n| [Privilege Escalation \\[TA0004]](https://attack.mitre.org/versions/v8/tactics/TA0004) | T1053\\.005 | Scheduled Task/Job: Scheduled Task |\n| [Defense Evasion \\[TA0005]](https://attack.mitre.org/versions/v8/tactics/TA0005) | T1027 | Obfuscated Files or Information |\n| [Defense Evasion \\[TA0005]](https://attack.mitre.org/versions/v8/tactics/TA0005) | T1548 | Abuse Elevation Control Mechanism |\n| [Defense Evasion \\[TA0005]](https://attack.mitre.org/versions/v8/tactics/TA0005) | T1564\\.001 | Hide Artifacts: Hidden Files and Directories |\n| [Discovery \\[TA0007]](https://attack.mitre.org/versions/v8/tactics/TA0007) | T1033 | System Owner/User Discovery |\n| [Exfiltration \\[TA0010]](https://attack.mitre.org/versions/v8/tactics/TA0010) | T1041 | Exfiltration Over C2 Channel |\n| [Command and Control \\[TA0011]](https://attack.mitre.org/versions/v8/tactics/TA0011) | T1071\\.001 | Application Layer Protocol: Web Protocols |\n| [Command and Control \\[TA0011]](https://attack.mitre.org/versions/v8/tactics/TA0011) | T1573 | Encrypted Channel |\n| [Command and Control \\[TA0011]](https://attack.mitre.org/versions/v8/tactics/TA0011) | T1573\\.001 | Encrypted Channel: Symmetric Cryptography |\n\n\n\n### Mitigations\n\n\n\n### Compromise Mitigations\n\n\n\n Organizations that identify AppleJeus malware within their networks should take immediate action. Initial actions should include the following steps.\n \n\n\n* Contact the FBI, CISA, or Treasury immediately regarding any identified activity related to AppleJeus. (Refer to the Contact Information section below.)\n* Initiate your organization\u2019s incident response plan.\n* Generate new keys for wallets, and/or move to new wallets.\n* Introduce a two\\-factor authentication solution as an extra layer of verification.\n* Use hardware wallets, which keep the private keys in a separate, secured storage area.\n* To move funds out off a compromised wallet:\n\t+ Do not use the malware listed in this advisory to transfer funds, and\n\t+ Form all transactions offline and then broadcast them to the network all at once in a short online session, ideally prior to the attacker accessing them.\n* Remove impacted hosts from network.\n* Assume the threat actors have moved laterally within the network and downloaded additional malware.\n* Change all passwords to any accounts associated with impacted hosts.\n* Reimage impacted host(s).\n* Install anti\\-virus software to run daily deep scans of the host.\n* Ensure your anti\\-virus software is setup to download the latest signatures daily.\n* Install a Host Based Intrusion Detection (HIDS)\\-based software and keep it up to date.\n* Ensure all software and hardware is up to date, and all patches have been installed.\n* Ensure network\\-based firewall is installed and/or up to date.\n* Ensure the firewall\u2019s firmware is up to date.\n\n\n### Pro\\-Active Mitigations\n\n\n\n Consider the following recommendations for defense against AppleJeus malware and related activity.\n \n\n\n#### *Cryptocurrency Users*\n\n\n* Verify source of cryptocurrency\\-related applications.\n* Use multiple wallets for key storage, striking the appropriate risk balance between hot and cold storage.\n* Use custodial accounts with multi\\-factor authentication mechanisms for both user and device verification.\n* Patronize cryptocurrency service businesses that offer indemnity protections for lost or stolen cryptocurrency.\n* Consider having a dedicated device for cryptocurrency management.\n\n\n#### *Financial Service Companies*\n\n\n* Verify compliance with Federal Financial Institutions Examination Council (FFIEC) handbooks at\n [https://ithandbook.ffiec.gov](https://ithandbook.ffiec.gov/) \n , especially those related to information security.\n* Report suspicious cyber and financial activities. For more information on mandatory and voluntary reporting of cyber events via suspicious activity reports, see the Financial Crimes Enforcement Network (FinCEN) Advisory FIN\\-2016\\-A005: Advisory to Financial Institutions on Cyber\\- Events and Cyber\\-Enabled Crime at\n [https://www.fincen.gov/sites/default/files/advisory/2016\\-10\\-25/Cyber%20Threats%20Advisory%20\\-%20FINAL%20508\\_2\\.pdf](https://www.fincen.gov/sites/default/files/advisory/2016-10-25/Cyber%20Threats%20Advisory%20-%20FINAL%20508_2.pdf) \n and FinCEN\u2019s Section 314(b) Fact Sheet at\n <https://www.fincen.gov/sites/default/files/shared/314bfactsheet.pdf>\n .\n\n\n#### *Cryptocurrency Businesses*\n\n\n* Verify compliance with the Cryptocurrency Security Standard at\n <http://cryptoconsortium.github.io/CCSS/>\n .\n\n\n#### *All Organizations*\n\n\n* Incorporate IOCs identified in CISA\u2019s Malware Analysis Reports on\n [https://us\\-cert.cisa.gov/northkorea](https://us-cert.cisa.gov/northkorea) \n into intrusion detection systems and security alert systems to enable active blocking or reporting of suspected malicious activity.\n* See table 3 below, which provides a summary of preventative ATT\\&CK mitigations based on observed techniques.\n\n\n\n*Table 3: MITRE ATT\\&CK mitigations based on observed techniques* \n\n\n\n\n\n| **Mitigation** | **Description** |\n| --- | --- |\n| [User Training \\[M1017]](https://attack.mitre.org/versions/v8/mitigations/M1017) | Train users to identify social engineering techniques and spearphishing emails. |\n| [User Training \\[M1017]](https://attack.mitre.org/versions/v8/mitigations/M1017) | Provide users with the awareness of common phishing and spearphishing techniques and raise suspicion for potentially malicious events. |\n| [User Account Management \\[M1018]](https://attack.mitre.org/versions/v8/mitigations/M1018) | Limit privileges of user accounts and remediate Privilege Escalation vectors so only authorized administrators can create new Launch Daemons. |\n| [User Account Management \\[M1018]](https://attack.mitre.org/versions/v8/mitigations/M1018) | Limit privileges of user accounts and remediate Privilege Escalation vectors so only authorized administrators can create scheduled tasks on remote systems. |\n| [SSL/TLS Inspection \\[M1020]](https://attack.mitre.org/versions/v8/mitigations/M1020) | Use SSL/TLS inspection to see encrypted sessions\u2019 contents to look for network\\-based indicators of malware communication protocols. |\n| [Restrict Web\\-Based Content \\[M1021]](https://attack.mitre.org/versions/v8/mitigations/M1021) | Determine if certain websites that can be used for spearphishing are necessary for business operations and consider blocking access if the activity cannot be monitored well or poses a significant risk. |\n| [Restrict Web\\-Based Content \\[M1021]](https://attack.mitre.org/versions/v8/mitigations/M1021) | Block Script extensions to prevent the execution of scripts and HTA files that may commonly be used during the exploitation process. |\n| [Restrict Web\\-Based Content \\[M1021]](https://attack.mitre.org/versions/v8/mitigations/M1021) | Employ an adblocker to prevent malicious code served up through ads from executing. |\n| [Restrict File and Directory Permissions \\[M1022]](https://attack.mitre.org/versions/v8/mitigations/M1022) | Prevent all users from writing to the  `/Library/StartupItems`   directory to prevent any startup items from getting registered since  `StartupItems`   are deprecated. |\n| [Privileged Account Management \\[M1026]](https://attack.mitre.org/versions/v8/mitigations/M1026) | When PowerShell is necessary, restrict PowerShell execution policy to administrators. Be aware that there are methods of bypassing the PowerShell execution policy, depending on environment configuration. |\n| [Privileged Account Management \\[M1026]](https://attack.mitre.org/versions/v8/mitigations/M1026) | Configure the Increase Scheduling Priority option only to allow the Administrators group the rights to schedule a priority process. |\n| [Operating System Configuration \\[M1028]](https://attack.mitre.org/versions/v8/mitigations/M1028) | Configure settings for scheduled tasks to force tasks to run under the authenticated account\u2019s context instead of allowing them to run as SYSTEM. |\n| [Network Intrusion Prevention \\[M1031]](https://attack.mitre.org/versions/v8/mitigations/M1031) | Use network intrusion detection and prevention systems that use network signatures to identify traffic for specific adversary malware and mitigate activity at the network level. |\n| [Execution Prevention \\[M1038]](https://attack.mitre.org/versions/v8/mitigations/M1038) | Use application control tools where appropriate. |\n| [Execution Prevention \\[M1038]](https://attack.mitre.org/versions/v8/mitigations/M1038) | Use application control tools to prevent the running of executables masquerading as other files. |\n| [Behavior Prevention on Endpoint \\[M1040]](https://attack.mitre.org/versions/v8/mitigations/M1040) | Configure endpoint (if possible) to block some process injection types based on common sequences of behavior during the injection process. |\n| [Disable or Remove Feature or Program \\[M1042]](https://attack.mitre.org/versions/v8/mitigations/M1042) | Disable or remove any unnecessary or unused shells or interpreters. |\n| [Code Signing \\[M1045]](https://attack.mitre.org/versions/v8/mitigations/M1045) | Where possible, only permit the execution of signed scripts. |\n| [Audit \\[M1047]](https://attack.mitre.org/versions/v8/mitigations/M1047) | Audit logging for  `launchd`   events in macOS can be reviewed or centrally collected using multiple options, such as Syslog, OpenBSM, or OSquery. |\n| [Audit \\[M1047]](https://attack.mitre.org/versions/v8/mitigations/M1047) | Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for permission weaknesses in scheduled tasks that could be used to escalate privileges. |\n| [Antivirus/Antimalware \\[M1049]](Antivirus/Antimalware%20%5BM1049%5D) | Use an antivirus program to quarantine suspicious files automatically. |\n\n\n\n\n\n\n\n### Contact Information\n\n\n\n\n Recipients of this report are encouraged to contribute any additional information that they may have related to this threat.\n \n\n\n\n For any questions related to this report or to report an intrusion and request resources for incident response or technical assistance, please contact:\n \n\n\n* The FBI through the FBI Cyber Division (855\\-292\\-3937 or\n [CyWatch@fbi.gov](mailto:CyWatch@fbi.gov) \n ) or a\n [local field office](https://www.fbi.gov/contact-us/field-offices/field-offices) \n ,\n* CISA (888\\-282\\-0870 or\n [Central@cisa.dhs.gov](mailto:Central@cisa.dhs.gov) \n ), or\n* Treasury Office of Cybersecurity and Critical Infrastructure Protection (Treasury OCCIP) (202\\-622\\-3000 or\n [OCCIP\\-Coord@treasury.gov](mailto:OCCIP-Coord@treasury.gov) \n ).\n\n\n\n### References\n\n\n\n\n[\\[1] CISA Alert AA20\\-239A: FASTCash 2\\.0: North Korea's BeagleBoyz Robbing Banks](https://us-cert.cisa.gov/ncas/alerts/aa20-239a) \n\n\n[\\[2] Department of the Treasury Press Release: Treasury Sanctions Individuals Laundering Cryptocurrency for Lazarus Group](https://home.treasury.gov/news/press-releases/sm924) \n\n\n[\\[3] Department of Justice Press Release: Two Chinese Nationals Charged with Laundering Over $100 Million in Cryptocurrency From Exchange Hack](https://www.justice.gov/opa/pr/two-chinese-nationals-charged-laundering-over-100-million-cryptocurrency-exchange-hack) \n\n\n[\\[4] CISA Alert TA17\\-318A: HIDDEN COBRA \u2013 North Korean Remote Administration Tool: FALLCHILL](https://us-cert.cisa.gov/ncas/alerts/TA17-318A) \n\n\n[\\[5] CISA Alert TA17\\-318A: HIDDEN COBRA \u2013 North Korean Remote Administration Tool: FALLCHILL](https://us-cert.cisa.gov/ncas/alerts/TA17-318A) \n\n\n[\\[6] MITRE ATT\\&CK Software: FALLCHILL](https://attack.mitre.org/versions/v8/software/S0181/) \n\n\n[\\[7] SecureList: Operation AppleJeus Sequel](https://securelist.com/operation-applejeus-sequel/95596/) \n\n\n[\\[8] GitHub: Blackbird Bitcoin Arbitrage](https://github.com/butor/blackbird) \n\n\n### Revisions\n\n\n\n\n February 17, 2021: Initial Version\\|April 15, 2021: Updated MITRE ATT\\&CK technique from Command and Scripting Interpreter: AppleScript \\[T1059\\.002] to Command and Scripting Interpreter: Unix Shell \\[T1059\\.004].\n \n\n\n\n\n\n\n\n\n\n\n This product is provided subject to this\n [Notification](/notification \"Follow link\") \n and this\n [Privacy \\& Use](/privacy-policy \"Follow link\") \n policy.\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlease share your thoughts\n--------------------------\n\n\n\n We recently updated our anonymous\n [product survey](https://www.surveymonkey.com/r/CISA-cyber-survey?product=https://www.cisa.gov/news-events/cybersecurity-advisories/aa21-048a) \n ; we\u2019d welcome your feedback.\n \n\n\n\n\n\n\n\n\n\n\n\n\nRelated Advisories\n------------------\n\n\n\n\n\n\n\n\n\n\n Jul 11, 2024\n \n\n\n Cybersecurity Advisory \\| AA24\\-193A\n \n\n### [CISA Red Team\u2019s Operations Against a Federal Civilian Executive Branch Organization Highlights the Necessity of Defense\\-in\\-Depth](/news-events/cybersecurity-advisories/aa24-193a)\n\n\n\n\n\n\n\n\n\n\n\n Jul 08, 2024\n \n\n\n Cybersecurity Advisory \\| AA24\\-190A\n \n\n### [People\u2019s Republic of China (PRC) Ministry of State Security APT40 Tradecraft in Action](/news-events/cybersecurity-advisories/aa24-190a)\n\n\n\n\n\n\n\n\n\n\n\n May 10, 2024\n \n\n\n Cybersecurity Advisory \\| AA24\\-131A\n \n\n### [\\#StopRansomware: Black Basta](/news-events/cybersecurity-advisories/aa24-131a)\n\n\n\n\n\n\n\n\n\n\n\n Apr 18, 2024\n \n\n\n Cybersecurity Advisory \\| AA24\\-109A\n \n\n### [\\#StopRansomware: Akira Ransomware](/news-events/cybersecurity-advisories/aa24-109a)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[Return to top](#) \n\n\n\n\n* [Topics](/topics)\n* [Spotlight](/spotlight)\n* [Resources \\& Tools](/resources-tools)\n* [News \\& Events](/news-events)\n* [Careers](/careers)\n* [About](/about)\n\n\n\n\n\n\n\n\n[Cybersecurity \\& Infrastructure Security Agency](/ \"Go to the Cybersecurity & Infrastructure Security Agency homepage\")\n\n\n* [Facebook](https://www.facebook.com/CISA)\n* [Twitter](https://twitter.com/CISAgov)\n* [LinkedIn](https://www.linkedin.com/company/cybersecurity-and-infrastructure-security-agency)\n* [YouTube](https://www.youtube.com/@cisagov)\n* [Instagram](https://www.instagram.com/cisagov)\n* [RSS](/subscribe-updates-cisa)\n\n\n\n\n CISA Central\n \n[1\\-844\\-Say\\-CISA](tel:1-844-Say-CISA) \n[SayCISA@cisa.gov](mailto:SayCISA@cisa.gov) \n\n\n\n\n\n\n\n\n\n\n\n DHS Seal\n \n\n\n CISA.gov\n \n\n An official website of the U.S. Department of Homeland Security\n \n\n\n* [About CISA](/about \"About CISA\")\n* [Budget and Performance](https://www.dhs.gov/performance-financial-reports \"Budget and Performance\")\n* [DHS.gov](https://www.dhs.gov \"Department of Homeland Security\")\n* [Equal Opportunity \\& Accessibility](/oedia \"Equal Opportunity & Accessibility\")\n* [FOIA Requests](https://www.dhs.gov/foia \"FOIA Requests\")\n* [No FEAR Act](/no-fear-act \"No FEAR Act Reporting\")\n* [Office of Inspector General](https://www.oig.dhs.gov/ \"Office of Inspector General\")\n* [Privacy Policy](/privacy-policy \"Privacy Policy\")\n* [Subscribe](https://public.govdelivery.com/accounts/USDHSCISA/subscriber/new?topic_id=USDHSCISA_138 \"Subscribe to Email Updates\")\n* [The White House](https://www.whitehouse.gov/ \"The White House\")\n* [USA.gov](https://www.usa.gov/ \"USA.gov\")\n* [Website Feedback](/forms/feedback \"Website Feedback\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "cves": [], "techniques": ["T1059.004", "T1566.002", "T1583.006", "T1587.001", "T1053.004", "T1071.001", "T1059.002", "T1053.005", "T1588.004", "T1583.001", "T1204.002", "T1543.003", "T1573.001", "T1588.003", "T1543.004", "T1564.001"], "advisory": "aa21-048a", "title": "AppleJeus: Analysis of North Korea\u2019s Cryptocurrency Malware | CISA", "source": "cybersecurity-advisories", "id": "e042b86a19e89e43a7f2f5ee6ff5a4552e891ab7c9f203ccc125aafcc4a040cf"}