{
  "markdown": "\n\n\n\n\n\n\nNotification\n\nThis report is provided \"as is\" for informational purposes only. The Department of Homeland Security (DHS) does not provide any warranties of any kind regarding any information contained herein. The DHS does not endorse any commercial product or service referenced in this bulletin or otherwise.\nThis document is marked TLP:WHITE--Disclosure is not limited. Sources may use TLP:WHITE when information carries minimal or no foreseeable risk of misuse, in accordance with applicable rules and procedures for public release. Subject to standard copyright rules, TLP:WHITE information may be distributed without restriction. For more information on the Traffic Light Protocol (TLP), see http://www.us-cert.gov/tlp.\n\nSummary\n\nDescription\nThis Malware Analysis Report (MAR) is the result of analytic efforts between the Department of Homeland Security (DHS), the Federal Bureau of Investigation (FBI), and the Department of Defense (DoD). Working with U.S. Government partners, DHS, FBI, and DoD identified Trojan malware variants used by the North Korean government. This malware variant has been identified as PEBBLEDASH. The U.S. Government refers to malicious cyber activity by the North Korean government as HIDDEN COBRA. For more information on HIDDEN COBRA activity, visit https[:]//www[.]us-cert.gov/hiddencobra.\n\n\t\t\tFBI has high confidence that HIDDEN COBRA actors are using malware variants in conjunction with proxy servers to maintain a presence on victim networks and to further network exploitation. DHS, FBI, and DoD are distributing this MAR to enable network defense and reduce exposure to North Korean government malicious cyber activity.\n\n\t\t\tThis MAR includes malware descriptions related to HIDDEN COBRA, suggested response actions and recommended mitigation techniques. Users or administrators should flag activity associated with the malware and report the activity to the Cybersecurity and Infrastructure Security Agency (CISA) or the FBI Cyber Watch (CyWatch), and give the activity the highest priority for enhanced mitigation.\n\n\t\t\tThis report looks at a full-featured beaconing implant. This sample uses FakeTLS for session authentication and for network encoding utilizing RC4. It has the capability to download, upload, delete, and execute files; enable Windows CLI access; create and terminate processes; and perform target system enumeration.\nFor a downloadable copy of IOCs, see MAR-10288834-3.v1.stix.\nSubmitted Files (1)\naab2868a6ebc6bdee5bd12104191db9fc1950b30bcf96eab99801624651e77b6 (D2DE01858417FA3B580B3A95857847...)\nIPs (1)\n112.217.108.138\n\nFindings\n\naab2868a6ebc6bdee5bd12104191db9fc1950b30bcf96eab99801624651e77b6\nTags\nrootkittrojan\nDetails\n\n\n\nName\nD2DE01858417FA3B580B3A95857847D5\n\n\nSize\n167937 bytes\n\n\nType\nPE32 executable (GUI) Intel 80386, for MS Windows\n\n\nMD5\nd2de01858417fa3b580b3a95857847d5\n\n\nSHA1\n2c879a1d4b6334c59ac5f11c2038d273d334befe\n\n\nSHA256\naab2868a6ebc6bdee5bd12104191db9fc1950b30bcf96eab99801624651e77b6\n\n\nSHA512\n220c74af533f4565c4d6f0b4a4ac37c4c6e6238eba22d976a8c28889381a7d920e29077287144ec71f60e5a0b3f3780b6c688e34b8b63092670b0d8ed2f34d1e\n\n\nssdeep\n3072:LH+Sv//jDG2TJVw2URyELc1VVA9Rznhy7i+2JYI3mX2nwvjbtdKQ:qSn/jDGtUEWgE792nmX2Eb3\n\n\nEntropy\n6.131834\n\n\n\nAntivirus\n\n\n\nAhnlab\nTrojan/Win32.Akdoor\n\n\nAvira\nTR/Fuery.eipis\n\n\nBitDefender\nTrojan.GenericKD.5147779\n\n\nESET\na variant of Win32/NukeSped.G trojan\n\n\nEmsisoft\nTrojan.GenericKD.5147779 (B)\n\n\nFilseclab\nRootkit.Agent.eki.zwum.mg\n\n\nIkarus\nTrojan.Win32.NukeSped\n\n\nNANOAV\nTrojan.Win32.Fuery.ephjck\n\n\nSymantec\nTrojan Horse\n\n\nVirusBlokAda\nBScope.Trojan.Dynamer\n\n\nZillya!\nTrojan.NukeSped.Win32.4\n\n\n\nYARA Rules\n\nrule CISA_3P_10135536_02 : rc4_key_2\n\t\t\t\t{\n\t\t\t\t\u00a0\u00a0\u00a0meta:\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Author = \"CISA Trusted Third Party\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Incident = \"10135536\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Date = \"2018-04-19\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Actor = \"Hidden Cobra\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Category = \"n/a\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Family = \"n/a\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Description = \"n/a\"\n\t\t\t\t\u00a0\u00a0\u00a0strings:\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0$s1 = { c6 ?? ?? 79 c6 ?? ?? e1 c6 ?? ?? 0a c6 ?? ?? 5d c6 ?? ?? 87 c6 ?? ?? 7d c6 ?? ?? 9f c6 ?? ?? f7 c6 ?? ?? 5d c6 ?? ?? 12 c6 ?? ?? 2e c6 ?? ?? 11 c6 ?? ?? 65 c6 ?? ?? ac c6 ?? ?? e3 c6 ?? ?? 25 }\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0$s2 = { c7 ?? ?? 79 e1 0a 5d c7 ?? ?? 87 7d 9f f7 c7 ?? ?? 5d 12 2e 11 c7 ?? ?? 65 ac e3 25 }\n\t\t\t\t\u00a0\u00a0\u00a0condition:\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0(uint16(0) == 0x5A4D and uint16(uint32(0x3c)) == 0x4550) and any of them\n\t\t\t\t}\n\nssdeep Matches\n\n\n\n100\nd620d88dfe1dbc0b407d0c3010ff18963e8bb1534f32998322f5a16746a1d0a6\n\n\n\nPE Metadata\n\n\n\nCompile Date\n2017-05-10 08:32:48-04:00\n\n\nImport Hash\n244a466b5f07e9bef21f34a777edebc2\n\n\n\nPE Sections\n\n\n\nMD5\nName\nRaw Size\nEntropy\n\n\n735665170a22a6b60e78ba64be8f525a\nheader\n4096\n0.685116\n\n\n03861d6eb2f7ce7eb5a2c20dae40d62b\n.text\n135168\n6.307038\n\n\nbfcf9ded9905d8f7d6afdcf03737a029\n.rdata\n12288\n5.094334\n\n\n16cb2fb46f6bf6aaae5d9daf38d0f5d4\n.data\n12288\n5.001095\n\n\n14f705208660fe080429a2fc23a6c181\n.rsrc\n4096\n0.405655\n\n\n\nPackers/Compilers/Cryptors\n\n\n\nMicrosoft Visual C++ v6.0\n\n\n\nRelationships\n\n\n\naab2868a6e...\nConnected_To\n112.217.108.138\n\n\n\nDescription\nThe sample performs dynamic dynamic link library (DLL) importing and application programming interface (API) lookups using LoadLibrary and GetProcAddress on obfuscated strings in an attempt to hide it\u2019s usage of network functions. The sample obfuscates strings used for API lookups using a custom XOR algorithm. A Python3 script to decrypt the obfuscated strings is given below.\n\n\t\t\t--Begin Python3 script--\n\t\t\t# key = 69 A7 DD 86 0A 67 78 77 A6 78 9A DA 78 68 A7 78\n\t\t\tdef decode_string(enc, key):\n\t\t\t\u00a0\u00a0\u00a0dec = b''\n\t\t\t\u00a0\u00a0\u00a0for i in range(len(enc)):\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0# rotate key:\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0# [0,1,2,3,4,5,6,7,8,9,a,b,c,d,e,f] -> [x,0,1,2,3,4,5,6,7,8,9,a,b,c,d,e]\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0# where x=(key[0]^key[2])^(key[6]&key[f])\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0for j in range(15, 0, -1):\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0key[j] = key[j-1]\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0key[0] = (key[0] ^ key[2]) ^ (key[6] + key[15])\n\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0dec += bytes([enc[i] ^ key[15]]) \u00a0\u00a0\u00a0\n\t\t\t\u00a0\u00a0\u00a0return dec\n\t\t\t--End Python3 script--\n\n\t\t\tThe sample obfuscates its callback descriptors (IP address and ports) using a different custom XOR algorithm. A Python3 script to decrypt the obfuscated data is given below.\n\n\t\t\t--Begin Python3 script--\n\t\t\t# key = 5E 85 41 FD 0C 37 57 71 D5 51 5D E3 B5 55 62 20\n\t\t\t# \u00a0\u00a0\u00a0 C1 30 96 D3 77 4C 23 13 84 8B 63 5C 48 32 2C 5B\n\t\t\t# \u00a0\u00a0\u00a0 94 8F 3A 26 79 E2 6B 94 45 D1 6F 51 24 8F 86 72\n\t\t\t# \u00a0\u00a0\u00a0 C8 D3 8D C1 C0 D3 88 56 84 B3 91 E2 B2 24 64 24\n\t\t\tdef decode_callback_descriptors(enc, key):\n\t\t\t\u00a0\u00a0\u00a0dec = b''\n\t\t\t\u00a0\u00a0\u00a0for i in range(len(enc)):\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0dec += bytes([enc[i] ^ key[(i + 0x1378 + len(enc)) % 0x40] ^ 0x59])\n\t\t\t\u00a0\u00a0\u00a0return dec\n\t\t\t--End Python3 script--\n\n\n\t\t\tThe sample utilizes a \u201cFakeTLS\u201d scheme in an attempt to obfuscate its network communications. It picks a random Uniform Resource Locator (URL) from a list (Figure 1) to use in the TLS certificate. The sample and the command and control (C2) externally appear to perform a standard TLS authentication, however, most of the fields used are filled with random data from rand().\n\n\t\t\t--Begin C2--\n\t\t\t112.217.108.138:443\n\t\t\t--End C2--\n\n\t\t\tOnce the FakeTLS handshake is complete, all further packets use a FakeTLS header, followed by RC4 encrypted data.\n\n\t\t\t--Begin packet structure--\n\t\t\t17 03 01 <2 Byte data length> <RC4 encrypted data>\n\t\t\tRC4 Key: 79 E1 0A 5D 87 7D 9F F7 5D 12 2E 11 65 AC E3 25\n\t\t\t--End packet structure--\n\n\t\t\tThe sample then waits for commands from the C2.\nScreenshots\n \n\nFigure 1 - List of certificate URLs used in the TLS certificate.\n\n \n\nFigure 2 - The implant contains the commands displayed in the table.\n\n\n\n112.217.108.138\nTags\ncommand-and-control\nRelationships\n\n\n\n112.217.108.138\nConnected_From\naab2868a6ebc6bdee5bd12104191db9fc1950b30bcf96eab99801624651e77b6\n\n\n\nDescription\nThe malware attempts to connect to the IP address.\n\nRelationship Summary\n\n\n\n\naab2868a6e...\nConnected_To\n112.217.108.138\n\n\n112.217.108.138\nConnected_From\naab2868a6ebc6bdee5bd12104191db9fc1950b30bcf96eab99801624651e77b6\n\n\n\n\nMitigation\n\nThe following Snort rule can be used to detect the FakeTLS RC4 encrypted command packets:\n\n\t\t\t//Detects the FakeTLS RC4 encrypted command packets\n\t\t\t// that use no arguments (i.e. nextlen = 0)\n\n\t\t\talert tcp any any -> any any (msg:\"Malware Detected\"; pcre:\" /\\x17\\x03\\x01\\x00\\x08.\\x20\\x59\\x2c/\"; rev:1; sid:99999999;)\n\nRecommendations\n\nCISA recommends that users and administrators consider using the following best practices to strengthen the security posture of their organization's systems. Any configuration changes should be reviewed by system owners and administrators prior to implementation to avoid unwanted impacts.\n\nMaintain up-to-date antivirus signatures and engines.\nKeep operating system patches up-to-date.\nDisable File and Printer sharing services. If these services are required, use strong passwords or Active Directory authentication.\nRestrict users' ability (permissions) to install and run unwanted software applications. Do not add users to the local administrators group unless required.\nEnforce a strong password policy and implement regular password changes.\nExercise caution when opening e-mail attachments even if the attachment is expected and the sender appears to be known.\nEnable a personal firewall on agency workstations, configured to deny unsolicited connection requests.\nDisable unnecessary services on agency workstations and servers.\nScan for and remove suspicious e-mail attachments; ensure the scanned attachment is its \"true file type\" (i.e., the extension matches the file header).\nMonitor users' web browsing habits; restrict access to sites with unfavorable content.\nExercise caution when using removable media (e.g., USB thumb drives, external drives, CDs, etc.).\nScan all software downloaded from the Internet prior to executing.\nMaintain situational awareness of the latest threats and implement appropriate Access Control Lists (ACLs).\n\nAdditional information on malware incident prevention and handling can be found in National Institute of Standards and Technology (NIST) Special Publication 800-83, \"Guide to Malware Incident Prevention & Handling for Desktops and Laptops\".\n\nContact Information\n\n\n1-888-282-0870\nNCCICCustomerService@us-cert.gov (UNCLASS)\nus-cert@dhs.sgov.gov (SIPRNET)\nus-cert@dhs.ic.gov (JWICS)\n\nCISA continuously strives to improve its products and services. You can help by answering a very short series of questions about this product at the following URL: https://us-cert.gov/forms/feedback/\n\nDocument FAQ\n\nWhat is a MIFR? A Malware Initial Findings Report (MIFR) is intended to provide organizations with malware analysis in a timely manner. In most instances this report will provide initial indicators for computer and network defense. To request additional analysis, please contact CISA and provide information regarding the level of desired analysis.\nWhat is a MAR? A Malware Analysis Report (MAR) is intended to provide organizations with more detailed malware analysis acquired via manual reverse engineering. To request additional analysis, please contact CISA and provide information regarding the level of desired analysis.\nCan I edit this document? This document is not to be edited in any way by recipients. All comments or questions related to this document should be directed to the CISA at 1-888-282-0870 or soc@us-cert.gov.\nCan I submit malware to CISA? Malware samples can be submitted via three methods:\n\nWeb: https://malware.us-cert.gov\nE-Mail: submit@malware.us-cert.gov\nFTP: ftp.malware.us-cert.gov (anonymous)\n\nCISA encourages you to report any suspicious activity, including cybersecurity incidents, possible malicious code, software vulnerabilities, and phishing-related scams. Reporting forms can be found on CISA's homepage at www.us-cert.gov.\n\n\n\n\n\n\n\n\nRevisions\n\nMay 12, 2020: Initial Version\n",
  "cves": [
    "CVE-2022-42475",
    "CVE-2022-47966"
  ],
  "techniques": [],
  "advisory": "ar20-133c",
  "title": "MAR-10288834-3.v1 \u2013 North Korean Trojan: PEBBLEDASH | CISA",
  "source": "analysis-reports",
  "id": "b548edeacee729141ef256ad52ded9081e72e96ab05d8bdffa8a44dcb17224ca"
}