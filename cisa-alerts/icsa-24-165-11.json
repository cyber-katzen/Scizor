{
  "markdown": "\nAs of January 10, 2023, CISA will no longer be updating ICS security advisories for Siemens product vulnerabilities beyond the initial advisory.\u202fFor the most up-to-date information on vulnerabilities in this advisory, please see\u202fSiemens' ProductCERT Security Advisories (CERT Services | Services | Siemens Global).\u00a0View CSAF\n1. EXECUTIVE SUMMARY\n\nCVSS v3 7.5\nATTENTION: Exploitable remotely/low attack complexity\nVendor: Siemens\nEquipment: SCALANCE XM-400/XR-500\nVulnerabilities: Inadequate Encryption Strength, Double Free, Use-After-Free, Improper Input Validation, Improper Certificate Validation\n\n2. RISK EVALUATION\nSuccessful exploitation of these vulnerabilities could allow an attacker to cause a memory leak or execute arbitrary code.\n3. TECHNICAL DETAILS\n3.1 AFFECTED PRODUCTS\nThe following Siemens products, are affected:\n\nSiemens SCALANCE XM408-4C (6GK5408-4GP00-2AM2): All versions prior to V6.6.1\nSiemens SCALANCE XM408-4C (L3 int.) (6GK5408-4GQ00-2AM2): All versions prior to V6.6.1\nSiemens SCALANCE XM408-8C (6GK5408-8GS00-2AM2): All versions prior to V6.6.1\nSiemens SCALANCE XM408-8C (L3 int.) (6GK5408-8GR00-2AM2): All versions prior to V6.6.1\nSiemens SCALANCE XM416-4C (6GK5416-4GS00-2AM2): All versions prior to V6.6.1\nSiemens SCALANCE XM416-4C (L3 int.) (6GK5416-4GR00-2AM2): All versions prior to V6.6.1\nSiemens SCALANCE XR524-8C, 1x230V (6GK5524-8GS00-3AR2): All versions prior to V6.6.1\nSiemens SCALANCE XR524-8C, 1x230V (L3 int.) (6GK5524-8GR00-3AR2): All versions prior to V6.6.1\nSiemens SCALANCE XR524-8C, 2x230V (6GK5524-8GS00-4AR2): All versions prior to V6.6.1\nSiemens SCALANCE XR524-8C, 2x230V (L3 int.) (6GK5524-8GR00-4AR2): All versions prior to V6.6.1\nSiemens SCALANCE XR524-8C, 24V (6GK5524-8GS00-2AR2): All versions prior to V6.6.1\nSiemens SCALANCE XR524-8C, 24V (L3 int.) (6GK5524-8GR00-2AR2): All versions prior to V6.6.1\nSiemens SCALANCE XR526-8C, 1x230V (6GK5526-8GS00-3AR2): All versions prior to V6.6.1\nSiemens SCALANCE XR526-8C, 1x230V (L3 int.) (6GK5526-8GR00-3AR2): All versions prior to V6.6.1\nSiemens SCALANCE XR526-8C, 2x230V (6GK5526-8GS00-4AR2): All versions prior to V6.6.1\nSiemens SCALANCE XR526-8C, 2x230V (L3 int.) (6GK5526-8GR00-4AR2): All versions prior to V6.6.1\nSiemens SCALANCE XR526-8C, 24V (6GK5526-8GS00-2AR2): All versions prior to V6.6.1\nSiemens SCALANCE XR526-8C, 24V (L3 int.) (6GK5526-8GR00-2AR2): All versions prior to V6.6.1\nSiemens SCALANCE XR528-6M (2HR2) (6GK5528-0AA00-2HR2): All versions prior to V6.6.1\nSiemens SCALANCE XR528-6M (2HR2, L3 int.) (6GK5528-0AR00-2HR2): All versions prior to V6.6.1\nSiemens SCALANCE XR528-6M (6GK5528-0AA00-2AR2): All versions prior to V6.6.1\nSiemens SCALANCE XR528-6M (L3 int.) (6GK5528-0AR00-2AR2): All versions prior to V6.6.1\nSiemens SCALANCE XR552-12M (2HR2) (6GK5552-0AA00-2HR2): All versions prior to V6.6.1\nSiemens SCALANCE XR552-12M (2HR2) (6GK5552-0AR00-2HR2): All versions prior to V6.6.1\nSiemens SCALANCE XR552-12M (2HR2, L3 int.) (6GK5552-0AR00-2AR2): All versions prior to V6.6.1\nSiemens SCALANCE XR552-12M (6GK5552-0AA00-2AR2): All versions prior to V6.6.1\n\n3.2 Vulnerability Overview\n3.2.1 INADEQUATE ENCRYPTION STRENGTH CWE-326\nAES OCB mode for 32-bit x86 platforms using the AES-NI assembly optimized implementation will not encrypt the entirety of the data under some circumstances. This could reveal sixteen bytes of data that was preexisting in the memory that wasn't written. In the special case of \"in place\" encryption, sixteen bytes of the plaintext would be revealed. Since OpenSSL does not support OCB based cipher suites for TLS and DTLS, they are both unaffected.\nCVE-2022-2097 has been assigned to this vulnerability. A CVSS v3 base score of 5.3 has been assigned; the CVSS vector string is (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N).\n3.2.2 INADEQUATE ENCRYPTION STRENGTH CWE-326\nA timing based side channel exists in the OpenSSL RSA Decryption implementation which could be sufficient to recover a plaintext across a network in a Bleichenbacher style attack. To achieve a successful decryption an attacker would have to be able to send a very large number of trial messages for decryption. The vulnerability affects all RSA padding modes: PKCS#1 v1.5, RSA-OEAP and RSASVE. For example, in a TLS connection, RSA is commonly used by a client to send an encrypted pre-master secret to the server. An attacker that had observed a genuine connection between a client and a server could use this flaw to send trial messages to the server and record the time taken to process them. After a sufficiently large number of messages the attacker could recover the pre-master secret used for the original connection and thus be able to decrypt the application data sent over that connection.\nCVE-2022-4304 has been assigned to this vulnerability. A CVSS v3 base score of 5.9 has been assigned; the CVSS vector string is (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N).\n3.2.3 DOUBLE FREE CWE-415\nThe function PEM_read_bio_ex() reads a PEM file from a BIO and parses and decodes the \"name\" (e.g. \"CERTIFICATE\"), any header data and the payload data. If the function succeeds then the \"name_out\", \"header\" and \"data\" arguments are populated with pointers to buffers containing the relevant decoded data. The caller is responsible for freeing those buffers. It is possible to construct a PEM file that results in 0 bytes of payload data. In this case PEM_read_bio_ex() will return a failure code but will populate the header argument with a pointer to a buffer that has already been freed. If the caller also frees this buffer then a double free will occur. This will most likely lead to a crash. This could be exploited by an attacker who has the ability to supply malicious PEM files for parsing to achieve a denial of service attack. The functions PEM_read_bio() and PEM_read() are simple wrappers around PEM_read_bio_ex() and therefore these functions are also directly affected. These functions are also called indirectly by a number of other OpenSSL functions including PEM_X509_INFO_read_bio_ex() and SSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal uses of these functions are not vulnerable because the caller does not free the header argument if PEM_read_bio_ex() returns a failure code. These locations include the PEM_read_bio_TYPE() functions as well as the decoders introduced in OpenSSL 3.0. The OpenSSL asn1parse command line application is also impacted by this issue.\nCVE-2022-4450 has been assigned to this vulnerability. A CVSS v3 base score of 5.9 has been assigned; the CVSS vector string is (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H).\n3.2.4 USE AFTER FREE CWE-416\nThe public API function BIO_new_NDEF is a helper function used for streaming ASN.1 data via a BIO. It is primarily used internally to OpenSSL to support the SMIME, CMS and PKCS7 streaming capabilities, but may also be called directly by end user applications. The function receives a BIO from the caller, prepends a new BIO_f_asn1 filter BIO onto the front of it to form a BIO chain, and then returns the new head of the BIO chain to the caller. Under certain conditions, for example if a CMS recipient public key is invalid, the new filter BIO is freed and the function returns a NULL result indicating a failure. However, in this case, the BIO chain is not properly cleaned up and the BIO passed by the caller still retains internal pointers to the previously freed filter BIO. If the caller then goes on to call BIO_pop() on the BIO then a use-after-free will occur. This will most likely result in a crash. This scenario occurs directly in the internal function B64_write_ASN1() which may cause BIO_new_NDEF() to be called and will subsequently call BIO_pop() on the BIO. This internal function is in turn called by the public API functions PEM_write_bio_ASN1_stream, PEM_write_bio_CMS_stream, PEM_write_bio_PKCS7_stream, SMIME_write_ASN1, SMIME_write_CMS and SMIME_write_PKCS7. Other public API functions that may be impacted by this include i2d_ASN1_bio_stream, BIO_new_CMS, BIO_new_PKCS7, i2d_CMS_bio_stream and i2d_PKCS7_bio_stream. The OpenSSL cms and smime command line applications are similarly affected.\nCVE-2023-0215 has been assigned to this vulnerability. A CVSS v3 base score of 5.9 has been assigned; the CVSS vector string is (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H).\n3.2.5 IMPROPER INPUT VALIDATION CWE-20\nThere is a type confusion vulnerability relating to X.400 address processing inside an X.509 GeneralName. X.400 addresses were parsed as an ASN1_STRING but the public structure definition for GENERAL_NAME incorrectly specified the type of the x400Address field as ASN1_TYPE. This field is subsequently interpreted by the OpenSSL function GENERAL_NAME_cmp as an ASN1_TYPE rather than an ASN1_STRING. When CRL checking is enabled (i.e. the application sets the X509_V_FLAG_CRL_CHECK flag), this vulnerability may allow an attacker to pass arbitrary pointers to a memcmp call, enabling them to read memory contents or enact a denial of service. In most cases, the attack requires the attacker to provide both the certificate chain and CRL, neither of which need to have a valid signature. If the attacker only controls one of these inputs, the other input must already contain an X.400 address as a CRL distribution point, which is uncommon. As such, this vulnerability is most likely to only affect applications which have implemented their own functionality for retrieving CRLs over a network.\nCVE-2023-0286 has been assigned to this vulnerability. A CVSS v3 base score of 7.4 has been assigned; the CVSS vector string is (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:H).\n3.2.6 IMPROPER CERTIFICATE VALIDATION CWE-295\nA security vulnerability has been identified in all supported versions of OpenSSL related to the verification of X.509 certificate chains that include policy constraints. Attackers may be able to exploit this vulnerability by creating a malicious certificate chain that triggers exponential use of computational resources, leading to a denial-of-service (DoS) attack on affected systems. Policy processing is disabled by default but can be enabled by passing the -policy argument to the command line utilities or by calling the X509_VERIFY_PARAM_set1_policies() function.\nCVE-2023-0464 has been assigned to this vulnerability. A CVSS v3 base score of 7.5 has been assigned; the CVSS vector string is (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H).\n3.2.7 IMPROPER CERTIFICATE VALIDATION CWE-295\nApplications that use a non-default option when verifying certificates may be vulnerable to an attack from a malicious CA to circumvent certain checks. Invalid certificate policies in leaf certificates are silently ignored by OpenSSL and other certificate policy checks are skipped for that certificate. A malicious CA could use this to deliberately assert invalid certificate policies in order to circumvent policy checking on the certificate altogether. Policy processing is disabled by default but can be enabled by passing the -policy argument to the command line utilities or by calling the X509_VERIFY_PARAM_set1_policies() function.\nCVE-2023-0465 has been assigned to this vulnerability. A CVSS v3 base score of 5.3 has been assigned; the CVSS vector string is (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N).\n3.2.8 IMPROPER CERTIFICATE VALIDATION CWE-295\nThe function X509_VERIFY_PARAM_add0_policy() is documented to implicitly enable the certificate policy check when doing certificate verification. However the implementation of the function does not enable the check which allows certificates with invalid or incorrect policies to pass the certificate verification.As suddenly enabling the policy check could break existing deployments it was decided to keep the existing behavior of the X509_VERIFY_PARAM_add0_policy()function.Instead the applications that require OpenSSL to perform certificate policy check need to use X509_VERIFY_PARAM_set1_policies() or explicitly enable the policy check by calling X509_VERIFY_PARAM_set_flags() withthe X509_V_FLAG_POLICY_CHECK flag argument.Certificate policy checks are disabled by default in OpenSSL and are not commonly used by applications.\nCVE-2023-0466 has been assigned to this vulnerability. A CVSS v3 base score of 5.3 has been assigned; the CVSS vector string is (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N).\n3.3 BACKGROUND\n\nCRITICAL INFRASTRUCTURE SECTORS: Chemical Sector, Critical Manufacturing, Energy Sector, Nuclear Reactors, Materials, and Waste Sector\nCOUNTRIES/AREAS DEPLOYED: Worldwide\nCOMPANY HEADQUARTERS LOCATION: Germany\n\n3.4 RESEARCHER\nSiemens reported these vulnerabilities to CISA.\n4. MITIGATIONS\nSiemens has identified the following specific workarounds and mitigations users can apply to reduce risk:\nUpdate SCALANCE XM-400/XR-500 devices to V6.6.1 or later version.\nAs a general security measure, Siemens recommends protecting network access to devices with appropriate mechanisms. To operate the devices in a protected IT environment, Siemens recommends configuring the environment according to Siemens' operational guidelines for industrial security and following recommendations in the product manuals.\nAdditional information on industrial security by Siemens can be found on the Siemens industrial security webpage\nFor more information see the associated Siemens security advisory SSA-879734 in HTML and CSAF.\nCISA recommends users take defensive measures to minimize the risk of exploitation of these vulnerabilities, such as:\n\nMinimize network exposure for all control system devices and/or systems, ensuring they are not accessible from the internet.\nLocate control system networks and remote devices behind firewalls and isolating them from business networks.\nWhen remote access is required, use more secure methods, such as Virtual Private Networks (VPNs). Recognize VPNs may have vulnerabilities, should be updated to the most recent version available, and are only as secure as the connected devices.\n\nCISA reminds organizations to perform proper impact analysis and risk assessment prior to deploying defensive measures.\nCISA also provides a section for control systems security recommended practices on the ICS webpage on cisa.gov. Several CISA products detailing cyber defense best practices are available for reading and download, including Improving Industrial Control Systems Cybersecurity with Defense-in-Depth Strategies.\nCISA encourages organizations to implement recommended cybersecurity strategies for proactive defense of ICS assets.\nAdditional mitigation guidance and recommended practices are publicly available on the ICS webpage at cisa.gov in the technical information paper, ICS-TIP-12-146-01B--Targeted Cyber Intrusion Detection and Mitigation Strategies.\nOrganizations observing suspected malicious activity should follow established internal procedures and report findings to CISA for tracking and correlation against other incidents.\nCISA also recommends users take the following measures to protect themselves from social engineering attacks:\n\nDo not click web links or open attachments in unsolicited email messages.\nRefer to Recognizing and Avoiding Email Scams for more information on avoiding email scams.\nRefer to Avoiding Social Engineering and Phishing Attacks for more information on social engineering attacks.\n\nNo known public exploitation specifically targeting these vulnerabilities has been reported to CISA at this time.\n5. UPDATE HISTORY\n\nJune 13, 2024: Initial Publication\n\n",
  "cves": [
    "CVE-2023-0466",
    "CVE-2023-0286",
    "CVE-2023-0215",
    "CVE-2022-4304",
    "CVE-2023-0465",
    "CVE-2022-2097",
    "CVE-2022-4450",
    "CVE-2023-0464"
  ],
  "techniques": [],
  "advisory": "icsa-24-165-11",
  "title": "Siemens SCALANCE XM-400, XR-500 | CISA",
  "source": "ics-advisories",
  "id": "50b25e6f0eaf3f1dc95a0a5bb2fafb72eb83bfc304ce91903456ecfd780522b4"
}