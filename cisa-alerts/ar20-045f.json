{
  "markdown": "\n\n\n\n\n\n\nNotification\n\nThis report is provided \"as is\" for informational purposes only. The Department of Homeland Security (DHS) does not provide any warranties of any kind regarding any information contained herein. The DHS does not endorse any commercial product or service referenced in this bulletin or otherwise.\nThis document is marked TLP:WHITE--Disclosure is not limited. Sources may use TLP:WHITE when information carries minimal or no foreseeable risk of misuse, in accordance with applicable rules and procedures for public release. Subject to standard copyright rules, TLP:WHITE information may be distributed without restriction. For more information on the Traffic Light Protocol (TLP), see http://www.us-cert.gov/tlp.\n\nSummary\n\nDescription\nThis Malware Analysis Report (MAR) is the result of analytic efforts between Department of Homeland Security (DHS), the Federal Bureau of Investigation (FBI), and the Department of Defense (DoD). Working with U.S. Government partners, DHS, FBI, and DoD identified Trojan malware variants used by the North Korean government. This malware variant has been identified as BUFFETLINE. The U.S. Government refers to malicious cyber activity by the North Korean government as HIDDEN COBRA. For more information on HIDDEN COBRA activity, visit https[:]//www[.]us-cert.gov/hiddencobra.\n\n\t\t\tDHS, FBI, and DoD are distributing this MAR to enable network defense and reduce exposure to North Korean government malicious cyber activity.\n\n\t\t\tThis MAR includes malware descriptions related to HIDDEN COBRA, suggested response actions and recommended mitigation techniques. Users or administrators should flag activity associated with the malware and report the activity to the Cybersecurity and Infrastructure Security Agency (CISA) or the FBI Cyber Watch (CyWatch), and give the activity the highest priority for enhanced mitigation.\n\n\t\t\tThis report looks at a full-featured beaconing implant. This sample uses PolarSSL for session authentication, but then utilizes a FakeTLS scheme for network encoding using a modified RC4 algorithm. It has the capability to download, upload, delete, and execute files; enable Windows CLI access; create and terminate processes; and perform target system enumeration.\nFor a downloadable copy of IOCs, see MAR-10271944-3.v1.stix.\nSubmitted Files (1)\n52f83cdaefd194fff3d387631d5693a709cd7b3a20a072e7827c4d4218d57695 (smss.exe)\nIPs (2)\n107.6.12.135\n210.202.40.35\n\nFindings\n\n52f83cdaefd194fff3d387631d5693a709cd7b3a20a072e7827c4d4218d57695\nTags\ntrojan\nDetails\n\n\n\nName\nsmss.exe\n\n\nSize\n139265 bytes\n\n\nType\nPE32 executable (GUI) Intel 80386, for MS Windows\n\n\nMD5\n11cb4f1cdd9370162d67945059f70d0d\n\n\nSHA1\nf59c7ce763c4d5717f986e578e3bce8a43f721d2\n\n\nSHA256\n52f83cdaefd194fff3d387631d5693a709cd7b3a20a072e7827c4d4218d57695\n\n\nSHA512\n53c308aa54eed5cf2979d519fc128fcebce8ce425566426086c88e9eb5ebf69c4e40361ebb5df50f98fdf823b0ecf7f1a1736be189db67d56624d76245fb146d\n\n\nssdeep\n3072:BqrWp5J6z3fNOo7R650dB+0l2pucertVev7:4Wp5J6zP9di2Bt0J\n\n\nEntropy\n6.180760\n\n\n\nAntivirus\n\n\n\nAhnlab\nTrojan/Win32.Akdoor\n\n\nAntiy\nTrojan/Win32.Agent\n\n\nAvira\nTR/NukeSped.dtrpn\n\n\nBitDefender\nTrojan.GenericKD.5884300\n\n\nClamAV\nWin.Trojan.HiddenCobra-7402602-0\n\n\nESET\na variant of Win32/NukeSped.AU trojan\n\n\nEmsisoft\nTrojan.GenericKD.5884300 (B)\n\n\nFilseclab\nTrojan.Agent.ikox.sjwn\n\n\nHuorong\nTrojan/Generic!6B2189F3963492CB\n\n\nIkarus\nTrojan.Win32.NukeSped\n\n\nK7\nTrojan ( 004d07bc1 )\n\n\nMcAfee\nGenericRXDC-AJ!11CB4F1CDD93\n\n\nNANOAV\nTrojan.Win32.NukeSped.faxfdd\n\n\nSymantec\nTrojan.Hoplight\n\n\nVirusBlokAda\nBScope.Trojan.Tiggre\n\n\nZillya!\nTrojan.Agent.Win32.817728\n\n\n\nYARA Rules\n\nrule encodedHandshakeStrings\n\t\t\t\t{\n\t\t\t\t\u00a0\u00a0\u00a0meta:\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0author = \"CISA trusted 3rd party\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0incident = \"10271944.r3.v1\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0date = \u00a0\u00a0\u00a0\"2019-12-25\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0category = \"Hidden_Cobra\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0family = \"BUFFETLINE\"\n\t\t\t\t\u00a0\u00a0\u00a0strings:\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0$e1 = { dd 91 4a 1d cb 93 52 0a d0 cb 0a 4c ca d5 08 4b ca 92 4b 1d de 92 4b 1e d2 8b 5c 14 de 92 5c }\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0$e2 = { 81 8c 4d 1d d1 8a 52 1d d7 8a 4c 0d 8b c8 01 4c cd 9c 5e 0b dc 97 5e 12 95 cb 4a 48 cf 9c 53 }\n\t\t\t\t\u00a0\u00a0\u00a0condition:\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0(uint16(0) == 0x5A4D and uint16(uint32(0x3c)) == 0x4550) and any of them\n\t\t\t\t}\nrule polarsslClientHello\n\t\t\t\t{\n\t\t\t\t\u00a0\u00a0\u00a0meta:\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0author = \"CISA trusted 3rd party\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0incident = \"10271944.R3.V1\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0date = \u00a0\u00a0\u00a0\"2019-12-25\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0category = \"Hidden_Cobra\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0family = \"BUFFETLINE\"\n\t\t\t\t\u00a0\u00a0\u00a0strings:\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0$polarSSL = \"fjiejffndxklfsdkfjsaadiepwn\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0$cliHello = \"!Q@W#E$R%T^Y&U*I(O)P\"\n\t\t\t\t\u00a0\u00a0\u00a0condition:\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0(uint16(0) == 0x5A4D and uint16(uint32(0x3c)) == 0x4550) and all of them\n\t\t\t\t}\n\nssdeep Matches\n\n\n\n100\n16c3a7f143e831dd0481d2d57aae885090e22ec55cc8282009f641755d423fcd\n\n\n\nPE Metadata\n\n\n\nCompile Date\n2016-10-03 02:34:09-04:00\n\n\nImport Hash\n6a3547c38d6806b7d5a8b2638621ca32\n\n\n\nPE Sections\n\n\n\nMD5\nName\nRaw Size\nEntropy\n\n\n83eb1da0a8ab18f046922a558cb8ede6\nheader\n4096\n0.676716\n\n\nb672be56b1bc345710663b196247c46c\n.text\n98304\n6.661074\n\n\n058bc0c9a6ef4120a61e2cb75b7e2825\n.rdata\n12288\n6.220732\n\n\n1b2e3c963ae327f7f74e13f15a31fa55\n.data\n20480\n2.725473\n\n\n02bb750555f1c2623effc3aa3d077a34\n.rsrc\n4096\n0.897401\n\n\n\nPackers/Compilers/Cryptors\n\n\n\nMicrosoft Visual C++ v6.0\n\n\n\nRelationships\n\n\n\n52f83cdaef...\nConnected_To\n107.6.12.135\n\n\n52f83cdaef...\nConnected_To\n210.202.40.35\n\n\n\nDescription\nThe sample performs dynamic DLL importing and API lookups using LoadLibrary and GetProcAddress on obfuscated strings in an attempt to hide it\u2019s usage of network functions.\n\n\t\t\tThe sample obfuscates strings used for API lookups as well as the strings used during the network handshake using a modified RC4 algorithm. A Python 3 script to decrypt the obfuscated strings is given below. Note: The hardcoded command and control (C2) IP\u2019s are not obfuscated, but appear in plaintext within the executable.\n\n\t\t\t--Begin Python 3 Decode Script--\n\n\t\t\tdef decode_string(enc, key=0x15b3):\n\t\t\t\u00a0\u00a0\u00a0dec = b''\n\t\t\t\u00a0\u00a0\u00a0sbox = b''\n\t\t\t\u00a0\u00a0\u00a0\n\t\t\t\u00a0\u00a0\u00a0tmp = ((key + len(enc)) * -0x52) & 0xff \u00a0\u00a0\u00a0\n\t\t\t\u00a0\u00a0\u00a0for i in range(0x100):\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0sbox += bytes([((i + 1) * key * -0x78) & 0xff])\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\n\t\t\t\u00a0\u00a0\u00a0for b in enc:\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0dec += bytes([ord(b) ^ sbox[tmp]])\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0tmp = (tmp + (key + len(enc)) * 0x7c) & 0xff \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\n\t\t\t\u00a0\u00a0\u00a0return dec\n\n\t\t\t--End Python 3 Decode Script--\n\n\t\t\t--Begin C2 IP and Port--\n\n\t\t\t107.6.12.135:443\n\t\t\t210.202.40.35:443\n\n\t\t\t--End C2 IP and Port--\n\n\t\t\tThe sample attempts to perform a PolarSSL handshake to initiate a connection to each of these hardcoded C2 IPs using TLS version 1.1. It uses the PolarSSL server_name extension with the Server Name set to \"!Q@W#E$R%T^Y&U*I(O)P\". The PolarSSL certificate and private key are provided below.\n\n\t\t\t--Begin PolarSSL Certificate--\n\n\t\t\t----BEGIN CERTIFICATE-----\n\t\t\tMIIDhzCCAm+gAwIBAgIBADANBgkqhkiG9w0BAQUFADA7MQswCQYDVQQGEwJOTDER\n\t\t\tMA8GA1UEChMIUG9sYXJTU0wxGTAXBgNVBAMTEFBvbGFyU1NMIFRlc3QgQ0EwHhcN\n\t\t\tMTEwMjEyMTQ0NDAwWhcNMjEwMjEyMTQ0NDAwWjA7MQswCQYDVQQGEwJOTDERMA8G\n\t\t\tA1UEChMIUG9sYXJTU0wxGTAXBgNVBAMTEFBvbGFyU1NMIFRlc3QgQ0EwggEiMA0G\n\t\t\tCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDA3zf8F7vglp0/ht6WMn1EpRagzSHx\n\t\t\tmdTs6st8GFgIlKXsm8WL3xoemTiZhx57wI053zhdcHgH057Zk+i5clHFzqMwUqny\n\t\t\t50BwFMtEonILwuVA+T7lpg6z+exKY8C4KQB0nFc7qKUEkHHxvYPZP9al4jwqj+8n\n\t\t\tYMPGn8u67GB9t+aEMr5P+1gmIgNb1LTV+/Xjli5wwOQuvfwu7uJBVcA0Ln0kcmnL\n\t\t\tR7EUQIN9Z/SG9jGr8XmksrUuEvmEF/Bibyc+E1ixVA0hmnM3oTDPb5Lc9un8rNsu\n\t\t\tKNF+AksjoBXyOGVkCeoMbo4bF6BxyLObyavpw/LPh5aPgAIynplYb6LVAgMBAAGj\n\t\t\tgZUwgZIwDAYDVR0TBAUwAwEB/zAdBgNVHQ4EFgQUtFrkpbPe0lL2udWmlQ/rPrzH\n\t\t\t/f8wYwYDVR0jBFwwWoAUtFrkpbPe0lL2udWmlQ/rPrzH/f+hP6Q9MDsxCzAJBgNV\n\t\t\tBAYTAk5MMREwDwYDVQQKEwhQb2xhclNTTDEZMBcGA1UEAxMQUG9sYXJTU0wgVGVz\n\t\t\tdCBDQYIBADANBgkqhkiG9w0BAQUFAAOCAQEAuP1U2ABUkIslsCfdlc2i94QHHYeJ\n\t\t\tSsR4EdgHtdciUI5I62J6Mom+Y0dT/7a+8S6MVMCZP6C5NyNyXw1GWY/YR82XTJ8H\n\t\t\tDBJiCTok5DbZ6SzaONBzdWHXwWwmi5vg1dxn7YxrM9d0IjxM27WNKs4sDQhZBQkF\n\t\t\tpjmfs2cb4oPl4Y9T9meTx/lvdkRYEug61Jfn6cA+qHpyPYdTH+UshITnmp5/Ztkf\n\t\t\tm/UTSLBNFNHesiTZeH31NcxYGdHSme9Nc/gfidRa0FLOCfWxRlFqAI47zG9jAQCZ\n\t\t\t7Z2mCGDNMhjQc+BYcdnl0lPXjdDK6V0qCg1dVewhUBcW5gZKzV7e9+DpVA==\n\t\t\t-----END CERTIFICATE-----\n\n\t\t\t--End PolarSSL Certificate--\n\n\t\t\t--Begin Private Key--\n\n\t\t\t-----BEGIN RSA PRIVATE KEY-----\n\t\t\tMIIEpAIBAAKCAQEAyHTEzLn5tXnpRdkUYLB9u5Pyax6fM60Nj4o8VmXl3ETZzGaF\n\t\t\tB9X4J7BKNdBjngpuG7fa8H6r7gwQk4ZJGDTzqCrSV/Uu1C93KYRhTYJQj6eVSHD1\n\t\t\tbk2y1RPD0hrt5kPqQhTrdOrA7R/UV06p86jt0uDBMHEwMjDV0/YI0FZPRo7yX/k9\n\t\t\tZ5GIMC5Cst99++UMd//sMcB4j7/Cf8qtbCHWjdmLao5v4Jv4EFbMs44TFeY0BGbH\n\t\t\t7vk2DmqV9gmaBmf0ZXH4yqSxJeD+PIs1BGe64E92hfx//DZrtenNLQNiTrM9AM+v\n\t\t\tdqBpVoNq0qjU51Bx5rU2BXcFbXvI5MT9TNUhXwIDAQABAoIBAGdNtfYDiap6bzst\n\t\t\tyhCiI8m9TtrhZw4MisaEaN/ll3XSjaOG2dvV6xMZCMV+5TeXDHOAZnY18Yi18vzz\n\t\t\t4Ut2TnNFzizCECYNaA2fST3WgInnxUkV3YXAyP6CNxJaCmv2aA0yFr2kFVSeaKGt\n\t\t\tymvljNp2NVkvm7Th8fBQBO7I7AXhz43k0mR7XmPgewe8ApZOG3hstkOaMvbWAvWA\n\t\t\tzCZupdDjZYjOJqlA4eEA4H8/w7F83r5CugeBE8LgEREjLPiyejrU5H1fubEY+h0d\n\t\t\tl5HZBJ68ybTXfQ5U9o/QKA3dd0toBEhhdRUDGzWtjvwkEQfqF1reGWj/tod/gCpf\n\t\t\tDFi6X0ECgYEA4wOv/pjSC3ty6TuOvKX2rOUiBrLXXv2JSxZnMoMiWI5ipLQt+RYT\n\t\t\tVPafL/m7Dn6MbwjayOkcZhBwk5CNz5A6Q4lJ64Mq/lqHznRCQQ2Mc1G8eyDF/fYL\n\t\t\tZe2pLvwP9VD5jTc2miDfw+MnvJhywRRLcemDFP8k4hQVtm8PMp3ZmNECgYEA4gz7\n\t\t\twzObR4gn8ibe617uQPZjWzUj9dUHYd+in1gwBCIrtNnaRn9I9U/Q6tegRYpii4ys\n\t\t\tc176NmU+umy6XmuSKV5qD9bSpZWG2nLFnslrN15Lm3fhZxoeMNhBaEDTnLT26yoi\n\t\t\t33gp0mSSWy94ZEqipms+ULF6sY1ZtFW6tpGFoy8CgYAQHhnnvJflIs2ky4q10B60\n\t\t\tZcxFp3rtDpkp0JxhFLhiizFrujMtZSjYNm5U7KkgPVHhLELEUvCmOnKTt4ap/vZ0\n\t\t\tBxJNe1GZH3pW6SAvGDQpl9sG7uu/vTFP+lCxukmzxB0DrrDcvorEkKMom7ZCCRvW\n\t\t\tKZsZ6YeH2Z81BauRj218kQKBgQCUV/DgKP2985xDTT79N08jUo3hTP5MVYCCuj/+\n\t\t\tUeEw1TvZcx3LJby7P6Xad6a1/BqveaGyFKIfEFIaBUBItk801sDDpDaYc4gL00Xc\n\t\t\t7lFuBHOZkxJYlss5QrGpuOEl9ZwUt5IrFLBdYaKqNHzNVC1pCPfb/JyH6Dr2HUxq\n\t\t\tgxUwAQKBgQCcU6G2L8AG9d9c0UpOyL1tMvFe5Ttw0KjlQVdsh1MP6yigYo9DYuwu\n\t\t\tbHFVW2r0dBTqegP2/KTOxKzaHfC1qf0RGDsUoJCNJrd1cwoCLG8P2EF4w3OBrKqv\n\t\t\t8u4ytY0F+Vlanj5lm3TaoHSVF1+NWPyOTiwevIECGKwSxvlki4fDAA==\n\t\t\t-----END RSA PRIVATE KEY-----\n\n\t\t\t--End Private Key--\n\n\t\t\tAfter the TLS authentication is completed this particular sample does NOT use the session key that is generated via TLS. Instead, it uses a FakeTLS scheme, where a 'fake' TLS packet header is prepended to the packet data which is encrypted with custom xor encryption scheme. The FakeTLS packet format and a Python 3 script to decrypt network traffic is given below.\n\n\t\t\t--Begin FakeTLS Packet Structure--\n\n\t\t\t17 03 02 <2 Byte data length> <4 Byte Key> <data>\n\n\t\t\t--End Fake TLS Packet Structure--\n\n\t\t\tNote: Each \"Key\" is generated by the sender rand( ).\n\n\t\t\t--Begin Python 3 Network Communication Decode Script--\n\n\t\t\tdef decode_pkt(enc, key):\n\t\t\t\u00a0\u00a0\u00a0dec = b''\n\t\t\t\u00a0\u00a0\u00a0sbox = b''\n\n\t\t\t\u00a0\u00a0\u00a0addVal = len(enc) * key & 0xff \u00a0\u00a0\u00a0\n\t\t\t\u00a0\u00a0\u00a0for i in range(0x100):\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0sbox += bytes([((i + 1) * key) & 0xff])\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\n\t\t\t\u00a0\u00a0\u00a0indexVal = addVal;\n\t\t\t\u00a0\u00a0\u00a0for b in enc:\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0dec += bytes([b ^ sbox[indexVal]])\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0indexVal = indexVal + addVal & 0xff; \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\n\t\t\t\u00a0\u00a0\u00a0return dec\n\n\t\t\t--End Python 3 Network Communication Decode Script--\n\n\t\t\tAfter the TLS authentication, the sample performs a handshake with the C2, where hardcoded 32 Byte strings are exchanged, as well as a Victim ID and the Victim Internal IP. After this exchange, the implant sends it\u2019s Victim Information (Figure 2), and then waits for tasking from the C2.\nScreenshots\n \n\nFigure 1 - Configuration Structure.\n\n \n\nFigure 2 - Victim Information Structure.\n\n \n\nFigure 3 - Implant Functionality.\n\n \n\nFigure 4 - Session Structure.\n\n\n\n107.6.12.135\nTags\ncommand-and-control\nPorts\n\n443 TCP\n\nRelationships\n\n\n\n107.6.12.135\nConnected_From\n52f83cdaefd194fff3d387631d5693a709cd7b3a20a072e7827c4d4218d57695\n\n\n\nDescription\nHardcoded C2 IP.\n\n\n210.202.40.35\nTags\ncommand-and-control\nPorts\n\n443 TCP\n\nRelationships\n\n\n\n210.202.40.35\nConnected_From\n52f83cdaefd194fff3d387631d5693a709cd7b3a20a072e7827c4d4218d57695\n\n\n\nDescription\nHardcoded C2 IP.\n\nRelationship Summary\n\n\n\n\n52f83cdaef...\nConnected_To\n107.6.12.135\n\n\n52f83cdaef...\nConnected_To\n210.202.40.35\n\n\n107.6.12.135\nConnected_From\n52f83cdaefd194fff3d387631d5693a709cd7b3a20a072e7827c4d4218d57695\n\n\n210.202.40.35\nConnected_From\n52f83cdaefd194fff3d387631d5693a709cd7b3a20a072e7827c4d4218d57695\n\n\n\n\nMitigation\n\n// The following Snort rule can be used to detect the FakeTLS handshake packets by targeting to a\n\t\t\t// logical inconsistency in the appdata packet sizes due to the inclusion of the 4 Byte decode key\n\t\t\t// before the data, but not being included in the data length.\n\n\t\t\talert tcp any any -> any any (msg:\"Malware Detected\"; content:\"PolarSSL\"; pcre:\"/ \\x17\\x03\\x02\\x00\\x23.{39}\\x17\\x03\\x02/\"; rev:1; sid:99999999;)\n\nRecommendations\n\nCISA recommends that users and administrators consider using the following best practices to strengthen the security posture of their organization's systems. Any configuration changes should be reviewed by system owners and administrators prior to implementation to avoid unwanted impacts.\n\nMaintain up-to-date antivirus signatures and engines.\nKeep operating system patches up-to-date.\nDisable File and Printer sharing services. If these services are required, use strong passwords or Active Directory authentication.\nRestrict users' ability (permissions) to install and run unwanted software applications. Do not add users to the local administrators group unless required.\nEnforce a strong password policy and implement regular password changes.\nExercise caution when opening e-mail attachments even if the attachment is expected and the sender appears to be known.\nEnable a personal firewall on agency workstations, configured to deny unsolicited connection requests.\nDisable unnecessary services on agency workstations and servers.\nScan for and remove suspicious e-mail attachments; ensure the scanned attachment is its \"true file type\" (i.e., the extension matches the file header).\nMonitor users' web browsing habits; restrict access to sites with unfavorable content.\nExercise caution when using removable media (e.g., USB thumb drives, external drives, CDs, etc.).\nScan all software downloaded from the Internet prior to executing.\nMaintain situational awareness of the latest threats and implement appropriate Access Control Lists (ACLs).\n\nAdditional information on malware incident prevention and handling can be found in National Institute of Standards and Technology (NIST) Special Publication 800-83, \"Guide to Malware Incident Prevention & Handling for Desktops and Laptops\".\n\nContact Information\n\n\n1-888-282-0870\nNCCICCustomerService@us-cert.gov (UNCLASS)\nus-cert@dhs.sgov.gov (SIPRNET)\nus-cert@dhs.ic.gov (JWICS)\n\nCISA continuously strives to improve its products and services. You can help by answering a very short series of questions about this product at the following URL: https://us-cert.gov/forms/feedback/\n\nDocument FAQ\n\nWhat is a MIFR? A Malware Initial Findings Report (MIFR) is intended to provide organizations with malware analysis in a timely manner. In most instances this report will provide initial indicators for computer and network defense. To request additional analysis, please contact CISA and provide information regarding the level of desired analysis.\nWhat is a MAR? A Malware Analysis Report (MAR) is intended to provide organizations with more detailed malware analysis acquired via manual reverse engineering. To request additional analysis, please contact CISA and provide information regarding the level of desired analysis.\nCan I edit this document? This document is not to be edited in any way by recipients. All comments or questions related to this document should be directed to the CISA at 1-888-282-0870 or soc@us-cert.gov.\nCan I submit malware to CISA? Malware samples can be submitted via three methods:\n\nWeb: https://malware.us-cert.gov\nE-Mail: submit@malware.us-cert.gov\nFTP: ftp.malware.us-cert.gov (anonymous)\n\nCISA encourages you to report any suspicious activity, including cybersecurity incidents, possible malicious code, software vulnerabilities, and phishing-related scams. Reporting forms can be found on CISA's homepage at www.us-cert.gov.\n\n\n\n\n\n\n\n\nRevisions\n\nFebruary 14, 2020: Initial Version\n",
  "cves": [
    "CVE-2022-42475",
    "CVE-2022-47966"
  ],
  "techniques": [],
  "advisory": "ar20-045f",
  "title": "MAR-10271944-3.v1 \u2013 North Korean Trojan: BUFFETLINE | CISA",
  "source": "analysis-reports",
  "id": "d7bb7cb104603f5ff2f790362223cb46331c70af25c179ed4d0e9e60ea5e1597"
}