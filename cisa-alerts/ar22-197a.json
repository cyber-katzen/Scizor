{
  "markdown": "\n\n\n\n\n\n\nNotification\n\nThis report is provided \"as is\" for informational purposes only. The Department of Homeland Security (DHS) does not provide any warranties of any kind regarding any information contained herein. The DHS does not endorse any commercial product or service referenced in this bulletin or otherwise.\nThis document is marked TLP:WHITE--Disclosure is not limited. Sources may use TLP:WHITE when information carries minimal or no foreseeable risk of misuse, in accordance with applicable rules and procedures for public release. Subject to standard copyright rules, TLP:WHITE information may be distributed without restriction. For more information on the Traffic Light Protocol (TLP), see http://www.cisa.gov/tlp.\n\nSummary\n\nDescription\nThis CISA submission included one unique file. This file is a malicious loader that contains an embedded executable. This embedded executable is a Remote Access Tool (RAT) that provides a vast array of Command and Control (C2) capabilities. These C2 capabilities include the ability to remotely monitor a system's desktop, gain reverse shell access, exfiltrate data, and upload and execute additional payloads. The malware can also function as a proxy, allowing a remote operator to pivot to other systems.\nFor a downloadable copy of IOCs, see:\u00a0MAR-10382580.r2.v1.WHITE_stix\nSubmitted Files (1)\n4cd7efdb1a7ac8c4387c515a7b1925931beb212b95c4f9d8b716dbe18f54624f (ilasvc.exe)\nIPs (1)\n151.106.30.120\n\nFindings\n\n4cd7efdb1a7ac8c4387c515a7b1925931beb212b95c4f9d8b716dbe18f54624f\nTags\nremote-access-trojantrojan\nDetails\n\n\n\nName\nilasvc.exe\n\n\nSize\n1056768 bytes\n\n\nType\nPE32+ executable (GUI) x86-64, for MS Windows\n\n\nMD5\n05d38bc82d362dd57190e3cb397f807d\n\n\nSHA1\n52b04d348adf7e42e7c7d6c2ec9aabbcaba07188\n\n\nSHA256\n4cd7efdb1a7ac8c4387c515a7b1925931beb212b95c4f9d8b716dbe18f54624f\n\n\nSHA512\nd03894ad9ce7a5f0e58a5e6385926263507f2571e3cbe60fce1ed5463a77152a7779d8b494ee7a6ff4986de19c0a92cbcc8dae5697d69dc196c474723ee553ef\n\n\nssdeep\n24576:mStdBO8/kIH46+jHd3JURkxXH3rg9fNJa9y5xmDYzgLu8b7oCK:mST2+qXHbg91Ja9y5MOgL3K\n\n\nEntropy\n7.599564\n\n\n\nAntivirus\n\n\n\nESET\na variant of Win64/Injector.HA.gen trojan\n\n\nIKARUS\nTrojan.Win64.Injector\n\n\n\nYARA Rules\n\nrule CISA_10382580_03 : loader\n\t\t\t\t{\n\t\t\t\t\u00a0\u00a0\u00a0meta:\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Author = \"CISA Code & Media Analysis\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Incident = \"10382580\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Date = \"2022-05-02\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Last_Modified = \"20220602_1200\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Actor = \"n/a\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Category = \"Loader\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Family = \"n/a\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Description = \"Detects loader samples\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0MD5_1 = \"3764a0f1762a294f662f3bf86bac776f\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0SHA256_1 = \"f7f7b059b6a7dbd75b30b685b148025a0d4ceceab405e553ca28cacdeae43fab\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0MD5_2 = \"21fa1a043460c14709ef425ce24da4fd\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0SHA256_2 = \"66966ceae7e3a8aace6c27183067d861f9d7267aed30473a95168c3fe19f2c16\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0MD5_3 = \"e9c2b8bd1583baf3493824bf7b3ec51e\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0SHA256_3 = \"7ea294d30903c0ab690bc02b64b20af0cfe66a168d4622e55dee4d6233783751\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0MD5_4 = \"de0d57bdc10fee1e1e16e225788bb8de\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0SHA256_4 = \"33b89b8915aaa59a3c9db23343e8c249b2db260b9b10e88593b6ff2fb5f71d2b\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0MD5_5 = \"9b071311ecd1a72bfd715e34dbd1bd77\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0SHA256_5 = \"3c2c835042a05f8d974d9b35b994bcf8d5a0ce19128ebb362804c2d0f3eb42c0\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0MD5_6 = \"05d38bc82d362dd57190e3cb397f807d\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0SHA256_6 = \"4cd7efdb1a7ac8c4387c515a7b1925931beb212b95c4f9d8b716dbe18f54624f\"\n\t\t\t\t\u00a0\u00a0\u00a0strings:\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0$s0 = { B8 01 00 00 00 48 6B C0 00 C6 44 04 20 A8 B8 01 }\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0$s1 = { 00 00 48 6B C0 01 C6 44 04 20 9A B8 01 00 00 }\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0$s2 = { 48 6B C0 02 C6 44 04 20 93 B8 01 00 00 00 48 }\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0$s3 = { C0 03 C6 44 04 20 9B B8 01 00 00 00 48 6B C0 }\n\t\t\t\t\u00a0\u00a0\u00a0condition:\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0all of them\n\t\t\t\t}\n\nssdeep Matches\nNo matches found.\nPE Metadata\n\n\n\nCompile Date\n2020-04-30 19:43:57-04:00\n\n\nImport Hash\n99197f3296550481a848ea8d4e097487\n\n\nCompany Name\nSysinternals - www.sysinternals.com\n\n\nFile Description\nFlush cached data to disk.\n\n\nInternal Name\nSync\n\n\nLegal Copyright\nCopyright (C) 2016 Mark Russinovich\n\n\nOriginal Filename\nSync.exe\n\n\nProduct Name\nSysinternals Sync\n\n\nProduct Version\n2.2\n\n\n\nPE Sections\n\n\n\nMD5\nName\nRaw Size\nEntropy\n\n\na917582fc3e796bb1d43bfce05c0cfb3\nheader\n1024\n3.105665\n\n\n5fbd29958a5484173910cb06dcfc4e9e\n.text\n310784\n6.453454\n\n\n34b6e6a847957ef90ef9460e0f8dd3d0\n.rdata\n98304\n5.168254\n\n\ne32c1166142d325350f6e6443db43144\n.data\n3584\n2.609738\n\n\nffc4ab2046acad015eba98898e975ad5\n.pdata\n18432\n5.804487\n\n\n502485fa11633b4eb9eaef15fcb482a5\n.rsrc\n622080\n7.975998\n\n\n69687e4a3ffbefbe782d13637ce8605a\n.reloc\n2560\n4.913641\n\n\n\nRelationships\n\n\n\n4cd7efdb1a...\nConnected_To\n151.106.30.120\n\n\n\nDescription\nThis malware is a 64-bit Windows loader that contains an embedded encrypted malicious executable. During runtime, this embedded executable is decrypted and loaded into memory, never touching the system's hard disk. The encrypted executable is similar in functionality to the file 66966ceae7e3a8aace6c27183067d861f9d7267aed30473a95168c3fe19f2c16, described in report MAR-10382580.r1.v1. The malware embedded within this loader attempts to communicate with the hard-coded C2 Internet Protocol (IP) address 151[.]106[.]30[.]120. This malware provides a vast array of C2 capabilities including the ability to log keystrokes, upload and execute additional payloads, function as a proxy, and have graphical user interface (GUI) access over a target Windows system's desktop. Many of the structures utilized to implement the C2 capabilities in this malware appear to be derived from the same source code as 66966ceae7e3a8aace6c27183067d861f9d7267aed30473a95168c3fe19f2c16, however this malware utilizes much more complex obfuscation to hinder the analysis of its code structures. This malware also utilizes a more complex encryption algorithm to secure its network communications.\n\n\t\t\tThe malware embedded within this binary utilizes a secure strings scheme based on a rotating XOR cipher (Figure 7). The strings are partially decrypted and listed below with their corresponding approximate memory address locations during runtime -- assuming a base address of 0x260000.\n\n\t\t\t--Begin Decoded Strings--\n\n\t\t\t('0x264e32', 'RegQueryValueExl')\n\t\t\t('0x264f58', 'RegQueryValueEx\\\\')\n\t\t\t('0x265325', 'GetCurrentProcessId')\n\t\t\t('0x265bc9', 'GetEnvironmentVariableW')\n\t\t\t('0x265cc1', 'ShellExecuteExW')\n\t\t\t('0x268b20', 'GetAdaptersInfo')\n\t\t\t('0x268c49', 'GetAdaptersInfo')\n\t\t\t('0x26a77c', 'EnumDependentServicesW')\n\t\t\t('0x26a98b', 'EnumDependentServi')\n\t\t\t('0x26abb9', 'ControlService')\n\t\t\t('0x26ad5b', 'QueryServiceStatus')\n\t\t\t('0x26af62', 'CloseServiceHandle')\n\t\t\t('0x26c3ed', 'GetComputerNameW')\n\t\t\t('0x277621', 'GetEnvironmentVariableW')\n\t\t\t('0x27856f', 'GetLogicalDriveStringsW')\n\t\t\t('0x2788e5', 'GetVolumeInformationW')\n\t\t\t('0x278f87', 'FindFirstFileW')\n\t\t\t('0x27a3f3', 'GetSystemDirectoryW')\n\t\t\t('0x27bf04', 'SetFilePointerEx')\n\t\t\t('0x27d125', 'RemoveDirectoryW')\n\t\t\t('0x27daa7', 'FindFirstFileW')\n\t\t\t('0x284074', 'GetClipboardData')\n\t\t\t('0x2850d4', 'GetForegroundWindow')\n\t\t\t('0x28513d', 'GetDesktopWindow')\n\t\t\t('0x28b443', 'GetProcessHeap')\n\t\t\t('0x28b533', 'CoInitializeEx')\n\t\t\t('0x28b655', 'StartServiceCtrlDispatch')\n\t\t\t('0x28cd63', 'GetModuleFileNameW')\n\t\t\t('0x2636f3', 'UnkownError')\n\t\t\t('0x2649f3', \"Display''''\")\n\t\t\t('0x264ab0', 'RegOpenKeyExW')\n\t\t\t('0x264af0', 'ADVAPI32.dll')\n\t\t\t('0x264ca0', 'RegEnumKeyExW')\n\t\t\t('0x264ce0', 'ADVAPI32.dll')\n\t\t\t('0x264d80', 'RegOpenKeyExW')\n\t\t\t('0x264dc0', 'ADVAPI32.dll')\n\t\t\t('0x264e90', 'ADVAPI32.dll')\n\t\t\t('0x264fb0', 'ADVAPI32.dll')\n\t\t\t('0x265160', 'RegCloseKey')\n\t\t\t('0x2651b0', 'ADVAPI32.dll')\n\t\t\t('0x265390', 'KERNEL32.dll')\n\t\t\t('0x265c30', 'KERNEL32.dll')\n\t\t\t('0x265d20', 'SHELL32.dll')\n\t\t\t('0x266950', 'GetVersionExW')\n\t\t\t('0x266990', 'KERNEL32.dll')\n\t\t\t('0x266b63', 'CurrentMajorVersionNum')\n\t\t\t('0x266c33', 'CurrentMajorVersionNum')\n\t\t\t('0x268b80', 'IPHLPAPI.dll')\n\t\t\t('0x268c03', 'KERNEL32.dll')\n\t\t\t('0x268ca0', 'IPHLPAPI.dll')\n\t\t\t('0x26a710', 'GetTickCount')\n\t\t\t('0x26a750', 'KERNEL32.dll')\n\t\t\t('0x26a7b8', 'EnumDepende')\n\t\t\t('0x26a7f3', 'Advapi32.dll')\n\t\t\t('0x26a872', 'GetLastError')\n\t\t\t('0x26a8b0', 'KERNEL32.dll')\n\t\t\t('0x26a940', 'KERNEL32.dll')\n\t\t\t('0x26aa17', 'Advapi32.dll')\n\t\t\t('0x26aafb', 'OpenServiceW')\n\t\t\t('0x26ab4b', 'Advapi32.dll')\n\t\t\t('0x26ac33', 'Advapi32.dll')\n\t\t\t('0x26acd4', 'Sleep')\n\t\t\t('0x26ad24', 'KERNEL32.dll')\n\t\t\t('0x26adea', 'Advapi32.dll')\n\t\t\t('0x26aeaa', 'GetTickCount')\n\t\t\t('0x26af03', 'KERNEL32.dll')\n\t\t\t('0x26afdb', 'Advapi32.dll')\n\t\t\t('0x26c2e0', 'GetUserNameW')\n\t\t\t('0x26c320', 'Advapi32.dll')\n\t\t\t('0x26c450', 'KERNEL32.dll')\n\t\t\t('0x26cad0', 'KERNEL32.dll')\n\t\t\t('0x273220', 'closesocket')\n\t\t\t('0x274a90', 'getsockname')\n\t\t\t('0x275280', 'getsockname')\n\t\t\t('0x276583', 'Erroroccurswhiles')\n\t\t\t('0x276714', 'NoTabsinclient.')\n\t\t\t('0x2769e3', 'NoTabsinclient.')\n\t\t\t('0x276b60', 'KERNEL32.dll')\n\t\t\t('0x277690', 'KERNEL32.dll')\n\t\t\t('0x2785e0', 'KERNEL32.dll')\n\t\t\t('0x2786d3', 'ErroroccursinGetL')\n\t\t\t('0x278950', 'KERNEL32.dll')\n\t\t\t('0x2789e0', 'GetDriveTypeW')\n\t\t\t('0x278a20', 'KERNEL3')\n\t\t\t('0x278f10', 'PathCombineW')\n\t\t\t('0x278f50', 'SHLWAPI.dll')\n\t\t\t('0x278fa4', 'FindFirstFile')\n\t\t\t('0x278fe0', 'KERNEL32.dll')\n\t\t\t('0x279120', 'PathCombineW')\n\t\t\t('0x279160', 'SHLWAPI.dll')\n\t\t\t('0x2791c1', 'CreateFileW')\n\t\t\t('0x279200', 'KERNEL32.dll')\n\t\t\t('0x279280', 'GetFileTime')\n\t\t\t('0x2792c0', 'KERNEL32.dll')\n\t\t\t('0x279320', 'CloseHandle')\n\t\t\t('0x279360', 'KERNEL32.dll')\n\t\t\t('0x2796a0', 'FindNextFileW')\n\t\t\t('0x2796e0', 'KERNEL32.dll')\n\t\t\t('0x2797b3', 'Cannotaccesstofold')\n\t\t\t('0x27a460', 'KERNEL32.dll')\n\t\t\t('0x27a4e3', 'kernel32.dll')\n\t\t\t('0x27a540', 'PathCombineW')\n\t\t\t('0x27a580', 'SHLWAPI.dll')\n\t\t\t('0x27a5e0', 'CreateFileW')\n\t\t\t('0x27a620', 'KERNEL32.dll')\n\t\t\t('0x27a692', 'GetFileTime')\n\t\t\t('0x27a6d0', 'KERNEL32.dll')\n\t\t\t('0x27a730', 'CloseHandle')\n\t\t\t('0x27a770', 'KERNEL32.dll')\n\t\t\t('0x27acf0', 'CreateFileW')\n\t\t\t('0x27ad30', 'KERNEL32.dll')\n\t\t\t('0x27ade0', 'GetFileTime')\n\t\t\t('0x27ae20', 'KERNEL32.dll')\n\t\t\t('0x27af80', 'GetLastError')\n\t\t\t('0x27afc0', 'KERNEL32.dll')\n\t\t\t('0x27b430', 'GetLastError')\n\t\t\t('0x27b470', 'KERNEL32.dll')\n\t\t\t('0x27b932', 'CreateFileW')\n\t\t\t('0x27b970', 'KERNEL32.dll')\n\t\t\t('0x27b9f0', 'GetLastError')\n\t\t\t('0x27ba30', 'KERNEL32.dll')\n\t\t\t('0x27bf60', 'KERNEL32.dll')\n\t\t\t('0x27c000', 'KERNEL32.dll')\n\t\t\t('0x27c080', 'KERNEL32.dll')\n\t\t\t('0x27c1b0', 'CloseHandle')\n\t\t\t('0x27c1f0', 'KERNEL32.dll')\n\t\t\t('0x27c270', 'GetLastError')\n\t\t\t('0x27c2b0', 'KERNEL32.dll')\n\t\t\t('0x27c3c3', 'Nodescriptorfound.')\n\t\t\t('0x27c860', 'KERNEL32.dll')\n\t\t\t('0x27c950', 'CloseHandle')\n\t\t\t('0x27c990', 'KERNEL32.dll')\n\t\t\t('0x27c9f0', 'GetLastError')\n\t\t\t('0x27ca30', 'KERNEL32.dll')\n\t\t\t('0x27cb00', 'CloseHandle')\n\t\t\t('0x27cb40', 'KERNEL32.dll')\n\t\t\t('0x27cdc0', 'CloseHandle')\n\t\t\t('0x27ce00', 'KERNEL32.dll')\n\t\t\t('0x27d180', 'KERNEL32.dll')\n\t\t\t('0x27d1f0', 'DeleteFileW')\n\t\t\t('0x27d230', 'KERNEL32.dll')\n\t\t\t('0x27d290', 'GetLastError')\n\t\t\t('0x27d2d0', 'KERNEL32.dll')\n\t\t\t('0x27d3e3', 'Deletesuccessed.')\n\t\t\t('0x2c3743', 'Deletepayloadcorrupt')\n\t\t\t('0x27da30', 'PathCombineW')\n\t\t\t('0x27da70', 'SHLWAPI.dll')\n\t\t\t('0x27dac4', 'FindFirstFile')\n\t\t\t('0x27db00', 'KERNEL32.dll')\n\t\t\t('0x27dc20', 'PathCombineW')\n\t\t\t('0x27dc60', 'SHLWAPI.dll')\n\t\t\t('0x27ded1', 'FindNex2@\\x04@%@')\n\t\t\t('0x27df10', 'KERNEL32.dll')\n\t\t\t('0x284030', 'OpenClipboard')\n\t\t\t('0x284110', 'Kernel32.dll')\n\t\t\t('0x2841b3', '<CTRL+V>')\n\t\t\t('0x284253', '</CTRL+V>')\n\t\t\t('0x284fe3', 'Composition')\n\t\t\t('0x285073', 'Sfwr\\\\irsf\\\\i')\n\t\t\t('0x28507c', 'otaeMcootW')\n\t\t\t('0x285484', 'Monitor%d[%d*%d]')\n\t\t\t('0x28b280', 'DeleteObject')\n\t\t\t('0x28b400', 'KERNEL32.dll')\n\t\t\t('0x28b4a0', 'KERNEL32.dll')\n\t\t\t('0x28b6d0', 'Advapi32.dll')\n\t\t\t('0x28cdc0', 'KERNEL32.dll')\n\t\t\t('0x28d230', 'ExitProcess')\n\t\t\t('0x28d270', 'KERNEL32.dll')\n\t\t\t('0x28d3b0', 'GetTempPathW')\n\t\t\t('0x28d3f0', 'KERNEL32.dll')\n\t\t\t('0x28d4a0', 'PathCombineW')\n\t\t\t('0x28d4e0', 'SHLWAPI.dll')\n\n\t\t\t--End Decoded Strings--\nScreenshots\n \n\nFigure 1 - This screenshot illustrates the malware sending an initial block of data to its hard-coded C2 server. As with the malware sample 66966ceae7e3a8aace6c27183067d861f9d7267aed30473a95168c3fe19f2c16 in MAR-10382580.r1.v1, this malware's initial outbound block contains a chunk of random data and the unicode string \"hello\".\n\n \n\nFigure 2 - This screenshot illustrates the malware's hard-coded cryptographic key it utilizes to encrypt and decrypt its network communications traffic via the algorithm in Figure 4.\n\n \n\nFigure 3 - This screenshot illustrates the data returned to the remote operator if they simply reply to the malware's initial \"hello\" packet with their own \"hello\" packet. This data block contains the compromised system's MAC address, IP address, OS version, processor type, as well as other system specific information. The cryptographic algorithm illustrated in Figure 4 will be utilized to encrypt this data before it is sent to the remote C2 server.\n\n \n\nFigure 4 - This screenshot illustrates code extracted from this malware's primary cryptographic function. This algorithm will be utilized to encrypt and decrypt all network traffic exchanged between this implant and its remote operator. Although the malware does communicate over port 443, this algorithm is utilized rather than SSL. Static analysis indicates a hard-coded 16 byte key is utilized to encrypt and decrypt network traffic. That key can be observed in Figure 2.\n\n \n\nFigure 5 - This screenshot illustrates the names of various classes utilized by this implant. The class VK1AlgorithmEngine contains the function which is utilized to encrypt and decrypt this malware's network traffic (Figure 4). Notably, the previously analyzed sample 66966ceae7e3a8aace6c27183067d861f9d7267aed30473a95168c3fe19f2c16 utilizes a different class to implement its network traffic encryption. That sample's cryptographic class name is VSimpleXorAlgorithmEngine. This explains why the samples, while structurally and functionally very similar, utilize a different algorithm to secure their network communications.\n\n \n\nFigure 6 - This screenshot illustrates several malicious classes this malware utilizes. The class VFeatureCmd provides the function which implements the malware's reverse shell capability -- providing the remote hacker direct access to a Windows command shell. The class VFeatureKeylogger provides advanced key logging capabilities. Static analysis indicates the VFeatureSocks and VFeatureTunnel classes implement the malware's TCP proxying capability. And the VFeatureScreen class provides functions which allow the remote operator to monitor victim user's desktop / GUI sessions. These same classes are utilized in malware sample 66966ceae7e3a8aace6c27183067d861f9d7267aed30473a95168c3fe19f2c16 in MAR-10382580.r1.v1.\n\n \n\nFigure 7 - This malware sample contains many encoded strings. As illustrated in this screenshot, many of the strings are encoded using an XOR cipher utilizing a single-byte key. A different XOR single-byte key will be used to decode each string.\n\n \n\nFigure 8 - his screenshot illustrates a misspelling with the word \"modifing\" in the malware's source code. This same misspelling can be observed in the plugin embedded within malware sample 66966ceae7e3a8aace6c27183067d861f9d7267aed30473a95168c3fe19f2c16 in MAR-10382580.r1.v1. This piece of information may be useful for attribution purposes.\n\n\n\n151.106.30.120\nTags\ncommand-and-control\nPorts\n\n443 TCP\n\nWhois\n% Abuse contact for '151.106.30.0 - 151.106.30.255' is 'pivps.com@gmail.com'\n\n\t\t\tinetnum: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0151.106.30.0 - 151.106.30.255\n\t\t\tnetname: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0VELIANET-FR-PINETLLC\n\t\t\tdescr: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 Pi NET, LLC\n\t\t\tcountry: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0FR\n\t\t\torg: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0ORG-PNL20-RIPE\n\t\t\tadmin-c: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0PNL16-RIPE\n\t\t\ttech-c: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 PNL16-RIPE\n\t\t\tstatus: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 LEGACY\n\t\t\tremarks: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0ticket.velia.net 110128\n\t\t\tnotify: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 hostmaster@velia.net\n\t\t\tmnt-by: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 FGK-MNT\n\t\t\tcreated: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a02018-04-24T19:17:51Z\n\t\t\tlast-modified: 2018-04-24T19:17:51Z\n\t\t\tsource: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 RIPE\n\n\t\t\torganisation: ORG-PNL20-RIPE\n\t\t\torg-name: \u00a0\u00a0\u00a0 Pi NET, LLC\n\t\t\torg-type: \u00a0\u00a0\u00a0 OTHER\n\t\t\taddress: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0No 74, Tang Thiet Giap, Co Nhue\n\t\t\taddress: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Tu Liem\n\t\t\taddress: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0100000 Hanoi\n\t\t\taddress: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Viet Nam\n\t\t\tphone: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 +84 977471775\n\t\t\te-mail: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 pivps.com@gmail.com\n\t\t\tadmin-c: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0PNL16-RIPE\n\t\t\ttech-c: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 PNL16-RIPE\n\t\t\tabuse-c: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0PNL16-RIPE\n\t\t\tmnt-ref: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0FGK-MNT\n\t\t\tmnt-by: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 FGK-MNT\n\t\t\tcreated: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a02017-09-07T11:08:29Z\n\t\t\tlast-modified: 2017-09-07T11:08:29Z\n\t\t\tsource: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 RIPE\n\n\t\t\trole: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 Pi NET, LLC\n\t\t\taddress: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0No 74, Tang Thiet Giap, Co Nhue\n\t\t\taddress: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Tu Liem\n\t\t\taddress: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0100000 Hanoi\n\t\t\taddress: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Viet Nam\n\t\t\tphone: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 +84 977471775\n\t\t\te-mail: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 pivps.com@gmail.com\n\t\t\tnic-hdl: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0PNL16-RIPE\n\t\t\tmnt-by: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 FGK-MNT\n\t\t\tcreated: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a02017-09-07T11:08:29Z\n\t\t\tlast-modified: 2017-09-07T11:08:29Z\n\t\t\tsource: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 RIPE\n\t\t\tabuse-mailbox: pivps.com@gmail.com\n\n\t\t\troute: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 151.106.0.0/19\n\t\t\tdescr: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 velia.net\n\t\t\torigin: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 AS29066\n\t\t\tnotify: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 hostmaster@velia.net\n\t\t\tmnt-by: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 FGK-MNT\n\t\t\tcreated: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a02017-11-03T11:55:17Z\n\t\t\tlast-modified: 2017-11-03T11:55:17Z\n\t\t\tsource: \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 RIPE\nRelationships\n\n\n\n151.106.30.120\nConnected_From\n4cd7efdb1a7ac8c4387c515a7b1925931beb212b95c4f9d8b716dbe18f54624f\n\n\n\nDescription\nThis IP address is the hard-coded C2 the malware communicates with over port 443.\n\nRelationship Summary\n\n\n\n\n4cd7efdb1a...\nConnected_To\n151.106.30.120\n\n\n151.106.30.120\nConnected_From\n4cd7efdb1a7ac8c4387c515a7b1925931beb212b95c4f9d8b716dbe18f54624f\n\n\n\n\nRecommendations\n\nCISA recommends that users and administrators consider using the following best practices to strengthen the security posture of their organization's systems. Any configuration changes should be reviewed by system owners and administrators prior to implementation to avoid unwanted impacts.\n\nMaintain up-to-date antivirus signatures and engines.\nKeep operating system patches up-to-date.\nDisable File and Printer sharing services. If these services are required, use strong passwords or Active Directory authentication.\nRestrict users' ability (permissions) to install and run unwanted software applications. Do not add users to the local administrators group unless required.\nEnforce a strong password policy and implement regular password changes.\nExercise caution when opening e-mail attachments even if the attachment is expected and the sender appears to be known.\nEnable a personal firewall on agency workstations, configured to deny unsolicited connection requests.\nDisable unnecessary services on agency workstations and servers.\nScan for and remove suspicious e-mail attachments; ensure the scanned attachment is its \"true file type\" (i.e., the extension matches the file header).\nMonitor users' web browsing habits; restrict access to sites with unfavorable content.\nExercise caution when using removable media (e.g., USB thumb drives, external drives, CDs, etc.).\nScan all software downloaded from the Internet prior to executing.\nMaintain situational awareness of the latest threats and implement appropriate Access Control Lists (ACLs).\n\nAdditional information on malware incident prevention and handling can be found in National Institute of Standards and Technology (NIST) Special Publication 800-83, \"Guide to Malware Incident Prevention & Handling for Desktops and Laptops\".\n\nContact Information\n\n\n1-888-282-0870\nCISA Central\u00a0(UNCLASS)\nCISA SIPR (SIPRNET)\nCISA IC (JWICS)\n\nCISA continuously strives to improve its products and services. You can help by answering a very short series of questions about this product at the following URL: https://us-cert.cisa.gov/forms/feedback/\n\nDocument FAQ\n\nWhat is a MIFR? A Malware Initial Findings Report (MIFR) is intended to provide organizations with malware analysis in a timely manner. In most instances this report will provide initial indicators for computer and network defense. To request additional analysis, please contact CISA and provide information regarding the level of desired analysis.\nWhat is a MAR? A Malware Analysis Report (MAR) is intended to provide organizations with more detailed malware analysis acquired via manual reverse engineering. To request additional analysis, please contact CISA and provide information regarding the level of desired analysis.\nCan I edit this document? This document is not to be edited in any way by recipients. All comments or questions related to this document should be directed to the CISA at 1-888-282-0870 or CISA Central.\nCan I submit malware to CISA? Malware samples can be submitted via three methods:\n\nWeb: https://malware.us-cert.gov\nE-Mail: submit@malware.us-cert.gov\nFTP: ftp.malware.us-cert.gov (anonymous)\n\nCISA encourages you to report any suspicious activity, including cybersecurity incidents, possible malicious code, software vulnerabilities, and phishing-related scams. Reporting forms can be found on CISA's homepage at www.cisa.gov.\n\n\n\n\n\n\nRevisions\n\nJuly 18, 2022: Initial version\n",
  "cves": [
    "CVE-2022-42475",
    "CVE-2022-47966"
  ],
  "techniques": [],
  "advisory": "ar22-197a",
  "title": "MAR-10382580-r2.v1 \u2013 RAT | CISA",
  "source": "analysis-reports",
  "id": "c3e01c39b21fc6143393fec73ab3e05bec25dbcf7017f1ec6bd17e98cbbd113d"
}