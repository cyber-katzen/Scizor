{
  "markdown": "\n\u00a0\u00a0\n\n\n\n\nSummary\nDescription\nCISA received three files for analysis. The files included three webshells written in PHP: Hypertext Preprocessor (PHP), Active Server Pages Extended (ASPX), and .NET Dynamic-Link Library (DLL). The sample \u201csd.php\u201d is highly obfuscated and uses rot13 algorithm, zlib for compression and base64 encoding for obfuscation. The \u201cosker.aspx\u201d webshell code was padded with junk code. The .NET DLL webshell is a .NET compiled version of osker.aspx. The samples are interactive webshells and have the ability to upload and manage files, create directories and files, and execute commands on the target machine.\nFor more information about this compromise, see Joint Cybersecurity Advisory\u00a0Threat Actors Exploit Progress Telerik Vulnerabilities in Multiple U.S. Government IIS Servers\nDownload the PDF version of this report:\n\n\nMAR-10443863.r1.v1\n(PDF,       864.35 KB\n  )\n\n\nFor a downloadable copy of IOCs, see below or the JSON file.\n\n\nAA23-074A.stix\n(XML,       38.86 KB\n  )\n\n\nSubmitted Files (3)\n6ce087b904af8a01aae73ac77d81822ad41799f89a5d301dce45191c897012aa (osker.aspx)\nb63c95300c8e36b5e6d3393da12931683796f88fd4601ba8364658b4d12ac05b (App_Web_jl37rjxu.dll)\nea98368f6ecb5281654a6a9e4c649ef9b53860f1ee32340145b61e0e42e1072a (sd.php)\nFindings\nea98368f6ecb5281654a6a9e4c649ef9b53860f1ee32340145b61e0e42e1072a\nTags\nobfuscatedtrojanuploaderwebshell\nDetails\n\t\t\t-->\n\n\n\nName\nsd.php\n\n\nSize\n5934 bytes\n\n\nType\nASCII text, with very long lines, with CRLF line terminators\n\n\nMD5\nf899d6cbe1be6395a0fa2a802b8eb579\n\n\nSHA1\ne5f29cac0570665bc12f54a7e1894f139cc7b45e\n\n\nSHA256\nea98368f6ecb5281654a6a9e4c649ef9b53860f1ee32340145b61e0e42e1072a\n\n\nSHA512\n6a9c23c3bd8a4b5f7301b80b7187ed6ae055a4e05e2b817800ddade99cb45e50bf3a96a57f9593aa8dfb49934ea48dba722ba3f4b0e8a8a634e6c86da335dcba\n\n\nssdeep\n96:8byUcBL9vPh8onLQKwz9UL0wJ0v7R/+B3Oam8WgbVxzbiMhrhRrwSLpVt8lTHGk4:icBL9vFnL1wzGL0tt/cVxzvhrhRZl4hO\n\n\nEntropy\n6.110792\n\n\nMalware Result\nunknown\n\n\n\nAntivirus\n\n\n\nESET\nPHP/Agent.NPM trojan\n\n\n\nYARA Rules\n\nrule CISA_10443863_01 : backdoor remote_access_trojan webshell exploitation information_gathering remote_access accesses_remote_machines anti_debugging captures_system_state_data controls_local_machine compromises_data_availability compromises_data_integrity fingerprints_host installs_other_components\n\t\t\t\t{\n\t\t\t\t\u00a0\u00a0\u00a0meta:\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Author = \"CISA Code & Media Analysis\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Incident = \"10443863\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Date = \"2023-05-11\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Last_Modified = \"20230522_1200\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Actor = \"n/a\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Family = \"n/a\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Capabilities = \"accesses-remote-machines anti-debugging captures-system-state-data controls-local-machine compromises-data-availability compromises-data-integrity fingerprints-host installs-other-components\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Malware_Type = \"backdoor remote-access-trojan webshell\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Tool_Type = \"exploitation information-gathering remote-access\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Description = \"Detects obfuscated and deobfuscated interactive PHP webshell samples\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0SHA256 = \"ea98368f6ecb5281654a6a9e4c649ef9b53860f1ee32340145b61e0e42e1072a\"\n\t\t\t\t\u00a0\u00a0\u00a0strings:\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0$e0 = { 65 76 61 6c }\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0$e1 = { 72 6f 74 31 33 }\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0$e2 = { 62 61 73 65 36 34 }\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0$e3 = { 67 7a 69 6e 66 6c 61 74 65 }\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0$e4 = { 73 68 65 6c 6c }\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0$e5 = { 78 61 69 73 79 6e 64 69 63 61 74 65 }\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0$e6 = { 54 75 62 61 67 75 73 4e 4d }\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0$s0 = { 58 30 4d 42 31 33 }\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0$s1 = { 74 75 6e 61 66 65 65 73 68 }\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0$s2 = { 70 61 73 73 77 6f 72 64 }\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0$s3 = { 6f 6e ( 63 | 43 ) 6c 69 63 6b 3d }\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0$s4 = { 6a 61 76 61 73 63 72 69 70 74 3a 78 79 6e }\n\t\t\t\t\u00a0\u00a0\u00a0condition:\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0(6 of ($e*)) or (3 of ($s*))\n\t\t\t\t}\n\nssdeep Matches\nNo matches found.\nDescription\nThis sample is an obfuscated PHP interactive webshell. This webshell is encoded and obfuscated using rot13, gzinflate and base64 as seen in the following code: \u201ceval(str_rot13(gzinflate(str_rot13(base64_decode(($sym))))));\u201d The obfuscated code is a string and is stored in the $sym variable from where it is read and decoded upon execution (Figure 1). The webshell requires the password \"pass\" for authentication and uses the string \u201c$xyn='tunafeesh';\u201d as a cookie to authenticate.\n\n\t\t\tThis webshell enumerates the local system it infects including the operating system, current user, directories, files and permissions. The webshell has the ability to create, rename, and delete files and directories. Furthermore, it has the ability to upload additional files to the affected webserver, run in Safe Mode and execute commands via cmd.exe (Figure 2). The webshell provides a Graphical User Interface (GUI) to the operator to perform these operations on the infected machine.\n\n\t\t\t---Notable Strings Begin---\n\t\t\teval(str_rot13(gzinflate(str_rot13(base64_decode(($sym))))));\n\t\t\ttunafeesh\n\t\t\tpass\n\t\t\tTubagusNM\n\t\t\txaisyndicate\n\t\t\tgaruda tersakti\n\t\t\tcon7ext_shell\n\t\t\tb374k shell\n\t\t\tX0MB13\n\t\t\tX0MB13@REBORN.COM\n\t\t\thxxp[:]//www[.]twitter[.]com/X0MB13_\n\t\t\thxxp[:]//www[.]fb[.]com/xombie.xombie.7\n\t\t\tonClick=\"xyn\n\t\t\t---Notable Strings End---\nScreenshots\n\n \n\n\nFigure 1. - $sym variable with obfuscated code.\n\n \n\n\nFigure 2. - sd.php webshell interface. Threat Actor (TA) would have access to this interface remotely to conduct various actions like upload additional files, create directories and files, run commands and more.\n6ce087b904af8a01aae73ac77d81822ad41799f89a5d301dce45191c897012aa\nTags\nbackdoor trojan webshell\nDetails\n\t\t\t-->\n\n\n\nName\nosker.aspx\n\n\nSize\n107843 bytes\n\n\nType\ndata\n\n\nMD5\nfcb8a6a264d05f1689c9dce5824b217d\n\n\nSHA1\n001e4906879e78d567a30502638233f34292504a\n\n\nSHA256\n6ce087b904af8a01aae73ac77d81822ad41799f89a5d301dce45191c897012aa\n\n\nSHA512\n703437c5742f343cabc6023698e031f0c4167252e9679d4e4fd13d9703f27de21faa7edf275bd9a39c4b2e454a83c43d555849ae61a0897ac1da9ed6be820d4d\n\n\nssdeep\n3072:K+mYWYJo8+p87xbsTttEtizQhch+mYWYJo8+pO:K+mYDnhch+mYDD\n\n\nEntropy\n6.343192\n\n\nMalware Result\nunknown\n\n\n\nAntivirus\n\n\n\nIKARUS\nTrojan.ASP.Agent\n\n\nMcAfee\nASP/Backdoor.i\n\n\nVarist\nJS/Agent.AIW\n\n\n\nYARA Rules\n\nrule CISA_10443863_02 : backdoor remote_access_trojan webshell exploitation information_gathering remote_access accesses_remote_machines anti_debugging captures_system_state_data controls_local_machine compromises_data_availability compromises_data_integrity fingerprints_host installs_other_components\n\t\t\t\t{\n\t\t\t\t\u00a0\u00a0\u00a0meta:\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Author = \"CISA Code & Media Analysis\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Incident = \"10443863\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Date = \"2023-05-11\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Last_Modified = \"20230522_1200\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Actor = \"n/a\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Family = \"n/a\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Capabilities = \"accesses-remote-machines anti-debugging captures-system-state-data controls-local-machine compromises-data-availability compromises-data-integrity fingerprints-host installs-other-components\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Malware_Type = \"backdoor remote-access-trojan webshell\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Tool_Type = \"exploitation information-gathering remote-access\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Description = \"Detects interactive ASP NET webshell samples\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0SHA256 = \"ea98368f6ecb5281654a6a9e4c649ef9b53860f1ee32340145b61e0e42e1072a\"\n\t\t\t\t\u00a0\u00a0\u00a0strings:\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0$s0 = { 3c 25 40 20 50 61 67 65 20 4c 61 6e 67 75 61 67 65 3d 22 43 23 22 }\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0$s1 = { 62 61 73 65 36 34 ( 44 | 64 ) 65 63 6f 64 65 }\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0$s2 = { 53 65 6c 65 63 74 20 2a 20 66 72 6f 6d 20 57 69 6e 33 32 5f 50 72 6f 63 65 73 73 }\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0$s3 = { 53 45 4c 45 43 54 20 2a 20 46 52 4f 4d }\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0$s4 = { 73 71 6c 63 6d 64 2e 65 78 65 }\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0$s5 = { 63 6d 64 2e 65 78 65 }\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0$s6 = { 49 49 53 20 56 65 72 73 69 6f 6e }\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0$s7 = { 43 72 65 61 74 65 4e 6f 57 69 6e 64 6f 77 }\n\t\t\t\t\u00a0\u00a0\u00a0condition:\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0all of them\n\t\t\t\t}\n\nssdeep Matches\nNo matches found.\nRelationships\n\n\n\n6ce087b904...\nRelated_To\nb63c95300c8e36b5e6d3393da12931683796f88fd4601ba8364658b4d12ac05b\n\n\n\nDescription\nThis sample is an ASP .NET webshell. The webshell code was padded with junk code for detection evasion. The beginning of the webshell code can be seen in Figure 3. It is possible to access the webshell interactively via browser to view the GUI as seen in Figure 4.\n\n\t\t\tThis webshell has the ability to enumerate drive name and type, software, operating system versions, processes, and users, and has ability to copy, create and delete files, directories and databases. Furthermore, this webshell is able to upload, download, run and execute commands using cmd.exe and sqlcmd.exe. This webshell has the ability to interact with and manipulate SQL databases. Furthermore, this webshell uses Windows Management Instrumentation (WMI) Management Objects to query processes, users and network domains. It is also able to encode and decode data using base64.\n\n\t\t\t---Notable Strings Begin---\n\t\t\tosker\n\t\t\t321\n\t\t\t<%@ Page Language=\"C#\"\n\t\t\tbase64Decode\n\t\t\tSelect * from Win32_Process\n\t\t\tSelect * from Win32_Process Where ProcessID\n\t\t\tAdd_Table_Row(tbl, \"Server IP\", Request.ServerVariables[\"LOCAL_ADDR\"]);\n\t\t\tAdd_Table_Row(tbl, \"Host Name\", Dns.GetHostName() );//Environment.MachineName);\n\t\t\tAdd_Table_Row(tbl, \"IIS Version\", Request.ServerVariables[\"SERVER_SOFTWARE\"]);\n\t\t\tAdd_Table_Row(tbl, \"IIS APPPOOL Identity\", Environment.UserName);\n\t\t\tAdd_Table_Row(tbl, \"OS Version\", Environment.OSVersion.ToString());\n\t\t\tmyconn = new SqlConnection(connections.Text);\n\t\t\tmyconn.Open();\n\t\t\tstring command = query;\n\t\t\tmycomm = new SqlCommand(command, myconn);\n\t\t\tSqlDataReader dr = mycomm.ExecuteReader();\n\t\t\tstring query = \"Select * from Win32_Process Where ProcessID = \\\"\" + processName + \"\\\"\";\n\t\t\tManagementObjectSearcher searcher = new ManagementObjectSearcher(query);\n\t\t\tManagementObjectCollection processList = searcher.Get();\n\t\t\tManagementObjectSearcher QS=new ManagementObjectSearcher(new SelectQuery(query));\n\t\t\t---Notable Strings End---\nScreenshots\n\n \n\n\nFigure 3. - Beginning of osker.aspx webshell code.\n\n \n\n\nFigure 4. - Web interface for osker.aspx webshell. The webshell interface password is \u201c321\u201d.\nb63c95300c8e36b5e6d3393da12931683796f88fd4601ba8364658b4d12ac05b\nTags\nbackdoortrojanwebshell\nDetails\n\t\t\t-->\n\n\n\nName\nApp_Web_jl37rjxu.dll\n\n\nSize\n163840 bytes\n\n\nType\nPE32 executable (DLL) (console) Intel 80386 Mono/.Net assembly, for MS Windows\n\n\nMD5\n71323c956317b6b2c8e4ed4595ccfe5a\n\n\nSHA1\n7ebd98f97f61cabff05438dfac34d0331ce233aa\n\n\nSHA256\nb63c95300c8e36b5e6d3393da12931683796f88fd4601ba8364658b4d12ac05b\n\n\nSHA512\n2da3716aab9c9a8a85705c1372c4d75250dc021caa4f3b7566f6c142bdb3a45a063ec5f343b15b9be6056890768e80e7512f6ddbb86de178c475a160f56c0dad\n\n\nssdeep\n3072:XEFKnpDtdIftAIe66rOqhTG0t7x2IftAIe66rOqhTG0:XEyJXmtQTO+ymtQTO+\n\n\nEntropy\n5.776030\n\n\nMalware Result\nunknown\n\n\n\nAntivirus\n\n\n\nAntiy\nTrojan[Backdoor]/ASP.WebShell\n\n\nAvira\nBDS/Redcap.euknj\n\n\nBitdefender\nTrojan.Generic.33706396\n\n\nEmsisoft\nTrojan.Generic.33706396 (B)\n\n\nMcAfee\nRDN/Generic BackDoor\n\n\nZillya!\nBackdoor.WebShell.Script.653\n\n\n\nYARA Rules\n\nrule CISA_10443863_03 : backdoor remote_access_trojan webshell exploitation information_gathering remote_access accesses_remote_machines anti_debugging captures_system_state_data controls_local_machine compromises_data_availability compromises_data_integrity fingerprints_host installs_other_components\n\t\t\t\t{\n\t\t\t\t\u00a0\u00a0\u00a0meta:\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Author = \"CISA Code & Media Analysis\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Incident = \"10443863\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Date = \"2023-05-16\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Last_Modified = \"20230605_1500\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Actor = \"n/a\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Family = \"n/a\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Capabilities = \"accesses-remote-machines anti-debugging captures-system-state-data controls-local-machine compromises-data-availability compromises-data-integrity fingerprints-host installs-other-components\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Malware_Type = \"backdoor remote-access-trojan webshell\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Tool_Type = \"exploitation information-gathering remote-access\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0Description = \"Detects .NET DLL webshell samples\"\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0SHA256 = \"b63c95300c8e36b5e6d3393da12931683796f88fd4601ba8364658b4d12ac05b\"\n\t\t\t\t\u00a0\u00a0\u00a0strings:\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0$s0 = { 53 00 65 00 6c 00 65 00 63 00 74 00 20 00 2a 00 20 00 66 00 72 00 6f 00 6d 00 20 00 57 00 69 00 6e 00 33 00 32 00 5f 00 50 00 72 00 6f 00 63 00 65 00 73 00 73 }\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0$s1 = { 62 61 73 65 36 34 ( 44 | 64 ) 65 63 6f 64 65 }\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0$s2 = { 53 00 45 00 4c 00 45 00 43 00 54 00 20 00 2a 00 20 00 46 00 52 00 4f 00 4d }\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0$s3 = { 49 00 49 00 53 00 20 00 41 00 50 00 50 00 50 00 4f 00 4f 00 4c }\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0$s4 = { 4d 61 6e 61 67 65 6d 65 6e 74 4f 62 6a 65 63 74 }\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0$s5 = { 43 72 65 61 74 65 4e 6f 57 69 6e 64 6f 77 }\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0$s6 = { 73 71 6c 71 75 65 72 79 }\n\t\t\t\t\u00a0\u00a0\u00a0condition:\n\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0all of them\n\t\t\t\t}\n\nssdeep Matches\nNo matches found.\nRelationships\n\n\n\nb63c95300c...\nRelated_To\n6ce087b904af8a01aae73ac77d81822ad41799f89a5d301dce45191c897012aa\n\n\n\nDescription\nThis is a 32-bit .NET Dynamic-Link Library (DLL) file. This sample is a ASP .NET webshell and is related to the osker.aspx file. These webshells may affect Microsoft Exchange Servers and IIS services exploited by the ProxyLogon vulnerability. This sample is a .NET DLL file that is created by the ASP.NET Runtime when ASPX script is seen for the first time on the system. The capabilities and functions are identical to the osker.aspx file.\nRelationship Summary\n\n\n\n6ce087b904...\nRelated_To\nb63c95300c8e36b5e6d3393da12931683796f88fd4601ba8364658b4d12ac05b\n\n\nb63c95300c...\nRelated_To\n6ce087b904af8a01aae73ac77d81822ad41799f89a5d301dce45191c897012aa\n\n\n\nRecommendations\nCISA recommends that users and administrators consider using the following best practices to strengthen the security posture of their organization's systems. Any configuration changes should be reviewed by system owners and administrators prior to implementation to avoid unwanted impacts.\n\nMaintain up-to-date antivirus signatures and engines.\nKeep operating system patches up-to-date.\nDisable File and Printer sharing services. If these services are required, use strong passwords or Active Directory authentication.\nRestrict users' ability (permissions) to install and run unwanted software applications. Do not add users to the local administrators group unless required.\nEnforce a strong password policy and implement regular password changes.\nExercise caution when opening e-mail attachments even if the attachment is expected and the sender appears to be known.\nEnable a personal firewall on agency workstations, configured to deny unsolicited connection requests.\nDisable unnecessary services on agency workstations and servers.\nScan for and remove suspicious e-mail attachments; ensure the scanned attachment is its \"true file type\" (i.e., the extension matches the file header).\nMonitor users' web browsing habits; restrict access to sites with unfavorable content.\nExercise caution when using removable media (e.g., USB thumb drives, external drives, CDs, etc.).\nScan all software downloaded from the Internet prior to executing.\nMaintain situational awareness of the latest threats and implement appropriate Access Control Lists (ACLs).\n\nAdditional information on malware incident prevention and handling can be found in National Institute of Standards and Technology (NIST) Special Publication 800-83, \"Guide to Malware Incident Prevention & Handling for Desktops and Laptops\".\nContact Information\n\n1-888-282-0870\nCISA Central\u00a0(UNCLASS)\nCISA SIPR (SIPRNET)\nCISA IC (JWICS)\n\nCISA continuously strives to improve its products and services. You can help by answering a very short series of questions about this product at the following URL: https://us-cert.cisa.gov/forms/feedback/\nDocument FAQ\nWhat is a MIFR? A Malware Initial Findings Report (MIFR) is intended to provide organizations with malware analysis in a timely manner. In most instances this report will provide initial indicators for computer and network defense. To request additional analysis, please contact CISA and provide information regarding the level of desired analysis.\nWhat is a MAR? A Malware Analysis Report (MAR) is intended to provide organizations with more detailed malware analysis acquired via manual reverse engineering. To request additional analysis, please contact CISA and provide information regarding the level of desired analysis.\nCan I edit this document? This document is not to be edited in any way by recipients. All comments or questions related to this document should be directed to the CISA at 1-888-282-0870 or CISA Central.\nCan I submit malware to CISA? Malware samples can be submitted via three methods:\n\nWeb: https://malware.us-cert.gov\nE-Mail: submit@malware.us-cert.gov\nFTP: ftp.malware.us-cert.gov (anonymous)\n\nCISA encourages you to report any suspicious activity, including cybersecurity incidents, possible malicious code, software vulnerabilities, and phishing-related scams. Reporting forms can be found on CISA's homepage at www.cisa.gov.\n\n\n\n\n\n\n\u00a0\n\n\n\n\n",
  "cves": [
    "CVE-2022-42475",
    "CVE-2022-47966",
    "CVE-2017-9248"
  ],
  "techniques": [],
  "advisory": "ar23-166a",
  "title": "MAR-10443863-1.v1 CVE-2017-9248 Exploitation in U.S. Government IIS Server | CISA",
  "source": "analysis-reports",
  "id": "5b0f01ed677b2e29174f0d345fe4ae999ab485b62cd5a69684ecffdc7055f9ff"
}