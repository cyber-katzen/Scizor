{
  "markdown": "\nAs of January 10, 2023, CISA will no longer be updating ICS security advisories for Siemens product vulnerabilities beyond the initial advisory.\u202fFor the most up-to-date information on vulnerabilities in this advisory, please see\u202fSiemens' ProductCERT Security Advisories (CERT Services | Services | Siemens Global).\u00a0View CSAF\n1. EXECUTIVE SUMMARY\n\nCVSS v3 8.2\nATTENTION: Exploitable remotely/low attack complexity\nVendor: Siemens\nEquipment: ST7 ScadaConnect\nVulnerabilities: Integer Overflow or Wraparound, Double Free, Improper Certificate Validation, Inefficient Regular Expression Complexity, Improper Check for Unusual or Exceptional Conditions, Improper Input Validation, NULL Pointer Dereference, Missing Encryption of Sensitive Data, Improper Restriction of Operations within the Bounds of a Memory Buffer, Uncontrolled Resource Consumption\n\n2. RISK EVALUATION\nSuccessful exploitation of these vulnerabilities could allow an attacker to disclose information, cause a denial-of-service (DoS) condition, or execute arbitrary code.\n3. TECHNICAL DETAILS\n3.1 AFFECTED PRODUCTS\nThe following Siemens products, are affected:\n\nSiemens ST7 ScadaConnect (6NH7997-5DA10-0AA0): Versions prior to 1.1\n\n3.2 Vulnerability Overview\n3.2.1 INTEGER OVERFLOW OR WRAPAROUND CWE-190\nAn issue was discovered in libxml2 before 2.10.3. When parsing a multi-gigabyte XML document with the XML_PARSE_HUGE parser option enabled, several integer counters can overflow. This results in an attempt to access an array at a negative 2GB offset, typically leading to a segmentation fault.\nCVE-2022-40303 has been assigned to this vulnerability. A CVSS v3 base score of 7.5 has been assigned; the CVSS vector string is (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H).\n3.2.2 DOUBLE FREE CWE-415\nAn issue was discovered in libxml2 before 2.10.3. Certain invalid XML entity definitions can corrupt a hash table key, potentially leading to subsequent logic errors. In one case, a double-free can be provoked.\nCVE-2022-40304 has been assigned to this vulnerability. A CVSS v3 base score of 7.8 has been assigned; the CVSS vector string is (CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H).\n3.2.3 IMPROPER CERTIFICATE VALIDATION CWE-295\nA security vulnerability has been identified in all supported versions of OpenSSL related to the verification of X.509 certificate chains that include policy constraints. Attackers may be able to exploit this vulnerability by creating a malicious certificate chain that triggers exponential use of computational resources, leading to a denial-of-service (DoS) attack on affected systems. Policy processing is disabled by default but can be enabled by passing the -policy argument to the command line utilities or by calling the X509_VERIFY_PARAM_set1_policies() function.\nCVE-2023-0464 has been assigned to this vulnerability. A CVSS v3 base score of 7.5 has been assigned; the CVSS vector string is (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H).\n3.2.4 IMPROPER CERTIFICATE VALIDATION CWE-295\nApplications that use a non-default option when verifying certificates may be vulnerable to an attack from a malicious CA to circumvent certain checks. Invalid certificate policies in leaf certificates are silently ignored by OpenSSL and other certificate policy checks are skipped for that certificate. A malicious CA could use this to deliberately assert invalid certificate policies in order to circumvent policy checking on the certificate altogether. Policy processing is disabled by default but can be enabled by passing the -policy argument to the command line utilities or by calling the X509_VERIFY_PARAM_set1_policies() function.\nCVE-2023-0465 has been assigned to this vulnerability. A CVSS v3 base score of 5.3 has been assigned; the CVSS vector string is (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N).\n3.2.5 IMPROPER CERTIFICATE VALIDATION CWE-295\nThe function X509_VERIFY_PARAM_add0_policy() is documented to implicitly enable the certificate policy check when doing certificate verification. However the implementation of the function does not enable the check which allows certificates with invalid or incorrect policies to pass the certificate verification.As suddenly enabling the policy check could break existing deployments it was decided to keep the existing behavior of the X509_VERIFY_PARAM_add0_policy()function.Instead the applications that require OpenSSL to perform certificate policy check need to use X509_VERIFY_PARAM_set1_policies() or explicitly enable the policy check by calling X509_VERIFY_PARAM_set_flags() with the X509_V_FLAG_POLICY_CHECK flag argument.Certificate policy checks are disabled by default in OpenSSL and are not commonly used by applications.\nCVE-2023-0466 has been assigned to this vulnerability. A CVSS v3 base score of 5.3 has been assigned; the CVSS vector string is (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N).\n3.2.6 INEFFICIENT REGULAR EXPRESSION COMPLEXITY CWE-1333\nIssue summary: Checking excessively long DH keys or parameters may be very slow. Impact summary: Applications that use the functions DH_check(), DH_check_ex() or EVP_PKEY_param_check() to check a DH key or DH parameters may experience long delays. Where the key or parameters that are being checked have been obtained from an untrusted source this may lead to a Denial-of-Service. The function DH_check() performs various checks on DH parameters. One of those checks confirms that the modulus ('p' parameter) is not too large. Trying to use a very large modulus is slow and OpenSSL will not normally use a modulus which is over 10,000 bits in length. However the DH_check() function checks numerous aspects of the key or parameters that have been supplied. Some of those checks use the supplied modulus value even if it has already been found to be too large. An application that calls DH_check() and supplies a key or parameters obtained from an untrusted source could be vulnerable to a Denial-of-Service attack. The function DH_check() is itself called by a number of other OpenSSL functions. An application calling any of those other functions may similarly be affected. The other functions affected by this are DH_check_ex() and EVP_PKEY_param_check(). Also vulnerable are the OpenSSL dhparam and pkeyparam command line applications when using the '-check' option. The OpenSSL SSL/TLS implementation is not affected by this issue. The OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.\nCVE-2023-3446 has been assigned to this vulnerability. A CVSS v3 base score of 5.3 has been assigned; the CVSS vector string is (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).\n3.2.7 IMPROPER CHECK FOR UNUSUAL OR EXCEPTIONAL CONDITIONS CWE-754\nIssue summary: Generating excessively long X9.42 DH keys or checking excessively long X9.42 DH keys or parameters may be very slow. Impact summary: Applications that use the functions DH_generate_key() to generate an X9.42 DH key may experience long delays. Likewise, applications that use DH_check_pub_key(), DH_check_pub_key_ex() or EVP_PKEY_public_check() to check an X9.42 DH key or X9.42 DH parameters may experience long delays. Where the key or parameters that are being checked have been obtained from an untrusted source this may lead to a Denial-of-Service. While DH_check() performs all the necessary checks (as of CVE-2023-3817), DH_check_pub_key() doesn't make any of these checks, and is therefore vulnerable for excessively large P and Q parameters. Likewise, while DH_generate_key() performs a check for an excessively large P, it doesn't check for an excessively large Q. An application that calls DH_generate_key() or DH_check_pub_key() and supplies a key or parameters obtained from an untrusted source could be vulnerable to a Denial-of-Service attack. DH_generate_key() and DH_check_pub_key() are also called by a number of other OpenSSL functions. An application calling any of those other functions may similarly be affected. The other functions affected by this are DH_check_pub_key_ex(), EVP_PKEY_public_check(), and EVP_PKEY_generate(). Also vulnerable are the OpenSSL pkey command line application when using the \"-pubcheck\" option, as well as the OpenSSL genpkey command line application. The OpenSSL SSL/TLS implementation is not affected by this issue. The OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.\nCVE-2023-5678 has been assigned to this vulnerability. A CVSS v3 base score of 5.3 has been assigned; the CVSS vector string is (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).\n3.2.8 IMPROPER INPUT VALIDATION CWE-20\n.NET and Visual Studio Remote Code Execution Vulnerability\nCVE-2023-21808 has been assigned to this vulnerability. A CVSS v3 base score of 7.8 has been assigned; the CVSS vector string is (CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H).\n3.2.9 IMPROPER INPUT VALIDATION CWE-20\n.NET, .NET Framework, and Visual Studio Remote Code Execution Vulnerability\nCVE-2023-24895 has been assigned to this vulnerability. A CVSS v3 base score of 7.8 has been assigned; the CVSS vector string is (CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H).\n3.2.10 IMPROPER INPUT VALIDATION CWE-20\n.NET, .NET Framework, and Visual Studio Remote Code Execution Vulnerability\nCVE-2023-24897 has been assigned to this vulnerability. A CVSS v3 base score of 7.8 has been assigned; the CVSS vector string is (CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H).\n3.2.11 IMPROPER INPUT VALIDATION CWE-20\n.NET, .NET Framework, and Visual Studio Elevation of Privilege Vulnerability\nCVE-2023-24936 has been assigned to this vulnerability. A CVSS v3 base score of 7.5 has been assigned; the CVSS vector string is (CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:H/A:H).\n3.2.12 IMPROPER INPUT VALIDATION CWE-20\n.NET DLL Hijacking Remote Code Execution Vulnerability\nCVE-2023-28260 has been assigned to this vulnerability. A CVSS v3 base score of 7.8 has been assigned; the CVSS vector string is (CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H).\n3.2.13 NULL POINTER DEREFERENCE CWE-476\nIn libxml2 before 2.10.4, parsing of certain invalid XSD schemas can lead to a NULL pointer dereference and subsequently a segfault. This occurs in xmlSchemaFixupComplexType in xmlschemas.c.\nCVE-2023-28484 has been assigned to this vulnerability. A CVSS v3 base score of 6.5 has been assigned; the CVSS vector string is (CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H).\n3.2.14 IMPROPER INPUT VALIDATION CWE-20\n.NET, .NET Framework, and Visual Studio Denial-of-Service Vulnerability\nCVE-2023-29331 has been assigned to this vulnerability. A CVSS v3 base score of 7.5 has been assigned; the CVSS vector string is (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H).\n3.2.15 DOUBLE FREE CWE-415\nAn issue was discovered in libxml2 before 2.10.4. When hashing empty dict strings in a crafted XML document, xmlDictComputeFastKey in dict.c can produce non-deterministic values, leading to various logic and memory errors, such as a double free. This behavior occurs because there is an attempt to use the first byte of an empty string, and any value is possible (not solely the '\\0' value).\nCVE-2023-29469 has been assigned to this vulnerability. A CVSS v3 base score of 6.5 has been assigned; the CVSS vector string is (CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H).\n3.2.16 IMPROPER INPUT VALIDATION CWE-20\n.NET and Visual Studio Elevation of Privilege Vulnerability\nCVE-2023-32032 has been assigned to this vulnerability. A CVSS v3 base score of 6.5 has been assigned; the CVSS vector string is (CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:L/I:H/A:H).\n3.2.17 IMPROPER INPUT VALIDATION CWE-20\n.NET and Visual Studio Remote Code Execution Vulnerability\nCVE-2023-33126 has been assigned to this vulnerability. A CVSS v3 base score of 7.3 has been assigned; the CVSS vector string is (CVSS:3.1/AV:L/AC:L/PR:L/UI:R/S:U/C:H/I:H/A:H).\n3.2.18 IMPROPER INPUT VALIDATION CWE-20\n.NET and Visual Studio Elevation of Privilege Vulnerability\nCVE-2023-33127 has been assigned to this vulnerability. A CVSS v3 base score of 8.1 has been assigned; the CVSS vector string is (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H).\n3.2.19 IMPROPER INPUT VALIDATION CWE-20\n.NET and Visual Studio Remote Code Execution Vulnerability\nCVE-2023-33128 has been assigned to this vulnerability. A CVSS v3 base score of 7.3 has been assigned; the CVSS vector string is (CVSS:3.1/AV:L/AC:L/PR:L/UI:R/S:U/C:H/I:H/A:H).\n3.2.20 IMPROPER INPUT VALIDATION CWE-20\n.NET and Visual Studio Elevation of Privilege Vulnerability\nCVE-2023-33135 has been assigned to this vulnerability. A CVSS v3 base score of 7.3 has been assigned; the CVSS vector string is (CVSS:3.1/AV:L/AC:L/PR:L/UI:R/S:U/C:H/I:H/A:H).\n3.2.21 IMPROPER INPUT VALIDATION CWE-20\nASP.NET and Visual Studio Security Feature Bypass Vulnerability\nCVE-2023-33170 has been assigned to this vulnerability. A CVSS v3 base score of 8.1 has been assigned; the CVSS vector string is (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H).\n3.2.22 IMPROPER INPUT VALIDATION CWE-20\n.NET and Visual Studio Remote Code Execution Vulnerability\nCVE-2023-35390 has been assigned to this vulnerability. A CVSS v3 base score of 7.8 has been assigned; the CVSS vector string is (CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H).\n3.2.23 IMPROPER INPUT VALIDATION CWE-20\nASP.NET Core SignalR and Visual Studio Information Disclosure Vulnerability\nCVE-2023-35391 has been assigned to this vulnerability. A CVSS v3 base score of 6.2 has been assigned; the CVSS vector string is (CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N).\n3.2.24 IMPROPER INPUT VALIDATION CWE-20\nASP.NET Core Denial-of-Service Vulnerability\nCVE-2023-36038 has been assigned to this vulnerability. A CVSS v3 base score of 8.2 has been assigned; the CVSS vector string is (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:H).\n3.2.25 IMPROPER INPUT VALIDATION CWE-20\n.NET, .NET Framework, and Visual Studio Elevation of Privilege Vulnerability\nCVE-2023-36049 has been assigned to this vulnerability. A CVSS v3 base score of 7.6 has been assigned; the CVSS vector string is (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:H/A:L).\n3.2.26 IMPROPER INPUT VALIDATION CWE-20\nMicrosoft QUIC Denial-of-Service Vulnerability\nCVE-2023-36435 has been assigned to this vulnerability. A CVSS v3 base score of 7.5 has been assigned; the CVSS vector string is (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H).\n3.2.27 IMPROPER INPUT VALIDATION CWE-20\nASP.NET Core - Security Feature Bypass Vulnerability\nCVE-2023-36558 has been assigned to this vulnerability. A CVSS v3 base score of 6.2 has been assigned; the CVSS vector string is (CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N).\n3.2.28 MISSING ENCRYPTION OF SENSITIVE DATA CWE-311\nVisual Studio Remote Code Execution Vulnerability\nCVE-2023-36792 has been assigned to this vulnerability. A CVSS v3 base score of 7.8 has been assigned; the CVSS vector string is (CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H).\n3.2.29 MISSING ENCRYPTION OF SENSITIVE DATA CWE-311\nVisual Studio Remote Code Execution Vulnerability\nCVE-2023-36793 has been assigned to this vulnerability. A CVSS v3 base score of 7.8 has been assigned; the CVSS vector string is (CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H).\n3.2.30 MISSING ENCRYPTION OF SENSITIVE DATA CWE-311\nVisual Studio Remote Code Execution Vulnerability\nCVE-2023-36794 has been assigned to this vulnerability. A CVSS v3 base score of 7.8 has been assigned; the CVSS vector string is (CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H).\n3.2.31 MISSING ENCRYPTION OF SENSITIVE DATA CWE-311\nVisual Studio Remote Code Execution Vulnerability\nCVE-2023-36796 has been assigned to this vulnerability. A CVSS v3 base score of 7.8 has been assigned; the CVSS vector string is (CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H).\n3.2.32 IMPROPER INPUT VALIDATION CWE-20\n.NET Core and Visual Studio Denial-of-Service Vulnerability\nCVE-2023-36799 has been assigned to this vulnerability. A CVSS v3 base score of 6.5 has been assigned; the CVSS vector string is (CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H).\n3.2.33 IMPROPER INPUT VALIDATION CWE-20\nMicrosoft QUIC Denial-of-Service Vulnerability\nCVE-2023-38171 has been assigned to this vulnerability. A CVSS v3 base score of 7.5 has been assigned; the CVSS vector string is (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H).\n3.2.34 IMPROPER INPUT VALIDATION CWE-20\n.NET Core and Visual Studio Denial-of-Service Vulnerability\nCVE-2023-38178 has been assigned to this vulnerability. A CVSS v3 base score of 7.5 has been assigned; the CVSS vector string is (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H).\n3.2.35 IMPROPER INPUT VALIDATION CWE-20\n.NET and Visual Studio Denial-of-Service Vulnerability\nCVE-2023-38180 has been assigned to this vulnerability. A CVSS v3 base score of 7.5 has been assigned; the CVSS vector string is (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H).\n3.2.36 IMPROPER RESTRICTION OF OPERATIONS WITHIN THE BOUNDS OF A MEMORY BUFFER CWE-119\nXmlsoft Libxml2 v2.11.0 was discovered to contain an out-of-bounds read via the xmlSAX2StartElement() function at /libxml2/SAX2.c. This vulnerability allows attackers to cause a Denial-of-Service (DoS) via supplying a crafted XML file. NOTE: the vendor's position is that the product does not support the legacy SAX1 interface with custom callbacks; there is a crash even without crafted input.\nCVE-2023-39615 has been assigned to this vulnerability. A CVSS v3 base score of 6.5 has been assigned; the CVSS vector string is (CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H).\n3.2.37 UNCONTROLLED RESOURCE CONSUMPTION CWE-400\nThe HTTP/2 protocol allows a denial-of-service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023.\nCVE-2023-44487 has been assigned to this vulnerability. A CVSS v3 base score of 7.5 has been assigned; the CVSS vector string is (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H).\n3.3 BACKGROUND\n\nCRITICAL INFRASTRUCTURE SECTORS: Commercial Facilities, Energy, Critical Manufacturing\nCOUNTRIES/AREAS DEPLOYED: Worldwide\nCOMPANY HEADQUARTERS LOCATION: Germany\n\n3.4 RESEARCHER\nSiemens reported these vulnerabilities to CISA.\n4. MITIGATIONS\nSiemens has identified the following specific workarounds and mitigations users can apply to reduce risk:\n\nST7 ScadaConnect (6NH7997-5DA10-0AA0): Update to V1.1 or later version.\n\nAs a general security measure, Siemens recommends protecting network access to devices with appropriate mechanisms. To operate the devices in a protected IT environment, Siemens recommends configuring the environment according to Siemens' operational guidelines for industrial security and following recommendations in the product manuals.\nAdditional information on industrial security by Siemens can be found on the Siemens industrial security webpage\nFor more information see the associated Siemens security advisory SSA-341067 in HTML and CSAF.\nCISA recommends users take defensive measures to minimize the risk of exploitation of these vulnerabilities, such as:\n\nMinimize network exposure for all control system devices and/or systems, ensuring they are not accessible from the internet.\nLocate control system networks and remote devices behind firewalls and isolating them from business networks.\nWhen remote access is required, use more secure methods, such as Virtual Private Networks (VPNs). Recognize VPNs may have vulnerabilities, should be updated to the most recent version available, and are only as secure as the connected devices.\n\nCISA reminds organizations to perform proper impact analysis and risk assessment prior to deploying defensive measures.\nCISA also provides a section for control systems security recommended practices on the ICS webpage on cisa.gov. Several CISA products detailing cyber defense best practices are available for reading and download, including Improving Industrial Control Systems Cybersecurity with Defense-in-Depth Strategies.\nCISA encourages organizations to implement recommended cybersecurity strategies for proactive defense of ICS assets.\nAdditional mitigation guidance and recommended practices are publicly available on the ICS webpage at cisa.gov in the technical information paper, ICS-TIP-12-146-01B--Targeted Cyber Intrusion Detection and Mitigation Strategies.\nOrganizations observing suspected malicious activity should follow established internal procedures and report findings to CISA for tracking and correlation against other incidents.\nCISA also recommends users take the following measures to protect themselves from social engineering attacks:\n\nDo not click web links or open attachments in unsolicited email messages.\nRefer to Recognizing and Avoiding Email Scams for more information on avoiding email scams.\nRefer to Avoiding Social Engineering and Phishing Attacks for more information on social engineering attacks.\n\nNo known public exploitation specifically targeting these vulnerabilities has been reported to CISA at this time.\n5. UPDATE HISTORY\n\nJune 13, 2024: Initial Publication\n\n",
  "cves": [
    "CVE-2023-0465",
    "CVE-2023-35390",
    "CVE-2023-38178",
    "CVE-2023-29331",
    "CVE-2023-38171",
    "CVE-2023-33126",
    "CVE-2023-21808",
    "CVE-2022-40304",
    "CVE-2023-33128",
    "CVE-2023-29469",
    "CVE-2023-36793",
    "CVE-2023-38180",
    "CVE-2023-28260",
    "CVE-2023-36792",
    "CVE-2023-36799",
    "CVE-2022-40303",
    "CVE-2023-33127",
    "CVE-2023-35391",
    "CVE-2023-36558",
    "CVE-2023-0466",
    "CVE-2023-36794",
    "CVE-2023-32032",
    "CVE-2023-36435",
    "CVE-2023-24895",
    "CVE-2023-36049",
    "CVE-2023-3817",
    "CVE-2023-33135",
    "CVE-2023-5678",
    "CVE-2023-36796",
    "CVE-2023-39615",
    "CVE-2023-33170",
    "CVE-2023-3446",
    "CVE-2023-44487",
    "CVE-2023-24936",
    "CVE-2023-0464",
    "CVE-2023-28484",
    "CVE-2023-36038",
    "CVE-2023-24897"
  ],
  "techniques": [],
  "advisory": "icsa-24-165-04",
  "title": "Siemens ST7 ScadaConnect | CISA",
  "source": "ics-advisories",
  "id": "0b0b04860c8c7edf775961645234b04fd186e741a30cfb2ce1482e275062249c"
}