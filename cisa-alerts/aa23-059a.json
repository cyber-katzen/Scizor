{
  "markdown": "\nSUMMARY\nThe Cybersecurity and Infrastructure Security Agency (CISA) is releasing this Cybersecurity Advisory (CSA) detailing activity and key findings from a recent CISA red team assessment\u2014in coordination with the assessed organization\u2014to provide network defenders recommendations for improving their organization's cyber posture.\nActions to take today to harden your local environment:\n\nEstablish a security baseline of normal network activity; tune network and host-based appliances to detect anomalous behavior.\nConduct regular assessments to ensure appropriate procedures are created and can be followed by security staff and end users.\nEnforce phishing-resistant MFA to the greatest extent possible.\n\nIn 2022, CISA conducted a red team assessment (RTA) at the request of a large critical infrastructure organization with multiple geographically separated sites. The team gained persistent access to the organization\u2019s network, moved laterally across the organization\u2019s multiple geographically separated sites, and eventually gained access to systems adjacent to the organization\u2019s sensitive business systems (SBSs). Multifactor authentication (MFA) prompts prevented the team from achieving access to one SBS, and the team was unable to complete its viable plan to compromise a second SBSs within the assessment period.\nDespite having a mature cyber posture, the organization did not detect the red team\u2019s activity throughout the assessment, including when the team attempted to trigger a security response.\nCISA is releasing this CSA detailing the red team\u2019s tactics, techniques, and procedures (TTPs) and key findings to provide network defenders of critical infrastructure organizations proactive steps to reduce the threat of similar activity from malicious cyber actors. This CSA highlights the importance of collecting and monitoring logs for unusual activity as well as continuous testing and exercises to ensure your organization\u2019s environment is not vulnerable to compromise, regardless of the maturity of its cyber posture.\nCISA encourages critical infrastructure organizations to apply the recommendations in the Mitigations section of this CSA\u2014including conduct regular testing within their security operations center\u2014to ensure security processes and procedures are up to date, effective, and enable timely detection and mitigation of malicious activity.\nDownload the PDF version of this report:\n\n\nCISA Red Team Shares Key Findings to Improve Monitoring and Hardening of Networks\n(PDF,       1.06 MB\n  )\n\n\nTECHNICAL DETAILS\nNote: This advisory uses the MITRE ATT&CK\u00ae for Enterprise framework, version 12. See the appendix for a table of the red team\u2019s activity mapped to MITRE ATT&CK tactics and techniques.\nIntroduction\nCISA has authority to, upon request, provide analyses, expertise, and other technical assistance to critical infrastructure owners and operators and provide operational and timely technical assistance to Federal and non-Federal entities with respect to cybersecurity risks. (See generally 6 U.S.C. \u00a7\u00a7 652[c][5], 659[c][6].) After receiving a request for a red team assessment (RTA) from an organization and coordinating some high-level details of the engagement with certain personnel at the organization, CISA conducted the RTA over a three-month period in 2022.\nDuring RTAs, a CISA red team emulates cyber threat actors to assess an organization\u2019s cyber detection and response capabilities. During Phase I, the red team attempts to gain and maintain persistent access to an organization\u2019s enterprise network while avoiding detection and evading defenses. During Phase II, the red team attempts to trigger a security response from the organization\u2019s people, processes, or technology.\nThe \u201cvictim\u201d for this assessment was a large organization with multiple geographically separated sites throughout the United States. For this assessment, the red team\u2019s goal during Phase I was to gain access to certain sensitive business systems (SBSs).\nPhase I: Red Team Cyber Threat Activity\nOverview\nThe organization\u2019s network was segmented with both logical and geographical boundaries. CISA\u2019s red team gained initial access to two organization workstations at separate sites via spearphishing emails. After gaining access and leveraging Active Directory (AD) data, the team gained persistent access to a third host via spearphishing emails. From that host, the team moved laterally to a misconfigured server, from which they compromised the domain controller (DC). They then used forged credentials to move to multiple hosts across different sites in the environment and eventually gained root access to all workstations connected to the organization\u2019s mobile device management (MDM) server. The team used this root access to move laterally to SBS-connected workstations. However, a multifactor authentication (MFA) prompt prevented the team from achieving access to one SBS, and Phase I ended before the team could implement a seemingly viable plan to achieve access to a second SBS.\nInitial Access and Active Directory Discovery\nThe CISA red team gained initial access [TA0001] to two workstations at geographically separated sites (Site 1 and Site 2) via spearphishing emails. The team first conducted open-source research\u00a0[TA0043] to identify potential targets for spearphishing. Specifically, the team looked for email addresses [T1589.002] as well as names [T1589.003] that could be used to derive email addresses based on the team\u2019s identification of the email naming scheme. The red team sent tailored spearphishing emails to seven targets using commercially available email platforms [T1585.002]. The team used the logging and tracking features of one of the platforms to analyze the organization\u2019s email filtering defenses and confirm the emails had reached the target\u2019s inbox.\nThe team built a rapport with some targeted individuals through emails, eventually leading these individuals to accept a virtual meeting invite. The meeting invite took them to a red team-controlled domain\u00a0[T1566.002] with a button, which, when clicked, downloaded a \u201cmalicious\u201d ISO file [T1204]. After the download, another button appeared, which, when clicked, executed the file.\nTwo of the seven targets responded to the phishing attempt, giving the red team access to a workstation at Site 1 (Workstation 1) and a workstation at Site 2. On Workstation 1, the team leveraged a modified SharpHound collector, ldapsearch, and command-line tool, dsquery, to query and scrape AD information, including AD users [T1087.002], computers [T1018], groups [T1069.002], access control lists (ACLs), organizational units (OU), and group policy objects (GPOs) [T1615]. Note: SharpHound is a BloodHound collector, an open-source AD reconnaissance tool. Bloodhound has multiple collectors that assist with information querying.\nThere were 52 hosts in the AD that had Unconstrained Delegation enabled and a lastlogon timestamp within 30 days of the query. Hosts with Unconstrained Delegation enabled store Kerberos ticket-granting tickets (TGTs) of all users that have authenticated to that host. Many of these hosts, including a Site 1 SharePoint server, were Windows Server 2012R2. The default configuration of Windows Server 2012R2 allows unprivileged users to query group membership of local administrator groups.\nThe red team queried parsed Bloodhound data for members of the SharePoint admin group and identified several standard user accounts with administrative access. The team initiated a second spearphishing campaign, similar to the first, to target these users. One user triggered the red team\u2019s payload, which led to installation of a persistent beacon on the user\u2019s workstation (Workstation 2), giving the team persistent access to Workstation 2.\nLateral Movement, Credential Access, and Persistence\nThe red team moved laterally [TA0008] from Workstation 2 to the Site 1 SharePoint server and had SYSTEM level access to the Site 1 SharePoint server, which had Unconstrained Delegation enabled. They used this access to obtain the cached credentials of all logged-in users\u2014including the New Technology Local Area Network Manager (NTLM) hash for the SharePoint server account. To obtain the credentials, the team took a snapshot of lsass.exe [T1003.001] with a tool called nanodump, exported the output, and processed the output offline with Mimikatz.\nThe team then exploited the Unconstrained Delegation misconfiguration to steal the DC\u2019s TGT. They ran the DFSCoerce python script (DFSCoerce.py), which prompted DC authentication to the SharePoint server using the server\u2019s NTLM hash. The team then deployed Rubeus to capture the incoming DC TGT [T1550.002], [T1557.001]. (DFSCoerce abuses Microsoft's Distributed File System [MS-DFSNM] protocol to relay authentication against an arbitrary server.[1])\nThe team then used the TGT to harvest advanced encryption standard (AES)-256 hashes via DCSync [T1003.006] for the krbtgt account and several privileged accounts\u2014including domain admins, workstation admins, and a system center configuration management (SCCM) service account (SCCM Account 1). The team used the krbtgt account hash throughout the rest of their assessment to perform golden ticket attacks [T1558.001] in which they forged legitimate TGTs. The team also used the asktgt command to impersonate accounts they had credentials for by requesting account TGTs [T1550.003].\nThe team first impersonated the SCCM Account 1 and moved laterally to a Site 1 SCCM distribution point (DP) server (SCCM Server 1) that had direct network access to Workstation 2. The team then moved from SCCM Server 1 to a central SCCM server (SCCM Server 2) at a third site (Site 3). Specifically, the team:\n\nQueried the AD using Lightweight Directory Access Protocol (LDAP) for information about the network's sites and subnets [T1016]. This query revealed all organization sites and subnets broken down by classless inter-domain routing (CIDR) subnet and description.\nUsed LDAP queries and domain name system (DNS) requests to identify recently active hosts.\nListed existing network connections [T1049] on SCCM Server 1, which revealed an active Server Message Block (SMB) connection from SCCM Server 2.\nAttempted to move laterally to the SCCM Server 2 via AppDomain hijacking, but the HTTPS beacon failed to call back.\nAttempted to move laterally with an SMB beacon [T1021.002], which was successful.\n\nThe team also moved from SCCM Server 1 to a Site 1 workstation (Workstation 3) that housed an active server administrator. The team impersonated an administrative service account via a golden ticket attack (from SCCM Server 1); the account had administrative privileges on Workstation 3. The user employed a KeePass password manager that the team was able to use to obtain passwords for other internal websites, a kernel-based virtual machine (KVM) server, virtual private network (VPN) endpoints, firewalls, and another KeePass database with credentials. The server administrator relied on a password manager, which stored credentials in a database file. The red team pulled the decryption key from memory using KeeThief and used it to unlock the database [T1555.005].\nAt the organization\u2019s request, the red team confirmed that SCCM Server 2 provided access to the organization\u2019s sites because firewall rules allowed SMB traffic to SCCM servers at all other sites.\nThe team moved laterally from SCCM Server 2 to an SCCM DP server at Site 5 and from the SCCM Server 1 to hosts at two other sites (Sites 4 and 6). The team installed persistent beacons at each of these sites. Site 5 was broken into a private and a public subnet and only DCs were able to cross that boundary. To move between the subnets, the team moved through DCs. Specifically, the team moved from the Site 5 SCCM DP server to a public DC; and then they moved from the public DC to the private DC. The team was then able to move from the private DC to workstations in the private subnet.\nThe team leveraged access available from SCCM 2 to move around the organization\u2019s network for post-exploitation activities (See Post-Exploitation Activity section).\nSee Figure 1 for a timeline of the red team\u2019s initial access and lateral movement showing key access points.\n\n \n\nFigure 1: Red Team Cyber Threat Activity: Initial Access and Lateral Movement\n\nWhile traversing the network, the team varied their lateral movement techniques to evade detection and because the organization had non-uniform firewalls between the sites and within the sites (within the sites, firewalls were configured by subnet). The team\u2019s primary methods to move between sites were AppDomainManager hijacking and dynamic-link library (DLL) hijacking [T1574.001]. In some instances, they used Windows Management Instrumentation (WMI) Event Subscriptions [T1546.003].\nThe team impersonated several accounts to evade detection while moving. When possible, the team remotely enumerated the local administrators group on target hosts to find a valid user account. This technique relies on anonymous SMB pipe binds [T1071], which are disabled by default starting with Windows Server 2016. In other cases, the team attempted to determine valid accounts based on group name and purpose. If the team had previously acquired the credentials, they used asktgt to impersonate the account. If the team did not have the credentials, they used the golden ticket attack to forge the account.\nPost-Exploitation Activity: Gaining Access to SBSs\nWith persistent, deep access established across the organization\u2019s networks and subnetworks, the red team began post-exploitation activities and attempted to access SBSs. Trusted agents of the organization tasked the team with gaining access to two specialized servers (SBS 1 and SBS 2). The team achieved root access to three SBS-adjacent workstations but was unable to move laterally to the SBS servers:\n\nPhase I ended before the team could implement a plan to move to SBS 1.\nAn MFA prompt blocked the team from moving to SBS 2, and Phase I ended before they could implement potential workarounds.\n\nHowever, the team assesses that by using Secure Shell (SSH) session socket files (see below), they could have accessed any hosts available to the users whose workstations were compromised.\nPlan for Potential Access to SBS 1\nConducting open-source research [1591.001], the team identified that SBS 1 and 2 assets and associated management/upkeep staff were located at Sites 5 and 6, respectively. Adding previously collected AD data to this discovery, the team was able to identify a specific SBS 1 admin account. The team planned to use the organization\u2019s mobile device management (MDM) software to move laterally to the SBS 1 administrator\u2019s workstation and, from there, pivot to SBS 1 assets.\nThe team identified the organization\u2019s MDM vendor using open-source and AD information [T1590.006] and moved laterally to an MDM distribution point server at Site 5 (MDM DP 1). This server contained backups of the MDM MySQL database on its D: drive in the Backup directory. The backups included the encryption key needed to decrypt any encrypted values, such as SSH passwords [T1552]. The database backup identified both the user of the SBS 1 administrator account (USER 2) and the user\u2019s workstation (Workstation 4), which the MDM software remotely administered.\nThe team moved laterally to an MDM server (MDM 1) at Site 3, searched files on the server, and found plaintext credentials [T1552.001] to an application programming interface (API) user account stored in PowerShell scripts. The team attempted to leverage these credentials to browse to the web login page of the MDM vendor but were unable to do so because the website directed to an organization-controlled single-sign on (SSO) authentication page.\nThe team gained root access to workstations connected to MDM 1\u2014specifically, the team accessed Workstation 4\u2014by:\n\nSelecting an MDM user from the plaintext credentials in PowerShell scripts on MDM 1.\nWhile in the MDM MySQL database,\n\nElevating the selected MDM user\u2019s account privileges to administrator privileges, and\nModifying the user\u2019s account by adding Create Policy and Delete Policy permissions [T1098], [T1548].\n\n\nCreating a policy via the MDM API [T1106], which instructed Workstation 4 to download and execute a payload to give the team interactive access as root to the workstation.\nVerifying their interactive access.\nResetting permissions back to their original state by removing the policy via the MDM API and removing Create Policy and Delete Policy and administrator permissions and from the MDM user\u2019s account.\n\nWhile interacting with Workstation 4, the team found an open SSH socket file and a corresponding netstat connection to a host that the team identified as a bastion host from architecture documentation found on Workstation 4. The team planned to move from Workstation 4 to the bastion host to SBS 1. Note: A SSH socket file allows a user to open multiple SSH sessions through a single, already authenticated SSH connection without additional authentication.\nThe team could not take advantage of the open SSH socket. Instead, they searched through SBS 1 architecture diagrams and documentation on Workstation 4. They found a security operations (SecOps) network diagram detailing the network boundaries between Site 5 SecOps on-premises systems, Site 5 non-SecOps on-premises systems, and Site 5 SecOps cloud infrastructure. The documentation listed the SecOps cloud infrastructure IP ranges [T1580]. These \u201ctrusted\u201d IP addresses were a public /16 subnet; the team was able to request a public IP in that range from the same cloud provider, and Workstation 4 made successful outbound SSH connections to this cloud infrastructure. The team intended to use that connection to reverse tunnel traffic back to the workstation and then access the bastion host via the open SSH socket file. However, Phase 1 ended before they were able to implement this plan.\nAttempts to Access SBS 2\nConducting open-source research, the team identified an organizational branch [T1591] that likely had access to SBS 2. The team queried the AD to identify the branch\u2019s users and administrators. The team gathered a list of potential accounts, from which they identified administrators, such as SYSTEMS ADMIN or DATA SYSTEMS ADMINISTRATOR, with technical roles. Using their access to the MDM MySQL database, the team queried potential targets to (1) determine the target\u2019s last contact time with the MDM and (2) ensure any policy targeting the target\u2019s workstation would run relatively quickly [T1596.005]. Using the same methodology as described by the steps in the Plan for Potential Access to SBS 1 section above, the team gained interactive root access to two Site 6 SBS 2-connected workstations: a software engineering workstation (Workstation 5) and a user administrator workstation (Workstation 6).\nThe Workstation 5 user had bash history files with what appeared to be SSH passwords mistyped into the bash prompt and saved in bash history [T1552.003]. The team then attempted to authenticate to SBS 2 using a similar tunnel setup as described in the Access to SBS 1 section above and the potential credentials from the user\u2019s bash history file. However, this attempt was unsuccessful for unknown reasons.\nOn Workstation 6, the team found a .txt file containing plaintext credentials for the user. Using the pattern discovered in these credentials, the team was able to crack the user\u2019s workstation account password [T1110.002]. The team also discovered potential passwords and SSH connection commands in the user\u2019s bash history. Using a similar tunnel setup described above, the team attempted to log into SBS 2. However, a prompt for an MFA passcode blocked this attempt.\nSee figure 2 for a timeline of the team\u2019s post exploitation activity that includes key points of access.\n\n \n\nFigure 2: Red Team Cyber Threat Activity: Post Exploitation\n\nCommand and Control\nThe team used third-party owned and operated infrastructure and services [T1583] throughout their assessment, including in certain cases for command and control (C2) [TA0011]. These included:\n\nCobalt Strike and Merlin payloads for C2 throughout the assessment. Note: Merlin is a post-exploit tool that leverages HTTP protocols for C2 traffic.\n\nThe team maintained multiple Cobalt Strike servers hosted by a cloud vendor. They configured each server with a different domain and used the servers for communication with compromised hosts. These servers retained all assessment data.\n\n\nTwo commercially available cloud-computing platforms.\n\nThe team used these platforms to create flexible and dynamic redirect servers to send traffic to the team\u2019s Cobalt Strike servers [T1090.002]. Redirecting servers make it difficult for defenders to attribute assessment activities to the backend team servers. The redirectors used HTTPS reverse proxies to redirect C2 traffic between the target organization\u2019s network and the Cobalt Strike team servers [T1071.002]. The team encrypted all data in transit [T1573] using encryption keys stored on team\u2019s Cobalt Strike servers.\n\n\nA cloud service to rapidly change the IP address of the team\u2019s redirecting servers in the event of detection and eradication.\nContent delivery network (CDN) services to further obfuscate some of the team\u2019s C2 traffic.\n\nThis technique leverages CDNs associated with high-reputation domains so that the malicious traffic appears to be directed towards a reputation domain but is actually redirected to the red team-controlled Cobalt Strike servers.\nThe team used domain fronting [T1090.004] to disguise outbound traffic in order to diversify the domains with which the persistent beacons were communicating. This technique, which also leverages CDNs, allows the beacon to appear to connect to third-party domains, such as nytimes.com, when it is actually connecting to the team\u2019s redirect server.\n\n\n\nPhase II: Red Team Measurable Events Activity\nThe red team executed 13 measurable events designed to provoke a response from the people, processes, and technology defending the organization\u2019s network. See Table 1 for a description of the events, the expected network defender activity, and the organization\u2019s actual response.\n\nTable 1: Measurable Events\n\n\nMeasurable Event\nDescription\nMITRE ATT&CK Technique(s)\nExpected Detection Points\nExpected Network Defender Reactions\nReported Reactions\n\n\n\n\nInternal Port Scan\nLaunch scan from inside the network from a previously gained workstation to enumerate ports on target workstation, server, and domain controller system(s).\n\n\nNetwork Service Discovery [T1046]\n\n\n\n\nNetwork Monitoring and Analysis Tools\nIntrusion Detection or Prevention Systems\nEndpoint Protection Platform\n\n\n\n\nDetect target hosts and ports\nIdentify associated scanning process\nAnalyze scanning host once detected\nDevelop response plan\n\n\nNone\n\n\n\n\u00a0\nComprehensive Active Directory and Host Enumeration\n\nPerform AD enumeration by querying all domain objects from the DC; and enumerating trust relationships within the AD Forest, user accounts, and current session information from every domain computer (Workstation and Server).\n\n\nDomain Trust Discovery [T1482]\nAccount Discovery:\u00a0Domain Account [T1087.002]\nSystem Owner/User Discovery [T1033]\nRemote System Discovery [T1018]\n\n\n\n\nNetwork Monitoring and Analysis Tools\nIntrusion Detection or Prevention Systems\nEndpoint Protection Platform\n\n\n\n\nDetect target hosts and ports\nIdentify associated scanning process\nAnalyze scanning host once detected\nDevelop response plan\n\n\nCollection process stopped before completion. Host isolated and sent for forensics.\n\n\nData Exfiltration\u20141 GB of Data\nSend a large amount (1 GB) of mock sensitive information to an external system over various protocols, including ICMP, DNS, FTP, and/or HTTP/S.\n\n\nExfiltration Over Alternative Protocol [T1048]\n\n\n\n\nNetwork Monitoring and Analysis Tools\nIntrusion Detection or Prevention Systems\nEndpoint Protection Platform\n\n\n\n\nDetect target hosts and ports\nIdentify associated scanning process\nAnalyze scanning host once detected\nDevelop response plan\n\n\nNone\n\n\nMalicious Traffic Generation\u2014Workstation to External Host\nEstablish a session that originates from a target Workstation system directly to an external host over a clear text protocol, such as HTTP.\n\n\nApplication Layer Protocol [T1071]\n\n\n\n\nIntrusion Detection or Prevention Systems\nEndpoint Protection Platform\nWindows Event Logs\n\n\n\n\nDetect and Identify source IP and source process of enumeration\nAnalyze scanning host once detected\nDevelop response plan\n\n\nNone\n\n\nActive Directory Account Lockout\nLock out several administrative AD accounts\n\n\nAccount Access Removal [T1531]\n\n\u00a0\n\n\n\nWindows Event Logs\nEnd User Reporting\n\n\n\n\nDetect and Identify source IP and source process of exfiltration\nAnalyze host used for exfiltration once detected\n\nDevelop response plan\n\nNone\n\n\nLocal Admin User Account Creation (workstation)\nCreate a local administrator account on a target workstation system.\n\n\nCreate Account: Local Account [T1136.001]\nAccount Manipulation [T1098]\n\n\n\n\nIntrusion Detection or Prevention Systems\nEndpoint Protection Platform\nWeb Proxy Logs\n\n\n\n\nDetect and identify source IP and source process of malicious traffic\nInvestigate destination IP address\nTriage compromised host\nDevelop response plan\n\n\nNone\n\n\nLocal Admin User Account Creation (server)\nCreate a local administrator account on a target server system.\n\n\nCreate Account: Local Account [T1136.001]\nAccount Manipulation [T1098]\n\n\n\n\nWindows Event Logs\n\n\n\n\nDetect account creation\nIdentify source of change\nVerify change with system owner\nDevelop response plan\n\n\nNone\n\n\nActive Directory Account Creation\nCreate AD accounts and add it to domain admins group\n\n\nCreate Account: Domain Account [T1136.002]\nAccount Manipulation [T1098]\n\n\n\n\nWindows Event Logs\n\n\n\n\nDetect account creation\nIdentify source of change\nVerify change with system owner\nDevelop response plan\n\n\nNone\n\n\nWorkstation Admin Lateral Movement\u2014Workstation to Workstation\n\nUse a previously compromised workstation admin account to upload and execute a payload via SMB and Windows Service Creation, respectively, on several target Workstations.\n\u00a0\n\n\n\nValid Accounts: Domain Accounts [T1078.002]\nRemote Services: SMB/Windows Admin Shares, Sub-technique [T1021.002]\nCreate or Modify System Process: Windows Service [T1543.003]\n\n\n\n\nWindows Event Logs\n\n\n\n\nDetect account compromise\nAnalyze compromised host\nDevelop response plan\n\n\nNone\n\n\nDomain Admin Lateral Movement\u2014Workstation to Domain Controller\nUse a previously compromised domain admin account to upload and execute a payload via SMB and Windows Service Creation, respectively, on a target DC.\n\n\nValid Accounts: Domain Accounts [T1078.002]\nRemote Services: SMB/Windows Admin Shares, Sub-technique [T1021.002]\nCreate or Modify System Process: Windows Service [T1543.003]\n\n\n\n\nWindows Event Logs\n\n\n\n\nDetect account compromise\nTriage compromised host\nDevelop response plan\n\n\nNone\n\n\nMalicious Traffic Generation\u2014Domain Controller to External Host\nEstablish a session that originates from a target Domain Controller system directly to an external host over a clear text protocol, such as HTTP.\n\n\nApplication Layer Protocol [T1071]\n\n\n\n\nIntrusion Detection or Prevention Systems\nEndpoint Protection Platform\nWeb Proxy Logs\n\n\n\n\nDetect and identify source IP and source process of malicious traffic\nInvestigate destination IP address\nTriage compromised host\n\nDevelop response plan\n\nNone\n\n\nTrigger Host-Based Protection\u2014Domain Controller\nUpload and execute a well-known (e.g., with a signature) malicious file to a target DC system to generate host-based alerts.\n\n\nIngress Tool Transfer [T1105]\n\n\n\n\nEndpoint Protection Platform\nEndpoint Detection and Response\n\n\n\n\nDetect and identify source IP and source process of malicious traffic\nInvestigate destination IP address\nTriage compromised host\nDevelop response plan\n\n\nMalicious file was removed by antivirus\n\n\nRansomware Simulation\n\nExecute simulated ransomware on multiple Workstation systems to simulate a ransomware attack.\nNote: This technique does NOT encrypt files on the target system.\n\nN/A\n\n\nEnd User Reporting\n\n\n\n\nInvestigate end user reported event\nTriage compromised host\nDevelop response Plan\n\n\nFour users reported event to defensive staff\n\n\n\nFindings\nKey Issues\nThe red team noted the following key issues relevant to the security of the organization\u2019s network. These findings contributed to the team\u2019s ability to gain persistent, undetected access across the organization\u2019s sites. See the Mitigations section for recommendations on how to mitigate these issues.\n\nInsufficient host and network monitoring. Most of the red team\u2019s Phase II actions failed to provoke a response from the people, processes, and technology defending the organization\u2019s network. The organization failed to detect lateral movement, persistence, and C2 activity via their intrusion detection or prevention systems, endpoint protection platform, web proxy logs, and Windows event logs. Additionally, throughout Phase I, the team received no deconflictions or confirmation that the organization caught their activity. Below is a list of some of the higher risk activities conducted by the team that were opportunities for detection:\n\nPhishing\nLateral movement reuse\nGeneration and use of the golden ticket\nAnomalous LDAP traffic\nAnomalous internal share enumeration\nUnconstrained Delegation server compromise\nDCSync\nAnomalous account usage during lateral movement\nAnomalous outbound network traffic\nAnomalous outbound SSH connections to the team\u2019s cloud servers from workstations\n\n\nLack of monitoring on endpoint management systems. The team used the organization\u2019s MDM system to gain root access to machines across the organization\u2019s network without being detected. Endpoint management systems provide elevated access to thousands of hosts and should be treated as high value assets (HVAs) with additional restrictions and monitoring.\nKRBTGT never changed. The Site 1 krbtgt account password had not been updated for over a decade. The krbtgt account is a domain default account that acts as a service account for the key distribution center (KDC) service used to encrypt and sign all Kerberos tickets for the domain. Compromise of the krbtgt account could provide adversaries with the ability to sign their own TGTs, facilitating domain access years after the date of compromise. The red team was able to use the krbtgt account to forge TGTs for multiple accounts throughout Phase I.\nExcessive permissions to standard users. The team discovered several standard user accounts that have local administrator access to critical servers. This misconfiguration allowed the team to use the low-level access of a phished user to move laterally to an Unconstrained Delegation host and compromise the entire domain.\nHosts with Unconstrained Delegation enabled unnecessarily. Hosts with Unconstrained Delegation enabled store the Kerberos TGTs of all users that authenticate to that host, enabling actors to steal service tickets or compromise krbtgt accounts and perform golden ticket or \u201csilver ticket\u201d attacks. The team performed an NTLM-relay attack to obtain the DC\u2019s TGT, followed by a golden ticket attack on a SharePoint server with Unconstrained Delegation to gain the ability to impersonate any Site 1 AD account.\nUse of non-secure default configurations. The organization used default configurations for hosts with Windows Server 2012 R2. The default configuration allows unprivileged users to query group membership of local administrator groups. The red team used and identified several standard user accounts with administrative access from a Windows Server 2012 R2 SharePoint server.\n\nAdditional Issues\nThe team noted the following additional issues.\n\nIneffective separation of privileged accounts. Some workstations allowed unprivileged accounts to have local administrator access; for example, the red team discovered an ordinary user account in the local admin group for the SharePoint server. If a user with administrative access is compromised, an actor can access servers without needing to elevate privileges. Administrative and user accounts should be separated, and designated admin accounts should be exclusively used for admin purposes.\nLack of server egress control. Most servers, including domain controllers, allowed unrestricted egress traffic to the internet.\nInconsistent host configuration. The team observed inconsistencies on servers and workstations within the domain, including inconsistent membership in the local administrator group among different servers or workstations. For example, some workstations had \u201cServer Admins\u201d or \u201cDomain Admins\u201d as local administrators, and other workstations had neither.\nPotentially unwanted programs. The team noticed potentially unusual software, including music software, installed on both workstations and servers. These extraneous software installations indicate inconsistent host configuration (see above) and increase the attack surfaces for malicious actors to gain initial access or escalate privileges once in the network.\nMandatory password changes enabled. During the assessment, the team keylogged a user during a mandatory password change and noticed that only the final character of their password was modified. This is potentially due to domain passwords being required to be changed every 60 days.\nSmart card use was inconsistent across the domain. While the technology was deployed, it was not applied uniformly, and there was a significant portion of users without smartcard protections enabled. The team used these unprotected accounts throughout their assessment to move laterally through the domain and gain persistence.\n\nNoted Strengths\nThe red team noted the following technical controls or defensive measures that prevented or hampered offensive actions:\n\nThe organization conducts regular, proactive penetration tests and adversarial assessments and invests in hardening their network based on findings.\n\nThe team was unable to discover any easily exploitable services, ports, or web interfaces from more than three million external in-scope IPs. This forced the team to resort to phishing to gain initial access to the environment.\nService account passwords were strong. The team was unable to crack any of the hashes obtained from the 610 service accounts pulled. This is a critical strength because it slowed the team from moving around the network in the initial parts of the Phase I.\nThe team did not discover any useful credentials on open file shares or file servers. This slowed the progress of the team from moving around the network.\n\n\nMFA was used for some SBSs. The team was blocked from moving to SBS 2 by an MFA prompt.\nThere were strong security controls and segmentation for SBS systems. Direct access to SBS were located in separate networks, and admins of SBS used workstations protected by local firewalls.\n\nMITIGATIONS\nCISA recommends organizations implement the recommendations in Table 2 to mitigate the issues listed in the Findings section of this advisory. These mitigations align with the Cross-Sector Cybersecurity Performance Goals (CPGs) developed by CISA and the National Institute of Standards and Technology (NIST). The CPGs provide a minimum set of practices and protections that CISA and NIST recommend all organizations implement. CISA and NIST based the CPGs on existing cybersecurity frameworks and guidance to protect against the most common and impactful threats, tactics, techniques, and procedures. See CISA\u2019s Cross-Sector Cybersecurity Performance Goals for more information on the CPGs, including additional recommended baseline protections.\n\nTable 2: Recommendations to Mitigate Identified Issues\n\n\nIssue\nRecommendation\n\n\n\n\nInsufficient host and network monitoring\n\n\nEstablish a security baseline of normal network traffic and tune network appliances to detect anomalous behavior [CPG 3.1]. Tune host-based products to detect anomalous binaries, lateral movement, and persistence techniques.\nCreate alerts for Windows event log authentication codes, especially for the domain controllers. This could help detect some of the pass-the-ticket, DCSync, and other techniques described in this report.\nFrom a detection standpoint, focus on identity and access management (IAM) rather than just network traffic or static host alerts.\nConsider who is accessing what (what resource), from where (what internal host or external location), and when (what day and time the access occurs).\nLook for access behavior that deviates from expected or is indicative of AD abuse.\nReduce the attack surface by limiting the use of legitimate administrative pathways and tools such as PowerShell, PSExec, and WMI, which are often used by malicious actors. CISA recommends selecting one tool to administer the network, ensuring logging is turned on [CPG 3.1], and disabling the others.\nConsider using \u201choneypot\u201d service principal names (SPNs) to detect attempts to crack account hashes [CPG 1.1].\nConduct regular assessments to ensure processes and procedures are up to date and can be followed by security staff and end users.\nConsider using red team tools, such as SharpHound, for AD enumeration to identify users with excessive privileges and misconfigured hosts (e.g., with Unconstrained Delegation enabled).\nEnsure all commercial tools deployed in your environment are regularly tuned to pick up on relevant activity in your environment.\n\n\n\n\nLack of monitoring on endpoint management systems\n\n\nTreat endpoint management systems as HVAs with additional restrictions and monitoring because they provide elevated access to thousands of hosts.\n\n\n\n\nKRBTGT never changed\n\n\nChange the krbtgt account password on a regular schedule such as every 6 to 12 months or if it becomes compromised. Note that this password change must be carefully performed to effectively change the credential without breaking AD functionality. The password must be changed twice to effectively invalidate the old credentials. However, the required waiting period between resets must be greater than the maximum lifetime period of Kerberos tickets, which is 10 hours by default. See Microsoft\u2019s KRBTGT account maintenance considerations guidance for more information.\n\n\n\n\nExcessive permissions to standard users and ineffective separation of privileged accounts\n\n\nImplement the principle of least privilege:\nGrant standard user rights for standard user tasks such as email, web browsing, and using line-of-business (LOB) applications.\nPeriodically audit standard accounts and minimize where they have privileged access.\nPeriodically Audit AD permissions to ensure users do not have excessive permissions and have not been added to admin groups.\nEvaluate which administrative groups should administer which servers/workstations. Ensure group members administrative accounts instead of standard accounts.\nSeparate administrator accounts from user accounts [CPG 1.5]. Only allow designated admin accounts to be used for admin purposes. If an individual user needs administrative rights over their workstation, use a separate account that does not have administrative access to other hosts, such as servers.\nConsider using a privileged access management (PAM) solution to manage access to privileged accounts and resources [CPG 3.4]. PAM solutions can also log and alert usage to detect any unusual activity and may have helped stop the red team from accessing resources with admin accounts. Note: password vaults associated with PAM solutions should be treated as HVAs with additional restrictions and monitoring (see below).\nConfigure time-based access for accounts set at the admin level and higher. For example, the just-in-time (JIT) access method provisions privileged access when needed and can support enforcement of the principle of least privilege, as well as the Zero Trust model. This is a process in which a network-wide policy is set in place to automatically disable administrator accounts at the AD level when the account is not in direct need. When individual users need the account, they submit their requests through an automated process that enables access to a system but only for a set timeframe to support task completion.\n\n\n\n\nHosts with Unconstrained Delegation enabled\n\n\nRemove Unconstrained Delegation from all servers. If Unconstrained Delegation functionality is required, upgrade operating systems and applications to leverage other approaches (e.g., constrained delegation) or explore whether systems can be retired or further isolated from the enterprise. CISA recommends Windows Server 2019 or greater.\nConsider disabling or limiting NTLM and WDigest Authentication if possible, including using their use as criteria for prioritizing updates to legacy systems or for segmenting the network. Instead use more modern federation protocols (SAML, OIDC) or Kerberos for authentication with AES-256 bit encryption [CPG 3.4].\nIf NTLM must be enabled, enable Extended Protection for Authentication (EPA) to prevent some NTLM-relay attacks, and implement SMB signing to prevent certain adversary-in-the-middle and pass-the-hash attacks CPG 3.4]. See Microsoft Mitigating NTLM Relay Attacks on Active Directory Certificate Services (AD CS) and Microsoft Overview of Server Message Block signing for more information.\n\n\n\n\nUse of non-secure default configurations\n\n\nKeep systems and software up to date [CPG 5.1]. If updates cannot be uniformly installed, update insecure configurations to meet updated standards.\n\n\n\n\nLack of server egress control\n\n\nConfigure internal firewalls and proxies to restrict internet traffic from hosts that do not require it. If a host requires specific outbound traffic, consider creating an allowlist policy of domains.\n\n\n\n\nLarge number of credentials in a shared vault\n\n\nTreat password vaults as HVAs with additional restrictions and monitoring [CPG 3.4]:\nIf on-premise, require MFA for admin and apply network segmentation [CPG 1.3]. Use solutions with end-to-end encryption where applicable [CPG 3.3].\nIf cloud-based, evaluate the provider to ensure use of strong security controls such as MFA and end-to-end encryption [CPG 1.3, 3.3].\n\n\n\n\nInconsistent host configuration\n\n\nEstablish a baseline/gold-image for workstations and servers and deploy from that image [CPG 2.5]. Use standardized groups to administer hosts in the network.\n\n\n\n\nPotentially unwanted programs\n\n\nImplement software allowlisting to ensure users can only install software from an approved list [CPG 2.1].\nRemove unnecessary, extraneous software from servers and workstations.\n\n\n\n\nMandatory password changes enabled\n\n\nConsider only requiring changes for memorized passwords in the event of compromise. Regular changing of memorized passwords can lead to predictable patterns, and both CISA and the National Institute of Standards and Technology (NIST) recommend against changing passwords on regular intervals.\n\n\n\n\n\nAdditionally, CISA recommends organizations implement the mitigations below to improve their cybersecurity posture:\n\nProvide users with regular training and exercises, specifically related to phishing emails [CPG 4.3]. Phishing accounts for majority of initial access intrusion events.\nEnforce phishing-resistant MFA to the greatest extent possible [CPG 1.3].\nReduce the risk of credential compromise via the following:\n\nPlace domain admin accounts in the protected users group to prevent caching of password hashes locally; this also forces Kerberos AES authentication as opposed to weaker RC4 or NTLM.\nImplement Credential Guard for Windows 10 and Server 2016 (Refer to Microsoft: Manage Windows Defender Credential Guard for more information). For Windows Server 2012R2, enable Protected Process Light for Local Security Authority (LSA).\nRefrain from storing plaintext credentials in scripts [CPG 3.4]. The red team discovered a PowerShell script containing plaintext credentials that allowed them to escalate to admin.\n\n\nUpgrade to Windows Server 2019 or greater and Windows 10 or greater. These versions have security features not included in older operating systems.\n\nAs a long-term effort, CISA recommends organizations prioritize implementing a more modern, Zero Trust network architecture that:\n\nLeverages secure cloud services for key enterprise security capabilities (e.g., identity and access management, endpoint detection and response, policy enforcement).\nUpgrades applications and infrastructure to leverage modern identity management and network access practices.\nCentralizes and streamlines access to cybersecurity data to drive analytics for identifying and managing cybersecurity risks.\nInvests in technology and personnel to achieve these goals.\n\nCISA encourages organizational IT leadership to ask their executive leadership the question: Can the organization accept the business risk of NOT implementing critical security controls such as MFA? Risks of that nature should typically be acknowledged and prioritized at the most senior levels of an organization.\nVALIDATE SECURITY CONTROLS\nIn addition to applying mitigations, CISA recommends exercising, testing, and validating your organization's security program against the threat behaviors mapped to the MITRE ATT&CK for Enterprise framework in this advisory. CISA recommends testing your existing security controls inventory to assess how they perform against the ATT&CK techniques described in this advisory.\nTo get started:\n\nSelect an ATT&CK technique described in this advisory (see Table 3).\nAlign your security technologies against the technique.\nTest your technologies against the technique.\nAnalyze your detection and prevention technologies\u2019 performance.\nRepeat the process for all security technologies to obtain a set of comprehensive performance data.\nTune your security program, including people, processes, and technologies, based on the data generated by this process.\n\nCISA recommends continually testing your security program, at scale, in a production environment to ensure optimal performance against the MITRE ATT&CK techniques identified in this advisory.\nRESOURCES\nSee CISA\u2019s RedEye tool on CISA\u2019s GitHub page. RedEye is an interactive open-source analytic tool used to visualize and report red team command and control activities. See CISA\u2019s RedEye tool overview video for more information.\nREFERENCES[1] Bleeping Computer: New DFSCoerce NTLM Relay attack allows Windows domain takeover\nAPPENDIX: MITRE ATT&CK TACTICS AND TECHNIQUES\nSee Table 3 for all referenced red team tactics and techniques in this advisory. Note: activity was from Phase I unless noted.\n\nTable 3: Red Team ATT&CK Techniques for Enterprise\n\n\n\u00a0\nReconnaissance\n\u00a0\n\n\n\u00a0\nResource Development\n\u00a0\n\n\n\u00a0\nInitial Access\n\u00a0\n\n\n\u00a0\nExecution\n\u00a0\n\n\n\u00a0\nPersistence\n\u00a0\n\n\n\u00a0\nPrivilege Escalation\n\u00a0\n\n\n\u00a0\nDefense Evasion\n\u00a0\n\n\n\u00a0\nCredential Access\n\u00a0\n\n\n\u00a0\nDiscovery\n\u00a0\n\n\n\u00a0\nLateral Movement\n\u00a0\n\n\n\u00a0\nCommand and Control\n\u00a0\n\n\n\u00a0\nImpact\n\u00a0\n\n\n\n\nTechnique Title\nID\nUse\n\n\nGather Victim Identity Information: Email Addresses\n\nT1589.002\n\u00a0\n\nThe team found employee email addresses via open-source research.\n\n\n\nGather Victim Identify Information: Employee Names\n\u00a0\n\n\nT1589.003\n\u00a0\n\nThe team identified employee names via open-source research that could be used to derive email addresses.\n\n\nGather Victim Network Information: Network Security Appliances\nT1590.006\nThe team identified the organization\u2019s MDM vendor and leveraged that information to move laterally to SBS-connected assets.\n\n\nGather Victim Org Information\nT1591\nThe team conducted open-source research and identified an organizational branch that likely had access to an SBS asset.\n\n\nGather Victim Org Information: Determine Physical Locations\nT1591.001\nThe team conducted open-source research to identify the physical locations of upkeep/management staff of selected assets.\n\n\n\nSearch Open Technical Databases: Scan Databases\n\u00a0\n\nT1596.005\nThe team queried an MDM SQL database to identify target administrators who recently connected with the MDM.\n\n\nTechnique Title\nID\nUse\n\n\nAcquire Infrastructure\nT1583\nThe team used third-party owned and operated infrastructure throughout their assessment for C2.\n\n\nEstablish Accounts: Email Accounts\nT1585.002\nThe team used commercially available email platforms for their spearphishing activity.\n\n\nObtain Capabilities: Tool\nT1588.002\n\nThe team used the following tools:\n\nCobalt Strike and Merlin payloads for C2.\nKeeThief to obtain a decryption key from a KeePass database\nRubeus and DFSCoerce in an NTLM relay attack\n\n\n\n\nTechnique Title\nID\nUse\n\n\nPhishing:\u00a0Spearphishing Link\nT1566.002\nThe team sent spearphishing emails with links to a red-team-controlled domain to gain access to the organization\u2019s systems.\n\n\nTechnique Title\nID\nUse\n\n\nNative API\nT1106\nThe team created a policy via the MDM API, which downloaded and executed a payload on a workstation.\n\n\nUser Execution\nT1204\nUsers downloaded and executed the team\u2019s initial access payloads after clicking buttons to trigger download and execution.\n\n\nTechnique Title\nID\n\nUse\n\u00a0\n\n\n\nAccount Manipulation\nT1098\n\nThe team elevated account privileges to administrator and modified the user\u2019s account by adding Create Policy and Delete Policy permissions.\nDuring Phase II, the team created local admin accounts and an AD account; they added the created AD account to a domain admins group.\n\n\n\nCreate Account: Local Account\nT1136.001\nDuring Phase II, the team created a local administrator account on a workstation and a server.\n\n\nCreate Account: Domain Account\nT1136.002\nDuring Phase II, the team created an AD account.\n\n\nCreate or Modify System Process: Windows Service\nT1543.003\nDuring Phase II, the team leveraged compromised workstation and domain admin accounts to execute a payload via Windows Service Creation on target workstations and the DC.\n\n\nEvent Triggered Execution: Windows Management Instrumentation Event Subscription\nT1546.003\nThe team used WMI Event Subscriptions to move laterally between sites.\n\n\nHijack Execution Flow: DLL Search Order Hijacking\nT1574.001\nThe team used DLL hijacking to move laterally between sites.\n\n\nTechnique Title\nID\nUse\n\n\nAbuse Elevation Control Mechanism\nT1548\nThe team elevated user account privileges to administrator by modifying the user\u2019s account via adding Create Policy and Delete Policy permissions.\n\n\nTechnique Title\nID\nUse\n\n\nValid Accounts: Domain Accounts\nT1078.002\nDuring Phase II, the team compromised a domain admin account and used it to laterally to multiple workstations and the DC.\n\n\nTechnique Title\nID\nUse\n\n\nOS Credential Dumping: LSASS Memory\nT1003.001\nThe team obtained the cached credentials from a SharePoint server account by taking a snapshot of lsass.exe with a tool called nanodump, exporting the output and processing the output offline with Mimikatz.\n\n\nOS Credential Dumping: DCSync\nT1003.006\nThe team harvested AES-256 hashes via DCSync.\n\n\nBrute Force: Password Cracking\nT1110.002\nThe team cracked a user\u2019s workstation account password after learning the user\u2019s patterns from plaintext credentials.\n\n\nUnsecured Credentials\nT1552\nThe team found backups of a MySQL database that contained the encryption key needed to decrypt SSH passwords.\n\n\nUnsecured Credentials: Credentials in Files\nT1552.001\nThe team found plaintext credentials to an API user account stored in PowerShell scripts on an MDM server.\n\n\nUnsecured Credentials: Bash History\nT1552.003\nThe team found bash history files on a Workstation 5, and the files appeared to be SSH passwords saved in bash history.\n\n\nCredentials from Password Stores: Password Managers\nT1555.005\n\nThe team pulled credentials from a KeePass database.\n\u00a0\n\n\n\nAdversary-in-the-middle: LLMNR/NBT-NS Poisoning and SMB Relay\nT1557.001\nThe team ran the DFSCoerce python script, which prompted DC authentication to a server using the server\u2019s NTLM hash. The team then deployed Rubeus to capture the incoming DC TGT.\n\n\nSteal or Forge Kerberos Tickets: Golden Ticket\nT1558.001\nThe team used the acquired krbtgt account hash throughout their assessment to forge legitimate TGTs.\n\n\nSteal or Forge Kerberos Tickets: Kerberoasting\nT1558.003\nThe team leveraged Rubeus and DFSCoerce in a NTLM relay attack to obtain the DC\u2019s TGT from a host with Unconstrained Delegation enabled.\n\n\nTechnique Title\nID\nUse\n\n\nSystem Network Configuration Discovery\nT1016\nThe team queried the AD for information about the network's sites and subnets.\u00a0\n\n\nRemote System Discovery\nT1018\nThe team queried the AD, during phase I and II, for information about computers on the network.\u00a0\n\n\nSystem Network Connections Discovery\nT1049\nThe team listed existing network connections on SCCM Server 1 to reveal an active SMB connection with server 2.\n\n\nPermission Groups Discovery: Domain Groups\nT1069.002\nThe team leveraged ldapsearch and dsquery to query and scrape active directory information.\u00a0\n\n\nAccount Discovery: Domain Account\nT1087.002\nThe team queried AD for AD users (during Phase I and II), including for members of a SharePoint admin group and several standard user accounts with administrative access.\n\n\nCloud Infrastructure Discovery\nT1580\nThe team found SecOps network diagrams on a host detailing cloud infrastructure boundaries.\n\n\nDomain Trust Discovery\nT1482\nDuring Phase II, the team enumerated trust relationships within the AD Forest.\n\n\nGroup Policy Discovery\nT1615\nThe team scraped AD information, including GPOs.\n\n\nNetwork Service Discovery\nT1046\nDuring Phase II, the team enumerated ports on target systems from a previously compromised workstation.\n\n\nSystem Owner/User Discovery\nT1033\nDuring Phase II, the team enumerated the AD for current session information from every domain computer (Workstation and Server).\n\n\nTechnique Title\nID\nUse\n\n\nRemote Services: SMB/Windows Admin Shares\nT1021.002\n\nThe team moved laterally with an SMB beacon.\nDuring Phase II, they used compromised workstation and domain admin accounts to upload a payload via SMB on several target Workstations and the DC.\n\n\n\nUse Alternate Authentication Material: Pass the Hash\nT1550.002\nThe team ran the DFSCoerce python script, which prompted DC authentication to a server using the server\u2019s NTLM hash. The team then deployed Rubeus to capture the incoming DC TGT.\n\n\nPass the Ticket\nT1550.003\nThe team used the asktgt command to impersonate accounts for which they had credentials by requesting account TGTs.\n\n\nTechnique Title\nID\nUse\n\n\nApplication Layer Protocol\nT1071\n\nThe team remotely enumerated the local administrators group on target hosts to find valid user accounts. This technique relies on anonymous SMB pipe binds, which are disabled by default starting with Server 2016.\nDuring Phase II, the team established sessions that originated from a target Workstation and from the DC directly to an external host over a clear text protocol.\n\n\n\nApplication Layer Protocol: Web Protocols\nT1071.001\nThe team\u2019s C2 redirectors used HTTPS reverse proxies to redirect C2 traffic.\n\n\nApplication Layer Protocol: File Transfer Protocols\nT1071.002\nThe team used HTTPS reverse proxies to redirect C2 traffic between target network and the team\u2019s Cobalt Strike servers.\n\n\nEncrypted Channel\nT1573\nThe team\u2019s C2 traffic was encrypted in transit using encryption keys stored on their C2 servers.\n\n\nIngress Tool Transfer\nT1105\nDuring Phase II, the team uploaded and executed well-known malicious files to the DC to generate host-based alerts.\n\n\nProxy: External Proxy\nT1090.002\nThe team used redirectors to redirect C2 traffic between the target organization\u2019s network and the team\u2019s C2 servers.\n\n\nProxy: Domain Fronting\nT1090.004\nThe team used domain fronting to disguise outbound traffic in order to diversify the domains with which the persistent beacons were communicating.\n\n\nTechnique Title\nID\nUse\n\n\nAccount Access Removal\nT1531\nDuring Phase II, the team locked out several administrative AD accounts.\n\n\n\n\u00a0\nPlease share your thoughts. We recently updated our anonymous Product Feedback\u00a0Survey and\u00a0we'd welcome your feedback.\n",
  "cves": [],
  "techniques": [
    "T1550.003",
    "T1591.001",
    "T1574.001",
    "T1585.002",
    "T1596.005",
    "T1555.005",
    "T1110.002",
    "T1136.001",
    "T1552.001",
    "T1003.006",
    "T1090.002",
    "T1136.002",
    "T1566.002",
    "T1558.001",
    "T1069.002",
    "T1078.002",
    "T1090.004",
    "T1546.003",
    "T1558.003",
    "T1550.002",
    "T1071.001",
    "T1087.002",
    "T1588.002",
    "T1589.003",
    "T1552.003",
    "T1021.002",
    "T1589.002",
    "T1557.001",
    "T1003.001",
    "T1590.006",
    "T1071.002",
    "T1543.003"
  ],
  "advisory": "aa23-059a",
  "title": "CISA Red Team Shares Key Findings to Improve Monitoring and Hardening of Networks | CISA",
  "source": "cybersecurity-advisories",
  "id": "506308cbdcffd9e5cdb4abd6babc290a0d2889fcef1a5f32644abc4b59e5de35"
}