{"markdown": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n FASTCash 2\\.0: North Korea's BeagleBoyz Robbing Banks \\| CISA\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[Skip to main content](#main) \n\n\n\n\n\n\n\n\n\n\n\n\n![U.S. flag](/profiles/cisad8_gov/themes/custom/gesso/dist/images/us_flag_small.png)\n\n\n\n An official website of the United States government\n \n\n\n\n Here\u2019s how you know\n \n\n\n\n\n\n Here\u2019s how you know\n \n\n\n\n\n\n\n![Dot gov](/profiles/cisad8_gov/themes/custom/gesso/dist/images/icon-dot-gov.svg)\n\n\n**Official websites use .gov** \n  \n\n A\n **.gov** \n website belongs to an official government organization in the United States.\n \n\n\n\n\n\n![HTTPS](/profiles/cisad8_gov/themes/custom/gesso/dist/images/icon-https.svg)\n\n\n**Secure .gov websites use HTTPS** \n  \n\n A\n **lock** \n (\n \n\n\n Lock\n \n\n A locked padlock\n \n\n\n\n\n ) or\n **https://** \n means you\u2019ve safely connected to the .gov website. Share sensitive information only on official, secure websites.\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[Free Cyber Services](/resources-tools/resources/free-cybersecurity-services-and-tools \"Free Cyber Services\") \n[\\#protect2024](/protect2024) \n[Secure Our World](/node/18883) \n[Shields Up](/node/8056) \n[Report A Cyber Issue](/node/16591) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[![CISA Logo Americas Cyber Defense Agency](/sites/default/files/images/SVG/header_logo_tagline_update.svg)](/)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[![CISA Logo](/sites/default/files/images/SVG/mobile_logo_wordmark.svg)](/)\n\n\n\n\n\n\n\n\n\n\n Search\n \n\n\n\n\n\n\n\n\n\n Menu\n \n\n\n\n\n\n\n\n\n\n\n\n\n![America's Cyber Defense Agency](/sites/default/files/images/SVG/header_tagline_mobile_update.svg)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n Close\n \n\n\n\n\n* Topics\n \n\n\n\n[Topics](/topics) \n\n\n\n\n[Cybersecurity Best Practices](/topics/cybersecurity-best-practices)\n\n\n\n\n[Cyber Threats and Advisories](/topics/cyber-threats-and-advisories)\n\n\n\n\n[Critical Infrastructure Security and Resilience](/topics/critical-infrastructure-security-and-resilience)\n\n\n\n\n[Election Security](/topics/election-security)\n\n\n\n\n[Emergency Communications](/topics/emergency-communications)\n\n\n\n\n[Industrial Control Systems](/topics/industrial-control-systems)\n\n\n\n\n[Information and Communications Technology Supply Chain Security](/topics/information-communications-technology-supply-chain-security)\n\n\n\n\n[Partnerships and Collaboration](/topics/partnerships-and-collaboration)\n\n\n\n\n[Physical Security](/topics/physical-security)\n\n\n\n\n[Risk Management](/topics/risk-management)\n\n\n\n\n\n[How can we help?](/audiences) \n\n\n[Government](/topics/government) \n[Educational Institutions](/topics/educational-institutions) \n[Industry](/topics/industry) \n[State, Local, Tribal, and Territorial](/topics/state-local-tribal-and-territorial) \n[Individuals and Families](/topics/individuals-and-families) \n[Small and Medium Businesses](/topics/small-and-medium-businesses) \n[Find Help Locally](/audiences/find-help-locally) \n[Faith\\-Based Community](/audiences/faith-based-community) \n[Executives](/audiences/executives) \n[High\\-Risk Communities](/audiences/high-risk-communities)\n* [Spotlight](/spotlight)\n* Resources \\& Tools\n \n\n\n\n[Resources \\& Tools](/resources-tools) \n\n\n\n\n[All Resources \\& Tools](/resources-tools/all-resources-tools)\n\n\n\n\n[Services](/resources-tools/services)\n\n\n\n\n[Programs](/resources-tools/programs)\n\n\n\n\n[Resources](/resources-tools/resources)\n\n\n\n\n[Training](/resources-tools/training)\n\n\n\n\n[Groups](/resources-tools/groups)\n* News \\& Events\n \n\n\n\n[News \\& Events](/news-events) \n\n\n\n\n[News](/news-events/news)\n\n\n\n\n[Events](/news-events/events)\n\n\n\n\n[Cybersecurity Alerts \\& Advisories](/news-events/cybersecurity-advisories)\n\n\n\n\n[Directives](/news-events/directives)\n\n\n\n\n[Request a CISA Speaker](/news-events/request-speaker)\n\n\n\n\n[Congressional Testimony](/news-events/congressional-testimony)\n\n\n\n\n[CISA Conferences](/cisa-conferences)\n\n\n\n\n[CISA Live!](/cisa-live)\n* Careers\n \n\n\n\n[Careers](/careers) \n\n\n\n\n[Benefits \\& Perks](/careers/benefits-perks)\n\n\n\n\n[HireVue Applicant Reasonable Accommodations Process](/careers/hirevue-applicant-reasonable-accommodations-process)\n\n\n\n\n[Hiring](/general-recruitment-and-hiring-faqs)\n\n\n\n\n[Resume \\& Application Tips](/careers/resume-application-tips)\n\n\n\n\n[Students \\& Recent Graduates](/students-recent-graduates-employment-opportunities)\n\n\n\n\n[Veteran and Military Spouses](/careers/veteran-and-military-spouse-employment-opportunities)\n\n\n\n\n[Work @ CISA](/careers/work-cisa)\n* About\n \n\n\n\n[About](/about) \n\n\n\n\n[Culture](/about/culture)\n\n\n\n\n[Divisions \\& Offices](/about/divisions-offices)\n\n\n\n\n[Regions](/about/regions)\n\n\n\n\n[Leadership](/about/leadership)\n\n\n\n\n[Doing Business with CISA](/doing-business-cisa)\n\n\n\n\n[Site Links](/site-links)\n\n\n\n\n[Reporting Employee and Contractor Misconduct](/reporting-employee-and-contractor-misconduct)\n\n\n\n\n[CISA GitHub](/cisa-github)\n\n\n\n\n[CISA Central](/cisa-central)\n\n\n\n\n[2023 Year In Review](/about/2023YIR)\n\n\n\n\n[Contact Us](/about/contact-us)\n\n\n\n\n\n\n\n\n\n[Free Cyber Services](/resources-tools/resources/free-cybersecurity-services-and-tools \"Free Cyber Services\") \n[\\#protect2024](/protect2024) \n[Secure Our World](/node/18883) \n[Shields Up](/node/8056) \n[Report A Cyber Issue](/node/16591) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n Breadcrumb\n \n1. [Home](/)\n2. [News \\& Events](/news-events)\n3. [Cybersecurity Advisories](/news-events/cybersecurity-advisories)\n4. [Cybersecurity Advisory](/news-events/cybersecurity-advisories?f%5B0%5D=advisory_type%3A94)\n\n\n\n\n\n\n\n\n Share:\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n Cybersecurity Advisory\n \nFASTCash 2\\.0: North Korea's BeagleBoyz Robbing Banks\n=====================================================\n\n\n\n\n\n Last Revised\n \n\n\n October 24, 2020\n \n\n\n\n\n Alert Code\n \n\n AA20\\-239A\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Summary\n\n\n\n\n*This Alert uses the MITRE Adversarial Tactics, Techniques, and Common Knowledge (ATT\\&CK\u00ae) framework. See the\n [ATT\\&CK for Enterprise](https://attack.mitre.org/versions/v7/matrices/enterprise/) \n framework for all referenced threat actor techniques.* \n\n\n\n\n This joint advisory is the result of analytic efforts among the Cybersecurity and Infrastructure Security Agency (CISA), the Department of the Treasury (Treasury), the Federal Bureau of Investigation (FBI) and U.S. Cyber Command (USCYBERCOM). Working with U.S. government partners, CISA, Treasury, FBI, and USCYBERCOM identified malware and indicators of compromise (IOCs) used by the North Korean government in an automated teller machine (ATM) cash\\-out scheme\u2014referred to by the U.S. Government as \u201cFASTCash 2\\.0: North Korea's BeagleBoyz Robbing Banks.\u201d\n \n\n\n\n CISA, Treasury, FBI, and USCYBERCOM highlight the cyber threat posed by North Korea\u2014formally known as the Democratic People\u2019s Republic of Korea (DPRK)\u2014and provide recommended steps to mitigate the threat.\n \n\n\n\n Refer to the following Malware Analysis Reports for associated IOCs:\n [CROWDEDFLOUNDER](https://us-cert.cisa.gov/ncas/analysis-reports/ar20-045c) \n ,\n [ECCENTRICBANDWAGON](https://us-cert.cisa.gov/ncas/analysis-reports/ar20-239a) \n ,\n [ELECTRICFISH](https://us-cert.cisa.gov/ncas/analysis-reports/ar19-252b) \n ,\n [FASTCash for Windows](https://us-cert.cisa.gov/ncas/analysis-reports/ar20-239c) \n ,\n [HOPLIGHT](https://us-cert.cisa.gov/ncas/analysis-reports/ar20-045g) \n , and\n [VIVACIOUSGIFT](https://us-cert.gov/ncas/analysis-reports/ar20-239b) \n .\n \n\n\n\n[Click here](/sites/default/files/publications/AA20-239A_FASTCash2.0_508.pdf) \n for a PDF version of this report.\n \n\n\n\n !!!WARNING!!!\n \n\n Since February 2020, North Korea has resumed targeting banks in multiple countries to initiate fraudulent international money transfers and ATM cash outs. The recent resurgence follows a lull in bank targeting since late 2019\\. This advisory provides an overview of North Korea\u2019s extensive, global cyber\\-enabled bank robbery scheme, a short profile of the group responsible for this activity, in\\-depth technical analysis, and detection and mitigation recommendations to counter this ongoing threat to the Financial Services sector.\n \n\n !!!WARNING!!!\n \n\n\n\n\n\n### Technical Details\n\n\n\n\n North Korea's intelligence apparatus controls a hacking team dedicated to robbing banks through remote internet access. To differentiate methods from other North Korean malicious cyber activity, the U.S. Government refers to this team as BeagleBoyz, who represent a subset of HIDDEN COBRA activity. The BeagleBoyz overlap to varying degrees with groups tracked by the cybersecurity industry as Lazarus, Advanced Persistent Threat 38 (APT38\\), Bluenoroff, and Stardust Chollima and are responsible for the FASTCash ATM cash outs reported in October 2018, fraudulent abuse of compromised bank\\-operated SWIFT system endpoints since at least 2015, and lucrative cryptocurrency thefts. This illicit behavior has been identified by the United Nations (UN) DPRK Panel of Experts as evasion of UN Security Council resolutions, as it generates substantial revenue for North Korea. North Korea can use these funds for its UN\\-prohibited nuclear weapons and ballistic missile programs. Additionally, this activity poses significant operational risk to the Financial Services sector and erodes the integrity of the financial system.\n \n\n\n\n**The BeagleBoyz\u2019s bank robberies pose severe operational risk for individual firms beyond reputational harm and financial loss from theft and recovery costs.** \n The BeagleBoyz have attempted to steal nearly $2 billion since at least 2015, according to public estimates. Equally concerning, these malicious actors have manipulated and, at times, rendered inoperable, critical computer systems at banks and other financial institutions.\n \n\n\n* In 2018, a bank in Africa could not resume normal ATM or point of sale services for its customers for almost two months following an attempted FASTCash incident.\n* The BeagleBoyz often put destructive anti\\-forensic tools onto computer networks of victim institutions. Additionally, in 2018, they deployed wiper malware against a bank in Chile that crashed thousands of computers and servers to distract from efforts to send fraudulent messages from the bank\u2019s compromised SWIFT terminal.\n\n\n\n**North Korea\u2019s widespread international bank robbery scheme that exploits critical banking systems may erode confidence in those systems and presents risks to financial institutions across the world.** \n Any BeagleBoyz robbery directed at one bank implicates many other financial services firms in both the theft and the flow of illicit funds back to North Korea. BeagleBoyz activity fits a known North Korean pattern of abusing the international financial system for profit.\n \n\n\n* Fraudulent ATM cash outs have affected upwards of 30 countries in a single incident. The conspirators have withdrawn cash from ATM machines operated by various unwitting banks in multiple countries, including in the United States.\n* The BeagleBoyz also use unwitting banks, including banks in the United States, for their SWIFT fraud scheme. These banks are custodians of accounts belonging to victim banks or unknowingly serve as a pass\\-through for the fraud. Most infamously, the BeagleBoyz stole $81 million from the Bank of Bangladesh in 2016\\. The Federal Reserve Bank of New York stopped the remainder of this attempted $1 billion theft after detecting anomalies in the transfer instructions they had received.\n\n\n\n\n| **FASTCash Update**     North Korea\u2019s BeagleBoyz are responsible for the sophisticated cyber\\-enabled ATM cash\\-out campaigns identified publicly as \u201cFASTCash\u201d in October 2018\\. Since 2016, the BeagleBoyz have perpetrated the FASTCash scheme, targeting banks\u2019 retail payment system infrastructure (i.e., switch application servers processing International Standards Organization \\[ISO] 8583 messages, which is the standard for financial transaction messaging).     Since the publication of the in October 2018, there have been two particularly significant developments in the campaign: (1\\) the capability to conduct the FASTCash scheme against banks hosting their switch applications on Windows servers, and (2\\) an expansion of the FASTCash campaign to target interbank payment processors.  * In October 2018, the U.S. Government identified malware used in the FASTCash scheme that has the capability to manipulate AIX servers running a bank's switch application to intercept financial request messages and reply with fraudulent, but legitimate\\-looking, affirmative response messages to enable extensive ATM cash outs. The U.S. Government has since identified functionally equivalent malware for the Windows operating system. Please see the Technical Analysis section below for more information about the ISO 8583 malware for Windows. * The BeagleBoyz initially targeted switch applications at individual banks with FASTCash malware but, more recently, have targeted at least two regional interbank payment processors. This suggests the BeagleBoyz are exploring upstream opportunities in the payments ecosystem.    For more information about FASTCash, please see  [https://www.us\\-cert.gov/ncas/alerts/TA18\\-275A](https://www.us-cert.gov/ncas/alerts/ta18-275a)   . |\n| --- |\n\n\nBEAGLEBOYZ Profile\n------------------\n\n\n\n The BeagleBoyz, an element of the North Korean government\u2019s Reconnaissance General Bureau, have likely been active since at least 2014\\. As opposed to typical cybercrime, the group likely conducts well\\-planned, disciplined, and methodical cyber operations more akin to careful espionage activities. Their malicious cyber operations have netted hundreds of millions of U.S. dollars and are likely a major source of funding for the North Korean regime. The group has always used a calculated approach, which allows them to sharpen their tactics, techniques, and procedures while evading detection. Over time, their operations have become increasingly complex and destructive. The tools and implants employed by this group are consistently complex and demonstrate a strong focus on effectiveness and operational security.\n \n\n\n### Community Identifiers\n\n\n\n The BeagleBoyz overlap to varying degrees with groups tracked by the cybersecurity industry as: APT38 (FireEye), Bluenoroff (Kaspersky), Lazarus Group (ESTSecurity), and Stardust Chollima (CrowdStrike).\n \n\n\n### Targeted Nations\n\n\n\n The BeagleBoyz likely have targeted financial institutions in the following nations from 2015 through 2020: Argentina, Brazil, Bangladesh, Bosnia and Herzegovina, Bulgaria, Chile, Costa Rica, Ecuador, Ghana, India, Indonesia, Japan, Jordan, Kenya, Kuwait, Malaysia, Malta, Mexico, Mozambique, Nepal, Nicaragua, Nigeria, Pakistan, Panama, Peru, Philippines, Singapore, South Africa, South Korea, Spain, Taiwan, Tanzania, Togo, Turkey, Uganda, Uruguay, Vietnam, Zambia (figure 1\\).\n \n\n\n\n![]()\n\n\n\n\n*Figure 1: Nations probably targeted by BeagleBoyz since 2015* \n\n\n\n### Anatomy of a BeagleBoyz Bank Heist\n\n\n\n Figure 2 provides a graphical depiction of a BeagleBoyz bank heist. The next section describes in detail the end\\-to\\-end actions the BeagleBoyz take to rob financial institutions with a malicious cyber operation.\n \n\n\n\n![]()\n\n\n\n\n*Figure 2: BeagleBoyz Bank Heist overview* \n\n\n\nTechnical Analysis\n------------------\n\n\n\n The BeagleBoyz use a variety of tools and techniques to gain access to a financial institution\u2019s network, learn the topology to discover key systems, and monetize their access. The technical analysis below represents an amalgamation of multiple known incidents, rather than details of a single operation. These findings are presented to highlight the group\u2019s ability to tailor their techniques to different targets and to adapt their methods over time. Consequently, there is a need for layered mitigations to effectively defend against this activity, as relying solely on network signature detection will not sufficiently protect against North Korea\u2019s BeagleBoyz.\n \n\n\n### Initial Access\n\n\n\n The BeagleBoyz have used a variety of techniques, such as spearphishing and watering holes, to enable initial access into targeted financial institutions. Towards the end of 2018 through 2019 and in early 2020, the BeagleBoyz demonstrated the use of social engineering tactics by carrying out job\\-application themed phishing attacks using the following publicly available malicious files.\n \n\n\n\n MD5: b484b0dff093f358897486b58266d069\n \n\n  \n\n  \n\n MD5: f34b72471a205c4eee5221ab9a349c55\n \n\n  \n\n  \n\n MD5: 4c26b2d0e5cd3bfe0a3d07c4b85909a4\n \n\n  \n\n  \n\n MD5: 52ec074d8cb8243976963674dd40ffe7\n \n\n  \n\n  \n\n MD5: d1d779314250fab284fd348888c2f955\n \n\n  \n\n  \n\n MD5: cf733e719e9677ebfbc84a3ab08dd0dc\n \n\n  \n\n  \n\n MD5: 01d397df2a1cf1d4c8e3615b7064856c\n \n\n The BeagleBoyz may also be working with or contracting out to criminal hacking groups, like TA505, for initial access development. The third party typically uses commodity malware to establish initial access on a victim\u2019s network and then turns over the access to the BeagleBoyz for follow\\-on exploitation, which may not occur until months later.\n \n\n\n\n The BeagleBoyz have also used the following techniques to gain an initial foothold on a targeted computer network (\n *Initial Access* \n \\[\n [TA0001](https://attack.mitre.org/versions/v7/tactics/TA0001/) \n ]).\n \n\n\n* Email an attachment with malware to a specific individual, company, or industry (\n *Phishing:* \n*Spearphishing Attachment* \n \\[\n [T1566\\.001](https://attack.mitre.org/versions/v7/techniques/T1566/001/) \n ])\n* Compromise a website visited by users in specific communities, industries, or regions (\n *Drive\\-by Compromise* \n \\[\n [T1189](https://attack.mitre.org/versions/v7/techniques/T1189/) \n ])\n* Exploit a weakness (a bug, glitch, or design vulnerability) in an internet\\-facing computer system (such as a database or web server) (\n *Exploit Public Facing Application* \n \\[\n [T1190](https://attack.mitre.org/versions/v7/techniques/T1190/) \n ])\n* Steal the credentials of a specific user or service account to bypass access controls and gain increased privileges (\n *Valid Accounts* \n \\[\n [T1078](https://attack.mitre.org/versions/v7/techniques/T1078/) \n ])\n* Breach organizations that have access to the intended victim\u2019s organization and exploit their trusted relationship (\n *Trusted Relationship* \n \\[\n [T1199](https://attack.mitre.org/versions/v7/techniques/T1199/) \n ])\n* Use remote services to initially access and persist within a victim\u2019s network (\n *External Remote Services* \n \\[\n [T1133](https://attack.mitre.org/versions/v7/techniques/T1133/) \n ])\n\n\n### Execution\n\n\n\n The BeagleBoyz selectively exploit victim computer systems after initially compromising a computer connected to a financial institution\u2019s corporate network. After gaining initial access to a financial institution\u2019s corporate network, the BeagleBoyz are selective in which victim systems they further exploit. The BeagleBoyz use a variety of techniques to run their code on local and remote victim systems \\[\n *Execution* \n \\[\n [TA0002](https://attack.mitre.org/versions/v7/tactics/TA0002/) \n ]).\n \n\n\n* Use command\\-line interfaces to interact with systems and execute other software (\n *Command and Scripting Interpreter* \n \\[\n [T1059](https://attack.mitre.org/versions/v7/techniques/T1059/) \n ])\n* Use scripts (e.g., VBScript and PowerShell) to speed up operational tasks, reduce the time required to gain access to critical resources, and bypass process monitoring mechanisms by directly interacting with the operating system (OS) at an Application Programming Interface (API) level instead of calling other programs (\n *Command and Scripting Interpreter: PowerShell* \n \\[\n [T1059\\.001](https://attack.mitre.org/versions/v7/techniques/T1059/001/) \n ],\n *Command and Scripting Interpreter: Visual Basic* \n \\[\n [T1059\\.005](https://attack.mitre.org/versions/v7/techniques/T1059/005/) \n ])\n* Rely upon specific user actions, such as opening a malicious email attachment (\n *User Execution* \n \\[\n [T1204](https://attack.mitre.org/versions/v7/techniques/T1204/) \n ])\n* Exploit software vulnerabilities to execute code on a system (\n *Exploitation for Client Execution* \n \\[\n [T1203](https://attack.mitre.org/versions/v7/techniques/T1203/) \n ])\n* Create new services or modify existing services to execute executables, commands, or scripts (\n *System Services: Service Execution* \n \\[\n [T1569\\.002](https://attack.mitre.org/versions/v7/techniques/T1569/002/) \n ])\n* Employ the Windows module loader to load Dynamic Link Libraries (DLLs) from arbitrary local paths or arbitrary Universal Naming Convention (UNC) network paths and execute arbitrary code on a system (Shared Modules \\[\n [T1129](https://attack.mitre.org/versions/v7/techniques/T1129/) \n ])\n* Use the Windows API to execute arbitrary code on the victim's system (\n *Native API* \n \\[\n [T1106](https://attack.mitre.org/versions/v7/techniques/T1106/) \n ])\n* Use a system's graphical user interface (GUI) to search for information and execute files (\n *Remote Services* \n \\[\n [T1021](https://attack.mitre.org/versions/v7/techniques/T1021/) \n ])\n* Use the Task Scheduler to run programs at system startup or on a scheduled basis for persistence, conduct remote execution for lateral movement, gain SYSTEM privileges for privilege escalation, or run a process under the context of a specified account (\n *Scheduled Task/Job* \n \\[\n [T1053](https://attack.mitre.org/versions/v7/techniques/T1053/) \n ])\n* Abuse compiled Hypertext Markup Language (HTML) files (.chm), commonly distributed as part of the Microsoft HTML Help system, to conceal malicious code (\n *Signed Binary Proxy Execution: Compiled HTML File* \n \\[\n [T1218\\.001](https://attack.mitre.org/versions/v7/techniques/T1218/001/) \n ])\n* Abuse Windows rundll32\\.exe to execute binaries, scripts, and Control Panel Item files (.CPL) and execute code via proxy to avoid triggering security tools (\n *Signed Binary Proxy Execution: Rundl32* \n \\[\n [T1218\\.001](https://attack.mitre.org/versions/v7/techniques/T1218/001/) \n ])\n* Exploit cron in Linux and launchd in macOS systems to create pre\\-scheduled and periodic background jobs (\n *Scheduled Task/Job: Cron* \n \\[\n [T1053\\.003](https://attack.mitre.org/versions/v7/techniques/T1053/003/) \n ],\n *Scheduled Task/Job: Launchd* \n \\[\n [T1053\\.004](https://attack.mitre.org/versions/v7/techniques/T1053/004/) \n ])\n\n\n### Persistence\n\n\n\n The BeagleBoyz use many techniques to maintain access on compromised networks through system restarts, changed credentials, and other interruptions that could affect their access (\n *Persistence* \n \\[\n [TA0003](https://attack.mitre.org/versions/v7/tactics/TA0003/) \n ]).\n \n\n\n* Add an entry to the \u201crun keys\u201d in the Registry or an executable to the startup folder to execute malware as the user logs in under the context of the user\u2019s associated permissions levels (\n *Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder* \n \\[\n [T1547\\.001](https://attack.mitre.org/versions/v7/techniques/T1547/001/) \n ])\n* Install a new service that can be configured to execute at startup using utilities to interact with services or by directly modifying the Registry (\n *Create or Modify System Process: Windows Service* \n \\[\n [T1543\\.003](https://attack.mitre.org/versions/v7/techniques/T1543/003/) \n ])\n* Compromise an openly accessible web server with a web script (known as web shell) to use the web server as a gateway into a network and to serve as redundant access or persistence mechanism (\n *Server Software Component: Web Shell* \n \\[\n [T1505\\.003](https://attack.mitre.org/versions/v7/techniques/T1505/003/) \n ])\n* Manipulate accounts (e.g., modifying permissions, modifying credentials, adding or changing permission groups, modifying account settings, or modifying how authentication is performed) to maintain access to credentials and certain permission levels within an environment (\n *Account Manipulation* \n \\[\n [T1098](https://attack.mitre.org/versions/v7/techniques/T1098/) \n ])\n* Steal the credentials of a specific user or service account to bypass access controls and retain access to remote systems and externally available services (\n *Valid Accounts* \n \\[\n [T1078](https://attack.mitre.org/versions/v7/techniques/T1078/) \n ])\n* Use the Task Scheduler to run programs at system startup or on a scheduled basis for persistence, conduct remote execution for lateral movement, gain SYSTEM privileges for privilege escalation, or run a process under the context of a specified account (\n *Scheduled Task/Job* \n \\[\n [T1053](https://attack.mitre.org/versions/v7/techniques/T1053/) \n ])\n* Abuse the Windows DLLs search order and programs that ambiguously specify DLLs to gain privilege escalation and persistence (\n *Hijack Execution Flow: DLL Search Order Hijacking* \n \\[\n [T1056\\.004](https://attack.mitre.org/versions/v7/techniques/T1056/004/) \n ])\n* Exploit hooking to load and execute malicious code within the context of another process to mask the execution, allow access to the process\u2019s memory, and, possibly, gain elevated privileges (\n *Input Capture: Credential API Hooking* \n \\[\n [T1574\\.001](https://attack.mitre.org/versions/v7/techniques/T1574/001/) \n ])\n* Use remote services to persist within a victim\u2019s network (External Remote Services \\[\n [T1133](https://attack.mitre.org/versions/v7/techniques/T1133/) \n ])\n\n\n### Privilege Escalation\n\n\n\n The BeagleBoyz often seek access to financial institutions\u2019 systems that have tiered user and system accounts with customized privileges. The BeagleBoyz must overcome these restrictions to access necessary systems, monitor normal user behavior, and install and execute additional malicious tools. To do so, the BeagleBoyz have used the following techniques to gain higher\\-level permissions on a system or network (\n *Privilege Escalation* \n \\[\n [TA0004](https://attack.mitre.org/versions/v7/tactics/TA0004/) \n ]).\n \n\n\n* Inject code into processes to evade process\\-based defenses and elevate privileges (\n *Process Injection* \n \\[\n [T1055](https://attack.mitre.org/versions/v7/techniques/T1055/) \n ])\n* Install a new service that can be configured to execute at startup using utilities to interact with services or by directly modifying the Registry (\n *Create or Modify System Process: Windows Service* \n \\[\n [T1543\\.003](https://attack.mitre.org/versions/v7/techniques/T1543/003/) \n ])\n* Compromise an openly accessible web server with web shell to use the web server as a gateway into a network (\n *Server Software Component: Web Shell* \n \\[\n [T1505\\.003](https://attack.mitre.org/versions/v7/techniques/T1505/003/) \n ])\n* Use the Task Scheduler to run programs at system startup or on a scheduled basis for persistence, conduct remote execution as part of lateral movement, gain SYSTEM privileges for privilege escalation, or run a process under the context of a specified account (\n *Scheduled Task/Job* \n \\[\n [T1053](https://attack.mitre.org/versions/v7/techniques/T1053/) \n ])\n* Steal the credentials of a specific user or service account to bypass access controls and grant increased privileges (\n *Valid Accounts* \n \\[\n [T1078](https://attack.mitre.org/versions/v7/techniques/T1078/) \n ])\n* Exploit hooking to load and execute malicious code within the context of another process to mask the execution, allow access to the process\u2019s memory, and, possibly, gain elevated privileges (\n *Input Capture: Credential API Hooking* \n \\[\n [T1574\\.001](https://attack.mitre.org/versions/v7/techniques/T1574/001/) \n ])\n* Perform Sudo (sometimes referred to as \u201csuper user do\u201d) caching or use the Soudoers file to elevate privileges in Linux and macOS systems (\n *Abuse Elevation Control Mechanism: Sudo and Sudo Caching* \n \\[\n [T1548\\.003](https://attack.mitre.org/versions/v7/techniques/T1548/003/) \n ])\n* Execute malicious payloads by hijacking the search order used to load DLLs (\n *Hijack Execution Flow: DLL Search Order Hijacking* \n \\[\n [T1574\\.001](https://attack.mitre.org/versions/v7/techniques/T1574/001/) \n ])\n\n\n### Defense Evasion\n\n\n\n Throughout their exploitation of a financial institution\u2019s computer network, the BeagleBoyz have used different techniques to avoid detection by OS security features, system and network security software, and system audits (\n *Defense Evasion* \n \\[\n [TA0005](https://attack.mitre.org/versions/v7/tactics/TA0005/) \n ]).\n \n\n\n* Exploit code signing certificates to masquerade malware and tools as legitimate binaries and bypass security policies that allow only signed binaries to execute on a system (\n *Subvert Trust Controls Signing* \n \\[\n [T1553\\.002](https://attack.mitre.org/versions/v7/techniques/T1553/002/) \n ])\n* Remove malware, tools, or other non\\-native files dropped or created throughout an intrusion to reduce their footprint or as part of the post\\-intrusion cleanup process (\n *Indicator Removal on Host: File Deletion* \n \\[\n [T1070\\.004](https://attack.mitre.org/versions/v7/techniques/T1070/004/) \n ])\n* Inject code into processes to evade process\\-based defenses (\n *Process Injection* \n \\[\n [T1055](https://attack.mitre.org/versions/v7/techniques/T1055/) \n ])\n* Use scripts (such as VBScript and PowerShell) to bypass process monitoring mechanisms by directly interacting with the OS at an API level instead of calling other programs (\n *Command and Scripting Interpreter: PowerShell* \n \\[\n [T1059\\.001](https://attack.mitre.org/versions/v7/techniques/T1059/001/) \n ],\n *Command and Scripting Interpreter: Visual Basic* \n \\[\n [T1059\\.005](https://attack.mitre.org/versions/v7/techniques/T1059/005/) \n ])\n* Attempt to make an executable or file challenging to discover or analyze by encrypting, encoding, or obfuscating its contents on the system or in transit (\n *Obfuscated Files or Information* \n \\[\n [T1027](https://attack.mitre.org/versions/v7/techniques/T1027/) \n ])\n* Use external previously compromised web services to relay commands to a victim system (\n *Web Service* \n \\[\n [T1102](https://attack.mitre.org/versions/v7/techniques/T1102/) \n ])\n* Use software packing to change the file signature, bypass signature\\-based detection, and decompress the executable code in memory (\n *Unsecured Credentials: Private Keys* \n \\[\n [T1552\\.004](https://attack.mitre.org/versions/v7/techniques/T1552/004/) \n ])\n* Use obfuscated files or information to hide intrusion artifacts (\n *Deobfuscate/Decode Files or Information* \n \\[\n [T1140](https://attack.mitre.org/versions/v7/techniques/T1140/) \n ])\n* Modify the data timestamps (the modify, access, create, and change times fields) to mimic files that are in the same folder, making them appear inconspicuous to forensic analysts or file analysis tools (\n *Indicator Removal on Host: Remove Timestamp* \n \\[\n [T1070\\.006](https://attack.mitre.org/versions/v7/techniques/T1070/006/) \n ])\n* Abuse Windows utilities to implement arbitrary execution commands and subvert detection and mitigation controls (such as Group Policy) that limit or prevent the usage of cmd.exe or file extensions commonly associated with malicious payloads (\n *Indirect Command Execution* \n \\[\n [T1202](https://attack.mitre.org/versions/v7/techniques/T1202/) \n ])\n* Use various methods to prevent their commands from appearing in logs and clear command history to remove activity traces (\n *Indicator Removal on Host: Clear Command History* \n \\[\n [T1070\\.003](https://attack.mitre.org/versions/v7/techniques/T1070/003/) \n ])\n* Disable security tools to avoid possible detection of tools and events (\n *Impair Defenses: Disable or Modify Tools* \n \\[\n [T1562\\.001](https://attack.mitre.org/versions/v7/techniques/T1562/001/) \n ])\n* Steal the credentials of a specific user or service account to bypass access controls and grant increased privileges (\n *Valid Accounts* \n \\[\n [T1078](https://attack.mitre.org/versions/v7/techniques/T1078/) \n ])\n* Delete or alter generated artifacts on a host system, including logs and potentially captured files, to remove traces of activity (\n *Indicator Removal on Host: File Deletion* \n \\[\n [T1070\\.004](https://attack.mitre.org/versions/v7/techniques/T1070/004/) \n ])\n* Abuse compiled HTML files (.chm), commonly distributed as part of the Microsoft HTML Help system, to conceal malicious code (\n *Signed Binary Proxy Execution: Compiled HTML File* \n \\[\n [T1218\\.001](https://attack.mitre.org/versions/v7/techniques/T1218/001/) \n ])\n* Prepend a space to all their terminal commands to operate without leaving traces in the HISTCONTROL environment, which is configured to ignore commands that start with a space (\n *Impair Defenses: HISTCONTROL* \n \\[\n [T1562\\.003](https://attack.mitre.org/versions/v7/techniques/T1562/003/) \n ])\n* Modify malware so it has a different signature and re\\-use it in cases when the group determines it was quarantined (\n *Obfuscated Files or Information: Indicator Removal from Tools* \n \\[\n [T1027\\.005](https://attack.mitre.org/versions/v7/techniques/T1027/005/) \n ])\n* Attempt to block indicators or events typically captured by sensors from being gathered and analyzed (\n *Impair Defenses: Indicator Blocking* \n \\[\n [T1562\\.006](https://attack.mitre.org/versions/v7/techniques/T1562/006/) \n ])\n* Use the Windows DLLs search order and programs that ambiguously specify DLLs to gain privilege escalation and persistence (\n *Hijack Execution Flow: DLL Search Order Hijacking* \n \\[\n [T1574\\.001](https://attack.mitre.org/versions/v7/techniques/T1574/001/) \n ])\n* Manipulate or abuse the attributes or location of an executable (masquerading) to better blend in with the environment and increase the chances of deceiving a security analyst or product (\n *Masquerading* \n \\[\n [T1036](https://attack.mitre.org/versions/v7/techniques/T1036/) \n ])\n* Exploit rootkits to hide programs, files, network connections, services, drivers, and other system components (\n *Rootkit* \n \\[\n [T1014](https://attack.mitre.org/versions/v7/techniques/T1014/) \n ])\n* Abuse the Windows rundll32\\.exe to execute binaries, scripts, and .CPL files, and execute code via proxy to avoid triggering security tools (\n *Signed Binary Proxy Execution: Rundl32* \n \\[\n [T1218\\.001](https://attack.mitre.org/versions/v7/techniques/T1218/001/) \n ])\n\n\n### Credential Access\n\n\n\n The BeagleBoyz may use malware like ECCENTRICBANDWAGON to log key strokes and take screen captures. The U.S. Government has identified some ECCENTRICBANDWAGON samples that have the ability to RC4 encrypt logged data, but the tool has no network functionality. The implant uses specific formatting for logged data and saves the file locally; another tool obtains the logged data. The implant also contains no mechanism for persistence or self\\-loading and expects a specific configuration file to be present on the system. A full technical report for ECCENTRICBANDWAGON is available at\n [https://us\\-cert.cisa.gov/northkorea](https://us-cert.cisa.gov/northkorea) \n .\n \n\n\n\n The BeagleBoyz may not always need to use custom keyloggers like ECCENTRICBANDWAGON or other tools to obtain credentials from a compromised system. Depending on the victim\u2019s environment, the BeagleBoyz have used the following techniques to steal credentials (\n *Credential Access* \n \\[\n [TA0006](https://attack.mitre.org/versions/v7/tactics/TA0006/) \n ]).\n \n\n\n* Capture user input, such as keylogging (the most prevalent type of input capture), to obtain credentials for valid accounts and information collection (\n *Input Capture* \n \\[\n [T1056](https://attack.mitre.org/versions/v7/techniques/T1056/) \n ])\n* Obtain account login and password information, generally in the form of a hash or a clear text password, from the operating system and software (\n *OS Credential Dumping* \n \\[\n [T1056](https://attack.mitre.org/versions/v7/techniques/T1056/) \n ])\n* Gather private keys from compromised systems to authenticate to remote services or decrypt other collected files (\n *Unsecured Credentials: Private Keys* \n \\[\n [T1552\\.004](https://attack.mitre.org/versions/v7/techniques/T1552/004/) \n ])\n* Manipulate default, domain, local, and cloud accounts to maintain access to credentials and certain permission levels within an environment (\n *Account Manipulation* \n \\[\n [T1098](https://attack.mitre.org/versions/v7/techniques/T1098/) \n ])\n* Abuse hooking to load and execute malicious code within the context of another process to mask the execution, allow access to the process's memory, and, possibly, gain elevated privileges (\n *Input Capture: Credential API Hooking* \n \\[\n [T1056\\.004](https://attack.mitre.org/versions/v7/techniques/T1056/004/) \n ])\n* Use brute force techniques to attempt account access when passwords are unknown or when password hashes are unavailable (\n *Brute Force* \n \\[\n [T1110](https://attack.mitre.org/versions/v7/techniques/T1110/) \n ])\n\n\n### Discovery\n\n\n\n Once inside a financial institution\u2019s network, the BeagleBoyz appear to seek two specific systems\u2014the SWIFT terminal and the server hosting the institution\u2019s payment switch application. As they progress through a network, they learn about the systems they have accessed in order to map the network and gain access to the two goal systems. To do so, the BeagleBoyz have used the following techniques to gain knowledge about the systems and internal network (\n *Discovery* \n \\[\n [TA0007](https://attack.mitre.org/versions/v7/tactics/TA0007/) \n ]).\n \n\n\n* Attempt to get detailed information about the operating system and hardware, such as version, patches, hotfixes, service packs, and architecture (\n *System Information Discovery* \n \\[\n [T1082](https://attack.mitre.org/versions/v7/techniques/T1082/) \n ])\n* Enumerate files and directories or search in specific locations of a host or network share for particular information within a file system (\n *File and Directory Discovery* \n \\[\n [T1083](https://attack.mitre.org/versions/v7/techniques/T1083/) \n ])\n* Get a list of security software, configurations, defensive tools, and sensors installed on the system (\n *Software Discovery: Security Software Discovery* \n \\[\n [T1518\\.001](https://attack.mitre.org/versions/v7/techniques/T1518/001/) \n ])\n* Procure information about running processes on a system to understand standard software running on network systems (\n *Process Discovery* \n \\[\n [T1057](https://attack.mitre.org/versions/v7/techniques/T1057/) \n ])\n* Identify primary users, currently logged in users, sets of users that commonly use a system, or active or inactive users (\n *System Owner/User Discovery* \n \\[\n [T1033](https://attack.mitre.org/versions/v7/techniques/T1033/) \n ])\n* Enumerate browser bookmarks to learn more about compromised hosts, reveal personal information about users, and expose details about internal network resources (\n *Browser Bookmark Discovery* \n \\[\n [T1217](https://attack.mitre.org/versions/v7/techniques/T1217/) \n ])\n* Look for information on network configuration and system settings on compromised systems, or perform remote system discovery (\n *System Network Configuration Discovery* \n \\[\n [T1016](https://attack.mitre.org/versions/v7/techniques/T1016/) \n ])\n* Interact with the Windows Registry to gather information about the system, configuration, and installed software (\n *Query Registry* \n \\[\n [T1012](https://attack.mitre.org/versions/v7/techniques/T1012/) \n ])\n* Get a list of open application windows to learn how the system is used or give context to data collected (\n *Application Window Discovery* \n \\[\n [T1010](https://attack.mitre.org/versions/v7/techniques/T1010/) \n ])\n* Attempt to get a listing of local system or domain accounts in the compromised system (\n *Account Discovery* \n \\[\n [T1087](https://attack.mitre.org/versions/v7/techniques/T1087/) \n ])\n* Obtain a list of network connections to and from the compromised system or remote system by querying for information over the network (\n *System Network Connections Discovery* \n \\[\n [T1049](https://attack.mitre.org/versions/v7/techniques/T1049/) \n ])\n\n\n### Lateral Movement\n\n\n\n To access a compromised financial institution\u2019s SWIFT terminal and the server hosting the institution\u2019s payment switch application, the BeagleBoyz leverage harvested credentials and take advantage of the accessibility of these critical systems from other systems in the institution\u2019s corporate network. Specifically, the BeagleBoyz have been known to create firewall exemptions on specific ports, including ports 443, 6443, 8443, and 9443\\. Depending on the configuration of compromised systems and the security environment of the victim\u2019s computer network, the BeagleBoyz have used the following techniques to enter and control remote systems on a compromised network (\n *Lateral Movement* \n \\[\n [TA0008](https://attack.mitre.org/versions/v7/tactics/TA0008/) \n ]).\n \n\n\n* Copy files from one system to another to stage adversary tools or other files throughout an operation (\n *Ingress Tool Transfer* \n \\[\n [T1105](https://attack.mitre.org/versions/v7/techniques/T1105/) \n ])\n* Use Remote Desktop Protocol (RDP) to log into an interactive session with a system desktop GUI on a remote system (\n *Remote Services: Remote Desktop Protocol* \n \\[\n [T1021\\.001](https://attack.mitre.org/versions/v7/techniques/T1021/001/) \n ])\n* Employ hidden network shares, in conjunction with administrator\\-level valid accounts, to remotely access a networked system over Server Message Block (SMB) in order to interact with systems using remote procedure calls (RPCs), transfer files, and run transferred binaries through remote execution (\n *Remote Services: SMB/Windows Admin Shares* \n \\[\n [T1021\\.002](https://attack.mitre.org/versions/v7/techniques/T1021/002/) \n ])\n* Exploit valid accounts to log into a service specifically designed to accept remote connections and perform actions as the logged\\-on user (\n *Remote Services* \n \\[\n [T1021](https://attack.mitre.org/versions/v7/techniques/T1021/) \n ])\n\n\n### Collection\n\n\n\n Depending on various environmental attributes the BeagleBoyz encounter during their exploitation, they may deploy a variety of reconnaissance tools or use commonly available administrative tools for malicious purposes.\n \n\n\n\n The BeagleBoyz, like other sophisticated cyber actors, also appear to use resident, legitimate administrative tools for reconnaissance purposes when they are available; this is commonly known as \u201cliving off the land.\u201d PowerShell appears to be a popular otherwise\\-legitimate tool the BeagleBoyz favor for reconnaissance activities. For example, the BeagleBoyz often use publicly available code from PowerShell Empire for malicious purposes.\n \n\n\n\n The BeagleBoyz have used the following techniques to gather information from exploited systems (\n *Collection* \n \\[\n [TA0009](https://attack.mitre.org/versions/v7/tactics/TA0009/) \n ]).\n \n\n\n* Use automated methods, such as scripts, for collecting data (\n *Automated Collection* \n \\[\n [T1119](https://attack.mitre.org/versions/v7/techniques/T1119/) \n ])\n* Capture user input to obtain credentials and collect information (\n *Input Capture* \n \\[\n [T1056](https://attack.mitre.org/versions/v7/techniques/T1056/) \n ])\n* Collect local systems data from a compromised system (\n *Data from Local System* \n \\[\n [T1005](https://attack.mitre.org/versions/v7/techniques/T1005/) \n ])\n* Take screen captures of the desktop (\n *Screen Capture* \n \\[\n [T1113](https://attack.mitre.org/versions/v7/techniques/T1113/) \n ])\n* Collect data stored in the Windows clipboard from users (\n *Clipboard Data* \n \\[\n [T1115](https://attack.mitre.org/versions/v7/techniques/T1115/) \n ])\n\n\n### Command and Control\n\n\n\n The BeagleBoyz likely change tools\u2014such as CROWDEDFLOUNDER and HOPLIGHT\u2014over time to maintain remote access to financial institution networks and to interact with those systems.\n \n\n\n\n Analysis of the following CROWDEDFLOUNDER samples was first released in October 2018 as part of the FASTCash campaign.\n \n\n\n\n MD5 hash: 5cfa1c2cb430bec721063e3e2d144feb\n   \n\n  \n\n MD5 hash: 4f67f3e4a7509af1b2b1c6180a03b3e4\n \n\n\n\n The BeagleBoyz have used CROWDEDFLOUNDER as a remote access trojan (RAT) since at least 2018\\. The implant is designed to operate on Microsoft Windows hosts and can upload and download files, launch a remote command shell, inject into victim processes, obtain user and host information, and securely delete files. The implant may be packed with Themida to degrade or prevent effective reverse engineering or evade detection on a Windows host. It can be set to act in beacon or listening modes, depending on command line arguments or configuration specifications. The implant obfuscates network communications using a simple encoding algorithm. The listening mode of CROWDEDFLOUNDER facilitates proxies like ELECTRICFISH (discussed below) with tunneling traffic in a victim\u2019s network.\n \n\n\n\n More recently, the U.S. Government has found HOPLIGHT malware on victim systems, suggesting the BeagleBoyz are using HOPLIGHT for similar purposes. HOPLIGHT has the same basic RAT functionality as the CROWDEDFLOUNDER implant. In addition, HOPLIGHT has the capability to create fraudulent Transport Layer Security (TLS) sessions to obfuscate command and control (C2\\) connections, making detection and tracking of the malware\u2019s communications difficult.\n \n\n\n\n Full technical reports for CROWDEDFLOUNDER and HOPLIGHT are available at\n [https://us\\-cert.cisa.gov/northkorea](https://us-cert.cisa.gov/northkorea) \n .\n \n\n\n\n The BeagleBoyz use network proxy tunneling tools\u2014including VIVACIOUSGIFT and ELECTRICFISH\u2014to tunnel communications from non\\-internet facing systems like an ATM switch application server or a SWIFT terminal to internet\\-facing systems. The BeagleBoyz use these network proxy tunneling tools, likely placed at or near a victim\u2019s network boundary, to tunnel other protocols such as RDP and Secure Shell or other implant traffic out from the internal network.\n \n\n\n\n It appears that as the BeagleBoyz change proxy tools, there is some overlap between their use of older and newer malware. For example, the BeagleBoyz appear to have begun using ELECTRICFISH as they wound down use of VIVACIOUSGIFT. There has been a noticeable decline in ELECTRICFISH use following the U.S. Government\u2019s disclosure of it in May 2019\\.\n \n\n\n\n Full technical reports for VIVACIOUSGIFT and ELECTRICFISH are available at\n [https://us\\-cert.cisa.gov/northkorea](https://us-cert.cisa.gov/northkorea) \n .\n \n\n\n\n In addition to these tools, the BeagleBoyz have used the following techniques to communicate with financial institution victim systems under their control (\n *Command and Control* \n \\[\n [TA0011](https://attack.mitre.org/versions/v7/tactics/TA0011/) \n ]).\n \n\n\n* Employ known encryption algorithms to conceal C2 traffic (\n *Encrypted Channel* \n \\[\n [T1573](https://attack.mitre.org/versions/v7/techniques/T1573/) \n ])\n* Communicate over commonly used standard application layer protocols and ports to avoid detection or detailed inspection and to blend with existing traffic (\n *Application Layer Protocol* \n \\[\n [T1071](https://attack.mitre.org/versions/v7/techniques/T1071/) \n ])\n* Encode C2 information using standard data encoding systems such as the American Standard Code for Information Interchange (ASCII), Unicode, Base64, Multipurpose Internet Mail Extensions, and 8\\-bit Unicode Transformation Format systems or other binary\\-to\\-text and character encoding systems (\n *Data Encoding: Standard Encoding* \n \\[\n [T1132\\.001](https://attack.mitre.org/versions/v7/techniques/T1132/001/) \n ])\n* Copy files between systems to stage adversary tools or other files (\n *Ingress Transfer Tool* \n \\[\n [T1105](https://attack.mitre.org/versions/v7/techniques/T1105/) \n ])\n* Use external previously compromised web services to relay commands to victim systems (\n *Web Service* \n \\[\n [T1102](https://attack.mitre.org/versions/v7/techniques/T1102/) \n ])\n* Employ a custom C2 protocol that mimics well\\-known protocols, or develop custom protocols (including raw sockets) to supplement protocols provided by another standard network stack (\n *Non\\-Application Layer Protocol* \n \\[\n [T1095](https://attack.mitre.org/versions/v7/techniques/T1095/) \n ])\n* Obfuscate C2 communications (but not necessarily encrypt them) to hide commands and make the content less conspicuous and more challenging to discover or decipher (\n *Data Obfuscation* \n \\[\n [T1101](https://attack.mitre.org/versions/v7/techniques/T1101/) \n ])\n* Employ connection proxies to direct network traffic between systems, act as an intermediary for network communications to a C2 server, or avoid direct connections to its infrastructure (\n *Proxy* \n \\[\n [T1090](https://attack.mitre.org/versions/v7/techniques/T1090/) \n ])\n* Exploit legitimate desktop support and remote access software to establish an interactive C2 channel to target systems within networks (\n *Remote Access Software* \n \\[\n [T1219](https://attack.mitre.org/versions/v7/techniques/T1219/) \n ])\n\n\n\n\n| **Cryptocurrency Exchange Heists**     In addition to robbing traditional financial institutions, the BeagleBoyz target cryptocurrency exchanges to steal large amounts of cryptocurrency, sometimes valued at hundreds of millions of dollars per incident. Cryptocurrency offers the BeagleBoyz an irreversible method of theft that can be converted into fiat currency because the permanent nature of cryptocurrency transfers do not allow for claw\\-back mechanisms. Working with U.S. Government partners, CISA, Treasury, FBI, and USCYBERCOM identified COPPERHEDGE as the tool of choice for the BeagleBoyz to exploit cryptocurrency exchanges. COPPERHEDGE is a full\\-featured remote access tool capable of running arbitrary commands, performing system reconnaissance, and exfiltrating data. Full technical analysis of COPPERHEDGE is available at  [https://us\\-cert.cisa.gov/northkorea](https://us-cert.cisa.gov/northkorea)   . |\n| --- |\n\n\n### Exfiltration\n\n\n\n During a cyber operation, the BeagleBoyz need to exfiltrate a variety of data from compromised systems. In addition to the C2 tools noted that have built\\-in exfiltration features, such as CROWDEDFLOUNDER and HOPLIGHT, the BeagleBoyz use the following techniques to steal data from a network (\n *Exfiltration* \n \\[\n [TA0010](https://attack.mitre.org/versions/v7/tactics/TA0010/) \n ]).\n \n\n\n* Compress and encrypt collected data before exfiltration to minimize the amount of data sent over the web and make it portable, less conspicuous, and less detectable (\n *Archive Collected Data* \n \\[\n [T1560](https://attack.mitre.org/versions/v7/techniques/T1560/) \n ])\n* Steal collected data via scripts (although this may require other exfiltration techniques) (\n *Automated Exfiltration* \n \\[\n [T1020](https://attack.mitre.org/versions/v7/techniques/T1020/) \n ])\n* Encode data using the same protocol as the C2 channel and exfiltrate it over the C2 channel (\n *Exfiltration Over C2 Channel* \n \\[\n [T1041](https://attack.mitre.org/versions/v7/techniques/T1041/) \n ])\n\n\n### Impact\n\n\n\n The U.S. Government has observed the BeagleBoyz successfully monetize illicit access to financial institutions\u2019 SWIFT terminals to enable wire fraud and gain access to the institutions\u2019 payment switch application servers, which allowed fraudulent ATM cash outs. After gaining access to either one or both of these operationally critical systems, the BeagleBoyz monitor the systems to learn about their configurations and legitimate use patterns, and then they deploy bespoke tools to facilitate illicit monetization.\n \n\n\n\n The cybersecurity community and Financial Services sector have released substantial information on the BeagleBoyz manipulation of compromised SWIFT terminals, describing their ability to monitor these systems, send fraudulent messages, and attempt to hide the fraudulent activity from detection. The discussion below focuses on the custom tools used to manipulate payment switch applications for ATM cash outs.\n \n\n\n\n The BeagleBoyz use FASTCash malware to intercept financial request messages and reply with fraudulent but legitimate\\-looking affirmative response messages in the ISO 8583 format. The BeagleBoyz have functionally equivalent FASTCash malware for both UNIX and Windows that they deploy depending on the operating system running on the server hosting the bank\u2019s payment switch application.\n \n\n\n\n FASTCash for UNIX is composed of AIX executable files designed to inject code and libraries into a currently running process. One AIX executable provides export functions, which allows an application to manipulate transactions on financial systems using the ISO 8583 international standard for financial transaction card\\-originated interchange messaging. The injected executables interpret financial request messages and construct fraudulent financial response messages. For more details on FASTCash for UNIX malware, please see the FASTCash report at\n [https://www.us\\-cert.gov/ncas/alerts/TA18\\-275A](https://www.us-cert.gov/ncas/alerts/TA18-275A) \n .\n \n\n\n\n The BeagleBoyz use FASTCash for Windows to manipulate transactions processed by a switch application running on a Windows box. FASTCash for Windows is also specific to the ISO 8583 message format. The BeagleBoyz appear to have modified publicly available source code to write parts of the tool, likely to speed development. The malware contains code probably taken from open\\-source repositories on the internet to create hashmaps and hook functions and to parse ISO 8583 messages.\n \n\n\n\n FASTCash for Windows injects itself into software running on a Windows platform. The malware then takes control of the software\u2019s network send and receive functions, allowing it to manipulate ISO 8583 messages. The U.S. Government has identified two variants of FASTCash for Windows. One variant supports ASCII encoding. The BeagleBoyz appear to have modified the second variant\u2019s message parsing code to support Extended Binary Coded Decimal Interchange Code (EBCIDC) encoding. Both ASCII and EBCDIC are character encoding formats.\n \n\n\n\n FASTCash for Windows malware uses code from github.com/petewarden/c\\_hashmap for hashmaps, code from Microsoft's Detours Library at github.com/Microsoft/Detours for hooking, and code from to parse ISO 8583 messages.\n \n\n\n\n The malware hooks onto the send and receive function of the switch application so that it can process inbound request messages as they are received. FASTCash for Windows inspects the inbound message, probably looking for specific account numbers. If the account number matches an expected number, the malware constructs a fraudulent response message. If the account number does not match an expected number, the malware allows the request to pass through normally. If the malware constructs a fraudulent response message, it then sends it back to the acquirer without any further processing by the switch application, leaving the issuer without any awareness of the fraudulent transaction.\n \n\n\n\n Full technical reports for FASTCash and FASTCash for Windows malware are available at\n [https://us\\-cert.cisa.gov/northkorea](https://us-cert.cisa.gov/northkorea) \n .\n \n\n\n\n The BeagleBoyz have used the following techniques to manipulate business and operational processes for monetary or destructive purposes (\n *Impact* \n \\[\n [TA0040](https://attack.mitre.org/versions/v7/tactics/TA0040/) \n ]).\n \n\n\n* Corrupt or wipe data storage, data structures, and Master Boot Records (MBR) to interrupt network availability, services, and resources (\n *Disk Wipe: Disk Structure Wipe* \n \\[\n [T1561\\.002](https://attack.mitre.org/versions/v7/techniques/T1561/002) \n ],\n *Data Destruction* \n \\[\n [T1485](https://attack.mitre.org/versions/v7/techniques/T1485/) \n ])\n* Encrypt data on target systems and withhold access to the decryption key until a ransom is paid, or render data permanently inaccessible if the ransom is not paid (\n *Data Encrypted for Impact* \n \\[\n [T1486](https://attack.mitre.org/versions/v7/techniques/T1486/) \n ])\n* Stop, disable, or render services unavailable on a system to damage the environment or inhibit incident response (\n *Service Stop* \n \\[\n [T1489](https://attack.mitre.org/versions/v7/techniques/T1489/) \n ])\n* Insert, delete, or modify data at rest, in transit, or in use to manipulate outcomes, hide activity, and affect the business process, organizational understanding, and decision\\-making (\n *Data Manipulation: Stored Data Manipulation* \n \\[\n [T1565\\.001](https://attack.mitre.org/versions/v7/techniques/T1565/001/) \n ],\n *Data Manipulation: Transmitted Data Manipulation* \n \\[\n [T1565\\.002](https://attack.mitre.org/versions/v7/techniques/T1565/002/) \n ],\n *Data Manipulation: Runtime Data Manipulation* \n \\[\n [T1565\\.003](https://attack.mitre.org/versions/v7/techniques/T1565/003/) \n ])\n\n\n\n### Mitigations\n\n\n\n* Contact law enforcement, CISA, or Treasury immediately regarding any identified activity related to BeagleBoyz. (Refer to the Contact Information section.)\n* Incorporate IOCs identified in CISA\u2019s Malware Analysis Reports on\n [https://us\\-cert.cisa.gov/northkorea](https://us-cert.cisa.gov/northkorea) \n into intrusion detection systems and security alert systems to enable active blocking or reporting of suspected malicious activity.\n\n\n### Recommendations for all Financial Institutions\n\n\n* Verify compliance with Federal Financial Institutions Examination Council (FFIEC) handbooks, especially those related to Information Security and Payment Systems.\n\t+ <https://ithandbook.ffiec.gov/>\n* Verify compliance with industry security standards for critical systems, such as those available at:\n\t+ <https://www.pcisecuritystandards.org>\n\t+ [https://www.swift.com/myswift/customer\\-security\\-programme\\-csp/swift\\-customer\\-security\\-controls\\-framework](https://www.swift.com/myswift/customer-security-programme-csp/swift-customer-security-controls-framework)\n\n\n### Recommendations for Institutions with Retail Payment Systems\n\n\n\n Require chip and personal identification number (PIN) cryptogram validation.\n \n\n\n* Implement chip and PIN requirements for debit cards.\n* Validate card\\-generated authorization request cryptograms.\n* Use issuer\\-generated authorization response cryptograms for response messages.\n* Require card\\-generated authorization response cryptogram validation to verify legitimate response messages.\n\n\n\n Isolate payment system infrastructure.\n \n\n\n* Require multi\\-factor authentication for any user to access the switch application server.\n* Confirm perimeter security controls prevent internet hosts from accessing the private network infrastructure servicing your payment switch application server.\n* Confirm perimeter security controls prevent all hosts outside of authorized endpoints from accessing your system, especially if your payment switch application server is internet accessible.\n\n\n\n Logically segregate your operating environment.\n \n\n\n* Use firewalls to divide your operating environment into enclaves.\n* Use access control lists to permit/deny specific traffic from flowing between those enclaves.\n* Give special considerations to segregating enclaves holding sensitive information (e.g., card management systems) from enclaves requiring internet connectivity (e.g., email).\n\n\n\n Encrypt data in transit.\n \n\n\n* Secure all links to payment system engines with a certificate\\-based mechanism, such as Mutual Transport Layer Security, for all external and internal traffic external.\n* Limit the number of certificates that can be used on the production server and restrict access to those certificates.\n\n\n\n Monitor for anomalous behavior as part of layered security.\n \n\n\n* Configure the switch application server to log transactions and routinely audit transaction and system logs.\n* Develop a baseline of expected software, users, and logons and monitor switch application servers for unusual software installations, updates, account changes, or other activities outside of expected behavior.\n* Develop a baseline of expected transaction participants, amounts, frequency, and timing. Monitor and flag anomalous transactions for suspected fraudulent activity.\n\n\n### Recommendations for Organizations with ATM or Point of Sale Devices\n\n\n\n Validate issuer responses to financial request messages.\n \n\n\n* Implement chip and PIN requirements for debit cards.\n* Require and verify message authentication codes on issuer financial request response messages.\n* Perform authorization response cryptogram validation for chip and PIN transactions.\n\n\n### Recommendations for All Organizations\n\n\n\n Users and administrators should use the following best practices to strengthen the security posture of their organization\u2019s systems:\n \n\n\n* Maintain up\\-to\\-date antivirus signatures and engines.\n* Keep operating system patches up to date.\n* Disable file and printer sharing services. If these services are required, use strong passwords or Active Directory authentication.\n* Restrict users\u2019 ability (permissions) to install and run unwanted software applications. Do not add users to the local administrators\u2019 group unless required.\n* Enforce a strong password policy and require regular password changes.\n* Exercise caution when opening email attachments even if the attachment is expected and the sender appears to be known.\n* Enable a personal firewall on agency workstations and configure it to deny unsolicited connection requests.\n* Disable unnecessary services on agency workstations and servers.\n* Scan for and remove suspicious email attachments; ensure the scanned attachment is its \u201ctrue file type\u201d (i.e., the extension matches the file header).\n* Monitor users' web browsing habits; restrict access to sites with unfavorable content.\n* Exercise caution when using removable media (e.g., USB thumb drives, external drives, CDs).\n* Scan all software downloaded from the internet before executing.\n* Maintain situational awareness of the latest threats.\n* Implement appropriate access control lists.\n\n\n\n Additional information on malware incident prevention and handling can be found in National Institute of Standards and Technology Special Publication 800\\-83,\n [Guide to Malware Incident Prevention and Handling for Desktops and Laptops](https://www.nist.gov/publications/guide-malware-incident-prevention-and-handling-desktops-and-laptops) \n .\n \n\n\n\n\n\n\n\n### Contact Information\n\n\n\n\n Recipients of this report are encouraged to contribute any additional information that they may have related to this threat.\n \n\n\n\n For any questions related to this report or to report an intrusion and request resources for incident response or technical assistance, please contact:\n \n\n\n* CISA (888\\-282\\-0870 or\n [Central@cisa.dhs.gov](mailto:Central@cisa.dhs.gov) \n ),\n* The FBI through the FBI Cyber Division (855\\-292\\-3937 or\n [CyWatch@fbi.gov](mailto:CyWatch@fbi.gov) \n ) or a\n [local field office](https://www.fbi.gov/contact-us/field-offices/field-offices) \n , or\n* Treasury Office of Cybersecurity and Critical Infrastructure Protection (Treasury OCCIP) (202\\-622\\-3000 or\n [OCCIP\\-Coord@treasury.gov](mailto:OCCIP-Coord@treasury.gov) \n ).\n\n\n\n*DISCLAIMER* \n\n\n\n\n*This information is provided \"as is\" for informational purposes only. The United States Government does not provide any warranties of any kind regarding this information. In no event shall the United States Government or its contractors or subcontractors be liable for any damages, including but not limited to, direct, indirect, special or consequential damages, arising out of, resulting from, or in any way connected with this information, whether or not based upon warranty, contract, tort, or otherwise, whether or not arising out of negligence, and whether or not injury was sustained from, or arose out of the results of, or reliance upon the information.* \n\n\n\n\n\n*The United States Government does not endorse any commercial product or service, including any subjects of analysis. Any reference to specific commercial products, processes, or services by service mark, trademark, manufacturer, or otherwise, does not constitute or imply their endorsement, recommendation, or favoring by the United States Government.* \n\n\n\n\n\n\n\n\n\n### Revisions\n\n\n\n\n August 26, 2020: Initial Version\\|September 3, 2020: Updated PDF template\\|October 10, 2020: Updated Initial Access section\n \n\n\n\n\n\n\n\n\n\n\n This product is provided subject to this\n [Notification](/notification \"Follow link\") \n and this\n [Privacy \\& Use](/privacy-policy \"Follow link\") \n policy.\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlease share your thoughts\n--------------------------\n\n\n\n We recently updated our anonymous\n [product survey](https://www.surveymonkey.com/r/CISA-cyber-survey?product=https://www.cisa.gov/news-events/cybersecurity-advisories/aa20-239a) \n ; we\u2019d welcome your feedback.\n \n\n\n\n\n\n\n\n\n\n\n\n\nRelated Advisories\n------------------\n\n\n\n\n\n\n\n\n\n\n Jul 11, 2024\n \n\n\n Cybersecurity Advisory \\| AA24\\-193A\n \n\n### [CISA Red Team\u2019s Operations Against a Federal Civilian Executive Branch Organization Highlights the Necessity of Defense\\-in\\-Depth](/news-events/cybersecurity-advisories/aa24-193a)\n\n\n\n\n\n\n\n\n\n\n\n Jul 08, 2024\n \n\n\n Cybersecurity Advisory \\| AA24\\-190A\n \n\n### [People\u2019s Republic of China (PRC) Ministry of State Security APT40 Tradecraft in Action](/news-events/cybersecurity-advisories/aa24-190a)\n\n\n\n\n\n\n\n\n\n\n\n May 10, 2024\n \n\n\n Cybersecurity Advisory \\| AA24\\-131A\n \n\n### [\\#StopRansomware: Black Basta](/news-events/cybersecurity-advisories/aa24-131a)\n\n\n\n\n\n\n\n\n\n\n\n Apr 18, 2024\n \n\n\n Cybersecurity Advisory \\| AA24\\-109A\n \n\n### [\\#StopRansomware: Akira Ransomware](/news-events/cybersecurity-advisories/aa24-109a)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[Return to top](#) \n\n\n\n\n* [Topics](/topics)\n* [Spotlight](/spotlight)\n* [Resources \\& Tools](/resources-tools)\n* [News \\& Events](/news-events)\n* [Careers](/careers)\n* [About](/about)\n\n\n\n\n\n\n\n\n[Cybersecurity \\& Infrastructure Security Agency](/ \"Go to the Cybersecurity & Infrastructure Security Agency homepage\")\n\n\n* [Facebook](https://www.facebook.com/CISA)\n* [Twitter](https://twitter.com/CISAgov)\n* [LinkedIn](https://www.linkedin.com/company/cybersecurity-and-infrastructure-security-agency)\n* [YouTube](https://www.youtube.com/@cisagov)\n* [Instagram](https://www.instagram.com/cisagov)\n* [RSS](/subscribe-updates-cisa)\n\n\n\n\n CISA Central\n \n[1\\-844\\-Say\\-CISA](tel:1-844-Say-CISA) \n[SayCISA@cisa.gov](mailto:SayCISA@cisa.gov) \n\n\n\n\n\n\n\n\n\n\n\n DHS Seal\n \n\n\n CISA.gov\n \n\n An official website of the U.S. Department of Homeland Security\n \n\n\n* [About CISA](/about \"About CISA\")\n* [Budget and Performance](https://www.dhs.gov/performance-financial-reports \"Budget and Performance\")\n* [DHS.gov](https://www.dhs.gov \"Department of Homeland Security\")\n* [Equal Opportunity \\& Accessibility](/oedia \"Equal Opportunity & Accessibility\")\n* [FOIA Requests](https://www.dhs.gov/foia \"FOIA Requests\")\n* [No FEAR Act](/no-fear-act \"No FEAR Act Reporting\")\n* [Office of Inspector General](https://www.oig.dhs.gov/ \"Office of Inspector General\")\n* [Privacy Policy](/privacy-policy \"Privacy Policy\")\n* [Subscribe](https://public.govdelivery.com/accounts/USDHSCISA/subscriber/new?topic_id=USDHSCISA_138 \"Subscribe to Email Updates\")\n* [The White House](https://www.whitehouse.gov/ \"The White House\")\n* [USA.gov](https://www.usa.gov/ \"USA.gov\")\n* [Website Feedback](/forms/feedback \"Website Feedback\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "cves": [], "techniques": ["T1056.004", "T1565.003", "T1553.002", "T1021.001", "T1561.002", "T1505.003", "T1543.003", "T1132.001", "T1565.002", "T1574.001", "T1070.004", "T1027.005", "T1562.003", "T1569.002", "T1053.004", "T1218.001", "T1021.002", "T1562.001", "T1566.001", "T1548.003", "T1053.003", "T1070.003", "T1562.006", "T1518.001", "T1565.001", "T1059.005", "T1552.004", "T1547.001", "T1059.001", "T1070.006"], "advisory": "aa20-239a", "title": "FASTCash 2.0: North Korea's BeagleBoyz Robbing Banks | CISA", "source": "cybersecurity-advisories", "id": "c8828151b9e1500f46487389b9b035177fa3dc8009fdd99509add4cace2245a6"}