{
  "markdown": "\nbody#cma-body { font-family: Franklin Gothic Medium, Franklin Gothic, ITC Franklin Gothic, Arial, sans-serif; font-size: 15px; } table#cma-table { width: 900px; margin: 2px; table-layout: fixed; border-collapse: collapse; } div#cma-exercise { width: 900px; height: 30px; text-align: center; line-height: 30px; font-weight: bold; font-size: 18px; } div.cma-header { text-align: center; margin-bottom: 40px; } div.cma-footer { text-align: center; margin-top: 20px; } h2.cma-tlp { background-color: #000; color: #ffffff; width: 180px; height: 30px; text-align: center; line-height: 30px; font-weight: bold; font-size: 18px; float: right; } span.cma-fouo { line-height: 30px; font-weight: bold; font-size: 16px; } h3.cma-section-title { font-size: 18px; font-weight: bold; padding: 0 10px; margin-top: 10px; } h4.cma-object-title { font-size: 16px; font-weight: bold; margin-left: 20px; } h5.cma-data-title { padding: 3px 0 3px 10px; margin: 10px 0 0 20px; background-color: #e7eef4; font-size: 15px; } p.cma-text { margin: 5px 0 0 25px !important; word-wrap: break-word !important; } div.cma-section { border-bottom: 5px solid #aaa; margin: 5px 0; padding-bottom: 10px; } div.cma-avoid-page-break { page-break-inside: avoid; } div#cma-summary { page-break-after: always; } div#cma-faq { page-break-after: always; } table.cma-content { border-collapse: collapse; margin-left: 20px; } table.cma-hashes { table-layout: fixed; width: 880px; } table.cma-hashes td{ width: 780px; word-wrap: break-word; } .cma-left th { text-align: right; vertical-align: top; padding: 3px 8px 3px 20px; background-color: #f0f0f0; border-right: 1px solid #aaa; } .cma-left td { padding-left: 8px; } .cma-color-title th, .cma-color-list th, .cma-color-title-only th { text-align: left; padding: 3px 0 3px 20px; background-color: #f0f0f0; } .cma-color-title td, .cma-color-list td, .cma-color-title-only td { padding: 3px 20px; } .cma-color-title tr:nth-child(odd) { background-color: #f0f0f0; } .cma-color-list tr:nth-child(even) { background-color: #f0f0f0; } td.cma-relationship { max-width: 310px; word-wrap: break-word; } ul.cma-ul { margin: 5px 0 10px 0; } ul.cma-ul li { line-height: 20px; margin-bottom: 5px; word-wrap: break-word; } #cma-survey { font-weight: bold; font-style: italic; } div.cma-banner-container { position: relative; text-align: center; color: white; } img.cma-banner { max-width: 900px; height: auto; } img.cma-nccic-logo { max-height: 60px; width: auto; float: left; margin-top: -15px; } div.cma-report-name { position: absolute; bottom: 32px; left: 12px; font-size: 20px; } div.cma-report-number { position: absolute; bottom: 70px; right: 100px; font-size: 18px; } div.cma-report-date { position: absolute; bottom: 32px; right: 100px; font-size: 18px; } img.cma-thumbnail { max-height: 100px; width: auto; vertical-align: top; } img.cma-screenshot { margin: 10px 0 0 25px; max-width: 800px; height: auto; vertical-align: top; border: 1px solid #000; } div.cma-screenshot-text { margin: 10px 0 0 25px; } .cma-break-word { word-wrap: break-word; } .cma-tag { border-radius: 5px; padding: 1px 10px; margin-right: 10px; } .cma-tag-info { background: #f0f0f0; } .cma-tag-warning { background: #ffdead; }\n\n\n\n\n\n\n\nMalware Analysis Report\n10322463.r2.v1\n2021-02-12\n\nNotification\n\nThis report is provided \"as is\" for informational purposes only. The Department of Homeland Security (DHS) does not provide any warranties of any kind regarding any information contained herein. The DHS does not endorse any commercial product or service referenced in this bulletin or otherwise.\nThis document is marked TLP:WHITE--Disclosure is not limited. Sources may use TLP:WHITE when information carries minimal or no foreseeable risk of misuse, in accordance with applicable rules and procedures for public release. Subject to standard copyright rules, TLP:WHITE information may be distributed without restriction. For more information on the Traffic Light Protocol (TLP), see http://www.us-cert.gov/tlp.\n\nSummary\n\nDescription\nThis Malware Analysis Report (MAR) is the result of analytic efforts among the Federal Bureau of Investigation (FBI), the Cybersecurity and Infrastructure Security Agency (CISA), and the Department of Treasury (Treasury) to highlight the cyber threat to cryptocurrency posed by North Korea, formally known as the Democratic People\u2019s Republic of Korea (DPRK), and provide mitigation recommendations. Working with U.S. government partners, FBI, CISA, and Treasury assess that Lazarus Group\u2014which these agencies attribute to North Korean state-sponsored advanced persistent threat (APT) actors\u2014is targeting individuals and companies, including cryptocurrency exchanges and financial service companies, through the dissemination of cryptocurrency trading applications that have been modified to include malware that facilitates theft of cryptocurrency.\n\n\t\t\tThis MAR highlights this cyber threat posed by North Korea and provides detailed indicators of compromise (IOCs) used by the North Korean government. The U.S. Government refers to malicious cyber activity by the North Korean government as HIDDEN COBRA. For more information on other versions of AppleJeus and recommended steps to mitigate this threat, see Joint Cybersecurity Advisory AA21-048A: AppleJeus: Analysis of\u00a0North Korea's Cryptocurrency Malware at https://www.us-cert.cisa.gov/ncas/alerts/AA21-048A.\n\n\t\t\tThere have been multiple versions of AppleJeus malware discovered since its initial discovery in August 2018. In most versions, the malware appears to be from a legitimate-looking cryptocurrency trading company and website, whereby an unsuspecting individual downloads a third-party application from a website that appears legitimate.\n\n\t\t\tThe U.S. Government has identified AppleJeus malware version\u2014JMT Trading\u2014and associated IOCs used by the North Korean government in AppleJeus operations.\n\n\t\t\tJMT Trading malware, discovered by a cybersecurity company in October 2019, is a legitimate-looking cryptocurrency trading software that is marketed and distributed by a company and website\u2014JMT Trading and jmttrading[.]org, respectively\u2014that appear legitimate.\nFor a downloadable copy of IOCs, see: MAR-10322463-2.v1.stix.\nSubmitted Files (6)\n07c38ca1e0370421f74c949507fc0d21f4cfcb5866a4f9c0751aefa0d6e97542 (jmttrader.msi)\n081d1739422bf050755e6af269a717681274821cea8becb0962d4db61869c5d6 (JMTTrader.exe)\n4d6078fc1ea6d3cd65c3ceabf65961689c5bc2d81f18c55b859211a60c141806 (jmttrader_mac.dmg)\n7ea6391c11077a0f2633104193ec08617eb6321a32ac30c641f1650c35eed0ea (JMTTrader)\n9bf8e8ac82b8f7c3707eb12e77f94cd0e06a972658610d136993235cbfa53641 (CrashReporter.exe)\ne352d6ea4da596abfdf51f617584611fc9321d5a6d1c22aff243aecdef8e7e55 (CrashReporter)\nDomains (2)\nbeastgoc.com\njmttrading.org\n\nFindings\n\n07c38ca1e0370421f74c949507fc0d21f4cfcb5866a4f9c0751aefa0d6e97542\nTags\nbackdoordroppertrojan\nDetails\n\n\n\nName\njmttrader.msi\n\n\nSize\n11524608 bytes\n\n\nType\nComposite Document File V2 Document, Little Endian, Os: Windows, Version 6.1, MSI Installer, Last Printed: Fri Dec 11 11:47:44 2009, Create Time/Date: Fri Dec 11 11:47:44 2009, Last Saved Time/Date: Fri Dec 11 11:47:44 2009, Security: 0, Code page: 1252, Revision Number: {A2814B39-244E-4899-81F9-F995B8DC1A80}, Number of Words: 2, Subject: JMTTrader, Author: JMT Trading Group LLC, Name of Creating Application: Advanced Installer 14.5.2 build 83143, Template: ;1033, Comments: This installer database contains the logic and data required to install JMTTrader., Title: Installation Database, Keywords: Installer, MSI, Database, Number of Pages: 200\n\n\nMD5\nc4aa6f87124320eadc342d2fe7364896\n\n\nSHA1\n4fcc84583126689d03acf69b9fca5632f7d44752\n\n\nSHA256\n07c38ca1e0370421f74c949507fc0d21f4cfcb5866a4f9c0751aefa0d6e97542\n\n\nSHA512\n51b34ae0a0e9252705206f2d9e87136706f51a70cc110e8493ff1266303ae33f09c1e89f329ae8f776a610c88f155e02afeb63a8bc7762ce307143fdff944172\n\n\nssdeep\n196608:p/5qF8q187MZjfZjowfMjVS9Qkj6YotsEXw6xws8CV/KFmpZ3zyl:B5qCyBfRfMjVS4RXw6EFF\n\n\nEntropy\n7.962353\n\n\n\nAntivirus\n\n\n\nAhnlab\nMSI/Dropper\n\n\nAvira\nTR/Agent.rhbwd\n\n\nComodo\nMalware\n\n\nIkarus\nTrojan.Win32.Agent\n\n\nMicrosoft Security Essentials\nBackdoor:Win32/Stealer.A!MSR\n\n\nNetGate\nTrojan.Win32.Malware\n\n\nSymantec\nTrojan.Gen.MBT\n\n\nTrendMicro\nBackdoo.80EE6F49\n\n\nTrendMicro House Call\nBackdoo.80EE6F49\n\n\n\nYARA Rules\nNo matches found.\nssdeep Matches\nNo matches found.\nRelationships\n\n\n\n07c38ca1e0...\nDownloaded_From\njmttrading.org\n\n\n07c38ca1e0...\nContains\n081d1739422bf050755e6af269a717681274821cea8becb0962d4db61869c5d6\n\n\n07c38ca1e0...\nContains\n9bf8e8ac82b8f7c3707eb12e77f94cd0e06a972658610d136993235cbfa53641\n\n\n\nDescription\nThis Windows program from the JMTTrade GitHub site is a Windows MSI Installer. The installer looks legitimate and previously had a valid digital signature from Comodo (Sectigo). The signature was signed with a code signing certificate purchased by the same user as the SSL certificate for \"jmttrading.org.\" The installer asks for administrative privileges to run and while installing \"JMTTrader.exe\" (081d1739422bf050755e6af269a717681274821cea8becb0962d4db61869c5d6) in the \u201cC:\\Program Files (x86)\\JMTTrader\u201d folder, it also installs \"CrashReporter.exe\" (9bf8e8ac82b8f7c3707eb12e77f94cd0e06a972658610d136993235cbfa53641) in the \u201cC:\\Users\\<username>\\AppData\\Roaming\\JMTTrader\u201d folder. Immediately after installation, the installer launches \"CrashReporter.exe\" with the \u201cMaintain\u201d parameter.\nScreenshots\n \n\nFigure 1 - Screenshot of the JMTTrader Installation.\n\n\n\njmttrading.org\nTags\ncommand-and-control\nWhois\nWhois for jmttrading.org had the following information on October 11, 2019:\n\t\t\tRegistrar: NameCheap\n\t\t\tCreated: July 11, 2019\n\t\t\tExpires: July 11, 2020\n\t\t\tUpdated: September 10, 2019\nRelationships\n\n\n\njmttrading.org\nDownloaded_To\n4d6078fc1ea6d3cd65c3ceabf65961689c5bc2d81f18c55b859211a60c141806\n\n\njmttrading.org\nDownloaded_To\n07c38ca1e0370421f74c949507fc0d21f4cfcb5866a4f9c0751aefa0d6e97542\n\n\n\nDescription\nThis site contained a \u201cDownload from GitHub\u201d button which takes the user to the JMTTrader GitHub page (github.com/jmttrading/JMTTrader/releases) where both Windows and OSX versions of JMTTrader were available for download. There are also zip and a tar.gz files containing the source code. JMT Trading has a legitimately signed Sectigo SSL certificate. The SSL certificate was \u201cDomain Control Validated,\" just as the Celas LLC certificate for AppleJeus variant 1. The domain was registered at the IP address 198.187.29.20 with ASN 22612.\n\n\n081d1739422bf050755e6af269a717681274821cea8becb0962d4db61869c5d6\nTags\ntrojan\nDetails\n\n\n\nName\nJMTTrader.exe\n\n\nSize\n2645744 bytes\n\n\nType\nPE32 executable (GUI) Intel 80386, for MS Windows\n\n\nMD5\n70cf78e117359b17f079c128fcead8c8\n\n\nSHA1\n8ec7f4b39f0843e5eae3b8af01578fd8e4432995\n\n\nSHA256\n081d1739422bf050755e6af269a717681274821cea8becb0962d4db61869c5d6\n\n\nSHA512\n8e21ea416f4c58743183394a28e347bc5c45f40306a8ffa7eef8403cf340538acf0794fd7bfdf60e120822fae5a21fc0f15de28cdf91d64f866781eb260b302e\n\n\nssdeep\n49152:RHvo5BtSCkrN6DyhGr2W8Ujk4DJX4TnKuwdJg0b:65+rN+8GSog4lX/\n\n\nEntropy\n7.024119\n\n\n\nAntivirus\n\n\n\nEmsisoft\nMalCert.A (A)\n\n\nSophos\nMal/BadCert-Gen\n\n\n\nYARA Rules\nNo matches found.\nssdeep Matches\nNo matches found.\nPE Metadata\n\n\n\nCompile Date\n2019-07-29 03:06:34-04:00\n\n\nImport Hash\n03d73bcb914fff965a82c9d9fe1fb7a1\n\n\nCompany Name\nJMT Trading Group\n\n\nFile Description\nJMT Trader\n\n\nInternal Name\nJMT Trader\n\n\nLegal Copyright\nJMT Trading Group (C) 2019\n\n\nOriginal Filename\nJMTTrader.exe\n\n\nProduct Name\nAutomatic Secure Bitcoin Trader Application\n\n\nProduct Version\n1.40.42\n\n\n\nPE Sections\n\n\n\nMD5\nName\nRaw Size\nEntropy\n\n\nf9a353aa651137f95669fd2b1a50e70b\nheader\n1024\n3.181420\n\n\nd00e20fb387da8ab6898391019288f30\n.text\n1181696\n6.125747\n\n\nc7fcd13c45b7c15042b8024839cf18c4\n.rdata\n1269248\n7.095514\n\n\n7504000617caec62a5a3221a785a58a8\n.data\n6144\n4.261115\n\n\n55550745e0d79ebbad96ac438f26f8a1\n.rsrc\n13312\n7.626081\n\n\n8ae8dead88483b69b09b01b024e882a2\n.reloc\n165376\n6.784821\n\n\n\nPackers/Compilers/Cryptors\n\n\n\nMicrosoft Visual C++ ?.?\n\n\n\nRelationships\n\n\n\n081d173942...\nContained_Within\n07c38ca1e0370421f74c949507fc0d21f4cfcb5866a4f9c0751aefa0d6e97542\n\n\n\nDescription\nThis file is a 32-bit Windows executable contained within the Windows MSI Installer \"JMTTrader_Win.msi.\" When executed, \"JMTTrader.exe\" asks for the user\u2019s exchange, and then loads a legitimate cryptocurrency trading platform with no signs of malicious activity.\n\n\t\t\t\"JMTTrader.exe\" is similar in appearance to version 1 and QT Bitcoin Trader. In addition to similar appearance, many strings found in \"JMTTrader.exe\" have QT Bitcoin Trader references and parameters being set to \u201cJMT Trader\u201d including but not limited to:\n\n\t\t\t--Begin similarities--\n\t\t\tString_ABOUT_QT_BITCOIN_TRADER_TEXT=JMT Trader\n\t\t\tString_ABOUT_QT_BITCOIN_TRADER_TEXT=JMT Trader is a free Open Source project<br>developed on pure C++ Qt and OpenSSL.\n\t\t\tQtBitcoinTraderClass\n\t\t\tJuly IGHOR (note: Ighor July is one of the developers of QT Bitcoin Trader)\n\t\t\t--End similarities--\n\n\t\t\tThe strings also reference the name \u201cGary Mendez\u201d with email garyhmendez@yahoo.com as the author of \"JMTTrader.exe.\" There is also reference to an additional GitHub repository under the name Gary Mendez \u201cgithub.com/garymendez/JMTTrader/issues.\"\n\n\t\t\tWhile the JMTTrader application is likely a modification of QT Bitcoin Trader, the legitimate QT Bitcoin Trader for Windows is not available for download as an MSI, but only as a Windows portable executable. This is a singular file named \"QtBitcoinTrader.exe\" and does not install or run any additional programs. The JMTTrader MSI contains \"JMTTrader.exe,\" the modified version of QT Bitcoin Trader, as well as the additional \"CrashReporter.exe\" (9bf8e8ac82b8f7c3707eb12e77f94cd0e06a972658610d136993235cbfa53641) executable not included with the original QT Bitcoin Trader.\nScreenshots\n \n\nFigure 2 - Screenshot of the JMTTrader Application.\n\n\n\n9bf8e8ac82b8f7c3707eb12e77f94cd0e06a972658610d136993235cbfa53641\nTags\nbackdoortrojan\nDetails\n\n\n\nName\nCrashReporter.exe\n\n\nSize\n609008 bytes\n\n\nType\nPE32 executable (GUI) Intel 80386, for MS Windows\n\n\nMD5\n48971e0e71300c99bb585d328b08bc88\n\n\nSHA1\nec8d7264953b5e9e416b7e8483954d9907278f2f\n\n\nSHA256\n9bf8e8ac82b8f7c3707eb12e77f94cd0e06a972658610d136993235cbfa53641\n\n\nSHA512\n6a664cd56e2201237bb24c148f39db6878e7cb6bb507290144f4cea327989535dbea64db11de398eee822aae56e873126dc95e2abf73642070f5f15c61d9eb19\n\n\nssdeep\n12288:VhOHEwPzMEoJ1BpfYYPmrv3l1dxs6GWRGuGTi2euRBFXTnn8HPIRlxhD44ENrYAt:zOHEwPzMEoJ1BpfYYPmrv3l1dxs6GWRz\n\n\nEntropy\n6.526076\n\n\n\nAntivirus\n\n\n\nAhnlab\nTrojan/Win32.Stealer\n\n\nAntiy\nTrojan[Backdoor]/Win32.Stealer\n\n\nAvira\nTR/Agent.lnumk\n\n\nBitDefender\nGen:Variant.Razy.567005\n\n\nComodo\nMalware\n\n\nESET\na variant of Win32/NukeSped.GN trojan\n\n\nEmsisoft\nMalCert.A (A)\n\n\nIkarus\nTrojan.Win32.Agent\n\n\nK7\nTrojan ( 005597f41 )\n\n\nLavasoft\nGen:Variant.Razy.567005\n\n\nMicrosoft Security Essentials\nBackdoor:Win32/Stealer.A!MSR\n\n\nNANOAV\nTrojan.Win32.Crypted.gczdoi\n\n\nNetGate\nTrojan.Win32.Malware\n\n\nSophos\nTroj/APosT-L\n\n\nSymantec\nTrojan.Gen.2\n\n\nSystweak\ntrojan.nukesped\n\n\nTrendMicro\nBackdoo.80EE6F49\n\n\nTrendMicro House Call\nBackdoo.80EE6F49\n\n\nVirusBlokAda\nBackdoor.Agent\n\n\nZillya!\nTrojan.NukeSped.Win32.182\n\n\n\nYARA Rules\nNo matches found.\nssdeep Matches\nNo matches found.\nPE Metadata\n\n\n\nCompile Date\n2019-10-04 03:22:31-04:00\n\n\nImport Hash\n1513eba25694f99cecbcdc6cb414f6bd\n\n\n\nPE Sections\n\n\n\nMD5\nName\nRaw Size\nEntropy\n\n\ncedc0880c9b0b6fea37e0079f1a4b406\nheader\n1024\n2.832478\n\n\n189feb1b74269eaa7894c984df4268c3\n.text\n367104\n6.351925\n\n\n03c4cd021cfac8b5a8c0b944712e3217\n.rdata\n78336\n4.408592\n\n\ncf410dbcdd83eb2426120e72027f119b\n.data\n130048\n5.206737\n\n\nbf619eac0cdf3f68d496ea9344137e8b\n.rsrc\n512\n0.000000\n\n\nfe66dfb20b91197d86cc8bbf0fc7139c\n.reloc\n23040\n6.417054\n\n\n\nPackers/Compilers/Cryptors\n\n\n\nMicrosoft Visual C++ ?.?\n\n\n\nRelationships\n\n\n\n9bf8e8ac82...\nContained_Within\n07c38ca1e0370421f74c949507fc0d21f4cfcb5866a4f9c0751aefa0d6e97542\n\n\n9bf8e8ac82...\nConnected_To\nbeastgoc.com\n\n\n\nDescription\nThis file is a 32-bit Windows executable contained within the Windows MSI Installer \"JMTTrader_Win.msi.\" Unlike the first version of the malware, \"CrashReporter.exe\" is installed in the \u201cC:\\Users\\<username>\\AppData\\Roaming\\JMTTrader,\" which is a different folder than \"JMTTrader.exe.\" \"CrashReporter.exe\" is heavily obfuscated with the ADVObfuscation library, which has been renamed \u201csnowman\u201d by the malware writer. ADVObfuscation is described as using C++ 11/14 language to generate, at compile time, obfuscated code without using any external tool and without modifying the compiler and introduces some form of randomness to generate polymorphic code like the encryption of strings literals and the obfuscation of calls using finite state machines. Due to this obfuscation, detailed functionality can be difficult to determine to the extent of the non-obfuscated \"Updater.exe\" binary.\n\n\t\t\tAt launch, \"CrashReporter.exe\" first checks for the \u201cMaintain\u201d parameter and if not found, exits the program to likely evade detection in a sandbox environment. The malware collects basic victim information and encrypts the data with the hardcoded XOR key \u201cX,%`PMk--Jj8s+6=15:20:11.\"\n\n\t\t\tThe encrypted data is sent to \u201chxxps[:]//beastgoc.com/grepmonux.php\u201d with a multipart form data separator \u201c--wMKBUqjC7ZMG5A5g.\"\n\n\t\t\tThe malware\u2019s capabilities include reading/writing itself to various directories, querying/writing to the registry, searching for files, extract/decode payload, and terminating processes. \"CrashReporter.exe\" also creates a scheduled SYSTEM task named \"JMTCrashReporter,\" which runs the \"CrashReporter.exe\" program with the \u201cMaintain\u201d parameter at the login of any user.\nScreenshots\n \n\nFigure 3 - Hard-coded XOR key and XOR encryption.\n\n \n\nFigure 4 - Screenshot of the \"JMTCrashReporter\" scheduled task.\n\n\n\nbeastgoc.com\nTags\ncommand-and-control\nURLs\n\nhttps[:]//beastgoc.com/grepmonux.php\n\nWhois\nWhois information for the domain beastgoc.com on October 11, 2019 was as follows:\n\t\t\tRegistrar: NameCheap\n\t\t\tCreated Date: July 19, 2019\n\t\t\tExpiration Date: July 19, 2020\nRelationships\n\n\n\nbeastgoc.com\nConnected_From\n9bf8e8ac82b8f7c3707eb12e77f94cd0e06a972658610d136993235cbfa53641\n\n\nbeastgoc.com\nConnected_From\ne352d6ea4da596abfdf51f617584611fc9321d5a6d1c22aff243aecdef8e7e55\n\n\n\nDescription\nThe site \"beastgoc.com\" had as valid digital signature signed by Sectigo. This is a \u201cDomain Control Validated\u201d signature, which is the lowest level of validation. The domain was registered at the IP address 185.228.83.32 with ASN 205406.\n\n\n4d6078fc1ea6d3cd65c3ceabf65961689c5bc2d81f18c55b859211a60c141806\nTags\nbackdoortrojan\nDetails\n\n\n\nName\njmttrader_mac.dmg\n\n\nSize\n13583316 bytes\n\n\nType\nzlib compressed data\n\n\nMD5\n39cdf04be2ed479e0b4489ff37f95bbe\n\n\nSHA1\n74390fba9445188f2489959cb289e73c6fbe58e4\n\n\nSHA256\n4d6078fc1ea6d3cd65c3ceabf65961689c5bc2d81f18c55b859211a60c141806\n\n\nSHA512\nd04bc9adbe56414ec2cba134ebf8af42ef79495a89748367464e73c6dd69fd978a194df23a646ff90d45114bf68a93f580cd540ba3b600a6524b198294416148\n\n\nssdeep\n393216:sEFxMIZkTx7Nzm4qbicUC7Gk6RH1NBTtJRr49Hg4pgl:sEFiIYw4u8HxTDOi\n\n\nEntropy\n7.997633\n\n\n\nAntivirus\n\n\n\nAhnlab\nBackdoor/OSX.NukeSped\n\n\nAntiy\nTrojan/Win32.Casdet\n\n\nAvira\nOSX/W97M.CVE-2017-8759.wrdas\n\n\nBitDefender\nTrojan.MAC.Lazarus.G\n\n\nComodo\nMalware\n\n\nCyren\nTrojan.HUJK-1\n\n\nESET\nOSX/NukeSped.B trojan\n\n\nEmsisoft\nTrojan.MAC.Lazarus.G (B)\n\n\nIkarus\nTrojan.Win32.Casdet\n\n\nLavasoft\nTrojan.MAC.Lazarus.G\n\n\nMcAfee\nOSX/Nukesped.d\n\n\nMicrosoft Security Essentials\nTrojan:MacOS/NukeSped.A!MTB\n\n\nSophos\nOSX/Lazarus-E\n\n\nSymantec\nOSX.Trojan.Gen\n\n\nTrendMicro\nBackdoo.6FE2634B\n\n\nTrendMicro House Call\nBackdoo.6FE2634B\n\n\nZillya!\nBackdoor.Agent.OSX.57\n\n\n\nYARA Rules\nNo matches found.\nssdeep Matches\nNo matches found.\nRelationships\n\n\n\n4d6078fc1e...\nDownloaded_From\njmttrading.org\n\n\n4d6078fc1e...\nContains\n7ea6391c11077a0f2633104193ec08617eb6321a32ac30c641f1650c35eed0ea\n\n\n4d6078fc1e...\nContains\ne352d6ea4da596abfdf51f617584611fc9321d5a6d1c22aff243aecdef8e7e55\n\n\n\nDescription\nThis OSX program from the JMTTrader GitHub is an Apple DMG installer. The OSX program has very similar functionality to the Windows program, but does not have a digital signature. Again, the installer appears to be legitimate and installs both JMTTrader in the \u201c/Applications/JMTTrader.app/Contents/MacOS/\u201d folder and a hidden program named \u201c.CrashReporter\u201d in the \u201c/Applications/JMTTrader.app/Contents/Resources/\u201d folder. The installer contains a postinstall script (see Figure 5).\n\n\t\t\tThis postinstall script has similar functionality to the postinstall script of the first version but has a few additional features. It still moves the hidden plist file (.com.jmttrading.plist) to the LaunchDaemons folder, but also changes the file permissions on the plist. Once in the LaunchDaemons folder, this program will be ran on system load as root for every user, which will launch the CrashReporter program with the Maintain parameter.\n\n\t\t\tThe postinstall script also moves the \u201c.CrashReporter\u201d program to a new location \u201c/Library/JMTTrader/CrashReporter\u201d and makes it executable. Like CelasTradePro, as the LaunchDaemon will not run automatically after the plist file is moved, the postinstall script then launches the CrashReporter program with the Maintain parameter and runs it in the background (&).\n\n\t\t\tThe package also has \u201cDeveloped by Gary Mendez. JMTTrading Group\u201d in the Info.plist properties file.\nScreenshots\n \n\nFigure 5 - Screenshot of the postinstall script included in OSX JMTTrader installer.\n\n \n\nFigure 6 - Screenshot of the \"com.jmttrading.plist\" file.\n\n\n\n7ea6391c11077a0f2633104193ec08617eb6321a32ac30c641f1650c35eed0ea\nTags\ntrojan\nDetails\n\n\n\nName\nJMTTrader\n\n\nSize\n3585364 bytes\n\n\nType\nMach-O 64-bit x86_64 executable, flags:<NOUNDEFS|DYLDLINK|TWOLEVEL|WEAK_DEFINES|BINDS_TO_WEAK|PIE>\n\n\nMD5\nffc2a7073ba362b295357ac6e782634a\n\n\nSHA1\n6d13e85cd812e249ab950ec405e84289de9cfe5e\n\n\nSHA256\n7ea6391c11077a0f2633104193ec08617eb6321a32ac30c641f1650c35eed0ea\n\n\nSHA512\n1d14e41e306816323fcaa54fb7f420148c50fc0388a86178a41ce63c9fc5b1f29d2614d9c8445a13198c6920d4bded3dbf48641ee4795dbef4b78e6c48b91a80\n\n\nssdeep\n98304:rDhoAFpEA86GIleAdNH2vFywLw6mkJarN+8GSy:b5HrNiSy\n\n\nEntropy\n6.796243\n\n\n\nAntivirus\nNo matches found.\nYARA Rules\nNo matches found.\nssdeep Matches\nNo matches found.\nRelationships\n\n\n\n7ea6391c11...\nContained_Within\n4d6078fc1ea6d3cd65c3ceabf65961689c5bc2d81f18c55b859211a60c141806\n\n\n\nDescription\nThis OSX sample was contained within Apple DMG Installer \"JMTTrader_Mac.dmg.\" When exexuted, JMTTrader has identical functionality and appearance to the Windows JMTTrader.exe. It asks for the user\u2019s exchange and loads a legitimate cryptocurrency trading application with no signs of malicious activity. While the appearance has changed slightly from the CelasTradePro application, JMTTrader is close in appearance to both CelasTradePro and QT Bitcoin Trader, and is likely a modification of the OSX QT Bitcoin Trader.\n\n\t\t\tIn addition to similar appearance, many strings found in JMTTrader have QT Bitcoin Trader references and parameters being set to \u201cJMT Trader\u201d including but not limited to:\n\n\t\t\t--Begin similarities--\n\t\t\tString_ABOUT_QT_BITCOIN_TRADER_TEXT=JMT Trader\n\t\t\tString_ABOUT_QT_BITCOIN_TRADER_TEXT=JMT Trader is a free Open Source project<br>developed on pure C++ Qt and OpenSSL.\n\t\t\tUser-Agent: Qt Bitcoin Trader v1.40.42\n\t\t\tJuly IGHOR (note: Ighor July is one of the developers of QT Bitcoin Trader)\n\t\t\t--End similarities--\n\n\t\t\tThe strings also reference the name \u201cGary Mendez\u201d with email garyhmendez@yahoo.com as the author of JMTTrader.exe. There is also reference to an additional GitHub repository under the name Gary Mendez \u201cgithub.com/garymendez/JMTTrader/issues.\"\n\n\t\t\tWhile the JMTTrader application is likely a modification of QT Bitcoin Trader, the legitimate QT Bitcoin Trader DMG for OSX does not contain the postinstall script nor the plist file which creates a LaunchDaemon. When executed, only QTBitcoinTrader will be installed, and no additional programs will be created, installed, or launched.\n\n\t\t\tIn contrast, the JMTTrader DMG contains the CelasTradePro OSX executable, the modified version of QT Bitcoin Trader, as well as the additional CrashReporter OSX executable not included with the original QT Bitcoin Trader.\n\n\ne352d6ea4da596abfdf51f617584611fc9321d5a6d1c22aff243aecdef8e7e55\nTags\ntrojan\nDetails\n\n\n\nName\nCrashReporter\n\n\nSize\n39168 bytes\n\n\nType\nMach-O 64-bit x86_64 executable, flags:<NOUNDEFS|DYLDLINK|TWOLEVEL|PIE>\n\n\nMD5\n6058368894f25b7bc8dd53d3a82d9146\n\n\nSHA1\n8644da026f9e8873dd8699bd68c77a25001be726\n\n\nSHA256\ne352d6ea4da596abfdf51f617584611fc9321d5a6d1c22aff243aecdef8e7e55\n\n\nSHA512\nd849270a89d8ab52006dd92557d82e9966ecb9a8958a1e84510ef67bc085fa4f6eb7142c0b045e3aa9932e5a270981aba7f3fc147222d9277272c227e246797e\n\n\nssdeep\n384:TgSifNpZ0XMY923gMnldxdzd7tmEtP0lLnXjXZfV:TgTFp8EgMD9WXj\n\n\nEntropy\n2.672204\n\n\n\nAntivirus\n\n\n\nAhnlab\nOSX/Agent\n\n\nAntiy\nTrojan/Mac.NukeSped\n\n\nAvira\nOSX/Agent.qhhyt\n\n\nBitDefender\nTrojan.MAC.Agent.DU\n\n\nClamAV\nOsx.Malware.Agent-7335874-0\n\n\nESET\nOSX/NukeSped.B trojan\n\n\nEmsisoft\nTrojan.MAC.Agent.DU (B)\n\n\nIkarus\nTrojan.OSX.Agent\n\n\nLavasoft\nTrojan.MAC.Agent.DU\n\n\nMcAfee\nOSX/Nukesped.a\n\n\nMicrosoft Security Essentials\nTrojan:MacOS/NukeSped.A!MTB\n\n\nNANOAV\nTrojan.Mac.NukeSped.gdjieu\n\n\nQuick Heal\nMacOS.Trojan.39995.GC\n\n\nSophos\nOSX/Lazarus-E\n\n\nSymantec\nOSX.Trojan.Gen\n\n\nTrendMicro\nTrojan.BC5298BA\n\n\nTrendMicro House Call\nTrojan.BC5298BA\n\n\nZillya!\nTrojan.NukeSped.OSX.2\n\n\n\nYARA Rules\nNo matches found.\nssdeep Matches\nNo matches found.\nRelationships\n\n\n\ne352d6ea4d...\nContained_Within\n4d6078fc1ea6d3cd65c3ceabf65961689c5bc2d81f18c55b859211a60c141806\n\n\ne352d6ea4d...\nConnected_To\nbeastgoc.com\n\n\n\nDescription\nThis OSX sample was contained within Apple DMG Installer \"JMTTrader_Mac.dmg.\" CrashReporter likely functions very similarly to the Windows CrashReporter.exe program, but unlike the Windows program, it is not obfuscated. This lack of obfuscation makes it easier to determine the program\u2019s functionality in detail.\n\n\t\t\tUpon launch, the malware checks for the \u201cMaintain\u201d parameter, and will exit if the parameter is not found, likely to avoid sandbox analysis.\n\n\t\t\tCrashReporter then creates a randomly generated token (identifier) and collects the binary\u2019s version and process ID to send to the server. This data is XOR encrypted with the hard-coded key \u201cX,%`PMk--Jj8s+6=\\x02\u201d (last value is a non-printable ASCII character which is hexadecimal \\x02). While the key is different than the XOR key for the Windows sample, the first 16 bytes are the same.\n\n\t\t\tThe encrypted data is sent to the same C2 server as the Windows sample at hxxps[:]//beastgoc.com/grepmonux.php with the multipart data form separator \u201cjGzAcN6k4VsTRn9\u201d. CrashReporter also has a hard-coded user-agent string: \u201cMozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36\u201d along with other hard-coded values sent with the data including \u201ctoken,\" \u201cquery,\" and \u201cmont.jpg.\"\n\n\t\t\tIf CrashReporter receives a response with the HTTP code 200 (successful), it will invoke another function which will wait for tasking from the C2 server. When a tasking is received, the function decrypts the data with the same hardcoded XOR key and processes the tasking. Accepted tasking commands include the following:\n\n\t\t\t--Begin accepted tasking commands--\n\t\t\t\u201cexit\u201d: this command will cause CrashReporter to gracefully exit\n\t\t\t\u201cup\u201d: this command will upload a file from the C2 server to the infected host\n\t\t\t\u201cstand \u201d: this command will execute commands from the server via the shell using the popen API (the \"popen()\" function opens a process by creating a bidirectional pipe, forking, and invoking the shell)\n\t\t\t--End accepted tasking commands--\n\n\t\t\tThese possible commands from the C2 server gives the remote attacker full control over the OSX system. It is likely that the functionality of the Windows CrashReporter.exe is the same as this OSX malware, as the original AppleJeus had the same functionality on both operating systems.\nScreenshots\n \n\nFigure 7 - Screenshot of the maintain parameter verification in CrashReporter.\n\n \n\nFigure 8 - Screenshot of the hard-coded XOR key and XOR encryption.\n\n \n\nFigure 9 - Screenshot of various hard-coded values in CrashReporter.\n\n\nRelationship Summary\n\n\n\n\n07c38ca1e0...\nDownloaded_From\njmttrading.org\n\n\n07c38ca1e0...\nContains\n081d1739422bf050755e6af269a717681274821cea8becb0962d4db61869c5d6\n\n\n07c38ca1e0...\nContains\n9bf8e8ac82b8f7c3707eb12e77f94cd0e06a972658610d136993235cbfa53641\n\n\njmttrading.org\nDownloaded_To\n4d6078fc1ea6d3cd65c3ceabf65961689c5bc2d81f18c55b859211a60c141806\n\n\njmttrading.org\nDownloaded_To\n07c38ca1e0370421f74c949507fc0d21f4cfcb5866a4f9c0751aefa0d6e97542\n\n\n081d173942...\nContained_Within\n07c38ca1e0370421f74c949507fc0d21f4cfcb5866a4f9c0751aefa0d6e97542\n\n\n9bf8e8ac82...\nContained_Within\n07c38ca1e0370421f74c949507fc0d21f4cfcb5866a4f9c0751aefa0d6e97542\n\n\n9bf8e8ac82...\nConnected_To\nbeastgoc.com\n\n\nbeastgoc.com\nConnected_From\n9bf8e8ac82b8f7c3707eb12e77f94cd0e06a972658610d136993235cbfa53641\n\n\nbeastgoc.com\nConnected_From\ne352d6ea4da596abfdf51f617584611fc9321d5a6d1c22aff243aecdef8e7e55\n\n\n4d6078fc1e...\nDownloaded_From\njmttrading.org\n\n\n4d6078fc1e...\nContains\n7ea6391c11077a0f2633104193ec08617eb6321a32ac30c641f1650c35eed0ea\n\n\n4d6078fc1e...\nContains\ne352d6ea4da596abfdf51f617584611fc9321d5a6d1c22aff243aecdef8e7e55\n\n\n7ea6391c11...\nContained_Within\n4d6078fc1ea6d3cd65c3ceabf65961689c5bc2d81f18c55b859211a60c141806\n\n\ne352d6ea4d...\nContained_Within\n4d6078fc1ea6d3cd65c3ceabf65961689c5bc2d81f18c55b859211a60c141806\n\n\ne352d6ea4d...\nConnected_To\nbeastgoc.com\n\n\n\n\nConclusion\n\nSoon after October 11, 2019, the files on GitHub were updated to clean, non-malicious installers. Then on October 13, 2019, a different cyber security organization published an article detailing the OSX JMTTrader, and soon after the C2 \"beastgoc.com\" went offline. There is not a confirmed sample of the payload to analyze at this point.\n\nRecommendations\n\nCISA recommends that users and administrators consider using the following best practices to strengthen the security posture of their organization's systems. Any configuration changes should be reviewed by system owners and administrators prior to implementation to avoid unwanted impacts.\n\nMaintain up-to-date antivirus signatures and engines.\nKeep operating system patches up-to-date.\nDisable File and Printer sharing services. If these services are required, use strong passwords or Active Directory authentication.\nRestrict users' ability (permissions) to install and run unwanted software applications. Do not add users to the local administrators group unless required.\nEnforce a strong password policy and implement regular password changes.\nExercise caution when opening e-mail attachments even if the attachment is expected and the sender appears to be known.\nEnable a personal firewall on agency workstations, configured to deny unsolicited connection requests.\nDisable unnecessary services on agency workstations and servers.\nScan for and remove suspicious e-mail attachments; ensure the scanned attachment is its \"true file type\" (i.e., the extension matches the file header).\nMonitor users' web browsing habits; restrict access to sites with unfavorable content.\nExercise caution when using removable media (e.g., USB thumb drives, external drives, CDs, etc.).\nScan all software downloaded from the Internet prior to executing.\nMaintain situational awareness of the latest threats and implement appropriate Access Control Lists (ACLs).\n\nAdditional information on malware incident prevention and handling can be found in National Institute of Standards and Technology (NIST) Special Publication 800-83, \"Guide to Malware Incident Prevention & Handling for Desktops and Laptops\".\n\nContact Information\n\n\n1-888-282-0870\nCISA Central\u00a0(UNCLASS)\nCISA SIPR (SIPRNET)\nCISA IC (JWICS)\n\nCISA continuously strives to improve its products and services. You can help by answering a very short series of questions about this product at the following URL: https://us-cert.cisa.gov/forms/feedback/\n\nDocument FAQ\n\nWhat is a MIFR? A Malware Initial Findings Report (MIFR) is intended to provide organizations with malware analysis in a timely manner. In most instances this report will provide initial indicators for computer and network defense. To request additional analysis, please contact CISA and provide information regarding the level of desired analysis.\nWhat is a MAR? A Malware Analysis Report (MAR) is intended to provide organizations with more detailed malware analysis acquired via manual reverse engineering. To request additional analysis, please contact CISA and provide information regarding the level of desired analysis.\nCan I edit this document? This document is not to be edited in any way by recipients. All comments or questions related to this document should be directed to the CISA at 1-888-282-0870 or CISA Central.\nCan I submit malware to CISA? Malware samples can be submitted via three methods:\n\nWeb: https://malware.us-cert.gov\nE-Mail: submit@malware.us-cert.gov\nFTP: ftp.malware.us-cert.gov (anonymous)\n\nCISA encourages you to report any suspicious activity, including cybersecurity incidents, possible malicious code, software vulnerabilities, and phishing-related scams. Reporting forms can be found on CISA's homepage at www.cisa.gov.\n\n\n\n\n\n\n\n\nRevisions\n\nFebruary 17, 2021: Initial Version\n",
  "cves": [
    "CVE-2022-47966",
    "CVE-2017-8759",
    "CVE-2022-42475"
  ],
  "techniques": [],
  "advisory": "ar21-048b",
  "title": "MAR-10322463-2.v1 - AppleJeus: JMT Trading | CISA",
  "source": "analysis-reports",
  "id": "593c3b61d10de3545035f577bc2d07cf663685065bf2320a45ade4f526b09f37"
}