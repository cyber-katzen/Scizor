{"markdown": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n MAR\\-10365227\\-1\\.v1 \\- Impacket \\| CISA\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[Skip to main content](#main) \n\n\n\n\n\n\n\n\n\n\n\n\n![U.S. flag](/profiles/cisad8_gov/themes/custom/gesso/dist/images/us_flag_small.png)\n\n\n\n An official website of the United States government\n \n\n\n\n Here\u2019s how you know\n \n\n\n\n\n\n Here\u2019s how you know\n \n\n\n\n\n\n\n![Dot gov](/profiles/cisad8_gov/themes/custom/gesso/dist/images/icon-dot-gov.svg)\n\n\n**Official websites use .gov** \n  \n\n A\n **.gov** \n website belongs to an official government organization in the United States.\n \n\n\n\n\n\n![HTTPS](/profiles/cisad8_gov/themes/custom/gesso/dist/images/icon-https.svg)\n\n\n**Secure .gov websites use HTTPS** \n  \n\n A\n **lock** \n (\n \n\n\n Lock\n \n\n A locked padlock\n \n\n\n\n\n ) or\n **https://** \n means you\u2019ve safely connected to the .gov website. Share sensitive information only on official, secure websites.\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[Free Cyber Services](/resources-tools/resources/free-cybersecurity-services-and-tools \"Free Cyber Services\") \n[\\#protect2024](/protect2024) \n[Secure Our World](/node/18883) \n[Shields Up](/node/8056) \n[Report A Cyber Issue](/node/16591) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[![CISA Logo Americas Cyber Defense Agency](/sites/default/files/images/SVG/header_logo_tagline_update.svg)](/)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[![CISA Logo](/sites/default/files/images/SVG/mobile_logo_wordmark.svg)](/)\n\n\n\n\n\n\n\n\n\n\n Search\n \n\n\n\n\n\n\n\n\n\n Menu\n \n\n\n\n\n\n\n\n\n\n\n\n\n![America's Cyber Defense Agency](/sites/default/files/images/SVG/header_tagline_mobile_update.svg)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n Close\n \n\n\n\n\n* Topics\n \n\n\n\n[Topics](/topics) \n\n\n\n\n[Cybersecurity Best Practices](/topics/cybersecurity-best-practices)\n\n\n\n\n[Cyber Threats and Advisories](/topics/cyber-threats-and-advisories)\n\n\n\n\n[Critical Infrastructure Security and Resilience](/topics/critical-infrastructure-security-and-resilience)\n\n\n\n\n[Election Security](/topics/election-security)\n\n\n\n\n[Emergency Communications](/topics/emergency-communications)\n\n\n\n\n[Industrial Control Systems](/topics/industrial-control-systems)\n\n\n\n\n[Information and Communications Technology Supply Chain Security](/topics/information-communications-technology-supply-chain-security)\n\n\n\n\n[Partnerships and Collaboration](/topics/partnerships-and-collaboration)\n\n\n\n\n[Physical Security](/topics/physical-security)\n\n\n\n\n[Risk Management](/topics/risk-management)\n\n\n\n\n\n[How can we help?](/audiences) \n\n\n[Government](/topics/government) \n[Educational Institutions](/topics/educational-institutions) \n[Industry](/topics/industry) \n[State, Local, Tribal, and Territorial](/topics/state-local-tribal-and-territorial) \n[Individuals and Families](/topics/individuals-and-families) \n[Small and Medium Businesses](/topics/small-and-medium-businesses) \n[Find Help Locally](/audiences/find-help-locally) \n[Faith\\-Based Community](/audiences/faith-based-community) \n[Executives](/audiences/executives) \n[High\\-Risk Communities](/audiences/high-risk-communities)\n* [Spotlight](/spotlight)\n* Resources \\& Tools\n \n\n\n\n[Resources \\& Tools](/resources-tools) \n\n\n\n\n[All Resources \\& Tools](/resources-tools/all-resources-tools)\n\n\n\n\n[Services](/resources-tools/services)\n\n\n\n\n[Programs](/resources-tools/programs)\n\n\n\n\n[Resources](/resources-tools/resources)\n\n\n\n\n[Training](/resources-tools/training)\n\n\n\n\n[Groups](/resources-tools/groups)\n* News \\& Events\n \n\n\n\n[News \\& Events](/news-events) \n\n\n\n\n[News](/news-events/news)\n\n\n\n\n[Events](/news-events/events)\n\n\n\n\n[Cybersecurity Alerts \\& Advisories](/news-events/cybersecurity-advisories)\n\n\n\n\n[Directives](/news-events/directives)\n\n\n\n\n[Request a CISA Speaker](/news-events/request-speaker)\n\n\n\n\n[Congressional Testimony](/news-events/congressional-testimony)\n\n\n\n\n[CISA Conferences](/cisa-conferences)\n\n\n\n\n[CISA Live!](/cisa-live)\n* Careers\n \n\n\n\n[Careers](/careers) \n\n\n\n\n[Benefits \\& Perks](/careers/benefits-perks)\n\n\n\n\n[HireVue Applicant Reasonable Accommodations Process](/careers/hirevue-applicant-reasonable-accommodations-process)\n\n\n\n\n[Hiring](/general-recruitment-and-hiring-faqs)\n\n\n\n\n[Resume \\& Application Tips](/careers/resume-application-tips)\n\n\n\n\n[Students \\& Recent Graduates](/students-recent-graduates-employment-opportunities)\n\n\n\n\n[Veteran and Military Spouses](/careers/veteran-and-military-spouse-employment-opportunities)\n\n\n\n\n[Work @ CISA](/careers/work-cisa)\n* About\n \n\n\n\n[About](/about) \n\n\n\n\n[Culture](/about/culture)\n\n\n\n\n[Divisions \\& Offices](/about/divisions-offices)\n\n\n\n\n[Regions](/about/regions)\n\n\n\n\n[Leadership](/about/leadership)\n\n\n\n\n[Doing Business with CISA](/doing-business-cisa)\n\n\n\n\n[Site Links](/site-links)\n\n\n\n\n[Reporting Employee and Contractor Misconduct](/reporting-employee-and-contractor-misconduct)\n\n\n\n\n[CISA GitHub](/cisa-github)\n\n\n\n\n[CISA Central](/cisa-central)\n\n\n\n\n[2023 Year In Review](/about/2023YIR)\n\n\n\n\n[Contact Us](/about/contact-us)\n\n\n\n\n\n\n\n\n\n[Free Cyber Services](/resources-tools/resources/free-cybersecurity-services-and-tools \"Free Cyber Services\") \n[\\#protect2024](/protect2024) \n[Secure Our World](/node/18883) \n[Shields Up](/node/8056) \n[Report A Cyber Issue](/node/16591) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n Breadcrumb\n \n1. [Home](/)\n2. [News \\& Events](/news-events)\n3. [Cybersecurity Advisories](/news-events/cybersecurity-advisories)\n4. [Analysis Report](/news-events/cybersecurity-advisories?f%5B0%5D=advisory_type%3A65)\n\n\n\n\n\n\n\n\n Share:\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n Analysis Report\n \nMAR\\-10365227\\-1\\.v1 \\- Impacket\n================================\n\n\n\n\n\n Release Date\n \n\n\n October 05, 2022\n \n\n\n\n\n Alert Code\n \n\n AR22\\-277A\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n### Notification\n\n\n\n This report is provided \"as is\" for informational purposes only. The Department of Homeland Security (DHS) does not provide any warranties of any kind regarding any information contained herein. The DHS does not endorse any commercial product or service referenced in this bulletin or otherwise.\n \n\n\n\n This document is marked TLP:CLEAR\\-\\-Disclosure is not limited. Sources may use TLP:CLEAR when information carries minimal or no foreseeable risk of misuse, in accordance with applicable rules and procedures for public release. Subject to standard copyright rules, TLP:CLEAR information may be distributed without restriction. For more information on the Traffic Light Protocol (TLP), see\n [http://www.cisa.gov/tlp](https://urldefense.com/v3/__http://www.cisa.gov/tlp__;!!JNdenfMLDA!Mx0RCF0Hop6tm9kwIMiXdkmBCaTXYKJHcrReiDEdEInmINpAOoXQY-9-LNpSGmAhiN5N47833erWOejZ%24) \n .\n \n\n\n### Summary\n\n\n##### Description\n\n\n\n This Malware Analysis Report (MAR) is the result of analytic efforts by the Cybersecurity and Infrastructure Security Agency (CISA) to provide detailed analysis of files associated with CovalentStealer malware, which is designed to identify and exfiltrate files to a remote server. CISA obtained CovalentStealer malware samples during an on\\-site incident response engagement at a Defense Industrial Base (DIB) Sector organization compromised by advanced persistent threat (APT) actors.\n   \n\n  \n\n  \n\n  \n\n CISA analyzed 19 files associated with CovalentStealer malware. The files are designed to identify file shares on a system, categorize the files, and upload the files to a remote server. The files include two configurations that specifically target the victim's documents using predetermined files paths and user credentials. The two remaining files were identified as open source utilities the threat actor utilized on the victim's system. One file is a publicly available utility used to compress and archive other files. The second file is an open source utility used to extract the Master File Table (MFT) from a volume and can be used for file enumeration.\n   \n\n  \n\n CISA is distributing this MAR to enable network defense and reduce exposure to APT sponsored malicious cyber activity.\n   \n\n  \n\n  \n\n  \n\n For more information on the confirmed compromise, see Joint CSA:\n [Impacket and Exfiltration Tool Used to Steal Sensitive Information from Defense Industrial Base Organization](/news-events/cybersecurity-advisories/aa22-277a \"Impacket and Exfiltration Tool Used to Steal Sensitive Information from Defense Industrial Base Organization\") \n .\n \n\n\n\n Download the PDF version of this report:\n \n\n\n\n\n[MAR\\-10365227\\.r1\\.v1 \\- Impacket](/sites/default/files/2023-06/mar-10365227.r1.v1.clear_.pdf) \n\n (PDF, 2\\.34 MB\n )\n \n\n\n\n For a downloadable copy of IOCs, see:\n \n\n\n\n\n[MAR\\-10365227\\.r1\\.v1 STIX XML](/sites/default/files/2023-06/mar-10365227.r1.v1.clear_stix.xml) \n\n (XML, 1\\.42 MB\n )\n \n\n\n##### Submitted Files (19\\)\n\n\n\n 09605981a072c604e6ef9ad2dd7d2a78b48b07ee3339589bfcf0a466a9190904 (msexch.log)\n \n\n\n\n 0b01f392fa030be1ddd549fb79cf280d2a2c745578a56fedd4cb5e9438ae72cb (ntstatus.bat)\n \n\n\n\n 0b7d15968d44710b3e7f153c04b5038d03900a6685643bc8efe688c4d5a5deab (ntstatus\\_temp.log)\n \n\n\n\n 157a0ffd18e05bfd90a4ec108e5458cbde01015e3407b3964732c9d4ceb71656 (ntstatus.exe)\n \n\n\n\n 25afc6741abfa27f5b50844331772466182ebe3f74bc84f911314d1a68c62cb2 (mqsvn.ini)\n \n\n\n\n 30191b3badf3cdbc65d0ffeb68e0f26cef10a41037351b0f562ab52fce7432cc (msexch.exe)\n \n\n\n\n 3585c3136686d7d48e53c21be61bb2908d131cf81b826acf578b67bb9d8e9350 (mqsvn.exe)\n \n\n\n\n 517faa4a0666ec68842f256f08d987935b6ce9ef64e33f027e084e8f45b9366d (onedrv.dat)\n \n\n\n\n 52765525103f5b3b07d0882cc8ee4bb8e279ad5d451e1ed07cae3b98565cce29 (msexch.ini)\n \n\n\n\n 5ba0d0bfda372c1f6aa382a70f4ab8427ec998b680510e208fdf878cfda9afe3 (ntstatus.log)\n \n\n\n\n 603e75db59285734cfb5a469e984c4e359e660ccb7836ff9c209aec36931bc2b (mqsvn.log)\n \n\n\n\n 6a0cd866c849e62f9ccc26575d8794c2e0b14722387742b965d4358e1e0e8b3c (msexch\\_temp.log)\n \n\n\n\n 84164e1e8074c2565d3cd178babd93694ce54811641a77ffdc8d1084dd468afb (onedrv.exe)\n \n\n\n\n 91a8b31c126a021f5c156742016acdcca7d83eac4b583bae5d4fd0a85a96813b (onedrv.ini)\n \n\n\n\n b03ac5eaf2131060ee381e5e46ebc705d8d617a90cc61fa4918174545b4fbaa6 (ntstatus.bin)\n \n\n\n\n bfa7adeda4597b70bf74a9f2032df2f87e07f2dbb46e85cb7c091b83161d6b0a (vmware.exe)\n \n\n\n\n da267c72f58ec487761de99d0f3bcfd87771a36afc06716053960633a74139df (ntstatus.ini)\n \n\n\n\n e03a2c8a6e81cf62ba7401c598ea1d4635b08bbf9c2fec080b536dde29e6392f (msexch.bin)\n \n\n\n\n fae38156e9ce12368c846836b87861f4f12e14698cb65f14545205fa56d8c496 (vmware.ps1\\)\n \n\n\n##### Additional Files (2\\)\n\n\n\n 1352dbb093a337eb8db9d0135adbe0542bb7e7163616e4f8962919becab171da (result.exe)\n \n\n\n\n d221ca9c519ae04c7724baca8d36c2ce77454e0f9aa0f119ecfa9246973a92f8 (Uploader.exe)\n \n\n\n### Findings\n\n\n#### 84164e1e8074c2565d3cd178babd93694ce54811641a77ffdc8d1084dd468afb\n\n\n##### Tags\n\n\n\n information\\-stealeruploader\n \n\n\n##### Details\n\n\n\n\n\n\n\n\n| Name | onedrv.exe |\n| --- | --- |\n| Size | 791040 bytes |\n| Type | PE32\\+ executable (GUI) x86\\-64 Mono/.Net assembly, for MS Windows |\n| MD5 | 806998079c80f53afae3b0366bac1479 |\n| SHA1 | 9f7378da13ca1da75e12e536c8e2dc4cd2236489 |\n| SHA256 | 84164e1e8074c2565d3cd178babd93694ce54811641a77ffdc8d1084dd468afb |\n| SHA512 | 3d592a606426386fa5f1224c7d3f82f31f5a4d23f9c67422d774e080725bc5698e7786407863dd50d7172e814871bdfabbbe6dce9545733d995ddd892249ba22 |\n| ssdeep | 12288:kyIzsYTd\\+LXxWtmtOdnPR3xTexehCkijOcXF8qSH8gdkMdCNGCWJOWCmP8pSMmVN:ky4sO\\+9ymtsnPRBnlivXPSHxkMNHCNp |\n| Entropy | 7\\.996795 |\n\n\n##### Antivirus\n\n\n\n\n| Avira | HEUR/AGEN.1221987 |\n| --- | --- |\n\n\n##### YARA Rules\n\n\n* rule CISA\\_10365227\\_03 : ClientUploader\n   \n\n  \n\n {\n   \n\n  \n\n meta:\n   \n\n  \n\n Author \\= \"CISA Code \\& Media Analysis\"\n   \n\n  \n\n Incident \\= \"10365227\"\n   \n\n  \n\n Date \\= \"2021\\-12\\-23\"\n   \n\n  \n\n Last\\_Modified \\= \"20211224\\_1200\"\n   \n\n  \n\n Actor \\= \"n/a\"\n   \n\n  \n\n Category \\= \"n/a\"\n   \n\n  \n\n Family \\= \"n/a\"\n   \n\n  \n\n Description \\= \"Detects ClientUploader\\_onedrv\"\n   \n\n  \n\n MD5\\_1 \\= \"806998079c80f53afae3b0366bac1479\"\n   \n\n  \n\n SHA256\\_1 \\= \"84164e1e8074c2565d3cd178babd93694ce54811641a77ffdc8d1084dd468afb\"\n   \n\n  \n\n strings:\n   \n\n  \n\n $s1 \\= \"Decoder2\"\n   \n\n  \n\n $s2 \\= \"ClientUploader\"\n   \n\n  \n\n $s3 \\= \"AppDomain\"\n   \n\n  \n\n $s4 \\= { 5F 49 73 52 65 70 47 ?? 44 65 63 6F 64 65 72 73 }\n   \n\n  \n\n $s5 \\= \"LzmaDecoder\"\n   \n\n  \n\n $s6 \\= \"$ee1b3f3b\\-b13c\\-432e\\-a461\\-e52d273896a7\"\n   \n\n  \n\n condition:\n   \n\n  \n\n uint16(0\\) \\=\\= 0x5a4d and all of them\n   \n\n  \n\n }\n\n\n##### ssdeep Matches\n\n\n\n No matches found.\n \n\n\n##### PE Metadata\n\n\n\n\n| Compile Date | 2021\\-09\\-10 17:59:57\\-04:00 |\n| --- | --- |\n| Internal Name | ClientUploader.exe |\n| Original Filename | ClientUploader.exe |\n| Product Version | 1\\.0\\.0\\.0 |\n\n\n##### PE Sections\n\n\n\n\n| MD5 | Name | Raw Size | Entropy |\n| --- | --- | --- | --- |\n| 6b81a95076cc3d6f6dff7d32afa3b7e2 | header | 512 | 2\\.297287 |\n| 2d3081eb51c7c393e0a670c8bfcf7c24 | .text | 788992 | 7\\.998126 |\n| 5569bca67ba8c174f30990c07b585dbe | .rsrc | 1536 | 3\\.966404 |\n\n\n##### Packers/Compilers/Cryptors\n\n\n\n\n| Microsoft Visual C\\+\\+ v6\\.0 |\n| --- |\n\n\n##### Relationships\n\n\n\n\n| 84164e1e80\\... | Used | 91a8b31c126a021f5c156742016acdcca7d83eac4b583bae5d4fd0a85a96813b |\n| --- | --- | --- |\n| 84164e1e80\\... | Created | 517faa4a0666ec68842f256f08d987935b6ce9ef64e33f027e084e8f45b9366d |\n\n\n##### Description\n\n\n\n This file has been identified as CovalentStealer malware. The actor utilized code from several open source projects, including ClientUploader. The retained the internal name \"ClientUploader.exe\". The program is a file management system that is capable of uploading files to the Internet.\n   \n\n  \n\n  \n\n  \n\n When the program is executed, it will spawn an instance of itself in memory called \u2018koi\u2019. This instance accesses several embedded resources that it uses to locate and manipulate files on the system. The following is a list of the primary embedded resources:\n   \n\n  \n\n  \n\n  \n\n \\-\\-\\-Begin Embedded Resources\\-\\-\\-\n   \n\n  \n\n BaseNetwork \u2013 This resource is used to create sessions and establish connections to the server.\n   \n\n  \n\n FileContainer \u2013 This resource is used to access file shares via Server Message Block (SMB). It is also used to enumerate files and directories and sort them by Message Digest 5 (MD5\\) hash. It maintains Internet Protocol (IP) addresses, logins, domain names, passwords, and paths for shares on the network.\n   \n\n  \n\n IFileWorker \u2013 This resource is a file management program that is capable of moving and categorizing files. It contains compression libraries for Gzip and Brotli, as well as a file blacklist.\n   \n\n  \n\n Encryption \u2013 This resource handles file encryption, decryption and secure communications. It decrypts the configuration file, onedrv.ini (91a8b31c126a021f5c156742016acdcca7d83eac4b583bae5d4fd0a85a96813b) using the hard\\-coded Advanced Encryption Standard (AES) key \u2018M(xcHq88q\\[s\\=pc7^\\+u\\_Gb\\_}JC%QQwP:h\u2019 and an Initialization Vector (IV) using the first half of the AES key (See Figure 1\\).\n   \n\n  \n\n OneDriveClient \u2013 This resource targets a user\u2019s OneDrive account and creates an upload session to send the files to a remote server. It is able to access files in the victim\u2019s OneDrive by unique ID (See Figure 2\\). Files are uploaded to a Microsoft Azure client identified in the configuration file onedrv.ini by client ID.\n   \n\n  \n\n \\-\\-\\-End Embedded Resources\\-\\-\\-\n   \n\n  \n\n  \n\n  \n\n The program runs a debugging routine and will output debugging data to a file with the same name as the malware and with the .dat extension, e.g. onedrv.dat (517faa4a0666ec68842f256f08d987935b6ce9ef64e33f027e084e8f45b9366d).\n \n\n\n##### Screenshots\n\n\n\n![]()\n\n\n\n\n**Figure 1 \\-** \n This is the AES encryption routine. The routine uses the hard\\-coded string 'M(xcHq88q\\[s\\=pc7^\\+u\\_Gb\\_}JC%QQwP:h' as the AES key and the first half of the key as the IV.\n \n\n\n\n![]()\n\n\n\n\n**Figure 2 \\-** \n This is the configuration for the upload session. This module is able to access items in the user's OneDrive by unique ID.\n \n\n\n#### 517faa4a0666ec68842f256f08d987935b6ce9ef64e33f027e084e8f45b9366d\n\n\n##### Details\n\n\n\n\n| Name | onedrv.dat |\n| --- | --- |\n| Size | 267224 bytes |\n| Type | ASCII text, with CRLF line terminators |\n| MD5 | dc0414dec9a84d6342c5d5fc77bbdbed |\n| SHA1 | 1dad19123564d7d02c3259ab4b06c90181dc4b37 |\n| SHA256 | 517faa4a0666ec68842f256f08d987935b6ce9ef64e33f027e084e8f45b9366d |\n| SHA512 | 1d262f06881516ca2274d8fb18bcb4bcf9c0b3229370b0609f3803f356a676b1149e22da6a33957862d8470a8531d9719af07bd75379df2ca29e373604fb32cb |\n| ssdeep | 3072:ERNwmyBvqZKFkVfhJnEFbDcazPQLTnVy8JR6Ylb3uQ0PQNIfFrCGdDlBXZuZpZfB:bWrjgA |\n| Entropy | 5\\.360335 |\n\n\n##### Antivirus\n\n\n\n No matches found.\n \n\n\n##### YARA Rules\n\n\n\n No matches found.\n \n\n\n##### ssdeep Matches\n\n\n\n No matches found.\n \n\n\n##### Relationships\n\n\n\n\n| 517faa4a06\\... | Created\\_By | 84164e1e8074c2565d3cd178babd93694ce54811641a77ffdc8d1084dd468afb |\n| --- | --- | --- |\n\n\n##### Description\n\n\n\n This file contains output from the debugging routine in onedrv.exe (84164e1e8074c2565d3cd178babd93694ce54811641a77ffdc8d1084dd468afb).\n \n\n\n#### 91a8b31c126a021f5c156742016acdcca7d83eac4b583bae5d4fd0a85a96813b\n\n\n##### Tags\n\n\n\n information\\-stealer\n \n\n\n##### Details\n\n\n\n\n| Name | onedrv.ini |\n| --- | --- |\n| Size | 1088 bytes |\n| Type | data |\n| MD5 | a0ab6d3e643d4dd51ee6ae9079b175a4 |\n| SHA1 | f179fcc4c41ca5cb443551f88a1074d5176d33f4 |\n| SHA256 | 91a8b31c126a021f5c156742016acdcca7d83eac4b583bae5d4fd0a85a96813b |\n| SHA512 | 237baa401e0c52ca816cebafa5abf088e9a757f4da452e97210a1fe8eda8c0adc67aa19cacd662dcc98f5bd355d679fb096ff4e97cd54e16c199c66946d65a5e |\n| ssdeep | 24:olkc5V0yhsd/AFvaPo3b6EJ2ITY9UI62JPld5oKLeWb6l\\+vTI:olkq0yK/Ata5EJ2I5nOTvTI |\n| Entropy | 7\\.824751 |\n\n\n##### Antivirus\n\n\n\n No matches found.\n \n\n\n##### YARA Rules\n\n\n\n No matches found.\n \n\n\n##### ssdeep Matches\n\n\n\n No matches found.\n \n\n\n##### Relationships\n\n\n\n\n| 91a8b31c12\\... | Used\\_By | 84164e1e8074c2565d3cd178babd93694ce54811641a77ffdc8d1084dd468afb |\n| --- | --- | --- |\n\n\n##### Description\n\n\n\n This artifact is the encrypted configuration file for the OneDriveClient module contained in the file ondrv.exe (84164e1e8074c2565d3cd178babd93694ce54811641a77ffdc8d1084dd468afb). The data is decrypted using the hard\\-coded key \u2018M(xcHq88q\\[s\\=pc7^\\+u\\_Gb\\_}JC%QQwP:h\u2019.\n   \n\n  \n\n  \n\n  \n\n The file contains paths to two archives targeted by the attacker. The file includes the IP address of the server, stolen credential information, and a key to encrypt the uploaded data. NOTE: The decrypted configuration contains confidential client information and therefore is not included in this report.\n   \n\n  \n\n  \n\n  \n\n In addition, the data contains a refresh token for an OAuth client for Microsoft Azure with the Client ID of \u20187a3b4b84\\-ed28\\-4f18\\-b30d\\-218788c74a5f\u2019. Speed and compression information as well as times that the OneDrive share can be accessed are also included in the configuration.\n \n\n\n#### 157a0ffd18e05bfd90a4ec108e5458cbde01015e3407b3964732c9d4ceb71656\n\n\n##### Tags\n\n\n\n information\\-stealerobfuscatedtrojanuploader\n \n\n\n##### Details\n\n\n\n\n| Name | ntstatus.exe |\n| --- | --- |\n| Size | 6656 bytes |\n| Type | PE32\\+ executable (GUI) x86\\-64 Mono/.Net assembly, for MS Windows |\n| MD5 | c435d133b45783cce91a5d4e4fbe3f52 |\n| SHA1 | 9ddfa0669358bc19a166a41fd93cec5a3c88205d |\n| SHA256 | 157a0ffd18e05bfd90a4ec108e5458cbde01015e3407b3964732c9d4ceb71656 |\n| SHA512 | e4d43dc23ff78f55bc857608fa33691eb7fb3e132332660b46460e7e7512104bc22484489d3d0fbd136270de9f7060641505ad2854cefd50b31ca6bb31b2ae18 |\n| ssdeep | 96:nPbVkB7jiZStZC\\+01RPmaUrfzvDwiFMCnd\\+taflUTsqzNt:nPbqFiwW\\+g5maMzDwQMCQwmT |\n| Entropy | 4\\.921630 |\n\n\n##### Antivirus\n\n\n\n\n| Adaware | Gen:Variant.Tedy.82790 |\n| --- | --- |\n| Bitdefender | Gen:Variant.Tedy.82790 |\n| ESET | a variant of MSIL/Agent.VOV trojan |\n| McAfee | Generic trojan.ri |\n| NETGATE | Malware.Generic |\n| Symantec | Process timed out |\n\n\n##### YARA Rules\n\n\n* rule CISA\\_10365227\\_01 : APPSTORAGE\n   \n\n  \n\n {\n   \n\n  \n\n meta:\n   \n\n  \n\n Author \\= \"CISA Code \\& Media Analysis\"\n   \n\n  \n\n Incident \\= \"10365227\"\n   \n\n  \n\n Date \\= \"2021\\-12\\-23\"\n   \n\n  \n\n Last\\_Modified \\= \"20211224\\_1200\"\n   \n\n  \n\n Actor \\= \"n/a\"\n   \n\n  \n\n Category \\= \"n/a\"\n   \n\n  \n\n Family \\= \"APPSTORAGE\"\n   \n\n  \n\n Description \\= \"Detects AppStorage\\_ntstatus\\_msexch samples\"\n   \n\n  \n\n MD5\\_1 \\= \"c435d133b45783cce91a5d4e4fbe3f52\"\n   \n\n  \n\n SHA256\\_1 \\= \"157a0ffd18e05bfd90a4ec108e5458cbde01015e3407b3964732c9d4ceb71656\"\n   \n\n  \n\n MD5\\_2 \\= \"baa634fdd2b34956524b5519ee97b8a8\"\n   \n\n  \n\n SHA256\\_2 \\= \"30191b3badf3cdbc65d0ffeb68e0f26cef10a41037351b0f562ab52fce7432cc\"\n   \n\n  \n\n strings:\n   \n\n  \n\n $s1 \\= \"026B924DD52F8BE4A3FEE8575DC\"\n   \n\n  \n\n $s2 \\= \"GetHDDId\"\n   \n\n  \n\n $s3 \\= \"AppStorage\"\n   \n\n  \n\n $s4 \\= \"AppDomain\"\n   \n\n  \n\n $s5 \\= \"$1e3e5580\\-d264\\-4c30\\-89c9\\-8933c948582c\"\n   \n\n  \n\n $s6 \\= \"hrjio2mfsdlf235d\" wide\n   \n\n  \n\n condition:\n   \n\n  \n\n uint16(0\\) \\=\\= 0x5a4d and all of them\n   \n\n  \n\n }\n\n\n##### ssdeep Matches\n\n\n\n No matches found.\n \n\n\n##### PE Metadata\n\n\n\n\n| Compile Date | 2101\\-07\\-23 04:43:10\\-04:00 |\n| --- | --- |\n| Internal Name | AppStorage.exe |\n| Original Filename | AppStorage.exe |\n| Product Version | 1\\.0\\.0\\.0 |\n\n\n##### PE Sections\n\n\n\n\n| MD5 | Name | Raw Size | Entropy |\n| --- | --- | --- | --- |\n| 3994632889cebeff28c360da22c696f3 | header | 512 | 2\\.255013 |\n| bec2cac9d419ae07e526a03c4a94cb64 | .text | 4608 | 5\\.307382 |\n| 0551c676439e5d812cb2bab3f2060c1b | .rsrc | 1536 | 3\\.934855 |\n\n\n##### Packers/Compilers/Cryptors\n\n\n\n\n| Microsoft Visual C\\+\\+ v6\\.0 |\n| --- |\n\n\n##### Relationships\n\n\n\n\n| 157a0ffd18\\... | Related\\_To | b03ac5eaf2131060ee381e5e46ebc705d8d617a90cc61fa4918174545b4fbaa6 |\n| --- | --- | --- |\n| 157a0ffd18\\... | Dropped | 1352dbb093a337eb8db9d0135adbe0542bb7e7163616e4f8962919becab171da |\n| 157a0ffd18\\... | Related\\_To | 0b01f392fa030be1ddd549fb79cf280d2a2c745578a56fedd4cb5e9438ae72cb |\n\n\n##### Description\n\n\n\n This artifact is an obfuscated .NET executable that is used to decode a variant of the CovalentStealer malware. When executed, the program will check the present name of the program and then look in the current directory for a file with the same name and a .bin extension, e.g. ntstatus.bin (b03ac5eaf2131060ee381e5e46ebc705d8d617a90cc61fa4918174545b4fbaa6\\).\n   \n\n  \n\n  \n\n  \n\n The program seeks to generate a key called \u2018HDDId\u2019 to decode ntstatus.bin. The embedded string \u2018hrjio2mfsdlf235d\u2019 is used to decode instructions within the program to generate the key (See Figure 3\\). The first command identifies the machineName of the system. The second command reads the Windows Management Instrumentation (WMI) namespace root/cimv2 to locate the volumeserialnumber of the current drive. Both variables are then modified using an exclusive OR (XOR) routine and the same string above is used to generate the key (See Figure 4\\). The first part of the key is generated from the volumeserialnumber, and during analysis resolved to \u201876D55BD2\u2019. The machineName resolved to \u2018F3124EDD\u2019 creating the key \u201876D55BD2F3124EDD\u2019 (See Figure 5\\). Note: The key is an example.\n   \n\n  \n\n  \n\n  \n\n To generate the correct key the machineName and volumeserialnumber must match the victim\u2019s system, otherwise it fails to decode ntstatus.bin and the program will terminate. This method is used to thwart independent analysis of the file, ntstatus.bin.\n \n\n\n##### Screenshots\n\n\n\n![]()\n\n\n\n\n**Figure 3 \\-** \n Screenshot of the XOR routine using the string 'hrjio2mfsdlf235d'.\n \n\n\n\n![]()\n\n\n\n\n**Figure 4 \\-** \n The program collects the machineName and volumeserialnumber to generate the HDDId key.\n \n\n\n\n![]()\n\n\n\n\n**Figure 5 \\-** \n This is the generated HDDId key used to decode ntstatus.bin\n \n\n\n#### b03ac5eaf2131060ee381e5e46ebc705d8d617a90cc61fa4918174545b4fbaa6\n\n\n##### Tags\n\n\n\n information\\-stealerobfuscateduploader\n \n\n\n##### Details\n\n\n\n\n| Name | ntstatus.bin |\n| --- | --- |\n| Size | 1834496 bytes |\n| Type | data |\n| MD5 | d5a7b90177cdf81c2e1de40dc834d764 |\n| SHA1 | d5dee0a05101cf9ed3c3ca76cf01f518c3ef922c |\n| SHA256 | b03ac5eaf2131060ee381e5e46ebc705d8d617a90cc61fa4918174545b4fbaa6 |\n| SHA512 | cfccd6701a69047c7de246601d2cd41cdc87d314bdcf070778938dad22e3bf5911d3beca0d75379dabdda1ad3c229c3bec329b840f5e4828c8bab41c1cdff159 |\n| ssdeep | 24576:vsGNL\\+Kei7j3iTeG0fYHTlyAUoFwZJuaEh68w8To7FgunNZG10guctbAgYMEc\\+1B:DNb7dEh68E72O4hEVF |\n| Entropy | 6\\.681125 |\n\n\n##### Antivirus\n\n\n\n\n| Symantec | Unavailable (production) |\n| --- | --- |\n\n\n##### YARA Rules\n\n\n\n No matches found.\n \n\n\n##### ssdeep Matches\n\n\n\n No matches found.\n \n\n\n##### Relationships\n\n\n\n\n| b03ac5eaf2\\... | Related\\_To | 157a0ffd18e05bfd90a4ec108e5458cbde01015e3407b3964732c9d4ceb71656 |\n| --- | --- | --- |\n| b03ac5eaf2\\... | Contains | 1352dbb093a337eb8db9d0135adbe0542bb7e7163616e4f8962919becab171da |\n\n\n##### Description\n\n\n\n This is an obfuscated version of CovalentStealer malware. The file is decoded by ntstatus.exe (157a0ffd18e05bfd90a4ec108e5458cbde01015e3407b3964732c9d4ceb71656\\) using the key '76D55BD2F3124EDD'. The decoded file is called result.exe (1352dbb093a337eb8db9d0135adbe0542bb7e7163616e4f8962919becab171da) and is detailed in this report.\n \n\n\n#### 1352dbb093a337eb8db9d0135adbe0542bb7e7163616e4f8962919becab171da\n\n\n##### Tags\n\n\n\n information\\-stealeruploader\n \n\n\n##### Details\n\n\n\n\n| Name | result.exe |\n| --- | --- |\n| Size | 1834496 bytes |\n| Type | PE32\\+ executable (console) x86\\-64 Mono/.Net assembly, for MS Windows |\n| MD5 | 27a0ba098b8403570c7b1e0863c2d6c5 |\n| SHA1 | 22cb98b9548ffd1010b2799a791ef42b8943f3c9 |\n| SHA256 | 1352dbb093a337eb8db9d0135adbe0542bb7e7163616e4f8962919becab171da |\n| SHA512 | 7eb71e11947a762d8a9a396de21d6b704f8021acc0ddfc7a959897569d429f3347c9bd1c3206703375d09a81defd3d1f9bba0ea137157d8546b862ded030c4c2 |\n| ssdeep | 49152:F2f6rfgMSneK065JlYaDmxZF5ax00MSMoOKiYyBg9FzfJNFL5QPWES2s1B\\+dBrSY:F2f6rfgMSneK065JlYaDmxZF5ax00MSt |\n| Entropy | 5\\.579937 |\n\n\n##### Antivirus\n\n\n\n No matches found.\n \n\n\n##### YARA Rules\n\n\n\n No matches found.\n \n\n\n##### ssdeep Matches\n\n\n\n\n| 97 | d221ca9c519ae04c7724baca8d36c2ce77454e0f9aa0f119ecfa9246973a92f8 |\n| --- | --- |\n\n\n##### PE Metadata\n\n\n\n\n| Compile Date | 2021\\-10\\-19 20:19:25\\-04:00 |\n| --- | --- |\n| Import Hash | f34d5f2d4577ed6d9ceec516c1f5a744 |\n| Internal Name | ClientUploader.exe |\n| Original Filename | ClientUploader.exe |\n| Product Version | 1\\.0\\.0\\.0 |\n\n\n##### PE Sections\n\n\n\n\n| MD5 | Name | Raw Size | Entropy |\n| --- | --- | --- | --- |\n| 8a2ac318e59571d7c72221d67498bd5f | header | 512 | 2\\.722440 |\n| be70af56c305ef153e32ecc2430d4d8a | .text | 1831936 | 5\\.581972 |\n| 5488f249cf62feed84546911d54f96f2 | .rsrc | 1536 | 3\\.971470 |\n| f80d2b416a07808182a35c49f6967d8f | .reloc | 512 | 0\\.101910 |\n\n\n##### Relationships\n\n\n\n\n| 1352dbb093\\... | Created | 5ba0d0bfda372c1f6aa382a70f4ab8427ec998b680510e208fdf878cfda9afe3 |\n| --- | --- | --- |\n| 1352dbb093\\... | Created | 0b7d15968d44710b3e7f153c04b5038d03900a6685643bc8efe688c4d5a5deab |\n| 1352dbb093\\... | Used | da267c72f58ec487761de99d0f3bcfd87771a36afc06716053960633a74139df |\n| 1352dbb093\\... | Dropped\\_By | 157a0ffd18e05bfd90a4ec108e5458cbde01015e3407b3964732c9d4ceb71656 |\n| 1352dbb093\\... | Created | 0b01f392fa030be1ddd549fb79cf280d2a2c745578a56fedd4cb5e9438ae72cb |\n| 1352dbb093\\... | Contained\\_Within | b03ac5eaf2131060ee381e5e46ebc705d8d617a90cc61fa4918174545b4fbaa6 |\n\n\n##### Description\n\n\n\n This artifact has been identified as CovalentStealer malware. When the program is executed it will decrypt and read the configuration file ntstatus.ini (da267c72f58ec487761de99d0f3bcfd87771a36afc06716053960633a74139df) in the current directory. It uses the hard\\-coded AES\\-256\\-CBC key \u2018M(xcHq88q\\[s\\=pc7^\\+u\\_Gb\\_}JC%QQwP:h\u2019 to decrypt the file. The configuration file will include a path to the directory containing the targeted files, compression parameters, and connection parameters for connecting to a system on the Internet to upload data.\n   \n\n  \n\n  \n\n  \n\n The malware has several primary modules. The module IFileWorker contains the following functions:\n   \n\n  \n\n  \n\n  \n\n \\-\\-\\-Begin IFileWorker Functions\\-\\-\\-\n   \n\n  \n\n Brotli. \u2013 This function contains the Brotli compression library to compress and decompress files.\n   \n\n  \n\n ContainersFilesWorker. \u2013 This function keeps track of uploaded files. It compares the files to a hash list for the file and path before uploading and also compares them to a whitelist and a blacklist by file extension. It also logs the status of each file in the upload process.\n   \n\n  \n\n Extension. \u2013 This function checks the file extension to determine if the file needs to be compressed.\n   \n\n  \n\n File Archive. \u2013 This function verifies the size of the file and disposition before compressing the file.\n   \n\n  \n\n FileBlock. \u2013 This function converts the file data into a byte stream.\n   \n\n  \n\n FileContainers. \u2013 This function segregates files by file type based on the extension.\n   \n\n  \n\n GZip. \u2013 This function contains the Gzip compression library to compress and decompress files.\n   \n\n  \n\n Logger. \u2013 This function logs debug status messages and telemetry data from other functions and outputs them to a file using the base name and the .dat extension, e.g. ntstatus.dat (See Figure 6\\).\n   \n\n  \n\n WhiteAndBlackList. \u2013 This function maintains a list of files by name and a list of files by extension that match the whitelist or blacklist from the configuration file.\n   \n\n  \n\n \\-\\-\\-End IFileWorker Functions\\-\\-\\-\n   \n\n  \n\n  \n\n  \n\n Note: The actor utilized this code from the open source project IFileWorker.\n   \n\n  \n\n  \n\n  \n\n The module OneDriveClient contains the following functions:\n   \n\n  \n\n  \n\n  \n\n \\-\\-\\-Begin OneDriveClient Functions\\-\\-\\-\n   \n\n  \n\n OneDrive. \u2013 This function uploads files to a Uniform Resource Locator (URL). It configures speed, buffer size, time, etc. based on the parameters in the configuration file, ntstatus.ini. Then, it reports the status of each file to the IFileWorker.Logger function. The following are examples of the OneDrive commands:\n   \n\n  \n\n  \n\n  \n\n \\-\\-\\-Begin OneDrive Commands\\-\\-\\-\n   \n\n  \n\n OneDriveClient.OneDriveChannel\\+\\<Send\\>\n   \n\n  \n\n OneDriveClient.OneDrive\\+\\<GetAccessToken\\>\n   \n\n  \n\n OneDriveClient.OneDrive\\+\\<UploadData\\>\n   \n\n  \n\n OneDriveClient.OneDrive\\+\\<UploadFile\\>\n   \n\n  \n\n OneDriveClient.OneDrive\\+\\<UploadLargeFile\\>\n   \n\n  \n\n OneDriveClient.OneDrive\\+\\<GetUploadUrl\\>\n   \n\n  \n\n OneDriveClient.OneDrive\\+\\<UploadPartWithStopwatch\\>\n   \n\n  \n\n OneDriveClient.OneDrive\\+\\<UploadPart\\>\n   \n\n  \n\n OneDriveClient.OneDrive\\+\\<UploadSmallFileWithStopWatch\\>\n   \n\n  \n\n OneDriveClient.OneDrive\\+\\<UploadSmallFile\\>\n   \n\n  \n\n \\-\\-\\-End OneDriveClient Functions\\-\\-\\-\n   \n\n  \n\n  \n\n  \n\n OneDriveChannel. \u2013 This function establishes the connection to the server.\n   \n\n  \n\n OneDriveChannelSettings. \u2013 This function reads the ClientID, Redirect, Refresh Token, and Scopes from the configuration file, ntstatus.ini to negotiate the connection to the client.\n   \n\n  \n\n UploadedFiles. \u2013 This function logs the hash and the file path of the uploaded files and records the information into two files where ntstatus.log contains a list of file hashes and ntstatus\\_temp.log contains a list of file path hashes (See Figure 7\\).\n   \n\n  \n\n \\-\\-\\-End OneDriveClient Functions\\-\\-\\-\n   \n\n  \n\n  \n\n  \n\n The program also contains supporting libraries for the SMB protocol versions 2 and 3\\. The libraries have the capacity to maintain a list of IP addresses, logins, domainNames, passwords, and SMB clients that can be used to attempt to search for and log into SMB file stores. Files can be searched by file path, file status (e.g., open or closed), and file attributes (e.g. shared, read only, etc.).\n \n\n\n##### Screenshots\n\n\n\n![]()\n\n\n\n\n**Figure 6 \\-** \n The IFileWorker.Logger function is used to generate the log file for debug and telemetry data.\n \n\n\n\n![]()\n\n\n\n\n**Figure 7 \\-** \n The OneDriveClient.UploadedFiles function records MD5 hashes of uploaded files into the file ntstatus.log and MD5 hashes of the file paths into the file ntstatus\\_temp.log.\n \n\n\n#### da267c72f58ec487761de99d0f3bcfd87771a36afc06716053960633a74139df\n\n\n##### Tags\n\n\n\n information\\-stealeruploader\n \n\n\n##### Details\n\n\n\n\n| Name | ntstatus.ini |\n| --- | --- |\n| Size | 3392 bytes |\n| Type | data |\n| MD5 | b1a7c2ae593e814cfecdcff709b02615 |\n| SHA1 | ababa956175b2ddae7ec92162a8464b40b79064a |\n| SHA256 | da267c72f58ec487761de99d0f3bcfd87771a36afc06716053960633a74139df |\n| SHA512 | f511508878f821f80f10d387a60c7bab14c7384cd4ce0a68c73b0331d13d4b716805e3a53794ef0def0062d08eea489ef6239c53c2fa2d7f1c3478aba7e204b1 |\n| ssdeep | 96:m74SD0f7Z2wXZ/BFmcktZdsczgmwL1COPP8yeTY4l9N:s4SDA73Zqlt7gmYQEUyMY4jN |\n| Entropy | 7\\.948675 |\n\n\n##### Antivirus\n\n\n\n No matches found.\n \n\n\n##### YARA Rules\n\n\n\n No matches found.\n \n\n\n##### ssdeep Matches\n\n\n\n No matches found.\n \n\n\n##### Relationships\n\n\n\n\n| da267c72f5\\... | Used\\_By | 1352dbb093a337eb8db9d0135adbe0542bb7e7163616e4f8962919becab171da |\n| --- | --- | --- |\n\n\n##### Description\n\n\n\n This artifact is the encrypted configuration file for the OneDriveClient module contained in the file result.exe (1352dbb093a337eb8db9d0135adbe0542bb7e7163616e4f8962919becab171da) detailed in this report. The data is decrypted using the hard\\-coded AES\\-256\\-CBC key \u2018M(xcHq88q\\[s\\=pc7^\\+u\\_Gb\\_}JC%QQwP:h\u2019. The algorithm uses an IV that is derived from the first half of the encryption key (See Figure 8\\).\n   \n\n  \n\n  \n\n  \n\n The file contains multiple paths to archives targeted by the attacker. The file includes the IP address of the server, stolen credential information, and a key to encrypt the uploaded data. NOTE: The decrypted configuration contains confidential client information and therefore is not included in this report.\n   \n\n  \n\n  \n\n  \n\n In addition, the data contains a refresh token for an OAuth client for Microsoft Azure with the Client ID of \u20187a3b4b84\\-ed28\\-4f18\\-b30d\\-218788c74a5f\u2019. Speed and compression information as well as times that the OneDrive share can be accessed are also included in the configuration.\n \n\n\n##### Screenshots\n\n\n\n![]()\n\n\n\n\n**Figure 8 \\-** \n This is the AES encryption routine. The routine uses the hard\\-coded string 'M(xcHq88q\\[s\\=pc7^\\+u\\_Gb\\_}JC%QQwP:h' as the AES key and the first half of the key as the IV.\n \n\n\n#### 0b01f392fa030be1ddd549fb79cf280d2a2c745578a56fedd4cb5e9438ae72cb\n\n\n##### Details\n\n\n\n\n| Name | ntstatus.bat |\n| --- | --- |\n| Size | 91 bytes |\n| Type | ASCII text, with CRLF line terminators |\n| MD5 | d287a50bd0b95d1f153dc071d43e45d3 |\n| SHA1 | cf1d9da39f4847ee735d46157232585068387763 |\n| SHA256 | 0b01f392fa030be1ddd549fb79cf280d2a2c745578a56fedd4cb5e9438ae72cb |\n| SHA512 | 1507fd6f41c853f84b7b036280ac6c21556ce5cf10b4008c2902020291255b5bb55e63ebda9921032fd8ebf7f9fd8fffbb7de40e696601bee1486a6155b2a5ed |\n| ssdeep | 3:nlKsoFDLAdAIvVNIGfMMAyIJooORKQExLAdAn:n25ABvoGfdICFRZENAC |\n| Entropy | 4\\.579538 |\n\n\n##### Antivirus\n\n\n\n No matches found.\n \n\n\n##### YARA Rules\n\n\n\n No matches found.\n \n\n\n##### ssdeep Matches\n\n\n\n No matches found.\n \n\n\n##### Relationships\n\n\n\n\n| 0b01f392fa... | Created\\_By | 1352dbb093a337eb8db9d0135adbe0542bb7e7163616e4f8962919becab171da |\n| --- | --- | --- |\n| 0b01f392fa... | Related\\_To | 157a0ffd18e05bfd90a4ec108e5458cbde01015e3407b3964732c9d4ceb71656 |\n\n\n##### Description\n\n\n\n This artifact is a batch file (.bat) that terminates the current process of ntstatus.exe (157a0ffd18e05bfd90a4ec108e5458cbde01015e3407b3964732c9d4ceb71656\\). It then changes to the directory C:\\\\windows\\\\modemlogs\\\\ and invokes a new instance of ntstatus.exe.\n \n\n\n#### 5ba0d0bfda372c1f6aa382a70f4ab8427ec998b680510e208fdf878cfda9afe3\n\n\n##### Details\n\n\n\n\n| Name | ntstatus.log |\n| --- | --- |\n| Size | 17520 bytes |\n| Type | data |\n| MD5 | 5753ddd324c2054718252c834d93aac9 |\n| SHA1 | a2e852b0d911ced7011a7b954fc379c0d0564fc5 |\n| SHA256 | 5ba0d0bfda372c1f6aa382a70f4ab8427ec998b680510e208fdf878cfda9afe3 |\n| SHA512 | c326d682fdad505f414bbbbbbcd219d40f8f9948c40ffcfd28a5ac5d9cfec647d5f2712ea23eb79bfafd19edfb49577a75f0f99c616abc444da62820eeee4dc6 |\n| ssdeep | 384:VEiJb1Xwe87kARzd/CT74lZzRdNKHa7QYopmafni\\+/5vFdIg:VONdKgVm8Qognie5vFdIg |\n| Entropy | 7\\.989546 |\n\n\n##### Antivirus\n\n\n\n No matches found.\n \n\n\n##### YARA Rules\n\n\n\n No matches found.\n \n\n\n##### ssdeep Matches\n\n\n\n No matches found.\n \n\n\n##### Relationships\n\n\n\n\n| 5ba0d0bfda... | Created\\_By | 1352dbb093a337eb8db9d0135adbe0542bb7e7163616e4f8962919becab171da |\n| --- | --- | --- |\n\n\n##### Description\n\n\n\n This artifact is a log file created by the OneDriveClient.UploadedFiles function contained in the file result.exe (1352dbb093a337eb8db9d0135adbe0542bb7e7163616e4f8962919becab171da). The file contains the MD5 hash of each file that has been uploaded to the remote server.\n \n\n\n#### 0b7d15968d44710b3e7f153c04b5038d03900a6685643bc8efe688c4d5a5deab\n\n\n##### Details\n\n\n\n\n| Name | ntstatus\\_temp.log |\n| --- | --- |\n| Size | 17520 bytes |\n| Type | data |\n| MD5 | adfac9c5ef66c21b85fde6503c025b58 |\n| SHA1 | d7950ad0cc1798f2184be502fcb12bc0a6f27864 |\n| SHA256 | 0b7d15968d44710b3e7f153c04b5038d03900a6685643bc8efe688c4d5a5deab |\n| SHA512 | f14a0b26627b15f628a702deca3ec1696c518cdd05f70426d5a4631a8ec6ced60ab96bfdadcbb362c27932de9a95f4794656379a5512eac3774f84e569fe2671 |\n| ssdeep | 384:gyf7wfPR70mHa7Kdghm5dnB9Yr\\+DLPim849pbm0NNzt0B1rzLw2nd:wBvKKdghAB9YreLPF84r1N5t0B1XT |\n| Entropy | 7\\.990357 |\n\n\n##### Antivirus\n\n\n\n No matches found.\n \n\n\n##### YARA Rules\n\n\n\n No matches found.\n \n\n\n##### ssdeep Matches\n\n\n\n No matches found.\n \n\n\n##### Relationships\n\n\n\n\n| 0b7d15968d... | Created\\_By | 1352dbb093a337eb8db9d0135adbe0542bb7e7163616e4f8962919becab171da |\n| --- | --- | --- |\n\n\n##### Description\n\n\n\n This artifact is a log file created by the OneDriveClient.UploadedFiles function contained in the file result.exe (1352dbb093a337eb8db9d0135adbe0542bb7e7163616e4f8962919becab171da). The file contains the MD5 hash of the file path for each file that has been uploaded to the remote server.\n \n\n\n#### 3585c3136686d7d48e53c21be61bb2908d131cf81b826acf578b67bb9d8e9350\n\n\n##### Tags\n\n\n\n downloaderinformation\\-stealertrojanuploader\n \n\n\n##### Details\n\n\n\n\n| Name | mqsvn.exe |\n| --- | --- |\n| Size | 114688 bytes |\n| Type | PE32\\+ executable (console) x86\\-64 Mono/.Net assembly, for MS Windows |\n| MD5 | 63cf36ac25788e13b41b1eb6bfc0c6b6 |\n| SHA1 | 22ab6af92ddd984bd054c21799742a5e498e8453 |\n| SHA256 | 3585c3136686d7d48e53c21be61bb2908d131cf81b826acf578b67bb9d8e9350 |\n| SHA512 | 52ecffb0004f5aee6f3a0c7e0edcbe1079845e20a712ac26854921dea9b46ece0d5f89698e833804ebdc9c3f525a8cc8c7a6d781b0caf3164b81cea17edae5c8 |\n| ssdeep | 3072:KNcJNunM5p0TKWODtcT1hR3o92JoeEcfcEcKHWjUNSGdyRCOKFWc70OrZKqaJjLt:Kyf0M5p0TKWwcBhR3o92JoRcJhHMUNSz |\n| Entropy | 5\\.801283 |\n\n\n##### Antivirus\n\n\n\n\n| IKARUS | Trojan.MSIL.Crypt |\n| --- | --- |\n\n\n##### YARA Rules\n\n\n* rule CISA\\_10365227\\_02 : ClientUploader\n   \n\n  \n\n {\n   \n\n  \n\n meta:\n   \n\n  \n\n Author \\= \"CISA Code \\& Media Analysis\"\n   \n\n  \n\n Incident \\= \"10365227\"\n   \n\n  \n\n Date \\= \"2021\\-12\\-23\"\n   \n\n  \n\n Last\\_Modified \\= \"20211224\\_1200\"\n   \n\n  \n\n Actor \\= \"n/a\"\n   \n\n  \n\n Category \\= \"n/a\"\n   \n\n  \n\n Family \\= \"n/a\"\n   \n\n  \n\n Description \\= \"Detects ClientUploader\\_mqsvn\"\n   \n\n  \n\n MD5\\_1 \\= \"63cf36ac25788e13b41b1eb6bfc0c6b6\"\n   \n\n  \n\n SHA256\\_1 \\= \"3585c3136686d7d48e53c21be61bb2908d131cf81b826acf578b67bb9d8e9350\"\n   \n\n  \n\n strings:\n   \n\n  \n\n $s1 \\= \"UploadSmallFileWithStopWatch\"\n   \n\n  \n\n $s2 \\= \"UploadPartWithStopwatch\"\n   \n\n  \n\n $s3 \\= \"AppVClient\"\n   \n\n  \n\n $s4 \\= \"ClientUploader\"\n   \n\n  \n\n $s5 \\= { 46 69 6C 65 43 6F 6E 74 61 69 6E 65 72 2E 46 69 6C 65 41 72 63 68 69 76 65 }\n   \n\n  \n\n $s6 \\= { 4F 6E 65 44 72 69 76 65 43 6C 69 65 6E 74 2E 4F 6E 65 44 72 69 76 65 }\n   \n\n  \n\n condition:\n   \n\n  \n\n uint16(0\\) \\=\\= 0x5a4d and all of them\n   \n\n  \n\n }\n\n\n##### ssdeep Matches\n\n\n\n No matches found.\n \n\n\n##### PE Metadata\n\n\n\n\n| Compile Date | 2021\\-06\\-30 15:10:41\\-04:00 |\n| --- | --- |\n| Company Name | Microsoft Corporation |\n| File Description | AppVClient.exe |\n| Internal Name | None |\n| Legal Copyright | \u00a9 Microsoft Corporation. All rights reserved. |\n| Original Filename | None |\n| Product Name | AppVClient.exe |\n| Product Version | 10\\.0\\.19041\\.84 |\n\n\n##### PE Sections\n\n\n\n\n| MD5 | Name | Raw Size | Entropy |\n| --- | --- | --- | --- |\n| bdd5c1c64355001493f1f48cc64646a3 | header | 512 | 2\\.279615 |\n| 204dc02c928d7206969d5e40f4ed4de4 | .text | 112640 | 5\\.814718 |\n| c574847bfb2e8be8830c3d846238d2d6 | .rsrc | 1536 | 4\\.261328 |\n\n\n##### Packers/Compilers/Cryptors\n\n\n\n\n| Microsoft Visual C\\+\\+ v6\\.0 |\n| --- |\n\n\n##### Relationships\n\n\n\n\n| 3585c31366\\... | Used | 25afc6741abfa27f5b50844331772466182ebe3f74bc84f911314d1a68c62cb2 |\n| --- | --- | --- |\n| 3585c31366\\... | Created | 603e75db59285734cfb5a469e984c4e359e660ccb7836ff9c209aec36931bc2b |\n\n\n##### Description\n\n\n\n This artifact is a variant of CovalentStealer malware. The program is a file management system that is capable of uploading files to the Internet.\n   \n\n  \n\n  \n\n  \n\n This variant of CovalentStealer malware contains two main modules, FileContainer and OneDriveClient, with the following functions:\n   \n\n  \n\n  \n\n  \n\n \\-\\-\\-Begin Functions\\-\\-\\-\n   \n\n  \n\n ClientUploader.Program\\<Main\\>\n   \n\n  \n\n FileContainer.FileArchive\\<Add\\>\n   \n\n  \n\n FileContainer.FileStorage\\<GetData\\>\n   \n\n  \n\n OneDriveClient.OneDriveChannel\\<Send\\>\n   \n\n  \n\n OneDriveClient.OneDrive\\<GetAccessToken\\>\n   \n\n  \n\n OneDriveClient.OneDrive\\<UploadData\\>\n   \n\n  \n\n OneDriveClient.OneDrive\\<UploadFile\\>\n   \n\n  \n\n OneDriveClient.OneDrive\\<UploadLargeFile\\>\n   \n\n  \n\n OneDriveClient.OneDrive\\<GetUploadUrl\\>\n   \n\n  \n\n OneDriveClient.OneDrive\\<UploadPartWithStopwatch\\>\n   \n\n  \n\n OneDriveClient.OneDrive\\<UploadPart\\>\n   \n\n  \n\n OneDriveClient.OneDrive\\<UploadSmallFileWithStopWatch\\>\n   \n\n  \n\n OneDriveClient.OneDrive\\<UploadSmallFile\\>\n   \n\n  \n\n \\-\\-\\-End Functions\\-\\-\\-\n   \n\n  \n\n  \n\n  \n\n The FileContainer module is used to enumerate and categorize files on the system. This module is capable of generating an MD5 hash of each file and compressing files using the Gzip or Brotli algorithms. The OneDriveClient module is used to upload files to a Microsoft Azure server on the Internet.\n   \n\n  \n\n  \n\n  \n\n The program will look for a configuration file with the same name as the application and the .ini extension, e.g. mqsvn.ini (25afc6741abfa27f5b50844331772466182ebe3f74bc84f911314d1a68c62cb2\\). Alternatively, if this file is not found it will look for the file \u2018config.ini\u2019 (See Figure 9\\).\n   \n\n  \n\n  \n\n  \n\n The configuration file is decoded using the AES\\-256\\-CBC key M(xcHq88q\\[s\\=pc7^\\+u\\_Gb\\_}JC%QQwP:h that is derived from the de\\-serialized string TSh4Y0hxODhxW3M9cGM3Xit1X0diX31KQyVRUXdQOmg\\= embedded in the file. The first 16 bytes of the key are then used as an IV (See Figure 8 above).\n   \n\n  \n\n  \n\n  \n\n Other strings were de\\-serialized to provide additional parameters for the malware program. For example, the string LmJtcDsuanBnOy5qcGVnOy50aWZmOy50AWV7LnBuZw\\=\\= decoded to a block list of files that the program is supposed to skip containing the extensions \u2018.bmp;.jpg;.jpeg;.tiff;.tif;.png\u2019 and the string LmRvY3g7Lnhsc3g7LnBwdHg\\= decoded to a list of file extensions that the program is supposed to compress before encrypting and exfiltrating. The extensions included \u2018.docx;.xlsx;.pptx\u2019 (See Figure 10\\).\n   \n\n  \n\n  \n\n  \n\n The configuration file contains a refresh token for an OAuth client for Microsoft Azure as well as a ClientID. In addition, it contains a path to the files targeted for uploading, upload times, an encryption key to encrypt the files before uploading, and compression parameters.\n \n\n\n##### Screenshots\n\n\n\n![]()\n\n\n\n\n**Figure 9 \\-** \n The ClientUploader program attempts to load a configuration file with an .ini extension from the current directory. The base64 encoded string 'Lmlua@\\=\\=' represents the .ini extension.\n \n\n\n\n![]()\n\n\n\n\n**FIgure 10 \\-** \n The ClientUploader program uses the JavaScriptSerializer routine to decode the parameters required to harvest and upload the documents.\n \n\n\n#### 25afc6741abfa27f5b50844331772466182ebe3f74bc84f911314d1a68c62cb2\n\n\n##### Details\n\n\n\n\n| Name | mqsvn.ini |\n| --- | --- |\n| Size | 800 bytes |\n| Type | data |\n| MD5 | 14b8e37952e1f532be9db40f654e6ac7 |\n| SHA1 | 01d6b5df5761904b7c8c6c4e34490675d4fa0f36 |\n| SHA256 | 25afc6741abfa27f5b50844331772466182ebe3f74bc84f911314d1a68c62cb2 |\n| SHA512 | c427510f53e54eeea55e2b747bb58f46488f983c47699772d774a94038bc16b12d332741db958c63324258130b9d0376ae2687d5e7a622d9a853717680833f56 |\n| ssdeep | 24:Y4yqp1BHGwUtSiW0nwPQV1iIN1RBZchbLWuL6e7ZeY:tyqLBm9tSawPPIn7Kqm7t |\n| Entropy | 7\\.761942 |\n\n\n##### Antivirus\n\n\n\n No matches found.\n \n\n\n##### YARA Rules\n\n\n\n No matches found.\n \n\n\n##### ssdeep Matches\n\n\n\n No matches found.\n \n\n\n##### Relationships\n\n\n\n\n| 25afc6741a... | Used\\_By | 3585c3136686d7d48e53c21be61bb2908d131cf81b826acf578b67bb9d8e9350 |\n| --- | --- | --- |\n\n\n##### Description\n\n\n\n This artifact is the encrypted configuration file for the OneDriveClient module contained in the file mqsvn.exe (3585c3136686d7d48e53c21be61bb2908d131cf81b826acf578b67bb9d8e9350\\). The data is decrypted using the de\\-serialized key M(xcHq88q\\[s\\=pc7^\\+u\\_Gb\\_}JC%QQwP:h found in mqsvn.exe, detailed in this report.\n   \n\n  \n\n  \n\n  \n\n The file contains a path to an archive targeted by the attacker. The file includes the AES\\-256\\-CBC key 1khvo39Q2evpi\\*\\*\\&R$\\*^Rjhko8tve2b7 that is used to encrypt the harvested documents before they are uploaded to the Internet.\n   \n\n  \n\n  \n\n  \n\n In addition, the data contains a refresh token for an OAuth client for Microsoft Azure with the Client ID of \u20187a3b4b84\\-ed28\\-4f18\\-b30d\\-218788c74a5f\u2019. Speed and compression information as well as times that the OneDrive share can be accessed are also included in the configuration. NOTE: The decrypted configuration contains confidential client information and is therefore not included in this report.\n \n\n\n#### 603e75db59285734cfb5a469e984c4e359e660ccb7836ff9c209aec36931bc2b\n\n\n##### Details\n\n\n\n\n| Name | mqsvn.log |\n| --- | --- |\n| Size | 39504 bytes |\n| Type | data |\n| MD5 | 444ccf674588f47ab5638fb08db98b01 |\n| SHA1 | 4fcf2c22d2ea70430580b487a7834c165deee5d0 |\n| SHA256 | 603e75db59285734cfb5a469e984c4e359e660ccb7836ff9c209aec36931bc2b |\n| SHA512 | 843cdead51e290ee5466f51f316c5199259b7e55b752efbdcfa83a5c64a0477a4ddcd3ab63785e9e25c01095670073884943fa0419797c0b74d30a9ae240d0cf |\n| ssdeep | 768:eYarzB8pLwTFL/FX8ANpGMVYO5kELiD4Z8xKzvkA6A3zZesChaFRR:eYaXB8pKF18ANkMX6ELh8xivpzZDC4FH |\n| Entropy | 7\\.995061 |\n\n\n##### Antivirus\n\n\n\n No matches found.\n \n\n\n##### YARA Rules\n\n\n\n No matches found.\n \n\n\n##### ssdeep Matches\n\n\n\n No matches found.\n \n\n\n##### Relationships\n\n\n\n\n| 603e75db59\\... | Created\\_By | 3585c3136686d7d48e53c21be61bb2908d131cf81b826acf578b67bb9d8e9350 |\n| --- | --- | --- |\n\n\n##### Description\n\n\n\n This artifact contains encrypted MD5 hashes of files that have been uploaded to the Internet by the file mqsvn.exe (3585c3136686d7d48e53c21be61bb2908d131cf81b826acf578b67bb9d8e9350\\).\n \n\n\n#### 30191b3badf3cdbc65d0ffeb68e0f26cef10a41037351b0f562ab52fce7432cc\n\n\n##### Tags\n\n\n\n information\\-stealerobfuscateduploader\n \n\n\n##### Details\n\n\n\n\n| Name | msexch.exe |\n| --- | --- |\n| Size | 6656 bytes |\n| Type | PE32\\+ executable (GUI) x86\\-64 Mono/.Net assembly, for MS Windows |\n| MD5 | baa634fdd2b34956524b5519ee97b8a8 |\n| SHA1 | cdc7e3b6905f69d8330c4b0f71494a7db7ac61e7 |\n| SHA256 | 30191b3badf3cdbc65d0ffeb68e0f26cef10a41037351b0f562ab52fce7432cc |\n| SHA512 | cdcd245fc1dc5072918950b1950527f0b6284453f527623cb600afc775f2cde507278273c75b4af972ac976c06fa73d414350b92c24c7a1dec44aa05527ca532 |\n| ssdeep | 96:LDuLc7D604Vp9Rzj1HhaUA3zvDwi0MX7gtKflUTsqzNt:LDuw6rVd3aP7Dw9MEQmT |\n| Entropy | 4\\.869180 |\n\n\n##### Antivirus\n\n\n\n\n| Adaware | Gen:Variant.Tedy.82790 |\n| --- | --- |\n| Bitdefender | Gen:Variant.Tedy.82790 |\n\n\n##### YARA Rules\n\n\n* rule CISA\\_10365227\\_01 : APPSTORAGE\n   \n\n  \n\n {\n   \n\n  \n\n meta:\n   \n\n  \n\n Author \\= \"CISA Code \\& Media Analysis\"\n   \n\n  \n\n Incident \\= \"10365227\"\n   \n\n  \n\n Date \\= \"2021\\-12\\-23\"\n   \n\n  \n\n Last\\_Modified \\= \"20211224\\_1200\"\n   \n\n  \n\n Actor \\= \"n/a\"\n   \n\n  \n\n Category \\= \"n/a\"\n   \n\n  \n\n Family \\= \"APPSTORAGE\"\n   \n\n  \n\n Description \\= \"Detects AppStorage\\_ntstatus\\_msexch samples\"\n   \n\n  \n\n MD5\\_1 \\= \"c435d133b45783cce91a5d4e4fbe3f52\"\n   \n\n  \n\n SHA256\\_1 \\= \"157a0ffd18e05bfd90a4ec108e5458cbde01015e3407b3964732c9d4ceb71656\"\n   \n\n  \n\n MD5\\_2 \\= \"baa634fdd2b34956524b5519ee97b8a8\"\n   \n\n  \n\n SHA256\\_2 \\= \"30191b3badf3cdbc65d0ffeb68e0f26cef10a41037351b0f562ab52fce7432cc\"\n   \n\n  \n\n strings:\n   \n\n  \n\n $s1 \\= \"026B924DD52F8BE4A3FEE8575DC\"\n   \n\n  \n\n $s2 \\= \"GetHDDId\"\n   \n\n  \n\n $s3 \\= \"AppStorage\"\n   \n\n  \n\n $s4 \\= \"AppDomain\"\n   \n\n  \n\n $s5 \\= \"$1e3e5580\\-d264\\-4c30\\-89c9\\-8933c948582c\"\n   \n\n  \n\n $s6 \\= \"hrjio2mfsdlf235d\" wide\n   \n\n  \n\n condition:\n   \n\n  \n\n uint16(0\\) \\=\\= 0x5a4d and all of them\n   \n\n  \n\n }\n\n\n##### ssdeep Matches\n\n\n\n No matches found.\n \n\n\n##### PE Metadata\n\n\n\n\n| Compile Date | 2083\\-06\\-18 19:48:42\\-04:00 |\n| --- | --- |\n| Internal Name | AppStorage.exe |\n| Original Filename | AppStorage.exe |\n| Product Version | 1\\.0\\.0\\.0 |\n\n\n##### PE Sections\n\n\n\n\n| MD5 | Name | Raw Size | Entropy |\n| --- | --- | --- | --- |\n| 9b75c9220e4242a6403f02bb9da3d198 | header | 512 | 2\\.261868 |\n| a69c4d0928332121839c97d955246112 | .text | 4608 | 5\\.236469 |\n| 0551c676439e5d812cb2bab3f2060c1b | .rsrc | 1536 | 3\\.934855 |\n\n\n##### Packers/Compilers/Cryptors\n\n\n\n\n| Microsoft Visual C\\+\\+ v6\\.0 |\n| --- |\n\n\n##### Relationships\n\n\n\n\n| 30191b3bad... | Related\\_To | e03a2c8a6e81cf62ba7401c598ea1d4635b08bbf9c2fec080b536dde29e6392f |\n| --- | --- | --- |\n| 30191b3bad... | Dropped | d221ca9c519ae04c7724baca8d36c2ce77454e0f9aa0f119ecfa9246973a92f8 |\n\n\n##### Description\n\n\n\n This artifact is an obfuscated .NET executable that is used to decode a variant of the CovalentStealer malware. When executed, the program will check the present name of the program and then look in the current directory for a file with the same name and a .bin extension, e.g. msexch.bin (e03a2c8a6e81cf62ba7401c598ea1d4635b08bbf9c2fec080b536dde29e6392f).\n   \n\n  \n\n  \n\n  \n\n The program seeks to generate a key called \u2018HDDId\u2019 to decode msexch.bin. The embedded string \u2018hrjio2mfsdlf235d\u2019 is used to decode instructions within the program to generate the key (See Figure 3 above). This function is similar to the function described in ntstatus.exe detailed elsewhere in this report, however it will take one additional variable to generate the key. The first command identifies the current userName on the system while the second command identifies the machineName. The third command reads the WMI namespace root/cimv2 to locate the volumeserialnumber of the current drive. All of the variables are then modified using an XOR routine and the same string above is used to generate the key (See Figure 11\\). The first part of the key is generated from the volume serial number which, during analysis resolved to \u201876D55BD2\u2019. The second part of the key is resolved from the userName, which during analysis resolved to \u201834BD153B\u2019. The last part of the key is resolved from the machineName, which resolved to \u2018F3124EDD\u2019 creating the key \u201876D55BD234BD153BF3124EDD\u2019 (See Figure 12\\). Note: The key is an example.\n   \n\n  \n\n  \n\n  \n\n To generate the correct key, the userName, machineName, and volumeserialnumber must match the victim\u2019s system, otherwise it fails to decode msexch.bin and the program will terminate. This method is used to thwart independent analysis of the file, msexch.bin.\n \n\n\n##### Screenshots\n\n\n\n![]()\n\n\n\n\n**Figure 11 \\-** \n The program collects the userName, machineName, and Volume Serial Number to generate the HDDId key.\n \n\n\n\n![]()\n\n\n\n\n**Figure 12 \\-** \n Screenshot of the generated HDDId key used to decode msexch.bin.\n \n\n\n#### e03a2c8a6e81cf62ba7401c598ea1d4635b08bbf9c2fec080b536dde29e6392f\n\n\n##### Tags\n\n\n\n information\\-stealerobfuscateduploader\n \n\n\n##### Details\n\n\n\n\n| Name | msexch.bin |\n| --- | --- |\n| Size | 1834496 bytes |\n| Type | data |\n| MD5 | bd95f0df1272e5b2854b304c71930168 |\n| SHA1 | 2d28c56daf370370d1c4d95fd25e4f0a04ceda07 |\n| SHA256 | e03a2c8a6e81cf62ba7401c598ea1d4635b08bbf9c2fec080b536dde29e6392f |\n| SHA512 | b01a5b459f0b3b619b742f717e7b536cf713dded36b542d5546a59333c6008aaab0c844a9979b4450dc1a1ced5af41beebfda41191920a678026c63fdf7934dd |\n| ssdeep | 24576:KNCSFczkVbstNn2I4Evj6ZaIDLdjFu1u1Ww1YfduAiG52Qqlsvz66ZG\\+b38tTnt4:hz7ePzJuss4caq |\n| Entropy | 6\\.682404 |\n\n\n##### Antivirus\n\n\n\n No matches found.\n \n\n\n##### YARA Rules\n\n\n\n No matches found.\n \n\n\n##### ssdeep Matches\n\n\n\n No matches found.\n \n\n\n##### Relationships\n\n\n\n\n| e03a2c8a6e... | Related\\_To | 30191b3badf3cdbc65d0ffeb68e0f26cef10a41037351b0f562ab52fce7432cc |\n| --- | --- | --- |\n\n\n##### Description\n\n\n\n This is an obfuscated version of CovalentStealer malware. The file is decoded by msexch.exe using the key '76D55BD234BD153BF3124EDD'. The decoded file is called Uploader.exe (d221ca9c519ae04c7724baca8d36c2ce77454e0f9aa0f119ecfa9246973a92f8\\) and is detailed in this report.\n \n\n\n#### d221ca9c519ae04c7724baca8d36c2ce77454e0f9aa0f119ecfa9246973a92f8\n\n\n##### Tags\n\n\n\n information\\-stealeruploader\n \n\n\n##### Details\n\n\n\n\n| Name | Uploader.exe |\n| --- | --- |\n| Size | 1834496 bytes |\n| Type | PE32\\+ executable (console) x86\\-64 Mono/.Net assembly, for MS Windows |\n| MD5 | f54ae2b0d51bb4cdc2a142733f122311 |\n| SHA1 | 184adab2435e4b0f9b02521fed5e56390b5e775f |\n| SHA256 | d221ca9c519ae04c7724baca8d36c2ce77454e0f9aa0f119ecfa9246973a92f8 |\n| SHA512 | 97ed8086dde00af3cbf51c02073aec28957a6bf354799f489ee7c457e82e0b21d7d2fb6ba46589675ed22d51aa0d973ab7d4132a2aeeb0adf15da618d4fb83cd |\n| ssdeep | 49152:Z2f6rfgMSneK065JlYaDmxZF5ax00MSMoOKiYyBg9FzfJNFL5QPWES2s1B\\+dBrSC:Z2f6rfgMSneK065JlYaDmxZF5ax00MSt |\n| Entropy | 5\\.580993 |\n\n\n##### Antivirus\n\n\n\n No matches found.\n \n\n\n##### YARA Rules\n\n\n\n No matches found.\n \n\n\n##### ssdeep Matches\n\n\n\n\n| 97 | 1352dbb093a337eb8db9d0135adbe0542bb7e7163616e4f8962919becab171da |\n| --- | --- |\n\n\n##### PE Metadata\n\n\n\n\n| Compile Date | 2021\\-09\\-24 14:56:17\\-04:00 |\n| --- | --- |\n| Import Hash | f34d5f2d4577ed6d9ceec516c1f5a744 |\n| Internal Name | ClientUploader.exe |\n| Original Filename | ClientUploader.exe |\n| Product Version | 1\\.0\\.0\\.0 |\n\n\n##### PE Sections\n\n\n\n\n| MD5 | Name | Raw Size | Entropy |\n| --- | --- | --- | --- |\n| a1eef53765269a304aaa217af7ede436 | header | 512 | 2\\.725476 |\n| 489bbfac9377f3ef9a60f9d64d9ccda8 | .text | 1831936 | 5\\.583032 |\n| 5488f249cf62feed84546911d54f96f2 | .rsrc | 1536 | 3\\.971470 |\n| fbf8fada938118d358a40e73eb0c8bb9 | .reloc | 512 | 0\\.101910 |\n\n\n##### Relationships\n\n\n\n\n| d221ca9c51\\... | Used | 52765525103f5b3b07d0882cc8ee4bb8e279ad5d451e1ed07cae3b98565cce29 |\n| --- | --- | --- |\n| d221ca9c51\\... | Created | 09605981a072c604e6ef9ad2dd7d2a78b48b07ee3339589bfcf0a466a9190904 |\n| d221ca9c51\\... | Created | 6a0cd866c849e62f9ccc26575d8794c2e0b14722387742b965d4358e1e0e8b3c |\n| d221ca9c51\\... | Dropped\\_By | 30191b3badf3cdbc65d0ffeb68e0f26cef10a41037351b0f562ab52fce7432cc |\n\n\n##### Description\n\n\n\n This artifact is a variant of the CovalentStealer program. When the program is executed it will decrypt and read the configuration file msexch.ini (52765525103f5b3b07d0882cc8ee4bb8e279ad5d451e1ed07cae3b98565cce29\\) in the current directory. It uses the hard\\-coded AES\\-256\\-CBC key \u2018M(xcHq88q\\[s\\=pc7^\\+u\\_Gb\\_}JC%QQwP:h\u2019 to decrypt the file. The configuration file will include a path to the directory containing the targeted files, compression parameters, and connection parameters for connecting to a system on the Internet to upload data.\n   \n\n  \n\n  \n\n  \n\n ClientUploader has several primary modules. The module IFileWorker contains the following functions:\n   \n\n  \n\n  \n\n  \n\n \\-\\-\\-Begin IFileWorker Functions\\-\\-\\-\n   \n\n  \n\n Brotli. \u2013 This function contains the Brotli compression library to compress and decompress files.\n   \n\n  \n\n ContainersFilesWorker. \u2013 This function keeps track of uploaded files. It compares the files to a hash list for the file and path before uploading and also compares them to a whitelist and a blacklist by file extension. It also logs the status of each file in the upload process.\n   \n\n  \n\n Extension. \u2013 This function checks the file extension to determine if the file needs to be compressed.\n   \n\n  \n\n File Archive. \u2013 This function verifies the size of the file and disposition before compressing the file.\n   \n\n  \n\n FileBlock. \u2013 This function converts the file data into a byte stream.\n   \n\n  \n\n FileContainers. \u2013 This function segregates files by file type based on the extension.\n   \n\n  \n\n GZip. \u2013 This function contains the Gzip compression library to compress and decompress files.\n   \n\n  \n\n Logger. \u2013 This function logs debug status messages and telemetry data from other functions and outputs them to a file using the base name and the .dat extension, e.g. msexch.dat (See Figure 4 above).\n   \n\n  \n\n WhiteAndBlackList. \u2013 This function maintains a list of files by name and a list of files by extension that match the whitelist or blacklist from the configuration file.\n   \n\n  \n\n \\-\\-\\-End IFileWorker Functions\\-\\-\\-\n   \n\n  \n\n  \n\n  \n\n The module OneDriveClient contains the following functions:\n   \n\n  \n\n  \n\n  \n\n \\-\\-\\-Begin OneDriveClient Functions\\-\\-\\-\n   \n\n  \n\n OneDrive. \u2013 This function uploads files to a URL. It configures speed, buffer size, time, etc. based on the parameters in the configuration file, msexch.ini. Then, it reports the status of each file to the IFileWorker.Logger function. The following are examples of the OneDrive commands:\n   \n\n  \n\n  \n\n  \n\n \\-\\-\\-Begin OneDrive Commands\\-\\-\\-\n   \n\n  \n\n OneDriveClient.OneDriveChannel\\+\\<Send\\>\n   \n\n  \n\n OneDriveClient.OneDrive\\+\\<GetAccessToken\\>\n   \n\n  \n\n OneDriveClient.OneDrive\\+\\<UploadData\\>\n   \n\n  \n\n OneDriveClient.OneDrive\\+\\<UploadFile\\>\n   \n\n  \n\n OneDriveClient.OneDrive\\+\\<UploadLargeFile\\>\n   \n\n  \n\n OneDriveClient.OneDrive\\+\\<GetUploadUrl\\>\n   \n\n  \n\n OneDriveClient.OneDrive\\+\\<UploadPartWithStopwatch\\>\n   \n\n  \n\n OneDriveClient.OneDrive\\+\\<UploadPart\\>\n   \n\n  \n\n OneDriveClient.OneDrive\\+\\<UploadSmallFileWithStopWatch\\>\n   \n\n  \n\n OneDriveClient.OneDrive\\+\\<UploadSmallFile\\>\n   \n\n  \n\n \\-\\-\\-End OneDriveClient Functions\\-\\-\\-\n   \n\n  \n\n  \n\n  \n\n OneDriveChannel. \u2013 This function establishes the connection to server.\n   \n\n  \n\n OneDriveChannelSettings. \u2013 This function reads the ClientID, Redirect, Refresh Token, and Scopes from the configuration file, msexch.ini to negotiate the connection to the client.\n   \n\n  \n\n UploadedFiles. \u2013 This function logs the hash and the file path of the uploaded files and records the information into two files where msexch.log contains a list of file hashes and msexch\\_temp.log contains a list of file path hashes (See Figure 7 above).\n   \n\n  \n\n \\-\\-\\-End OneDriveClient Functions\\-\\-\\-\n   \n\n  \n\n  \n\n  \n\n The program also contains supporting libraries for the SMB protocol versions 2 and 3\\. The libraries have the capacity to maintain a list of IP addresses, logins, domainNames, passwords, and SMB clients that can be used to attempt to search for and log into SMB file stores. Files can be searched by file path, file status (e.g., open or closed), and file attributes (e.g. shared, read only, etc.).\n \n\n\n#### 52765525103f5b3b07d0882cc8ee4bb8e279ad5d451e1ed07cae3b98565cce29\n\n\n##### Tags\n\n\n\n information\\-stealeruploader\n \n\n\n##### Details\n\n\n\n\n| Name | msexch.ini |\n| --- | --- |\n| Size | 4816 bytes |\n| Type | data |\n| MD5 | d3951137283e84d42f85bb91f0ccfcdd |\n| SHA1 | 450982b1420a97dcedb15fb058e00e108d240bb7 |\n| SHA256 | 52765525103f5b3b07d0882cc8ee4bb8e279ad5d451e1ed07cae3b98565cce29 |\n| SHA512 | 082594fced158d5597e1b34ec220fd873365f3ec282add680fc84d4b31010c2485e97611049c2d1432b6a1014784e06d3b11f14a815252a28c0c38c4eb5a31e1 |\n| ssdeep | 96:XaMTeYZR1Bm3AboPwVUJyWvihHbP11Ho\\+5EGsW7MlDz1v7Yrtgx3X:XaWZZR1Bx9VP16\\+5jRQlDR8U |\n| Entropy | 7\\.963703 |\n\n\n##### Antivirus\n\n\n\n No matches found.\n \n\n\n##### YARA Rules\n\n\n\n No matches found.\n \n\n\n##### ssdeep Matches\n\n\n\n No matches found.\n \n\n\n##### Relationships\n\n\n\n\n| 5276552510\\... | Used\\_By | d221ca9c519ae04c7724baca8d36c2ce77454e0f9aa0f119ecfa9246973a92f8 |\n| --- | --- | --- |\n\n\n##### Description\n\n\n\n This artifact is the encrypted configuration file for the OneDriveClient module contained in the file Uploader.exe (d221ca9c519ae04c7724baca8d36c2ce77454e0f9aa0f119ecfa9246973a92f8\\) detailed in this report. The data is decrypted using the hard\\-coded AES\\-256\\-CBC key \u2018M(xcHq88q\\[s\\=pc7^\\+u\\_Gb\\_}JC%QQwP:h\u2019. The algorithm uses an IV that is derived from the first half of the encryption key (See Figure 8 above).\n   \n\n  \n\n  \n\n  \n\n The file contains multiple paths to archives targeted by the attacker. The file includes the IP address of the server, stolen credential information, and a key to encrypt the uploaded data. NOTE: The decrypted configuration contains confidential client information and therefore is not included in this report.\n   \n\n  \n\n  \n\n  \n\n In addition, the data contains a refresh token for an OAuth client for Microsoft Azure with the Client ID of \u20187a3b4b84\\-ed28\\-4f18\\-b30d\\-218788c74a5f\u2019. Speed and compression information as well as times that the OneDrive share can be accessed are also included in the configuration.\n \n\n\n#### 09605981a072c604e6ef9ad2dd7d2a78b48b07ee3339589bfcf0a466a9190904\n\n\n##### Details\n\n\n\n\n| Name | msexch.log |\n| --- | --- |\n| Size | 103904 bytes |\n| Type | data |\n| MD5 | 30ea2a37c7174ed8c3ab88aecee0002b |\n| SHA1 | 3a6f2826aab7948d8b930f6bf13897160c198807 |\n| SHA256 | 09605981a072c604e6ef9ad2dd7d2a78b48b07ee3339589bfcf0a466a9190904 |\n| SHA512 | 0a78caf6257b8b58578181a9555bf9cee24b1bfced078855145f79757701a53a15968d9bb6acc74fdc9469bd28fa82a53b8d52669fa3952824f51339bd94ad7a |\n| ssdeep | 3072:OcopRvQIpMV/EN6PmW9tV/PUdpogFeSQx7:CpVFp8/pFhPUdponR7 |\n| Entropy | 7\\.998490 |\n\n\n##### Antivirus\n\n\n\n No matches found.\n \n\n\n##### YARA Rules\n\n\n\n No matches found.\n \n\n\n##### ssdeep Matches\n\n\n\n No matches found.\n \n\n\n##### Relationships\n\n\n\n\n| 09605981a0\\... | Created\\_By | d221ca9c519ae04c7724baca8d36c2ce77454e0f9aa0f119ecfa9246973a92f8 |\n| --- | --- | --- |\n\n\n##### Description\n\n\n\n This artifact is a log file created by the OneDriveClient.UploadedFiles function contained in the file Uploader.exe (d221ca9c519ae04c7724baca8d36c2ce77454e0f9aa0f119ecfa9246973a92f8\\). The file contains the MD5 hash of each file that has been uploaded to the remote server.\n \n\n\n#### 6a0cd866c849e62f9ccc26575d8794c2e0b14722387742b965d4358e1e0e8b3c\n\n\n##### Details\n\n\n\n\n| Name | msexch\\_temp.log |\n| --- | --- |\n| Size | 103904 bytes |\n| Type | data |\n| MD5 | 20b7eb0af9b9e7403a298f7966d5a1d4 |\n| SHA1 | b2018e61e8b435b6a172b35774377ebc16fd0168 |\n| SHA256 | 6a0cd866c849e62f9ccc26575d8794c2e0b14722387742b965d4358e1e0e8b3c |\n| SHA512 | 3695120b452c103f54c4eb738648621f162850ec32aca734ecdd552755ecced1500aaf789ec1bf45afc5df4fcfd6144ca4d1fff415a25656dd5493f81b221bfe |\n| ssdeep | 3072:2H05Z4/LivIjqjSXZa8HaDhpfUcJkm0YK/:29ivImjSX9qnUcdi |\n| Entropy | 7\\.998385 |\n\n\n##### Antivirus\n\n\n\n No matches found.\n \n\n\n##### YARA Rules\n\n\n\n No matches found.\n \n\n\n##### ssdeep Matches\n\n\n\n No matches found.\n \n\n\n##### Relationships\n\n\n\n\n| 6a0cd866c8\\... | Created\\_By | d221ca9c519ae04c7724baca8d36c2ce77454e0f9aa0f119ecfa9246973a92f8 |\n| --- | --- | --- |\n\n\n##### Description\n\n\n\n This artifact is a log file created by the OneDriveClient.UploadedFiles function contained in the file Uploader.exe (d221ca9c519ae04c7724baca8d36c2ce77454e0f9aa0f119ecfa9246973a92f8\\). The file contains the MD5 hash of the path for each file that has been uploaded to the remote server.\n \n\n\n#### fae38156e9ce12368c846836b87861f4f12e14698cb65f14545205fa56d8c496\n\n\n##### Tags\n\n\n\n information\\-stealer\n \n\n\n##### Details\n\n\n\n\n| Name | vmware.ps1 |\n| --- | --- |\n| Size | 10436 bytes |\n| Type | ASCII text |\n| MD5 | 4825b1e32ff062f4671d5420661695af |\n| SHA1 | 0cbf85f88e2fb0bc721357acdd543d5a1957886f |\n| SHA256 | fae38156e9ce12368c846836b87861f4f12e14698cb65f14545205fa56d8c496 |\n| SHA512 | a58298346cdf35e432d755942ef2690c6e3182a4fab03df163142e42cdcb0d7bc3810c647078a779d15ee0676b0eacfa59c38512671dc86264b42f2c8d69edb8 |\n| ssdeep | 192:k9XNMA6GyvE0XJvP0EN3ab3Akz9JUWCUVCRB7/dUV/TpraVm5efUo9wQUyfa3gpA:k9XNMA6pXJvPCUjUmUvaME8obUaYgpj8 |\n| Entropy | 4\\.979828 |\n\n\n##### Antivirus\n\n\n\n No matches found.\n \n\n\n##### YARA Rules\n\n\n\n No matches found.\n \n\n\n##### ssdeep Matches\n\n\n\n No matches found.\n \n\n\n##### Description\n\n\n\n This artifact is a script called Export\\-MFT.ps1 written in PowerShell used to collect the MFT from a system volume. The benign open source script is available on GitHub.\n \n\n\n#### bfa7adeda4597b70bf74a9f2032df2f87e07f2dbb46e85cb7c091b83161d6b0a\n\n\n##### Details\n\n\n\n\n| Name | vmware.exe |\n| --- | --- |\n| Size | 497104 bytes |\n| Type | PE32 executable (console) Intel 80386, for MS Windows |\n| MD5 | 0acb06da48d86e1ef15c27a4f5a3bddd |\n| SHA1 | 12dd7a86001ff2b6b661cd7de60ca6aadc9b78ae |\n| SHA256 | bfa7adeda4597b70bf74a9f2032df2f87e07f2dbb46e85cb7c091b83161d6b0a |\n| SHA512 | 98fbcd4e190e0bc17dc712bbbe808c7d24610c334925381544fb16a8f75931db1c5f6597cafbe6a12a9050e482e55351bedb76b40573f8a7489e3c7755bdecd2 |\n| ssdeep | 12288:1NsUjyDukqiudnJkx3piQLmGLvdnTJ0CRUyF1I3Kl:1mkyDuZiCccQLmGpTrCm1I3g |\n| Entropy | 6\\.459391 |\n\n\n##### Antivirus\n\n\n\n No matches found.\n \n\n\n##### YARA Rules\n\n\n\n No matches found.\n \n\n\n##### ssdeep Matches\n\n\n\n No matches found.\n \n\n\n##### PE Metadata\n\n\n\n\n| Compile Date | 2014\\-12\\-02 05:07:13\\-05:00 |\n| --- | --- |\n| Import Hash | 1324fa350b5f878451cc28b429b96e9b |\n| Company Name | Alexander Roshal |\n| File Description | Command line RAR |\n| Internal Name | Command line RAR |\n| Legal Copyright | Copyright \u00a9 Alexander Roshal 1993\\-2014 |\n| Original Filename | None |\n| Product Name | WinRAR |\n| Product Version | 5\\.20\\.0 |\n\n\n##### PE Sections\n\n\n\n\n| MD5 | Name | Raw Size | Entropy |\n| --- | --- | --- | --- |\n| 98efedab8c1234a79df40e93dc82e136 | header | 1024 | 2\\.635435 |\n| 0b760a9dbbf12c5d32ca265879aabdb2 | .text | 410112 | 6\\.587893 |\n| 3874d7a1d17b892215dc07687ac3b75c | .rdata | 27136 | 4\\.857459 |\n| e28ebcc7f9a5e3d463ee9d9de071e085 | .data | 8192 | 3\\.720474 |\n| 5ad98aabb9c5996ee180a98ff9543866 | .rsrc | 31232 | 3\\.540367 |\n| ec534cec214c136ef4552b79103e2eaa | .reloc | 14336 | 5\\.427399 |\n\n\n##### Packers/Compilers/Cryptors\n\n\n\n\n| Microsoft Visual C\\+\\+ ?.? |\n| --- |\n\n\n##### Description\n\n\n\n This artifact is a benign publicly available version of the Roshal archiver (RAR), version 5\\.20\\.0\\. RAR.exe is used to compress and archive other files.\n \n\n\n### Relationship Summary\n\n\n\n\n| 84164e1e80\\... | Used | 91a8b31c126a021f5c156742016acdcca7d83eac4b583bae5d4fd0a85a96813b |\n| --- | --- | --- |\n| 84164e1e80\\... | Created | 517faa4a0666ec68842f256f08d987935b6ce9ef64e33f027e084e8f45b9366d |\n| 517faa4a06\\... | Created\\_By | 84164e1e8074c2565d3cd178babd93694ce54811641a77ffdc8d1084dd468afb |\n| 91a8b31c12\\... | Used\\_By | 84164e1e8074c2565d3cd178babd93694ce54811641a77ffdc8d1084dd468afb |\n| 157a0ffd18\\... | Related\\_To | b03ac5eaf2131060ee381e5e46ebc705d8d617a90cc61fa4918174545b4fbaa6 |\n| 157a0ffd18\\... | Dropped | 1352dbb093a337eb8db9d0135adbe0542bb7e7163616e4f8962919becab171da |\n| 157a0ffd18\\... | Related\\_To | 0b01f392fa030be1ddd549fb79cf280d2a2c745578a56fedd4cb5e9438ae72cb |\n| b03ac5eaf2\\... | Related\\_To | 157a0ffd18e05bfd90a4ec108e5458cbde01015e3407b3964732c9d4ceb71656 |\n| b03ac5eaf2\\... | Contains | 1352dbb093a337eb8db9d0135adbe0542bb7e7163616e4f8962919becab171da |\n| 1352dbb093\\... | Created | 5ba0d0bfda372c1f6aa382a70f4ab8427ec998b680510e208fdf878cfda9afe3 |\n| 1352dbb093\\... | Created | 0b7d15968d44710b3e7f153c04b5038d03900a6685643bc8efe688c4d5a5deab |\n| 1352dbb093\\... | Used | da267c72f58ec487761de99d0f3bcfd87771a36afc06716053960633a74139df |\n| 1352dbb093\\... | Dropped\\_By | 157a0ffd18e05bfd90a4ec108e5458cbde01015e3407b3964732c9d4ceb71656 |\n| 1352dbb093\\... | Created | 0b01f392fa030be1ddd549fb79cf280d2a2c745578a56fedd4cb5e9438ae72cb |\n| 1352dbb093\\... | Contained\\_Within | b03ac5eaf2131060ee381e5e46ebc705d8d617a90cc61fa4918174545b4fbaa6 |\n| da267c72f5\\... | Used\\_By | 1352dbb093a337eb8db9d0135adbe0542bb7e7163616e4f8962919becab171da |\n| 0b01f392fa... | Created\\_By | 1352dbb093a337eb8db9d0135adbe0542bb7e7163616e4f8962919becab171da |\n| 0b01f392fa... | Related\\_To | 157a0ffd18e05bfd90a4ec108e5458cbde01015e3407b3964732c9d4ceb71656 |\n| 5ba0d0bfda... | Created\\_By | 1352dbb093a337eb8db9d0135adbe0542bb7e7163616e4f8962919becab171da |\n| 0b7d15968d... | Created\\_By | 1352dbb093a337eb8db9d0135adbe0542bb7e7163616e4f8962919becab171da |\n| 3585c31366\\... | Used | 25afc6741abfa27f5b50844331772466182ebe3f74bc84f911314d1a68c62cb2 |\n| 3585c31366\\... | Created | 603e75db59285734cfb5a469e984c4e359e660ccb7836ff9c209aec36931bc2b |\n| 25afc6741a... | Used\\_By | 3585c3136686d7d48e53c21be61bb2908d131cf81b826acf578b67bb9d8e9350 |\n| 603e75db59\\... | Created\\_By | 3585c3136686d7d48e53c21be61bb2908d131cf81b826acf578b67bb9d8e9350 |\n| 30191b3bad... | Related\\_To | e03a2c8a6e81cf62ba7401c598ea1d4635b08bbf9c2fec080b536dde29e6392f |\n| 30191b3bad... | Dropped | d221ca9c519ae04c7724baca8d36c2ce77454e0f9aa0f119ecfa9246973a92f8 |\n| e03a2c8a6e... | Related\\_To | 30191b3badf3cdbc65d0ffeb68e0f26cef10a41037351b0f562ab52fce7432cc |\n| d221ca9c51\\... | Used | 52765525103f5b3b07d0882cc8ee4bb8e279ad5d451e1ed07cae3b98565cce29 |\n| d221ca9c51\\... | Created | 09605981a072c604e6ef9ad2dd7d2a78b48b07ee3339589bfcf0a466a9190904 |\n| d221ca9c51\\... | Created | 6a0cd866c849e62f9ccc26575d8794c2e0b14722387742b965d4358e1e0e8b3c |\n| d221ca9c51\\... | Dropped\\_By | 30191b3badf3cdbc65d0ffeb68e0f26cef10a41037351b0f562ab52fce7432cc |\n| 5276552510\\... | Used\\_By | d221ca9c519ae04c7724baca8d36c2ce77454e0f9aa0f119ecfa9246973a92f8 |\n| 09605981a0\\... | Created\\_By | d221ca9c519ae04c7724baca8d36c2ce77454e0f9aa0f119ecfa9246973a92f8 |\n| 6a0cd866c8\\... | Created\\_By | d221ca9c519ae04c7724baca8d36c2ce77454e0f9aa0f119ecfa9246973a92f8 |\n\n\n### Recommendations\n\n\n\n CISA recommends that users and administrators consider using the following best practices to strengthen the security posture of their organization's systems. Any configuration changes should be reviewed by system owners and administrators prior to implementation to avoid unwanted impacts.\n \n\n\n* Maintain up\\-to\\-date antivirus signatures and engines.\n* Keep operating system patches up\\-to\\-date.\n* Disable File and Printer sharing services. If these services are required, use strong passwords or Active Directory authentication.\n* Restrict users' ability (permissions) to install and run unwanted software applications. Do not add users to the local administrators group unless required.\n* Enforce a strong password policy and implement regular password changes.\n* Exercise caution when opening e\\-mail attachments even if the attachment is expected and the sender appears to be known.\n* Enable a personal firewall on agency workstations, configured to deny unsolicited connection requests.\n* Disable unnecessary services on agency workstations and servers.\n* Scan for and remove suspicious e\\-mail attachments; ensure the scanned attachment is its \"true file type\" (i.e., the extension matches the file header).\n* Monitor users' web browsing habits; restrict access to sites with unfavorable content.\n* Exercise caution when using removable media (e.g., USB thumb drives, external drives, CDs, etc.).\n* Scan all software downloaded from the Internet prior to executing.\n* Maintain situational awareness of the latest threats and implement appropriate Access Control Lists (ACLs).\n\n\n\n Additional information on malware incident prevention and handling can be found in National Institute of Standards and Technology (NIST) Special Publication 800\\-83,\n **\"Guide to Malware Incident Prevention \\& Handling for Desktops and Laptops\".** \n\n\n\n### Contact Information\n\n\n* 1\\-888\\-282\\-0870\n* [CISA Central](mailto:Central@cisa.dhs.gov \"Email CISA Central\") \n (UNCLASS)\n* [CISA SIPR](mailto:NCCIC@dhs.sgov.gov) \n (SIPRNET)\n* [CISA IC](mailto:NCCIC@dhs.ic.gov) \n (JWICS)\n\n\n\n CISA continuously strives to improve its products and services. You can help by answering a very short series of questions about this product at the following URL:\n [https://us\\-cert.cisa.gov/forms/feedback/](https://urldefense.com/v3/__https://us-cert.cisa.gov/forms/feedback/__;!!JNdenfMLDA!Mx0RCF0Hop6tm9kwIMiXdkmBCaTXYKJHcrReiDEdEInmINpAOoXQY-9-LNpSGmAhiN5N47833RC0Mirq%24) \n\n\n\n### Document FAQ\n\n\n\n**What is a MIFR?** \n A Malware Initial Findings Report (MIFR) is intended to provide organizations with malware analysis in a timely manner. In most instances this report will provide initial indicators for computer and network defense. To request additional analysis, please contact CISA and provide information regarding the level of desired analysis.\n \n\n\n\n**What is a MAR?** \n A Malware Analysis Report (MAR) is intended to provide organizations with more detailed malware analysis acquired via manual reverse engineering. To request additional analysis, please contact CISA and provide information regarding the level of desired analysis.\n \n\n\n\n**Can I edit this document?** \n This document is not to be edited in any way by recipients. All comments or questions related to this document should be directed to the CISA at 1\\-888\\-282\\-0870 or\n [CISA Central](mailto:Central@cisa.dhs.gov \"Email CISA Central\") \n .\n \n\n\n\n**Can I submit malware to CISA?** \n Malware samples can be submitted via three methods:\n \n\n\n* Web:\n [https://malware.us\\-cert.gov](https://malware.us-cert.gov)\n* E\\-Mail:\n [submit@malware.us\\-cert.gov](mailto:submit@malware.us-cert.gov)\n* FTP: ftp.malware.us\\-cert.gov (anonymous)\n\n\n\n CISA encourages you to report any suspicious activity, including cybersecurity incidents, possible malicious code, software vulnerabilities, and phishing\\-related scams. Reporting forms can be found on CISA's homepage at\n [www.cisa.gov](https://urldefense.com/v3/__http://www.cisa.gov__;!!JNdenfMLDA!Mx0RCF0Hop6tm9kwIMiXdkmBCaTXYKJHcrReiDEdEInmINpAOoXQY-9-LNpSGmAhiN5N47833YnUnWuC%24) \n .\n \n\n\n\n\n\n\n\n\n\n\n This product is provided subject to this\n [Notification](/notification \"Follow link\") \n and this\n [Privacy \\& Use](/privacy-policy \"Follow link\") \n policy.\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlease share your thoughts\n--------------------------\n\n\n\n We recently updated our anonymous\n [product survey](https://www.surveymonkey.com/r/CISA-cyber-survey?product=https://www.cisa.gov/news-events/analysis-reports/ar22-277a) \n ; we\u2019d welcome your feedback.\n \n\n\n\n\n\n\n\n\n\n\n\n\nRelated Advisories\n------------------\n\n\n\n\n\n\n\n\n\n\n Feb 07, 2024\n \n\n\n Analysis Report \\| AR24\\-038A\n \n\n### [MAR\\-10448362\\-1\\.v1 Volt Typhoon](/news-events/analysis-reports/ar24-038a)\n\n\n\n\n\n\n\n\n\n\n\n Nov 21, 2023\n \n\n\n Analysis Report \\| AR23\\-325A\n \n\n### [MAR\\-10478915\\-1\\.v1 Citrix Bleed](/news-events/analysis-reports/ar23-325a)\n\n\n\n\n\n\n\n\n\n\n\n Sep 07, 2023\n \n\n\n Analysis Report \\| AR23\\-250A\n \n\n### [MAR\\-10430311\\-1\\.v1 Multiple Nation\\-State Threat Actors Exploit CVE\\-2022\\-47966 and CVE\\-2022\\-42475](/news-events/analysis-reports/ar23-250a)\n\n\n\n\n\n\n\n\n\n\n\n Sep 07, 2023\n \n\n\n Analysis Report \\| AR23\\-250A\n \n\n### [MAR\\-10454006\\.r5\\.v1 SUBMARINE, SKIPJACK, SEASPRAY, WHIRLPOOL, and SALTWATER Backdoors](/news-events/analysis-reports/ar23-250a-0)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[Return to top](#) \n\n\n\n\n* [Topics](/topics)\n* [Spotlight](/spotlight)\n* [Resources \\& Tools](/resources-tools)\n* [News \\& Events](/news-events)\n* [Careers](/careers)\n* [About](/about)\n\n\n\n\n\n\n\n\n[Cybersecurity \\& Infrastructure Security Agency](/ \"Go to the Cybersecurity & Infrastructure Security Agency homepage\")\n\n\n* [Facebook](https://www.facebook.com/CISA)\n* [Twitter](https://twitter.com/CISAgov)\n* [LinkedIn](https://www.linkedin.com/company/cybersecurity-and-infrastructure-security-agency)\n* [YouTube](https://www.youtube.com/@cisagov)\n* [Instagram](https://www.instagram.com/cisagov)\n* [RSS](/subscribe-updates-cisa)\n\n\n\n\n CISA Central\n \n[1\\-844\\-Say\\-CISA](tel:1-844-Say-CISA) \n[SayCISA@cisa.gov](mailto:SayCISA@cisa.gov) \n\n\n\n\n\n\n\n\n\n\n\n DHS Seal\n \n\n\n CISA.gov\n \n\n An official website of the U.S. Department of Homeland Security\n \n\n\n* [About CISA](/about \"About CISA\")\n* [Budget and Performance](https://www.dhs.gov/performance-financial-reports \"Budget and Performance\")\n* [DHS.gov](https://www.dhs.gov \"Department of Homeland Security\")\n* [Equal Opportunity \\& Accessibility](/oedia \"Equal Opportunity & Accessibility\")\n* [FOIA Requests](https://www.dhs.gov/foia \"FOIA Requests\")\n* [No FEAR Act](/no-fear-act \"No FEAR Act Reporting\")\n* [Office of Inspector General](https://www.oig.dhs.gov/ \"Office of Inspector General\")\n* [Privacy Policy](/privacy-policy \"Privacy Policy\")\n* [Subscribe](https://public.govdelivery.com/accounts/USDHSCISA/subscriber/new?topic_id=USDHSCISA_138 \"Subscribe to Email Updates\")\n* [The White House](https://www.whitehouse.gov/ \"The White House\")\n* [USA.gov](https://www.usa.gov/ \"USA.gov\")\n* [Website Feedback](/forms/feedback \"Website Feedback\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "cves": ["CVE-2022-47966", "CVE-2022-42475"], "techniques": [], "advisory": "ar22-277a", "title": "MAR-10365227-1.v1 - Impacket | CISA", "source": "analysis-reports", "id": "e9e8e28308e284074d4596229751f10e8ff580029cd7e75fbec2298126dc9803"}