{
  "id": "6fe3286ce3c479db783d98505d5eb3a17ba3873b9bd8dc55960d3b42132f3c43",
  "markdown": "HomeCIS AdvisoriesA Vulnerability in Mozilla PDF.js Could Allow for Arbitrary Code ExecutionA Vulnerability in Mozilla PDF.js Could Allow for Arbitrary Code ExecutionMS-ISAC ADVISORY NUMBER:2024-046DATE(S) ISSUED:05/07/2024OVERVIEW:A vulnerability has been discovered in Mozilla PDF.js could allow for arbitrary code execution. Mozilla PDF.js is a PDF viewer that is built into Mozilla Firefox and can be used by other web browsers. Exploitation of this vulnerability could allow for arbitrary code execution in the context of the logged on user. Depending on the privileges associated with the user, an attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have less rights on the system could be less impacted than those who operate with administrative user rights.THREAT INTELLIGENCE:There are no reports of this vulnerability being exploited in the wild.SYSTEMS AFFECTED:Mozilla PDF.js versions prior to 4.2.67RISK:Government:Large and medium government entitiesHIGHSmall governmentMEDIUMBusinesses:Large and medium business entitiesHIGHSmall business entitiesMEDIUMHome Users:LOWTECHNICAL SUMMARY:A vulnerability has been discovered in Mozilla PDF.js that could allow for arbitrary code execution. If PDF.js is used to load a malicious PDF, as a file either on the user system or hosted on a website, and PDF.js is configured with isEvalSupported set to true (which is the default value), unrestricted attacker-controlled JavaScript may be executed. Details of the vulnerability are as follows:\nTactic: Initial Access (TA0001):\nTechnique: Drive-by Compromise (T1189):\n\nPDF.js vulnerable to arbitrary JavaScript execution upon opening a malicious PDF (CVE-2024-4367)\nSuccessful exploitation of this vulnerability could allow for arbitrary code execution in the context of the logged on user. Depending on the privileges associated with the user, an attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users that are configured to have fewer rights on the system could be less impacted than those that operate with administrative user rights.\nRECOMMENDATIONS:We recommend the following actions be taken\n\nApply appropriate updates provided by Mozilla to vulnerable systems immediately after appropriate testing. (M1051: Update Software)\no   Safeguard 7.1: Establish and Maintain a Vulnerability Management Process: Establish and maintain a documented vulnerability management process for enterprise assets. Review and update documentation annually, or when significant enterprise changes occur that could impact this Safeguard.\no   Safeguard 7.4: Perform Automated Application Patch Management: Perform application updates on enterprise assets through automated patch management on a monthly, or more frequent, basis.\no   Safeguard 7.7: Remediate Detected Vulnerabilities: Remediate detected vulnerabilities in software through processes and tooling on a monthly, or more frequent, basis, based on the remediation process.\no   Safeguard 9.1: Ensure Use of Only Fully Supported Browsers and Email Clients: Ensure only fully supported browsers and email clients are allowed to execute in the enterprise, only using the latest version of browsers and email clients provided through the vendor.\n\no   Apply the Principle of Least Privilege to all systems and services. Run all software as a non-privileged user (one without administrative privileges) to diminish the effects of a successful attack. (M1026: Privileged Account Management)\no   Safeguard 4.7: Manage Default Accounts on Enterprise Assets and Software: Manage default accounts on enterprise assets and software, such as root, administrator, and other pre-configured vendor accounts. Example implementations can include: disabling default accounts or making them unusable.\no   Safeguard 5.4: Restrict Administrator Privileges to Dedicated Administrator Accounts: Restrict administrator privileges to dedicated administrator accounts on enterprise assets. Conduct general computing activities, such as internet browsing, email, and productivity suite use, from the user\u2019s primary, non-privileged account.\no   Restrict use of certain websites, block downloads/attachments, block JavaScript, restrict browser extensions, etc. (M1021 : Restrict Web-Based Content)\no   Safeguard 2.7: Allowlist Authorized Scripts: Use technical controls, such as digital signatures and version control, to ensure that only authorized scripts, such as specific .ps1, .py, etc., files, are allowed to execute. Block unauthorized scripts from executing. Reassess bi-annually, or more frequently.\no   Safeguard 9.3: Maintain and Enforce Network-Based URL Filters: Enforce and update network-based URL filters to limit an enterprise asset from connecting to potentially malicious or unapproved websites. Example implementations include category-based filtering, reputation-based filtering, or through the use of block lists. Enforce filters for all enterprise assets.\no   Inform and educate users regarding the threats posed by hypertext links contained in emails or attachments especially from un-trusted sources. Remind users not to visit un-trusted websites or follow links provided by unknown or un-trusted sources. (M1017: User Training)\no   Safeguard 14.1: Establish and Maintain a Security Awareness Program: Establish and maintain a security awareness program. The purpose of a security awareness program is to educate the enterprise\u2019s workforce on how to interact with enterprise assets and data in a secure manner. Conduct training at hire and, at a minimum, annually. Review and update content annually, or when significant enterprise changes occur that could impact this Safeguard.\nSafeguard 14.2: Train Workforce Members to Recognize Social Engineering Attacks: Train workforce members to recognize social engineering attacks, such as phishing, pre-texting, and tailgating.REFERENCES:CVEhttps://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4367Mozillahttps://github.com/advisories/GHSA-wgrm-67xf-hhpqGet Email Updates When Cyber Threats Like This Arise Subscribe to Advisories Information HubAdvisories See All Advisories Blog Post08.09.2024Top 10 Malware Q2 2024Read MoreAdvisory08.07.20242024-088: Multiple Vulnerabilities in Google Android OS Could Allow for Privilege EscalationRead MoreAdvisory08.07.20242024-087: Multiple Vulnerabilities in Google Chrome Could Allow for Arbitrary Code ExecutionRead MoreBlog Post07.26.2024CrowdStrike Falcon Outage Exploited for Social EngineeringRead More",
  "cves": [
    "CVE-2024-4367"
  ],
  "techniques": [
    "T1189"
  ],
  "title": "A Vulnerability in Mozilla PDF.js Could Allow for Arbitrary Code Execution",
  "source": "cis",
  "advisory": "cybersecurity-alerts"
}