{
  "markdown": " \n \nU/OO/ 237248 -23 | PP-23-4325  | DEC  2023 Ver. 1.0 \nNational Security Agency  | Cybersecurity Information  Sheet  \nManaging Risk from Software Defined Networking \nControllers  \nExecutive s ummary  \nSoftware Defined Networking (SDN) is a networking paradigm that enables enterprises \nto employ a centralized network management server to command and control network \ndevices and control access to applications. This server is referred to as an SDN \nController  (SDNC). Unlike traditional networks that require administrators to log in to \neach device, SDN allows administrators to scale device configuration and maintenance \nby only logging in to the SDNC to make changes to many devices at once.  Often with \nlittle or no additional human interaction, SDN enable s dynamic changes to switching \nand routing functions based on changing conditions detected in the network \nenvironment. Additionally, SDNCs may support integration with other servers and \napplications in an enterpri se environment, typically via application programming \ninterfaces (API s). This integration can allow the SDNC to be part of an enterprises \ngreater automation and orchestration effort.  \nThe SDNC  benefits  enterprise network management  due to its centralized nature , but it \nalso brings risk and could become a high priority target for adversaries. The SDN Cs \nattack surface includes its management interface, the API  it uses to communicate with  \nother devices , the SDNC device itself, and the endpoints and switches that the SDNC \nmanages. Malicious cyber actors could compromise these attack surfaces to perform \nmanagement functions as if they were legitimate administrators, find sensitive \nconfiguration or authentication data, trick network devices into following a rogu e \nSDNCs commands, or misconfigure the SDNC or SDN environment.  \nGiven the critical nature of the SDNC, it requires additional oversight to prevent both \nmalicious activity as well as unintentional changes to the network. The purpose of this \ncybersecurity in formation sheet (CSI) is to describe  mitigations for SDNC risks.   \n\n \n \n \n \n U/OO/ 237248 -23 | PP-23-4325  | DEC  2023 Ver. 1.0  2 \nNSA | Managing Risk from SDN Controllers  \nWhat is software defined networking?  \nSoftware Defined Networking (SDN) allows networks to have a centralized network \nmanagement server, also called the SDN Controller (SDNC), to control the network s \ndevices  automatically . Administrators configure policies in the SDNC that align with \nenterprise network segmentation requirements. As a result, the SDNC pushes \nconfigurations to network devices based on th ose policies. An SDNC may also include \nthe capability to decide how to switch and route traffic when switches and routers \nreceive network traffic.  \nTraditionally, when an administrator wants to make changes to network devices like \nswitches and routers, the administrator has to log in to the netwo rk devices  one-by-one \nto perform the necessary configuration changes. With SDN, the administrator needs \nonly to log in to the SDNC. The administrator can configure policies in the SDNC  that \ndescribe how the network devices must be configured under various conditions. In this \nway, SDN fosters dynamic configuration of multiple network devices to segment traffic \nto applications based on conditions in accordance with the policies. [1] The SDNC can \ndetect changes in the network environment and autonomously update the \nconfigurations of the switches and routers,  including to  alter the segmentation of the \nnetwork  to enforce Zero Trust principles .  \nFinally, SDNCs often expose application programming interfaces (API s), which allow \nenterprises to write custom scripts with API calls tailored to the operation and functions \nof the environment. This ability for programmatic administration and configuration of the \nSDNC and SDN environ ment further helps enterprises achieve their greater automation \nand orchestration efforts. APIs may also allow the SDNC to integrate with other existing \nservices and applications, s o that changes in the SDN environment can automatically \nbe communicated wit h other critical components of the enterprise, and other \napplications c an report external changes that could affect the network infrastructure  to \nthe SDNC , including cases where the SDNC should take action in response to security \nthreats.   \nControl access t o the management interface  \nSDNCs  typically have a management interface for administrators to access and \nconfigure the SDNC and SDN environment. Unrestricted access to the management \ninterface leaves the SDNC vulnerable to compromise.  \n\n \n \n \n \n U/OO/ 237248 -23 | PP-23-4325  | DEC  2023 Ver. 1.0  3 \nNSA | Managing Risk from SDN Controllers  \nNSA recommends enterprises only use SDNCs that support strict, fine -grained access \ncontrol to the management interface. Enterprises should allow access to only a limited \nnumber of administrators in accordance with the principle of least privilege, using role -\nbased access  control (RBAC) to only allow SDN administrators to perform functions \nthey are authorized to perform.  \nIdeally, enterprises should restrict access to the management interface to local access \nonly, where an administrator must use a Privileged Access Workstat ion (PAW) \nconnected directly to the management interface. If networked access must be used for \nremote administration, restrict access to a dedicated management network.  [2] Only \nallow access to the SDNCs management interface from a dedicated PAW  that only \nadministrators use  and is not used for  high-risk activity (email, web surfing, etc.).  \nNSA strongly recommends multifactor authentication (MFA) for administrators \nmanaging critical devices. Using single factor authentication increases the risk of device \nexploitation. If unable to implement MFA, use unique local accounts assigned on a per \nuser basis, along with long and complex passwords to reduce the risk of using s ingle \nfactor authentication. Choosing strong password storage algorithms can also help \nreduce the risk of using single factor authentication.  \nNSA recommends following National Institute of Standards and Technology (NIST) \npassword guidance in NIST Special P ublication 800 -63B version 3, section 5.1.1 \nMemorized Secrets . [3]  \nFinally, NSA recommends enterprises physically segment the management interfaces \nfrom the interf aces used for communication with network devices . Connect PAWs to a \nsegmented, out -of-band management (OOBM) network  only manage the SDNC from \nPAWs on the OOBM network.  [2] Carefully consider  which connections to allow and \ncreat e rulesets that follow a deny -by-default, permit -by-exception approach.  \nPrevent viewing of sensitive information in network traffic  \nThe SDN C typically communicates using the following two separate network traffic \nflows:  \n1. Network traffic f or managing  the SDNC  \n2. Network traffic f or configur ing network devices  \n\n \n \n \n \n U/OO/ 237248 -23 | PP-23-4325  | DEC  2023 Ver. 1.0  4 \nNSA | Managing Risk from SDN Controllers  \nNetwork traffic f or managing the SDNC  occurs between the PAWs and SDNC. This \ntraffic can also occur between the SDNC and external services, such as services used \nfor remote authentication and remote logging.  \nNetwork traffic fo r configur ing network devices  occurs when the SDNC needs to make \nchanges on network devices. Here, the SDNC sends n etwork traffic containing \nconfiguration information to the network devices.  \nThese two network traffic flows can contain authentication and configuration information \nthat could be vulnerable to man -in-the-middle techniques or passive viewing if the traffic \nor information is plaintext.  \nNSA recommends enterprises use SDNCs that support network traffic protocols that \nprotect the authentication and configuration information transmitted over the network. \nFor the management traffic flow, network traffic between administrator workstations and \nthe SDNC should use strong encryption, such as transport layer security (TLS) version \n1.2 or better and secure shell (SSH) version 2 or better. If remote authentication is \nused, ensure the network traffic to and from the remote services is encrypted, and \nensure any authentication information transmitte d over the network, including \npasswords, tokens, hashes, tickets, and challenge -responses, is protected from \ninspection. Traffic containing network device configurations  transiting  between the \nSDNC and network devices should also be encrypted. [4] \nSome traffic in the SDN environment may not be able to be encrypted; NSA views  \nhaving a centralized network management system that does not support encrypted \nprotocols as doing more harm than good to the enterprise environment , and urges \norganizations to only use SDN Cs that support encrypted protocols . \nProtect critical data at rest  \nThe SDN C must store sensitive authentication and cryptographic information , such as  \nadministr ator credentials and encryption keys. Rather than try to intercept network traffic \nor leverage vulnerabilities to break into network devices, malicious actors could recover \nthe passwords and keys stored on SDNCs that do not properly protect this sensitive \ninformation when stored at rest.  \n\n \n \n \n \n U/OO/ 237248 -23 | PP-23-4325  | DEC  2023 Ver. 1.0  5 \nNSA | Managing Risk from SDN Controllers  \nNSA recommends enterprises only use SDNCs that protect critical data at rest inside \nthe controller: protect authentication credentials using strong hashing and encryption \nand limit access to stored cryptographic materials.  [4] If possible, SDNCs should ensure \ndata at rest inside the controller is restricted to internal services and processes needed \nto perform functions that use the d ata, and prevent unnecessary internal services and \nprocesses from accessing it at rest.  \nOnly allow the authorized SDN controller to configure \nnetwork devices  \nThe network devices in the SDN environment only switch and route traffic in accordance \nwith the configurations sent from the SDNC. If the SDNC -to-network device \ncommunication does not use protocols that are strongly authenticated, network devices \nawaiting configurations from the SDNCs may be vulnerable to receiving configurations \nfrom unauthorized sources claiming to be SDNCs.  \nEnsure that the network devices in the SDN environment only accept configurations \nfrom the legitimate SDNCs  by only using strong cr yptographic mechanisms for \nauthentication, such as TLS certificates or SSH keys, to verify the SDNC is legitimate . \n[4] All attempts from other endpoints or maliciou s SDNCs to take control of network \ndevices should be blocked and logged by the network devices.  \nDo not let unauthorized or unauthen ticated devices join the \nSDN environment  \nMalicious actors could connect workstations or additional network devices to the S DN \nenvironment . The malicious workstations could  craft packets to exploit vulnerabilities in \nthe SDNC or network devices. The additional network devices could send fake data to \nthe SDNC to cause it to make changes to the network. The actors could also \ncomp romise workstations already on the network to exploit devices or move laterally.  \nConfigure the network to block or ignore unknown devices. Do not allow \nautoconnection. Block and log all unauthorized traffic to the SDNC and network device \nmanagement inte rfaces .  \n\n \n \n \n \n U/OO/ 237248 -23 | PP-23-4325  | DEC  2023 Ver. 1.0  6 \nNSA | Managing Risk from SDN Controllers  \nControl access to APIs  \nSDNCs typically provide APIs to programmatically make changes through the controller \nand allow for interoperability with other software. While APIs are essential for \nautomation and orchestration of networks, administrators should be aware of the \nadditional attack surface that APIs create. SDNCs could be left vulnerable to API \nmisuse, where malicious cyber actors could collect sensitive data or perform malicious \nactions. In addition , an API function mak ing one legitimate conf iguration change could \nalso disrupt, override, or cause conflicts with existing configurations or other SDN \nprocesses. This allows malicious actors and authorized users alike to cause negative \nimpacts , such as disabling of security controls, misrouting of network traffic, opening \npreviously closed segments, and so on.  \nNote : Configuring routing equipment can often be complex and issues can be difficult to \ndiagnose when network configurations are  static. This complexity can often be \nexacerbated by adding dynamically changing SDN policies, especially if they are not \nvery carefully written.  \nEnforce separation of duties and least privilege when providing access to APIs. Create \na dedicated API admini strator role, and restrict privileges so this role does not have the \nsame level of access as SDN administrators.  \nAn API interface provides access to configurable items and functions commonly \nreferred to as API objects or endpoints. The request that an  administrator makes to \nperform an action on an API object is commonly referred to as an API call. The SDNC \nshould  only accept API calls from authorized API administrators. Restrict API calls to \nonly those API objects relevant to the administrators role . Only API objects that can be \nused to safely and securely manage the SDN environment should be used: a llowlist the \nAPI objects needed to make authorized changes, and block access to all other unsafe \nand irrelevant API objects.  \nNSA recommends enterprises enforce auditing and logging of all authorized and \nunauthorized calls to SDNC API objects. Creating and enforcing policy that determines \nhow administrators are authorized to manage SDN environments through APIs will aid \nin identifying unusual activity. Fee d API usage logs through analytic platforms to aid in \nalerting on unusual API usage.  \n\n \n \n \n \n U/OO/ 237248 -23 | PP-23-4325  | DEC  2023 Ver. 1.0  7 \nNSA | Managing Risk from SDN Controllers  \nNSA recommends enterprises only employ an SDNC that strongly authenticates API \ncalls. Ensure API calls are secured within authenticated and encrypted network traffic \nflows , such as via TLS v1.2 or better, or SSH v2 or better. If possible, use mutual \nauthentication, such as requiring both client and server certificates  via TLS . At a \nminimum, require that the SDNC presents a valid server certificate to the client \nperforming A PI calls, and that the client properly validates the certificate before \nauthenticating and performing any API calls.  \nManage custom code  use \nAPIs in SDNCs allow users to write custom code and scripts that perform calls to the \nAPI objects and automate repetitive SDNC configuration and management tasks. While \ndevelopers can read the API documentation to know which API objects will be needed \nto automate the SDN configuration tasks without in -depth knowledge of the existing \nnetworking, security, and SDN in frastructure, enterprises must still put custom code \nthrough version control and vetting. Some API objects may have dependencies on other \nAPI objects. Calling an API object to make one configuration change could also trigger \nanother object to make an unint ended change. These unintended changes could make \nnetworking and security changes the administrators did not intend , potentially result ing \nin negative impacts to the environment, such as inadvertently subverting security \ncontrols  and misrouting network tra ffic to unprotected networks.  \nOnly allow security -aware developers trained on how the SDN environment works and \nits risks to send custom scripts to the SDNC.  All scripts used to make API calls should \nbe validated through change management platforms.  \nSelect reputable vendors  \nSince more complex interfaces naturally tend to have more implementation bugs, some \nAPIs may have vulnerabilities in their design which could allow malicious cyber actors to \ngain unauthenticated access, conduct privilege escalation, perform remote code \nexecution, or otherwise bypass the security controls of the device. Given the complexity, \npower, and relative newness of such APIs, this could be a lucrative attack surface f or \nadversaries, and various API vulnerabilities have already been disclosed and patched.  \nEnterprises should only deploy SDNCs from vendors with a reputation for API reliability \nand security, and regularly apply patches and software updates as they are rel eased.  \n\n \n \n \n \n U/OO/ 237248 -23 | PP-23-4325  | DEC  2023 Ver. 1.0  8 \nNSA | Managing Risk from SDN Controllers  \nFollow latest API documentation  \nSometimes, APIs could become outdated or deprecated, but still be accessible. Also, \nproducts could have APIs that are not documented, but still accessible. Deprecated and \nundocumented APIs could have vulnerabilities that go undetected by vendors, but are \nidentified and leveraged by malicious actors .  \nWhen possible, identify the latest vendor -provided API documentation and ensure the \nAPI usage is conducted in accordance with the documentation. API calls that appear to \nnot conform to the API documentation could be a sign of undocumented or deprecated \nAPIs. Prevent access to any discovered undocumented or abnormal APIs to reduce the \nrisk of unwanted functions or exploitation from unpatched vulnerabilities.  \nCentralized con trol: a trusted core  \nSDNCs enhance the network environment through dynamic command and control of \nnetwork devices and access to applications, but they could be a high -priority target for \nmalicious cyber actors . When done right, the SDNC becomes the core of  the modern \nenvironment, trusted by network devices and other critical enterprise services. To this \nend, a fully integrated SDN implementation needs to be well thought out and securely \nimplemented to provide network segmentation and the needed granular acc ess control \nfor advanced cybersecurity capabilities  and enforcing Zero Trust principles . NSA will be \npartnering with the National Information Assurance Partnership (NIAP) to publish an \nSDN Controller Protection Profile that further defines the security req uirements to \nharden SDNCs.   \n  \n\n \n \n \n \n U/OO/ 237248 -23 | PP-23-4325  | DEC  2023 Ver. 1.0  9 \nNSA | Managing Risk from SDN Controllers  \nWorks c ited \n[1] NSA. Segment Networks and Deploy Application -aware Defense . 2019. \nhttps://media.defense.gov/2019/Sep/09/2002180325/ -1/-\n1/0/Segment%20Networks%20and%20Deploy%20Applicatio n%20Aware%20Defenses%20 -\n%20Copy.pdf   \n[2] NSA. Performing Out of Band Network Management. 2020. \nhttps://media.defense.gov/2020/Sep/17/ 2002499616/ -1/-\n1/0/PERFORMING_OUT_OF_BAND_NETWORK_MANAGEMENT20200911.PDF  \n[3] NIST . Special Publication 800 -63B version 3, section 5.1.1 Memorized Secrets . 2020.  \nhttps://pages.nist.gov/800 -63-3/sp800 -63b.html#sec5   \n[4] NSA. Network Infrastructure Security Guide. 2023. \nhttps://media.defense.gov/2022/Jun/15/2003018261/ -1/-\n1/0/CTR_NSA_NETWORK_INFRASTRUCTURE_SECURITY_GUIDE_20220615.PDF   \nDisclaimer of endorsement  \nThe information and opinions contained in this document are provided \"as is\" and without any warranties or guarantees. Refere nce \nherein to any specific commercial products, process, or service by trade name, trademark, manufacturer, or otherwise, does not \nconstitute or imply its endorsement, recommendation, or favoring by the United States Government, and this guidance shall not  be \nused for advertising or product endorsement purposes.  \nPurpose  \nThis document was developed in furtherance  of NSAs cybersecurity missions, including its responsibilities to identify and \ndisseminate threats to National Security Systems, Department of Defense, and Defense Industrial Base information systems, and  to \ndevelop and issue cybersecurity specifications  and mitigations. This information may be shared broadly to reach all appropriate \nstakeholders.  \nContact  \nCybersecurity Report Feedback: CybersecurityReports@nsa.gov  \nGeneral Cybersecurity Inquiries or Customer Requests: Cybersecurity_Requests@nsa.gov   \nDefense Industrial Base Inquiries and Cybersecurity Services: DIB_Defense@cyber.nsa.gov  \nMedia Inquiries / Press Desk: NSA Media Relations: 443 -634-0721, MediaRelations@nsa.gov  \n\n",
  "cves": [],
  "techniques": [
    "T2020"
  ],
  "advisory": "cybersecurity-alerts",
  "title": "csi_managing_risk_from_sdn_controllers",
  "source": "nsa",
  "id": "0f9fb8fc52d02ed45d2b164f1b4b7dd2fd2e28816d29da09666b8cd2c448351c"
}