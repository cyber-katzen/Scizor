{
  "markdown": "Best practices for \nevent logging and \nthreat detection\n\n\n\nBest practices for event logging and threat detection3Table of contents\nExecutive summary   4\nIntroduction   5\nAudience    5\nBest practices    5\nEnterprise-approved event logging policy   5\nEvent log quality    5\nCaptured event log details    6\nOperational T echnology considerations   7\nAdditional resources   7\nContent and format consistency   7\nTimestamp consistency   7\nAdditional resources   8\nEvent log retention   8\nCentralised log collection and correlation   8\nLogging priorities for enterprise networks   8\nLogging priorities for operational technology   9\nLogging priorities for enterprise mobility using mobile computing devices   10\nLogging priorities for cloud computing   10\nSecure storage and event log integrity   11\nSecure transport and storage of event logs   11\nProtecting event logs from unauthorised access, modification and deletion   11\nCentralised event logging enables threat detection   12\nTimely ingestion   12\nDetection strategy for relevant threats   12\nDetecting living off the land techniques   12\nCloud considerations   15\nOperational technology considerations    15\nAdditional guidance   16\n\nExecutive summary\nThis publication defines a baseline for event logging best practices to mitigate cyber threats. It was \ndeveloped by the Australian Signals Directorates Australian Cyber Security Centre (ASDs ACSC) in \ncooperation with the following international partners:\n United States (US) Cybersecurity and Infrastructure Security Agency (CISA), the Federal Bureau of \nInvestigation (FBI) and the National Security Agency (NSA)\n United Kingdom (UK) National Cyber Security Centre (NCSC-UK)\n Canadian Centre for Cyber Security (CCCS)\n New Zealand National Cyber Security Centre (NCSC-NZ) and Computer Emergency Response T eam \n(CERT NZ)\n Japan National Center of Incident Readiness and Strategy for Cybersecurity (NISC) and Computer \nEmergency Response T eam Coordination Center (JPCERT/CC)\n The Republic of Korea National Intelligence Services (NIS) and NISs National Cyber Security Center \n(NCSC-Korea)\n Singapore Cyber Security Agency (CSA)\n The Netherlands General Intelligence and Security Service (AIVD) and Military Intelligence and \nSecurity Service (MIVD).\nEvent logging supports the continued delivery of operations and improves the security and resilience \nof critical systems by enabling network visibility. This guidance makes recommendations that improve \nan organisations resilience in the current cyber threat environment, with regard for resourcing \nconstraints. The guidance is of moderate technical complexity and assumes a basic understanding of \nevent logging.\nAn effective event logging solution aims to:\n send alerts to the network defenders responsible for monitoring when cyber security events such as \ncritical software configuration changes are made or new software solutions are deployed\n identify cyber security events that may indicate a cyber security incident, such as malicious actors \nemploying living off the land (LOTL) techniques or lateral movement post-compromise\n support incident response by revealing the scope and extent of a compromise\n monitor account compliance with organisational policies\n reduce alert noise, saving on costs associated with storage and query time\n enable network defenders to make agile and informed decisions based on prioritisation of alerts \nand analytics\n ensure logs and the logging platforms are useable and performant for analysts.\nThere are four key factors to consider when pursuing logging best practices:\n1. enterprise-approved event logging policy\n2. centralised event log access and correlation\n3. secure storage and event log integrity\n4. detection strategy for relevant threats.\nBest practices for event logging and threat detection 5 Best practices for event logging and threat detection 4\n\nIntroduction\nThe increased prevalence of malicious actors employing LOTL techniques, such as LOTL binaries \n(LOLBins) and fileless malware, highlights the importance of implementing and maintaining an \neffective event logging solution. As demonstrated in the joint-sealed publication Identifying and \nMitigating Living Off the Land T echniques , Advanced Persistent Threats (APTs) are employing LOTL \ntechniques to evade detection. The purpose of this publication is to detail best practice guidance \nfor event logging and threat detection for cloud services, enterprise networks, enterprise mobility, \nand operational technology (OT) networks. The guidance in this publication focuses on general best \npractices for event logging and threat detection; however, LOTL techniques feature as they provide a \ngreat case study due to the high difficulty in detecting them.\nAudience \nThis guidance is technical in nature and is intended for those within medium to large organisations. As \nsuch, it is primarily aimed at:\n senior information technology (IT) and OT decision makers\n IT and OT operators\n network administrators\n critical infrastructure providers.\nBest practices \nEnterprise-approved event logging policy\nDeveloping and implementing an enterprise approved logging policy improves an organisations \nchances of detecting malicious behaviour on their systems and enforces a consistent method of \nlogging across an organisations environments. The logging policy should take into consideration any \nshared responsibilities between service providers and the organisation. The policy should also include \ndetails of the events to be logged, event logging facilities to be used, how event logs will be monitored, \nevent log retention durations, and when to reassess which logs are worthy of collection.\nEvent log quality \nOrganisations are encouraged to implement an event logging policy focused on capturing high-\nquality cyber security events to aid network defenders in correctly identifying cyber security incidents. \nIn the context of cyber security incident response and threat detection, event log quality refers to \nthe types of events collected rather than how well a log is formatted. Log quality can vary between \norganisations due to differences in network environments, the reason behind the need to log, \ndifferences in critical assets and the organisations risk appetite.\nUseful event logs enrich a network defenders ability to assess security events to identify whether they \nare false positives or true positives. Implementing high-quality logging will aid network defenders in \ndiscovering LOTL techniques that are designed to appear benign in nature.  \nNote: Capturing a large volume of well-formatted logs can be invaluable for incident responders in \nBest practices for event logging and threat detection 5 Best practices for event logging and threat detection 4\n\nforensics analysis scenarios. However, organisations are encouraged to properly organise logged \ndata into hot data storage that is readily available and searchable, or cold data storage that \nhas deprioritised availability and is stored through more economical solutions  an important \nconsideration when evaluating an organisations log storage capacity.\nFor more information on how to prioritise collection of high-quality event logs please refer to CISA s \nGuidance for Implementing M-21-3: Improving the Federal Governments Investigative and Remediation \nCapabilities 1.\nT o strengthen detection of malicious actors employing LOTL techniques, some relevant considerations \nfor event logging include:\n On Linux-based systems, logs capturing the use of curl, systemctl, systemd, python and other \ncommon LOLBins leveraged by malicious actors.\n On Microsoft Windows-based systems, logs capturing the use of wmic.exe, ntdsutil.exe, Netsh, \ncmd.exe, PowerShell, mshta.exe, rundll32.exe, resvr32.exe and other common LOLBins leveraged \nby malicious actors. Ensure that logging captures command execution, script block logging and \nmodule logging for PowerShell, and detailed tracking of administrative tasks.\n For cloud environments, logging all control plane operations, including API calls and end \nuser logins. The control plane logs should be configured to capture read and write activities, \nadministrative changes, and authentication events.\nCaptured event log details \nAs a part of an organisations event logging policy, captured event logs should contain sufficient detail \nto aid network defenders and incident responders. If a logging solution fails to capture data relevant \nto security, its effectiveness as a cyber security incident detection capability is heavily impacted.\nThe US Office of Management and Budgets M-21-31 2 outlines a good baseline for what an event log \nshould capture, if applicable: \n properly formatted and accurate timestamp (millisecond granularity is ideal)\n event type (status code)\n device identifier (MAC address or other unique identifier)\n session/transaction ID\n autonomous system number\n source and destination IP (includes both IPv4 and IPv6)\n status code\n response time\n additional headers (e.g. HTTP headers)\n the user ID, where appropriate\n the command executed, where appropriate\n a unique event identifier to assist with event correlation, where possible.\nNote: Where possible, all data should be formatted as key-value-pairs to allow for easier extraction.\n1 While the audience for the cited guidance is U.S. Federal Civilian Executive Branch agencies, it may provide useful guidance to all \nentities regarding logging best practices.\n2 While only binding on US federal information systems, excluding national security systems, this memorandum may provide useful \nguidance to all entities regarding logging best practices.\nBest practices for event logging and threat detection 7 Best practices for event logging and threat detection 6\n\nOperational Technology considerations\nNetwork administrators and network operators should take into consideration the OT devices \nwithin their OT networks. Most OT devices use embedded software that is memory and/or processor \nconstrained. An excessive level of logging could adversely affect the operation of those OT devices. \nAdditionally, such OT devices may not be capable of generating detailed logs, in which case, sensors \ncan be used to supplement logging capabilities. Out-of-band log communications, or generating \nlogs based on error codes and the payloads of existing communications, can account for embedded \ndevices with limited logging capabilities.\nAdditional resources\nThe following resources include examples of details to be logged:\n ASDs ACSC Information Security Manual  (ISM) provides event log details to record in the Guidelines \nfor System Monitoring .\n CISA s Guidance for Implementing M-21-31: Improving the Federal Governments Investigative and \nRemediation Capabilities  details another approach to prioritising log collection and is aimed at US \nfederal civilian executive branch organisations.\n NIST has outlined OT considerations for event logging in their Guide to Operational T echnology \n(OT) Security .\n For examples of detection uses cases, consider visiting the MITRE ATT&CK list of data sources .\nContent and format consistency\nWhen centralising event logs, organisations should consider using a structured log format, such as \nJSON, where each type of log captures and presents content consistently (that is, consistent schema, \nformat and order). This is particularly important when event logs have been forwarded to a central \nstorage facility as this improves a network defenders ability to search for, filter and correlate event \nlogs. Since logs may vary in structure (or lack thereof), implementing a method of automated log \nnormalisation is recommended. This is an important consideration for logs that can change over time \nor without notice such as software and Software-as-a-Service (SaaS) logs.\nTimestamp consistency\nOrganisations should consider establishing an accurate and trustworthy time source and use this \nconsistently across all systems to assist network defenders in identifying connections between event \nlogs. This should also include using the same date-time format across all systems. Where possible, \norganisations should use multiple accurate time sources in case the primary time source becomes \ndegraded or unavailable. Note that, particularly in distributed systems, time zones and distance \ncan influence how timestamps read in relation to each other. Network owners, system owners \nand cyber security incident responders are encouraged to understand how this could impact their \nown environments. ASDs ACSC and co-authors urge organisations to consider implementing the \nrecommendations below to help ensure consistent timestamp collection.\n Time servers should be synchronised and validated throughout all environments and set to capture \nsignificant events, such as device boots and reboots\n Using Coordinated Universal Time (UTC) has the advantage of no time zones as well as no daylight \nsavings, and is the preferred time standard.\n  Implement ISO 8601 formatting, with the year listed first, followed by the month, day, hour, \nminutes, seconds, and milliseconds (e.g. 2024-07-25T20:54:59.649Z). \n Timesharing should be unidirectional. The OT environment should sychronise time sync with the IT \nenvironment and not the other way around.\nBest practices for event logging and threat detection 7 Best practices for event logging and threat detection 6\n\n Data historians may be implemented on some operational assets to record and store time-series \ndata of industrial processes running on the computer system. These can provide an additional \nsource of event log data for OT networks.\nAdditional resources\n ASDs ACSC has released Windows Event Logging and Forwarding  guidance that details important \nevent categories and recommendations for configurations, log retention periods and event \nforwarding.\n For more information about logging, please explore CISA s Logging Made Easy (LME), a no-cost \nsolution providing essential log management for small to medium-sized organisations, on CISA s \nwebsite  or GitHub page .\n The Joint SIGINT Cyber Unit (JSCU) of the AIVD and MIVD has published a repository on GitHub with \na Microsoft Windows event logging and collections baseline focused on finding balance between \nforensic value and optimising retention. You can find this repository on the JSCUs GitHub .\nEvent log retention\nOrganisations should ensure they retain logs for long enough to support cyber security incident \ninvestigations. Default log retention periods are often insufficient. Log retention periods should be \ninformed by an assessment of the risks to a given system. When assessing the risks to a system, \nconsider that in some cases, it can take up to 18 months to discover a cyber security incident and some \nmalware can dwell on the network from 70 to 200 days before causing overt harm.3 Log retention \nperiods should also be compliant with any regulatory requirements and cyber security frameworks \nthat may apply in an organisations jurisdiction. Logs that are crucial in confirming an intrusion and its \nimpact should be prioritised for longer retention.\nIt is important to review log storage allocations, in parallel with retention periods. Insufficient storage \nis a common obstacle to log retention. For example, many systems will overwrite old logs when \ntheir storage allocation is exhausted. The longer that logs can be kept, the higher the chances are \nof determining the extent of a cyber security incident, including the potential intrusion vectors that \nrequire remediation. For effective security logging practices, organisations should implement data \ntiering such as hot and cold storage. This ensures that logs can be promptly retrieved to facilitate \nquerying and threat detection.\nCentralised log collection and correlation\nThe following sections detail prioritised lists of log sources for enterprise networks, OT, cloud \ncomputing and enterprise mobility using mobile computing devices. The prioritisation takes into \nconsideration the likelihood that the logged asset will be targeted by a malicious actor, as well as the \nimpact if the asset were to be compromised. It also prioritises log sources that can assist in identifying \nLOTL techniques. Please note that this is not an exhaustive list of log sources and their threats, and \ntheir priority may differ between organisations.\nLogging priorities for enterprise networks\nEnterprise networks face a large variety of cyber threats. These include malware, malicious insiders, \nand exploitation of unpatched applications and services. In the context of LOTL, enterprise networks \nprovide malicious actors with a wide variety of native tools to exploit.\nASDs ACSC and co-authors recommend that organisations prioritise the following log sources within \ntheir enterprise network: \n1. critical systems and data holdings likely to be targeted\n3 CISA s First 48: What to Expect When a Cyber Incident Occurs\nBest practices for event logging and threat detection 9 Best practices for event logging and threat detection 8\n\n2. internet-facing services, including remote access, network metadata, and their underlying server \noperating system\n3. identity and domain management servers\n4. any other critical servers\n5. edge devices, such as boundary routers and firewalls\n6. administrative workstations\n7. highly privileged systems such as configuration management, performance and availability \nmonitoring (in cases where privileged access is used), Continuous Integration/Continuous Delivery \n(CI/CD), vulnerability scanning services, secret and privilege management\n8. data repositories\n9. security-related and critical software\n10. user computers\n11. user application logs\n12. web proxies used by organisational users and service accounts\n13. DNS services used by organisational users\n14. email servers\n15. DHCP servers\n16. legacy IT assets (that are not previously captured in critical or internet-facing services)\nASDs ACSC and co-authors recommend organisations monitor lower priority logs as well.  \nThese include:\n underlying infrastructure, such as hypervisor hosts\n IT devices, such as printers\n network components such as application gateways.\nLogging priorities for operational technology\nHistorically, IT and OT have operated separately and have provided distinct functions within \norganisations. Advancements in technology and digital transformation have led to the growing \ninterconnectedness and convergence of these networks. Organisations are integrating IT and \nOT networks to enable the seamless flow of data between management systems and industrial \noperations. Their integration has introduced new cyber threats to OT environments. For example, \nmalicious actors can access OT networks through IT networks by exploiting unpatched vulnerabilities, \ndelivering malware, or conducting denial-of-service campaigns to impact critical services.\nASDs ACSC and co-authors recommend that organisations prioritise the following log sources in their \nOT environment:\n1. OT devices critical to safety and service delivery, except for air-gapped systems4\n2. internet-facing OT devices\n3. OT devices accessible via network boundaries.\n4 The prioritised list focuses on logs that enable the detection of a malicious actor operating remotely. In this context, collecting \nlogs from an air-gapped system is not a high priority unless malicious insiders are a concern.\nBest practices for event logging and threat detection 9 Best practices for event logging and threat detection 8\n\nNote that in cases where OT devices do not support logging, device logs are not available, or are \navailable in a non-standard format, it is good practice to ensure network traffic and communications \nto and from the OT devices are logged.\nLogging priorities for enterprise mobility using mobile computing devices\nEnterprise mobility is an important aspect of an organisations security posture. Mobile device \nmanagement (MDM) solutions allow organisations to manage the security of their enterprise mobility, \ntypically including logging functionality. In the context of enterprise mobility, the aim of effective event \nlogging is to detect compromised accounts or devices; for example, due to phishing or interactions \nwith malicious applications and websites.\nASDs ACSC and co-authors recommend organisations prioritise the following log sources in their \nenterprise mobility solution:\n1. web proxies used by organisational users\n2. organisation operated DNS services\n3. device security posture of organisationally managed devices\n4. device behaviour of organisationally managed devices\n5. user account behaviour such as sign-ins\n6. VPN solutions\n7. MDM and Mobile Application Management (MAM) events5.\nAdditional monitoring should be implemented in collaboration with the telecommunications network \nprovider. Such monitoring includes:\n signalling exploitation\n binary/invisible SMS\n CLI spoofing\n SIM/eSIM activities such as SIM swapping\n null cipher downgrade\n connection downgrade (false base station)\n network API/query against user\n roaming traffic protection\n roaming steering.\nOrganisations should obtain legal advice about what can be logged from any personally owned \nmobile devices that are enrolled in an MDM solution. For example, logging GPS location may be \nsubject to restrictions.\nLogging priorities for cloud computing\nASDs ACSC and co-authors recommend organisations adjust event logging practices in accordance \nwith the cloud service that is administered, whether Infrastructure-as-a-Service (IaaS), Platform-as-\na-Service (PaaS), or SaaS are implemented. For example, IaaS would include a significant amount of \nlogging responsibility on the tenant, whereas SaaS would place a significant amount of the logging \n5 MDM and MAM events are likely to be server-sent events, but they may also be generated by software deployed to the mobile \ndevice. \nBest practices for event logging and threat detection 11 Best practices for event logging and threat detection 10\n\nresponsibility on the provider. Therefore, organisations should coordinate closely with their cloud \nservice provider to understand the shared-responsibility model in place, as it will influence their \nlogging priorities. Logging priorities will also be influenced by different cloud computing service \nmodels and deployment models (that is, public, private, hybrid, community). Where privacy and data \nsovereignty laws apply, logging priorities may also be influenced by the location of the cloud service \nproviders infrastructure. See NSA s Manage Cloud Logs for Effective Threat Hunting guidance  for \nadditional information.\nOrganisations should prioritise the following log sources in their use of cloud computing services:\n1. critical systems and data holdings likely to be targeted\n2. internet-facing services (including remote access) and, where applicable, their underlying server \noperating systems\n3. use of the tenants user accounts that access and administer cloud services \n4. logs for administrative configuration changes\n5. logs for the creation, deletion and modification of all security principals, including setting and \nchanging permissions\n6. authentication success and/or failures to third party services (e.g. SAML/OAuth)\n7. logs generated by the cloud services, including logs for cloud APIs, all network-related events, \ncompliance events and billing events.\nSecure storage and event log integrity\nASDs ACSC and co-authors recommend that organisations implement a centralised event logging \nfacility such as a secured data lake to enable log aggregation and then forward select, processed logs \nto analytic tools, such as security information and event management (SIEM) solution and extended \ndetection and response (XDR) solutions. Many commercially available network infrastructure devices \nhave limited local storage. Forwarding event logs to a centralised and secure storage capability \nprevents the loss of logs once the local devices storage is exhausted. [ CPG 2.U ] This can be further \nmitigated by ensuring default maximum event log storage sizes are configured appropriately on local \ndevices. In the event of a cyber security incident, an absence of historical event logs will frequently \nhave a negative impact on cyber security incident response activities.\nSecure transport and storage of event logs\nASDs ACSC and co-authors recommend that organisations implement secure mechanisms such as \nTransport Layer Security (TLS) 1.3 and methods of cryptographic verification to ensure the integrity \nof event logs in-transit and at rest. Organisations should prioritise securing and restricting access to \nevent logs that have a justified requirement to record sensitive data.\nProtecting event logs from unauthorised access, modification and deletion\nIt is important to perform event log aggregation as some malicious actors are known to modify or \ndelete local system event logs to avoid detection and to delay or degrade the efficacy of cyber security \nincident response. Logs may contain sensitive data that is useful to a malicious actor. As a result, users \nshould only have access to the event logs they need to do their job.\nAn event logging facility should enable the protection of logs from unauthorised modification and \ndeletion. Ensure that only personnel with a justified requirement have permission to delete or modify \nevent logs and view the audit logs for access to the centralised logging environment. The storage of \nlogs should be in a separate or segmented network with additional security controls to reduce the risk \nof logs being tampered with in the event of network or system compromise. Events logs should also be \nBest practices for event logging and threat detection 11 Best practices for event logging and threat detection 10\n\nbacked up and data redundancy practices should be implemented. \nOrganisations are encouraged to harden and segment their SIEM solutions from general IT \nenvironments. SIEMs are attractive targets for malicious actors because they contain a wealth of \ninformation, provide an analysis function, and can be a single point of failure in an organisations \ndetection capability.  Organisations should consider filtering event logs before sending them to a  \nSIEM or XDR to ensure it is receiving the most valuable logs to minimise any additional costs or \ncapacity issues.\nCentralised event logging enables threat detection\nThe aggregation of event logs to a central logging facility that a SIEM can draw from enables the \nidentification of:\n deviations from a baseline\n  A baseline should include installed tools and software, user account behaviour, network traffic, \nsystem intercommunications and other items, as applicable. Particular attention should be paid \nto privileged user accounts and critical assets such as domain controllers.\n  A baseline is derived by performing an analysis of normal behaviour of some user accounts and \nestablishing always abnormal conditions for those same accounts.\n cyber security events\n  For the purpose of this document, a cyber security event is an occurrence of a system, service \nor network state indicating a possible breach of security policy, failure of safeguards or a \npreviously unknown situation that may be relevant to security.\n cyber security incidents \n  For the purpose of this document, a cyber security incident is an unwanted or unexpected cyber \nsecurity event, or a series of such events, that either has compromised business operations or \nhas a significant probability of compromising business operations.\nTimely ingestion\nTimely ingestion of event logs is important in the early detection of a cyber security events and cyber \nsecurity incidents. If the generation, collection and ingestion of event logs is delayed, the organisations \nability to identify cyber security incidents is also delayed.\nDetection strategy for relevant threats\nDetecting living off the land techniques\nASDs ACSC and co-authors recommend that organisations consider implementing user and entity \nbehavioural analytics capabilities to enable automated detection of behavioural anomalies on \nnetworks, devices, or accounts. SIEMs can detect anomalous activity by comparing event logs to a \nbaseline of business-as-usual traffic and activity. Behavioural analytics plays a key role in detecting \nmalicious actors employing LOTL techniques. Below is a case study that shows how threat actors \nleveraged LOTL to infiltrate Windows-based systems. \nBest practices for event logging and threat detection 13 Best practices for event logging and threat detection 12\n\nCase study  Volt Typhoon\nSince mid-2021, Volt Typhoon has targeted critical infrastructure organisations by relying almost \nexclusively on LOTL techniques. Their campaign has been enabled by privately-owned SOHO routers, \ninfected with the KV Botnet malware.\nVolt Typhoon uses PowerShell, a command and scripting interpreter, to:\n discover remote systems [ T1059.001 , T1018 ]\n identify associated user and computer account names using the command  \nGet-EventLog security instanceid 4624  [T1033 ]\n enumerate logs to search for successful logons using wevtutil.exe  and the command  \nGet-EventLog Security  [T1654 ].\nVolt Typhoon consistently obtains valid credentials by extracting the Active Directory database file  \nNTDS.dit6. T o do so, Volt Typhoon has been observed to:\n execute the Windows-native  vsssadmin command to create a volume shadow copy [ T1006 ]\n use Windows Management Instrumentation Console (WMIC) commands [ T1047 ]  to execute \nntdsutil.exe to copy NTDS.dit and the SYSTEM registry from the volume shadow copy\n move laterally to the Microsoft Active Directory Domain Services (AD DS) domain controller via an \ninteractive RDP session using a compromised user account with domain administrator privileges \n[T1021.001 ].\nOther LOTL techniques that Volt Typhoon has been observed to use includes:\n accessing hashed credentials from the Local Security Authority SubSystem Service (LSASS) process \nmemory space [ T1003.001 ]\n using ntdsutil.exe  to create installation media from Microsoft AD DS domain controllers, either \nremote or locally, which contain username and password hashes [ T1003.003 ]\n using PowerShell, WMIC, and the  ping command, to facilitate system discovery [ T1018 ]\n using the built-in  netsh portproxy  command to create proxies on compromised systems to \nfacilitate access [ T1090 ].\nWhile Volt Typhoon uses LOTL techniques to make detection more difficult, the behaviours that the \nmalware exhibits would be considered abnormal compared to business-as-usual activity and could be \nused to create detection use cases.\nFor more information, consider visiting MITRE ATT&CKs Volt Typhoon  page and the  \nMITRE ATT&CK framework .\n6 NTDS.dit contains usernames, hashed passwords, and group memberships for all domain accounts, allowing for full domain \ncompromise if the hashes can be cracked offline.Examples of anomalous behaviour can include:\n a user logging in during unusual hours (e.g. non-working hours, holidays or on leave)\n an account accessing services that it does not usually access; for example, administrator or HR \nservices\n a user logging in using an unusual device\nBest practices for event logging and threat detection 13 Best practices for event logging and threat detection 12\n\n a high volume of access attempts\n instances of impossible travel7 or concurrent sign-ins from multiple geographic locations\n downloading or exporting a large volume of data8\n network logins without defined computer access or physical access log validation\n a single IP address attempting to authenticate as multiple different users\n the creation of user accounts, or disabled accounts being re-enabled, especially accounts with \nadministrative privileges\n netflow data indicating one device talking to other internal devices it normally does not connect to \n unusual script execution, software installation, or use of administrative tools\n unexpected clearing of logs\n an execution of the process from an unusual or suspicious path\n configuration changes to security software, such as Windows Defender, and logging  \nmanagement software.\nNote that the above items could be legitimate behaviour and not malicious activity. In these instances, \nfurther investigation by a network defender is required to determine if they are, in fact, evidence of a \ncyber security event.\nT o detect threats on endpoints such as user devices, organisations should consider implementing \nan endpoint detection and response solution. These solutions enable an organisation to monitor \nmalicious activity, such as malicious actors disabling security monitoring services, and process \ncreation events with enhanced detail and fidelity.\nBy following the guidance in this publication to improve the collection and centralisation of event logs, \nit will improve an organisations ability to undertake effective threat hunting to proactively investigate \nLOTL compromises. Organisations should consider conducting threat hunting on their networks \nas a proactive measure to detect cyber security incidents. This is a particularly effective activity for \ndetecting malicious actors employing LOTL techniques.\nOrganisations may also consider the following methods to increase the effectiveness of detecting \npotential LOTL techniques:\n Always enable detailed logging that includes process creation events and command-line auditing. \nThis enhances log visibility and facilitates threat hunting, if needed.\n Establish a baseline for the usage of legitimate binaries within the organisation and flag any \nanomalous behaviour.\n Create specific SIEM detection rules based on the evolving threat landscape for different operating \nsystems. For example, powershell.exe, cmd.exe, regedit.exe  for Microsoft Windows, or curl, systemctl \nand python  for Linux, with encoded commands.\n7 Impossible travel occurs when a user logs in from multiple IP addresses that are a significant geographic distance apart (i.e. a \nperson could not realistically travel between the geographic locations of the two IP addresses during the time period between the \nlogins).\n8 Large/continuous data exports should be alerted by default. \nBest practices for event logging and threat detection 15 Best practices for event logging and threat detection 14\n\nCloud considerations\nThe joint-sealed publication Identifying and Mitigating Living Off the Land T echniques  contains \ndetailed detection guidance for cloud environments. One point states that if machine learning-\npowered detection capabilities are available within cloud provider security services, organisations \nshould consider leveraging these capabilities and provide log data in real time from multiple sources \nto enhance log analysis. Using machine learning allows for the detection of anomalous behaviours \nthat may indicate malicious activity. These include irregular API call patterns (especially those that \ninvolve changes to security groups, configuration of cloud resources or access to sensitive data), \nunusual cloud storage access and atypical network traffic.\nOperational technology considerations \nEffective detection in an OT environment typically involves expertise from both IT and OT personnel; \nthus, an effective network security instrumentation involves collaborative efforts from both parties. \nThis collaborative approach helps ensure that network defenders can quickly investigate relevant \nissues, and OT experts can raise operational concerns that may be tied to a cyber security incident. \nFurthermore, network defenders should leverage real-time alerts to determine any abnormal activity \non an OT network. These alerts can include safety data, availability data, logins, failed logins9, \nconfiguration changes, and network access and traffic. Organisations may need to consider whether \nalerts for OT environments should be approached differently. For example, OT devices may be in \nremote or hard-to-reach locations.\nFor detecting anomalous behaviour in OT environments, look for:\n unexpected use of engineering and configuration tools\n abnormal use of vendor or third-party accesses, maintenance methods, or remote monitoring\n unauthorised updates or changes to operating systems, software, firmware, configurations, or \ndatabases\n unexpected communication between the control system and external network or unusual \ncommunication between components that do not usually communicate\n execution of scripts that are not part of regular operations.\nIntrusion detection and intrusion prevention systems (IDS/IPS) are often designed with rules based on \nIT protocols; therefore, they may be more useful in OT operation systems or the OT demilitarised zone \n(DMZ) than in supervisory and process areas. Note, it is not recommended to deploy an IPS unless it is \ntailored to the OT environment, or is outside of critical process control. IPS risk interrupting critical  \nOT devices.\n9 Note that not all successful authentication events will be benign; e.g. credential theft or malicious insiders.\nBest practices for event logging and threat detection 15 Best practices for event logging and threat detection 14\n\nAdditional guidance\nFor further guidance, consider visiting:\n Joint-sealed Identifying and Mitigating Living Off the Land T echniques\n ASD ACSCs Windows Event Logging and Forwarding\n CISA s Guidance for Implementing M-21-31: Improving the Federal Governments Investigative and \nRemediation Capabilities\n CISA s SCuBA TRA and eVRF Guidance Documents\n NSA s Cyber Event Forwarding Guidance\n NCSC-UKs What exactly should we be logging?\n NISTs SP 800-92 Rev. 1, Cybersecurity Log Management Planning Guide\n NISTs Guide to Operational T echnology (OT) Security\n US White Houses M-21-31\n Malcolm | A powerful, easily deployable network traffic analysis tool suite\n MITRE ATT&CKs Data Sources\nBest practices for event logging and threat detection 17 Best practices for event logging and threat detection 16\n\nDisclaimer\nThe material in this guide is of a general nature and should not be regarded as legal \nadvice or relied on for assistance in any particular circumstance or emergency situation. \nIn any important matter, you should seek appropriate independent professional advice \nin relation to your own circumstances.\nThe Commonwealth accepts no responsibility or liability for any damage, loss or \nexpense incurred as a result of the reliance on information contained in this guide.\nCopyright .\n Commonwealth of Australia 2024 .\nWith the exception of the Coat of Arms and where otherwise stated, all material \npresented in this publication is provided under a Creative Commons Attribution  \n4.0 International licence ( www.creativecommons.org/licenses ).\nFor the avoidance of doubt, this means this licence only applies to material  \nas set out in this document.\nThe details of the relevant licence conditions are available on the Creative Commons \nwebsite as is the full legal code for the CC BY 4.0 licence \n(www.creativecommons.org/licenses ).\nUse of the Coat of Arms .\nThe terms under which the Coat of Arms can be used are detailed  \non the Department of the Prime Minister and Cabinet website  \n(www.pmc.gov.au/resources/commonwealth-coat-arms-information-and-guidelines).\nFor more information, or to report a cyber security incident, contact us:\ncyber.gov.au   |  1300 CYBER1 (1300 292 371) .\n\n",
  "cves": [],
  "techniques": [
    "T1018",
    "T1033",
    "T1003.001",
    "T1021.001",
    "T1003.003",
    "T1654",
    "T1047",
    "T1059.001",
    "T1090",
    "T1006"
  ],
  "advisory": "cybersecurity-alerts",
  "title": "joint-csi-best-practices-event-logging-threat-detection",
  "source": "nsa",
  "id": "d642504f5b158d6d68c8cbea879197fd9f2ad5f30fd8776d4a9093638c47f32c"
}