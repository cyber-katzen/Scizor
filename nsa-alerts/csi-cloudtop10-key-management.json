{
  "markdown": " \nU/OO/ 126065 -24 | PP-24-0082  | March  2024 Ver. 1.0  \n| Cybersecurity Information  \nNational  \nSecurity  \nAgency  \nCybersecurity &  \nInfrastructure  \nSecurity  \nAgency  \nUse Secure Cloud Key Management  Practices  \nExecutive summary  \nCryptographic operations enable secure communication, access control, authentication , \nand data encryption at rest . The  security of these  operations all rely on proper key \nmanagement. Cloud service providers (CSPs) use key management systems (KMS s) to \noffer encryption and key management as a service, includ ing functionality such as : \n Management operations on s ymmetric and asym metric key s, including:  \n creation  \n storage  \n rotation  \n deletion  \n Secret s management for :  \n application programming interface ( API) keys \n data encryption keys  \n other service secrets  \nSome CSPs offer  subsets of  this key management functionality in multiple service \nofferings . For the purposes of this cybersecurity information sheet (CSI) , the term  cloud \nKMS  refers to any cloud services that perform any of this functionality.  \nA cloud KMS integrate s with other cloud services to give customers some control over \nthe keys used for cryptographic operations  within the cloud tenant. Customers can opt \nto have CSPs man age some or all features of the KMS . [1] Best practices for a cloud \nKMS will depend on the boundaries of control over key management desired for each  \nspecific use case.   \nGranting a CSP control over key management inevitably carries some risk. The \naccepta bility of such risks depends on several factors including :  \n the sensitivity level of the data to be protected  \n resources available to manage keys on premises  \n level of trust established with the CSP  \n\n \n \n \nU/OO/ 126065 -24 | PP-24-0082  | March  2024 Ver. 1.0  2 NSA & CISA  | Use Secure Cloud Key Management Practices  \nThis CSI outline s key management options based on these factors and recommend s \nbest practices to consider when using them. W ith any use of a cloud KMS, it is critical to \nunderstand and document s hared security responsibilities . Refer to  the NSA  CSI: \nUphold the Cloud Shared Responsibility  Model  for additional information on the shared \nresponsibility model. [2] \nCommon k ey management options  for cloud customers  \nCSPs typically offer several options for key management , with the availability of these \noptions varying between service offerings . Many service offerings provide users the \noption to perform cryptographic operations using keys the  CSP creates and manages. \nExample s of this would be a cloud storage service that encrypts data automatically  or a \ncompute service that encrypts the storage di sks with CSP managed keys . The customer \nhas no responsibility for creating or managing the key material  and typically has no  \ncontrol over  the key length or encryption algorithm used.  \nOn the opposite end of the spectrum , customers have the option to impleme nt their own \nKMS and cryptographic  processes outside of the cloud and encrypt all data prior to \nuploading it to a cloud  storage service . This ensures that even if a malicious cyber actor \n(MCA ) succeeds in accessing a customers stored data,  they would not have access to \nthe keys needed to decrypt the data. However, this method is incompatible with nearly \nevery cloud service. While users can upload encrypted data to storage services,  this \nlimits the functionality normally provided by the CSP, such as documen t search and \nother analytic capabilities. Other (non -storage) cloud services rely on access to \ndecrypted data to perform their intended functions.  \nIn the middle of the spectrum  there are cloud KMS  offerings , which let customers  take \nadvantage of  a CSPs KMS  while still being able to choose key types, key size s, rotation \nschedule s, backup policies, and access controls. A cloud KMS may offer hardware \nsecurity module (HSM) and /or non-HSM -backed key options.  HSM-backed keys are \ntypically generated , stored,  and used within the HSM . Depending on the service \noffering , the HSM may be used to protect only wrapping keys  (i.e., keys used to encrypt \nother keys),  or it may protect all customer keys. These services are generally \ncompatible with a range of cloud services . \nIn some cases, customers can import keys they have created to manage and use in the \nCSPs KMS, or connect a third party KMS to manage the  customers  keys and perform \n\n \n \n \nU/OO/ 126065 -24 | PP-24-0082  | March  2024 Ver. 1.0  3 NSA & CISA  | Use Secure Cloud Key Management Practices  \ncryptographic  operations. Each option ha s benefits and drawbacks. The best option will \ndepend heavily on the use case.  \nTrust and control  \nUsing a public cloud extends the trust boundary beyond the organization. Additional \nrisks are introduced , such as insider threats and a lack of con trol over some aspects of \nsecurity operations . [2] The level of control a cloud consumer has over key \nmanagement varies with the type of cloud service model selected1,2. There is a limit to \nthe degree of security assuran ce that a cloud consumer can expect when the logical \nand physical organization of the cryptographic resources are entirely under the control \nof the CSP. [3] When de termining if the CSP meets the needs of the organization, it is \nimportant to review technical information from the CSP to determine if their security \npractices satisfy the organization s need s. Some important information to request from \nthe CSP includes:  \n Available k ey configurations  [e.g., symmetric or asymmetric , length , purpose \n(e.g., encryption, signing) , algorithm ] \n Internal and API -based actions involving key material, including technical details \nwhich affect key visibility  (e.g., generating, changing or updating, storing, retiring, \nretrieving, retaining , and destroying  key material ) \n Recommended  customer  key management procedures [4]  \nAdditional information to co nsider when determining the level of control to grant  a cloud \nKMS provider includes : \n How is unauthorized access to key material prevented?  \n How does the CSP ensure proper lifecycle management of the keys?  \n How does the CSP ensure physical and electronic prot ection of the KMS?  \n How are vulnerabilities detected and removed from software during and after \ndevelopment?  \n Are deleted keys recoverable? If so, for how long?  \n What processes are in place to detect malicious administrators or other  internal \nthreats ? \n                                            \n1 Cloud service models include Software as a Service (SaaS), Platform as a Service (PaaS), and Infrastructure as a Service (Iaa S).  \n2 For more details on the cloud service models , see NIST S P 800 -145  The NIST Definition of Cloud Computing  \n\n \n \n \nU/OO/ 126065 -24 | PP-24-0082  | March  2024 Ver. 1.0  4 NSA & CISA  | Use Secure Cloud Key Management Practices  \n Are cryptographic processes that handle customer keys securely separated from \nother processes?  \n Is there a roadmap to transition to quantum -resistant cryptography ? \nAnswers to these questions will  provide additional context when researching the CSP \nand may assist in building a trust ed relationship.  \nShared security responsibilities  \nNo matter which service model is chosen for other cloud services, a KMS will be \nneeded for secure communication and authentication with these services. The KMS \nitself may  be provided by the CSP,  or it may be an external key store.   \nWhen using a CSPs KMS, the customer must first identify the required security \nassurances for a particular use case. A variety of decisions will be based on these \nrequirements, starting with the  CSPs KMS service model . [3] The boundaries of \nresponsibility  between the customer and CSP  for KMS security  will depend on the cloud \nservice model chosen . [1] However,  regardless of the model chosen  there will still be \nkeys the customer is responsible for protecting.   \nWith all of these service models and options, the customer will be responsible for \ndefining user and administrator roles and policies for key management. Established \nbest practices for separation of duties and least privilege apply for all  cloud KMS  uses. \n[5] \nIn some cases, a CSP may use the KMS services of a  different  CSP. In situations \nwhere an intermediary provider and primary provider partner to offer cloud serv ices, key \nmanagement responsibilities may need to be divided between the two. [3] The customer \nmay be unaware of how the KMS functions are divided. Seek clarificat ion from the CSP \nto determine if the KMS they offer is owned and managed solely by that CSP. \nSoftware as a service KMS model  \nWhen using a  Software as a Service (SaaS) model for a KMS , customers  interact with \nthe API of a CSPs KMS to make key management, s igning and verifying, and \nencryption/decryption requests. These operations are performed in software owned and \nmanaged by the CSP running on hardware the CSP manages. A secure session must \nbe established for this interaction.  \n\n \n \n \nU/OO/ 126065 -24 | PP-24-0082  | March  2024 Ver. 1.0  5 NSA & CISA  | Use Secure Cloud Key Management Practices  \nCSPs offering a  SaaS model KM S, may offer a choice between provider -managed keys \nand customer -managed keys. The customer has greater control over the lifecycle of a \ncustomer -managed key. For example, the customer -managed key can be created on \nthe CSPs KMS or generated on premises and  then imported to the cloud KMS , a model \ncommonly referred to as bring your own key (BYOK) . Customer -managed keys can \npotentially provide greater flexibility over data access controls . However, this would be  \nat the expense of greater resources required to properly  perform  key management \nduties. The CSP may also restrict the types of keys that can be imported.  \nInfrastructure as a service KMS model  \nAn example of the Infrastructure as a Service (IaaS) model for a KMS would be a \ndedicated FIPS 140 level 3 validated HSM running on a virtual enclave , or cloud HSM, \nwhich the customer owns and manages. This model minimizes CSP access. The CSP \nprovisions the HSM, handling  physical and network security, rack space, power,  and \nnetwork integration , and exposes it to the customers virtual enclave . The customer \nmust provide the expertise to configure and maintain the HSM . The use of IaaS for a \nKMS is rare compared to its SaaS counterpart.  This is generally a highly specialize d \nservice used by  large -scale organizations  to satisfy regulatory requirements .  \nHardware security modules  \nRegardless of the chosen KMS implementation, u sing a validated HSM -based key \nmanagement system is a best practice  for managing keys used to encrypt h ighly \nsensitiv e data. HSM -based keys are generated, used, and stored on the HSM, so it has \na smaller attack surface than other key management options.  HSMs are often designed \nwith physical anti -tamper protections to make it extremely difficult to extract keys that \nare not configured to be exported.  However, t he CSPs plan for interaction with the HSM \nwill affect the security of the KMS. HSMs may be shared , logically partitioned , or \ndedicated.  \nWith shared  HSM  offering s, no single customer has control over how resources are \nallocated or consumed. The hardware itself is a shared resource and data separation is \ndependent on CSP software . This presents a  risk of unauthorized access to sensitive \ndata from other tenants.  If an MCA found a  weakness in the CSPs software , they  could \nregister as a customer and exploit  the weakness to gain access  to another customers \ndata.  \n\n \n \n \nU/OO/ 126065 -24 | PP-24-0082  | March  2024 Ver. 1.0  6 NSA & CISA  | Use Secure Cloud Key Management Practices  \nPartitioned  HSMs provide logical but not physical  isolation from other customer s data. \nEach partition sho uld have separate administrative access and its own data, access \ncontrols, and security policies. As multiple customers interact with the device there is a \nrisk that one customer may be able to exploit a side -channel technique  to read memory \non the HSM tha t is outside of their partition, allowing them to exfiltrate other customers  \nkeys. To mitigate the risk of a partition isolation breach, HSMs should be configured to \ndisable features that allow users to run their own code.  \nDedicated HSMs provide physical  separation from other customers , which eliminates \nthe risks described above. With dedicated HSMs, the customer provisions a hardware \ndevice and has full administrative responsibility for the HSM. This higher level of control \nmay itself present a risk if th e customer does not have sufficient resources to manage \nthe device  properly . \nIntegrating a KMS  \nAnother option for using a KMS with cloud services is a KMS  that is external to the CSP \nhosting services.  This can be either an enterprise owned and managed KMS or a \nsecondary CSP KMS integrated with a primary CSP. CSPs will not have the ability  to \nstore and manage encryption keys for cryptographic operations for customers if the \ncustomer uses their  own KMS  or a separate, distinct KMS .  \nCSPs  have differing mechanisms and standards for utilizing or managing an integrated \nKMS. For example, in addition to their own CSP -specific APIs, or APIs supplied by the \nvendors of the hosted HSM, some CSPs  offer compatibility  with the Key Management \nInteroperability Protocol (KMIP) or with Public -Key Cryptography Standards (PKCS) \n#11. Check with the provider to ensure that the existing or planned service is compatible  \nwith the protocols and procedures offered by the CSP . \nProtecting sensitive information  \nOrganizations operating in the cloud should  take precautions to protect sensitive \ninformation. Organization s should  periodically audit  key usage within the cloud \nenvironment  to verify key usage aligns with its intended purpose,  includ ing where, how, \nand by whom keys are used . Service level agreements should contain language \ndescribing the CSPs key management policies, including any mechanisms in place to \nisolate the CSP from  customer -controlled keys . [6]  \n\n \n \n \nU/OO/ 126065 -24 | PP-24-0082  | March  2024 Ver. 1.0  7 NSA & CISA  | Use Secure Cloud Key Management Practices  \nMetadata in cloud environments is frequently exposed in audit trails and in some cases \nto the CSP in order to operate and maintain  services. To prevent exposure of s ensitive \ninformation it is important not to use sensitive  information in these data types. These \ndata types  may vary by vendor , but a common example is key labels.  \nAdditionally , customers should verify that CSPs offer the p roper mechanisms to encrypt \ncustomer keys while at rest and in transit , and take precautions  to ensure customer \nkeys are a lways encrypt ed at rest and secure channels are used when the keys are \ntransmitted between internal cloud s ervices . Managing sensitive  information used with \napplications  (e.g., API keys, database connection strings, data en cryption keys,  \npasswords ) is especially challenging because it might be  insecurely stored  in \napplication code, configuration files, or integration and deployment pipel ines. Minimize \nthe exposure of customer keys by using automated scanning to detect exposed keys in \nthese places.  MCAs may also attempt to acquire enough permissions to pull these keys \nand credentials directly from the cloud KMS  or any other cloud -native se crets manager \nbeing used in the environment . Permissions to read these secrets should be limited and \nqueries should be monitored.  \nATT&CK Tactic  Technique  \nCredential Access  Unsecured Credentials: Credentials in Files [ T1552.001 ] \nCredential Access  Credentials from Password Stores: Cloud Secrets \nManagement Stores [ T1555.006 ] \n \nD3FEND Tactic  Countermeasure  \nPlatform Hardening  Disk Encryption [ D3-DENCR ] \n \nSpecial care should be taken to preserve cryptographic keys that are required to access \nencrypted forensic evidence . Any issues that may arise in preservi ng these \ncryptographic key s may cause organizations to lose the ability to decrypt forensic data \nstored in the cloud . [7] \nKey destruction  considerations  \nCustomers should be knowledgeable about a CSPs key destruction process. When a \nkey is deleted, it is often moved to a deletion pending  state for a specified length of \ntime before it is actually purged from the CSP. While awaiting destruc tion, the key may \nbe recoverable; however, t he length of time and whether this action can be reversed \nvaries by vendor. When keys are deleted, any data encrypted by  the destroyed key can \n\n \n \n \nU/OO/ 126065 -24 | PP-24-0082  | March  2024 Ver. 1.0  8 NSA & CISA  | Use Secure Cloud Key Management Practices  \nno longer be decrypted. Organizations should ensure the proper contro ls are in place to \nverify a key is no longer needed before deleting. Organizations should also be aware of \nwhat the CSPs key destruction commitments are before selecting a KMS offering. \nCloud storage offerings do not always provide actual erasure of data, relying instead on \ncryptographic erasure where erasure of the encryption keys provide s assurance that \ndeleted data is not recoverable. However, destruction of deleted key material is \nfrequently only guaranteed after several months. Organiz ations should take this into \naccount when deciding what level of sensitivity of data to store in the cloud protected by \nthese encryption keys.  \nKMS functionality applied to cloud service models  \nThe KMS service model can be different from the cloud services  it interacts with. For \nexample, an IaaS KMS model can interact with SaaS data storage. Regardless of the \nKMS service model, the following subsections describe the KMS functionality required \nfor each service model.   \nIaaS \nSecurity capabilities involving a KMS that are essential in IaaS cloud services include \nauthenticating predefined VM images, authenticating API calls to the VM management \ninterface, and securing the communication of administrative operation s on the VM \ninstances . [3] \nATT&CK Tactic  Technique  \nDefense Evasion  Modify Cloud Compute Infrastructure [ T1578 ] \nExecution  Command and Scripting Interpreter: Cloud API \n[T1059.009 ] \nExecution  Cloud Administration Command [ T1651 ] \n \nIn the IaaS service model, customers must be able to securely administer the virtual \nmachines, the applications running on the VMs, user communication with the VMs, and \ndata storage . These operations will require asymmetric key pairs to perform digital \nsigning, secure  communication, and authentication. Symmetric keys may also be \nneeded for encryption . [3]  \nCustomers need to secure the private key of a public/private key pair on  the customers \nsystems both at rest and in use . [3]  \n\n \n \n \nU/OO/ 126065 -24 | PP-24-0082  | March  2024 Ver. 1.0  9 NSA & CISA  | Use Secure Cloud Key Management Practices  \nIn an IaaS service model, symmetric keys used for file encryption can be stored on the \ncustomer s site using an enterprise KMS. The customer encrypts the files and then \nstore s them  in the cloud.  \nD3FEND Tactic  Countermeasure  \nPlatform Hardening  File Encryption [ D3-FE] \nPaaS  \nIn the Platform as a Service ( PaaS ) model, customers must be able to securely interact \nwith applications and store data. As with IaaS, these operations will require asymmetric \nkey pairs to perform digital signing, secure communication, and authentication. \nSymmetric keys may al so be needed for encryption . [3]  \nCustomers should  secure the private key of a public/private key pair on the customers \nsystems both at rest and in use . [3]  \nSaaS  \nIn the SaaS service model, the CSP is responsible for the secure interaction with the \napplication. However, secure storage of data may be the customers responsibility , \ndepend ing on the CSPs service configurations. In this case, s ymmetric keys may be \nneeded for encryption . [3]  \nMCAs may attempt to use compromised private keys and other secrets to forge \ncredentials , such as session tokens or cookies , in order to gain access to the \napplication. Custom ers need to secure the client -side private key of a public/private key \npair on the customers systems both at rest and in use. The CSP must manage the \nserver -side private key. All encryption keys are under the control of the CSP. [3]   \nATT&CK Tactic  Technique  \nCredential Access  Forge Web Credentials [ T1606 ] \n \nDepending on the scale of application data that needs to be encrypted, encryption keys \nmay need to reside with the CSP. If the selection of data to be encrypted varies, the \nencryption may have to take place on the customer end . [3]  \n\n \n \n \nU/OO/ 126065 -24 | PP-24-0082  | March  2024 Ver. 1.0  10 NSA & CISA  | Use Secure Cloud Key Management Practices  \nStandards and certifications  \nThere are established criteria for assessing CSP claims. These include determining if \nthe CSP follow s recommended standards and is participating in validatio n programs .  \nKey generation systems must be the most secure of all systems, and it is critical that \nthese systems are correctly doing only what they are designed to do throughout their \noperational life. Verify that the CSP has implemented a key generation mechanism that \nconforms to National Institute of Standards and Technology (NIST) SP 800 -90A Rev 1 . \n[8] \nConformance testing for implementations can provide independent validation that a \nsystem meets certain requirements . [9] NIST has programs that provide validation \ntesting of FIPS -approved and NIST -recommended cryptog raphic algorithms and \nmodules . [10] Using a validated HSM -based key management system is a best practice. \nFor CSPs that offer FIPS 140 -3 validated hardware securit y module (HSM) based \nservices, detailed information about the HSM and related security policy will be found on \nthe NIST Cryptographic Module Val idation Program (CMVP) Search page . [11]  \nIn particular, integrity protection must be provided for all keys, and confidentiality \nprotection must be provided for all  secret keys. Appropriate confidentiality protection is \nprovided for a key stored in a cryptographic module that conforms to FIPS 140 -3 at a \nsecurity level that is consistent with the impact level associated with the data to be  \nprotected by the key . [12] The CMVP certificate will give the overall security level and  \nany security level exceptions . [13] The Federal Risk and Authorization Management \nProgram (FedRAMP) validates that this requirement is met when authorizing cloud \nplatforms for use by the federal government.  \nWhen selecting algorithms used for cryptographic purposes , such as key establishment, \nencryption, and digital signatures, NSA has provided recommendations in the \nCommercial National Security Algorithms (CNSA) Suite version 2.0  for quantum -\nresistant algorithms . [14] Organizations should look to meet these rec ommendations as \nmuch as possible . At a minimum , they should use CNSA Suite 1.0 recommended \nalgorithms  and have a plan for transitioning to CNSA Suite 2.0 quantum -resistant  \nalgorithms , where applicable , when they are available . Verify that the CSPs KMS \nsupports keys that meet the necessary requirements . \n\n \n \n \nU/OO/ 126065 -24 | PP-24-0082  | March  2024 Ver. 1.0  11 NSA & CISA  | Use Secure Cloud Key Management Practices  \nThe National Information Assurance Partnership (NIAP) provides certifications and \nvalidation reports for products that are found to be compliant with documented security \ncriteria. In 2021, NIAP established a  cloud working group to determine an approach to \ncertifying cloud service deployments. To check for any updates on this effort , visit \nNIAPs website . [15]  \nBest Practices  \nEncryption keys are an integral part of secure operations in the cloud. Organizations \nshould adhere to the following best practices for cloud key management as relevant to \ntheir chosen KMS  model:  \n Keys generated on an HSM should never be exported in plain  text. \n Understand where  a key is stored at rest, whether in an HSM or in software, and \nhow it is protected. Be sure key storage meets the use case requirement.  \n Key policies establish access rules for keys. Key policies can be a combination of \nidentity based , role based, and/or attribute based for a particular key. Different CSPs \nhave different approaches.  \n Be aware that there are usually lag times between setting a key policy and its effect \ndue to latency.  \n In general, key policies should have an implicit den y rule, meaning policy \nadministrators  must explicitly grant  privileges  for the keys  use or access. Be aware \nthat default key policies may differ depending on whether the key is created \nprogrammatically or via a management console.  \n Enforce separation of du ties so that no single person has all of the access required \nto perform a critical business function. For keys that protect sensitive \nresources/capabilities, s eparate the ability to manage keys from the ability to use \nkeys for cryptographic operations. For  key management roles, create more granular \nroles for stages of the key lifecycle. Consider how the defined roles will scale as the \nenterprise grows.  \n Enforce least privilege so that each person has the minimum access required to \nperform their assigned dut ies. \n KMS APIs may add new operations over time. Granting access to all or a CSP \ndefined category of API operations in a key policy may expand access for a role over \ntime as well . This could lead to unintended access permissions.  Therefore, access \n\n \n \n \nU/OO/ 126065 -24 | PP-24-0082  | March  2024 Ver. 1.0  12 NSA & CISA  | Use Secure Cloud Key Management Practices  \npolicies should specifically grant access to each API operation needed, even if that \nincludes all API operations that exist at a given point in time.  \n When a key is destroyed, content that was encrypted with the key can no longer be \ndecrypted. Ensure controls are i n place to verify the key is no longer needed before \ndestroying it.  \nFurther guidance  \nSupplementary guidance is available at NSA Cybersecurity Advisories & Guidance . \nParticula rly relevant ones include : \n Mitigating Cloud Vulnerabilities   \n Top 10 Mitigation Strategies  \n Advancing Zero Trust Maturity throughout the User Pillar  \n Secure Data in the Cloud  \nWorks cited  \n[1] Defense Information Systems Agency. Department of Defense Cloud Computing Security \nRequirements Guide , Version 1, Release 4. 2022. https://dl.dod.cyber.mil/wp -\ncontent/uploads/cloud/zip/U_Cloud_Computing_SRG_V1R4.zip   \n[2] National Security Agency. Cloud Security Basics. 2018. \nhttps://media.defense.gov/2019/Jul/16/2002158059/ -1/-1/0/CSI -CLOUD -SECURITY -\nBASICS.PDF   \n[3] National Institute of Standards and Technology. NISTIR 7956 : Cryptographic Key Ma nagement \nIssues and Ch allenges in Cloud Services . 2013. \nhttps://nvlpubs.nist.gov/nistpubs/ir/2013/NIST.IR.7956.pdf   \n[4] International Organization for Standardization. ISO/IEC 27017:201 5 Code of practice for \ninformation security controls based on ISO/IEC 27002 for cloud services. 2015. \nhttps://www.iso.org/standard/43757.html   \n[5] National Institute of Standards and Technology. NIST SP 800-192: Verification and Test \nMethods for Access Con trol Policies/Models.  2017. \nhttps://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800 -192.pdf   \n[6] Internation al Organization for Standardization. ISO/IEC  19086 -4:2019  Cloud computing - \nService level agreement (SLA) framework - Part 4: Components of security and of protec tion of \nPII. 2019 . https://www.iso.org /standard/68242.html   \n[7] National Institute of Standards and Technology. NIST IR 8006: Cloud Computing Forensic \nScience Challenges . 2020.  https://nvlpubs.nist.gov/nistpubs/ir /2020/NIST.IR.8006.pdf    \n[8] National Institute of Standards and Technology. NIST SP 800 -90A Rev. 1: Recommendation for \nRandom Number Generation Using Deterministic Random Bit Generators. 2015. \nhttps://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800 -90Ar1.pdf   \n[9] National Institute of Standards and Technology . Security Testing, Validation and Measurem ent. \n2022. https://www.nist.gov/itl/csd/security -testing -validation -and-measurement  \n[10] National Institute of Standards and Technology. Cryptographic Module Validation Pro gram. \n2022. https://www.nist.gov/programs -projects/cryptographic -module -validation -program -cmvp   \n\n \n \n \nU/OO/ 126065 -24 | PP-24-0082  | March  2024 Ver. 1.0  13 NSA & CISA  | Use Secure Cloud Key Management Practices  \n[11] National Institute of Standards and Technology. Cryptograph ic Module Validation Program \nSearch page. 2024. https://csrc.nist.gov/projects/cryptographic -module -validation -\nprogram/validated -modules/search  \n[12] National Institute of Standards and Technology.  NIST SP 800 -57 Part 1 Rev. 5: \nRecommendation for Key Management: Part 1  - General.  2020. \nhttps://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800 -57pt1r5.pdf   \n[13] National Institute of Standards and Technology. Cryptographic Module Validation Program FIPS \n140-3 Standards.  2024.  https://csrc.nist.gov/projects/cryptographic -module -validation -\nprogram/fips -140-3-standards   \n[14] National Security Agency . Announcing the Commercial National Security Algorith m Suite 2.0 . \n2022.  https://media.defense.gov/2022/Sep/07/2003071834/ -1/-\n1/0/CSA_CNSA_2.0_ALGORITHMS_.PDF  \n[15] National Information Assurance Partnership . Common Criteria Evaluation and Validation \nScheme 2021 Report.  2021. https://www.niap -ccevs.org/Ref/Tracked/Progress_Report_2021.pdf   \nDisclaimer of endorsement  \nThe information and opinions contained in this document are provided \"as is\" and without any warranties or guarantees. Reference \nherein to any specific commercial products, process, or service by trade name, trademark, manufacturer, or otherwise, does no t \nconstitute or imply its endorsement, recommendation, or favo ring by the United States Government, and this guidance shall not be \nused for advertising or product endorsement purposes.  \nTrademarks  \nATT&CK and MITRE and are registered trademarks of The MITRE Corporation. D3FEND is a trademark of The MITRE Corporation.  \nPurpose  \nThis document was developed in furtherance of the authoring agencie s cybersecurity missions, including its responsibilities to \nidentify and disseminate threats to National Security Systems, Department of Defense, and Defense Industrial Base informa tion \nsystems, and to develop and issue cybersecurity specifications and mitigations.  \nContact  \nCybersecurity Report Feedback: CybersecurityReports@nsa.gov  \nGeneral Cybersecurity Inquiries: Cybersecurity_Requests@nsa.gov  \nDefense Industrial Base Inquiries and Cybersecurity Services: DIB_Defense@cyber.nsa.gov  \nMedia Inquiries / Press Desk:  \nNSA Media Relations: 443-634-0721, MediaRelations@nsa.gov  \nCISA Media Inquiries: 703-235-2010 , CISAMedia@cisa.dhs.gov  \n\n",
  "cves": [],
  "techniques": [
    "T1606",
    "T1555.006",
    "T1059.009",
    "T1552.001",
    "T1578",
    "T1651"
  ],
  "advisory": "cybersecurity-alerts",
  "title": "csi-cloudtop10-key-management",
  "source": "nsa",
  "id": "6c1e05a4d9919c6828f373ac92f888f300edc8d801d8f0f53661bdf04db01085"
}