{
  "markdown": "  \nU/OO/ 160978  | PP-24-1951  | May 2024 Ver. 1.0  National Security Agency | Cybersecurity Information  \n \nAdvancing Zero Trust Maturity Throughout the \nApplication and Workload Pillar  \nExecutive s ummary  \nIn the current digital landscape where malware and emerging online threats continue to \nevolve and become more sophisticated, it is imperative that organizations prioritize \ncybersecurity as essential to their operations.  Information Technology (IT) professionals \nare keenly aware of the security challenges facing applications, but workloads ar e every \nbit as important to consider in this domain.  \nWorkloads represent computational tasks, which  encompass multiple programs or \napplications perform ing those tasks by utilizing computing, data, networking, and \nstorage resources. Workloads evolve over t heir lifecycle through mission development, \ntest, and production scenarios. A workload is an expression of an ongoing effort of an \napplication AND what is being requested of it   Applications tend to shape the \ncharacteristics of the workload itself by how it processes the data, or the software limits \ninherent to the solution . [1] Workloads can be comprised of services across multiple \nclouds, with application program ming interfaces (APIs ) connecting to third parties and \nsensitive databases that require different levels of access. To navigate the complexities \nof managing workloads across computing environments and workflows, organizations \nare turning to advanced tools such as backend APIs, workload automation software, \nartificial intelligence (AI ) predictive analytics, and cloud management platform s. [2]  \nThese tools enable organizations t o achieve their mission of interconnectedness, \nscalability, and usability  by interact ing with and exchanging  data. This exchange of data \ncreate s opportunit ies for malicious actors to target business applications  and workloads , \nas well as the  methods used to safeguard them , leading to security challenges.  \nThis cybersecurity information sheet (CSI) provides recommendations for achieving \nprogressive levels of application and workload pillar capabilities and further discusses \nhow these capabiliti es integrate into a comprehensive Zero Trust (ZT) framework . [3] \nNational Security System (NSS), Department of Defense (DoD), and Defense Industrial \nBase (DIB) owne rs should use this and other  guidance to develop concrete steps for \nmaturing their application and workload  security.  \n\n \n \n U/OO/ 160978  | PP-24-1951  | May 2024 Ver. 1.0  2 Advancing Zero Trust Maturity Througho ut the Application and Workload Pillar \n NSA | \n \nIntroduction  \nTraditionally, access to applications was granted at the local level and was static, \nmeaning that once authorization was gran ted it remained in place until it was revoked. A \nZT model , however, shifts this paradigm to a never trust, always verify model. This ZT \nmodel support s modern environments , such as hybrid clouds, edge locations , and \ncontainer deployments ; and to better secure networks from current threats, \norganization s must channel  efforts  into a more integrated security architecture focused \non protecting data, applications, assets, and services (DAAS). The DoD ZT Security \nModel is best illustrated as seven pilla rs comprising the complete cybersecurity posture. \n[4] \nAdopting a ZT framework bolsters the protection of critical applications and workloads \nwith a decisive shift from a net work -centric to a data-centric security model (DSM) and \ngranular implementation of attribute -based access control (ABAC)  for every data \nacces s. A modernized ZT framework integrates visibility from multiple vantage points, \nmakes risk -aware access decisions, and automates detection and response. The \napplication and workload pillar disrupts the efforts of malicious actors by bringing \ngranular access control and visibility to applications and workloads in the environment .  \nBy implementing th is ZT secur ity model, applications are hidden from unauthorized \nusers and there is no ability to scan for resources beyond the requested application. \nOrganizations that have robust identity management for authorized users  and have \nintegrated continuous automated moni toring into their security strategy will have full \nvisibility to trace every transaction and pinpoint exactly what each workload is doing at \nany given moment. The w orkloads enforce granular, consistent access control to \napplications across disparate data c enter and cloud environments. Implementing such a \nframework places cybersecurity practitioners  in a better position to secure sensitive \nDAAS . [3] \nThe spectrum of a pplications and workloads include s individual tasks on end-user \nsystems , services executing on on-premises servers, and applications or services \nrunning in cloud environment s. ZT workloads span the complete application stack from \nthe application layer to t he hypervisor. Securing and properly managing the application \nlayer as well as compute containers and virtual machines is central to ZT adoption . [4]  \nThis CSI det ails progressively maturing capabilities in the application and workload \npillar.  It includ es recommendations and examples for achieving increasing maturity \n\n \n \n U/OO/ 160978  | PP-24-1951  | May 2024 Ver. 1.0  3 Advancing Zero Trust Maturity Througho ut the Application and Workload Pillar \n NSA | \n \nlevels , from initial preparation, through the basic and intermediate phases, and finally to \nthe advanc ed ZT level  for making well -informed, risk -aware, fine -grained access \ndecisions . \nAudience  \nThis CSI provides guidance primarily intended for NSS, DoD, and  the DIB, but may be \nuseful for owners and operators of other systems that might be targeted by \nsophist icated malicious actors. Guidance for other system owners and operators is also \navailable via the National Institute of Standards and Technology (NIST)  [5] and the  \nCybersecurity and Infrastructure Security Agency (CISA) . [6] This guidance is \ncompatible with the DoD s Cybersecurity Reference Architecture (CS  RA) Version 5.0,  \n[7] the DoD ZT Reference Architecture (ZT  RA) Version 2.0,  [4] and the  DoD ZT \nStrategy . [8] \nBackground  \nThe Presidents Executive Order on Improving the Nations Cybersecurity (EO 14028)  \n[9] and National Security Memorandum 8 (NSM -8) [10] direct the Federal Civilian \nExecutive Branch (FCEB) agencies and NS S owners and operators to develop and \nimplement plans to adopt a ZT cybersecurity framework. ZT implementation efforts are \nintended to continually mature cybersecurity protections, responses, and operations \nover time. Progression of capabilities in each of  the seven pillars should be seen as a \ncycle of continuous improvement based on evaluation and monitoring of threats . [3] \nThis CSI offers guidance in accordance with the DoD ZT RA maturity scale of \npreparation, baseline , intermediate, and advanced. It also complements the DoD ZT \nPortfolio Management Office (PfMO) guidance of \"target\" and  advanced  levels.  [8] \nFigure 1 depicts the ZT pillars, including the application and workload  pillar. The \ncapabilities and milestones for this component of the ZT maturity model are described in \ndetail throughout this document . Even though they are depicted separately,  it is \nimportant to note that the pillars are not independent; many c apabilities in each  pillar \ndepend on or align with capabilities in other pillars.  \n\n \n \n U/OO/ 160978  | PP-24-1951  | May 2024 Ver. 1.0  4 Advancing Zero Trust Maturity Througho ut the Application and Workload Pillar \n NSA | \n \n \nFigure 1: The seven Zero Trust pillars  \nApplication and workload  pillar \nApplication security is the ab ility to secure an application by preventing exceptions to \nthe application or the underlying information systems security policies . The application \nand workload  pillar focuses on securing access at the application layer by integrating \ncapabilities from the user, device, and network  and environment  pillars to prevent data \ncollection, unauthorized access, or tampering with critical processes or services.  In \nadvanced ZT infrastructures , users strongly authenticate into applications, as well as  \nunderlying networks . [11] Applications are further secured with a reduced attack \nsurface, by following p rinciple 1.1 from the DoD CS RA  that states least p rivilege should \nbe incorporated by configuring systems to provide only essential capabilities . [7] \nApplications  and workloads are mutually dependent . Applications i nclude any computer \nprograms and services that execute in on -premises and cloud environments. While \napplications are the  individual  tools that serve business needs, workloads can be \nstandalone solutions or tightly coupled groups of processing components pe rforming \nmission functions . Workload implementations should dynamically segregate processing \ncomponents and compute containers by filtering and applying access rules between \ncomponents to increase the logical separation between critical resources and threa t \n\n\n \n \n U/OO/ 160978  | PP-24-1951  | May 2024 Ver. 1.0  5 Advancing Zero Trust Maturity Througho ut the Application and Workload Pillar \n NSA | \n \nactors. Granular access controls and integrated threat protections can offer enhanced \nsituational awareness and mitigate application -specific threats . [6] The application and \nworkload  pillar depends on the following key capabilities : \n Application inventory  \n Secure software development and integration   \n Software risk management  \n Resource authorization and integration   \n Continuous monitoring and ongoing authorizations  \n \nFigure 2: Application and workload pillar maturity  \nApplication inventory  \nConducting an inventory of applications and workloads is a critical first step to \nimplementing ZT. These resources must be identified and categorized to prioritize \ncybersecurity protection requirements  for critical assets , especially of application \nupdates .  \nAn inventory of organizational application assets is a crucial yet effective ZT approach \nto increase an organizations cybersecurity posture . Organizations must identify and \ncategorize applications needed for  critical workflows. Just as with user access , \napplication identities should facilitate authentication to other necessary services based \n\n\n \n \n U/OO/ 160978  | PP-24-1951  | May 2024 Ver. 1.0  6 Advancing Zero Trust Maturity Througho ut the Application and Workload Pillar \n NSA | \n \non the principle of least privilege ( PoLP ). Local directories and identity and access \nmanagement (IAM) solutions can be use d for administering application  identitie s and \nfacilitating access based on requisite conditions . Major cloud services offer central \ncontrollers to handle these tasks as well.  \nAdditionally, utilizing t his approach to inventory applications allows workflows to be \nprioritized and expedites  the elimination of unapproved and/or unused applications , \nthereby reducing the attack surface and removing  potential gaps and vulnerabilities in \nsecurity . \nTable 1: Application inventory maturity  \nPreparation  Basic  Intermediate  Advanced  \nEstablishment of \na scalable, well -\nfunctioning asset \n(or configuration) \nmanagement \nprogram that  \ncollects the \napplication \ninventory. It \npreferably  \nimplements \napplication \nallow/deny listing \nto enforce \npolicies on use of \nauthorized \napplications . Organizations conduct a \nthorough assessment of \nthe current IT \nenvironment and users \nneeds. They c reate an \ninventory of existing \napplications and begin \nmapping workflows. \nMapping is primarily \nmanual at this level.  \nOrganizations begin \nincluding contract \nlanguage requiring the \ndelivery of S oftware \nBills of Material \n(SBOMs) with all \nsoftware deliverables.  \nOrganizations have \nestablished \nmechanisms to receive \nSBOMs and implement \nconfiguration \nmanagement.  Organizations have a \ncomplete list of applications \nand identified critical \nworkflows, with some \nautomation implemented to \nmaintain the list. The \napplication inventory \nincludes corresponding \nSBOMs in approved \nformats that detail software \ncomponents. At a m inimum, \nall direct component \ndependencies are identified \nand documented with the \nNational \nTelecommunications and \nInformation Administration \n(NTIA) -specified minimum \nfields. Transitive \ndependencies (component \ndependency on other \ncomponents) are identified, \neven if the corresponding Organizations have a \ncomplete inventory of \napplications and \nworkloads. Only approved \nand required applications \nexist, all with proper, up to \ndate SBOM \ndocumentation. SBOMs \ninclude component details \nfor all direct \ndependencies. Transitive \ncomponent d ependencies \nare also documented. \nOpen source components \nor components lacking \nNTIA -specified minimum \nfield documentation are \nappropriately flagged as \nsuch. Additionally, \nprocedures and \nautomated tools help \ntrack and verify \nremediation of identified \nvulnerabilities on \n\n \n \n U/OO/ 160978  | PP-24-1951  | May 2024 Ver. 1.0  7 Advancing Zero Trust Maturity Througho ut the Application and Workload Pillar \n NSA | \n \nPreparation  Basic  Intermediate  Advanced  \nProcedures are \nestablished to address \nand track remediation of \nidentified vulnerabilities.  component details arent \navailable.  \nOrganizations begin \nplanning the \nremoval/isolation of unused \napplications . enterprise software \nassets.  \nSecure software development and  integration  \nMost organizations rely on software and code from sources that could contain \nvulnerabilities  or malicious injected functionality . Having secure software that can be \nrelied on to perform its intended functions and not be exploited to perform malicious \noperations is just as important, if not more important, as securing the provided software. \nThe ZT model recommends adopting the DevSecOps framework  [12] and utilizing the \ncontinuous integration/ continuous delivery (CI/CD)  approach  for organizations that \ndevelop applications to ensure secure development and deployment. [13] Developed \nsource code and common libraries should be vetted through DevSecOps development \npractices to secure applications from inception . [14] \nThis ZT approach entails incorporating security controls through every phase of the \ndevelopment and deployment  process. CISA outlines the concept of Secure by Design \nsoftware development in which secur ity considerations are made during the initial \nsoftware design phase . This ensures the number of exploitable flaws are reduced \nbefore that software hits the market, and the total number of flaws are significantly fewer \nover the entire lifecycle of the soft ware . [15] \nConsequently , organization s should  address the security of all API s and implement \nnetwork  micro  segmentation  to isolate applications and workloads . Micro  segmentation \ncan help alleviate security challenges by creating separate logical network segments \ndedicated to the applications traffic .  \nAnother secur ity measure that is essential to the security of all applications is using  \nstrong encryption algorithms  to ensure data the application relies on is protected both at \nrest and in transit.   \nRelatedly, d igital sign atures are  essential to maintaining authenticity and integrity of \n\n \n \n U/OO/ 160978  | PP-24-1951  | May 2024 Ver. 1.0  8 Advancing Zero Trust Maturity Througho ut the Application and Workload Pillar \n NSA | \n \napplications. Digital signatures can help track software origins and maintain a re liable \nchain of custody. They are  cryptographic hashes of the applications code that are \nencrypted with developer keys and decrypted by the user to compare with the hash \nvalue of the version being implemented to determine the softwares  integrity and orig in. \nIn addition, application containers  should be digitally signed and verified before use to \nvalidate their integrity  as well . Depending on the pipeline and capabilities, configurations \nmay also be digitally signed to further build trust that the configur ation of the application \nis as intended.  \nWhen working with containerized workloads, ensure their security by regularly scanning \ncontainer  images for vulnerabilities, limiting container privileges, protecting container \nsecrets, and implementing runtime sec urity controls.   \nTable 2 : Secure software development and integration maturity  \nPreparation  Basic  Intermediate  Advanced  \nNone at this \nlevel.  Organizations that \ndevelop software and \napplication security \nprocesses begin to \nimplement DevSecOps, \nto include ZT principles \nand best practices into \nall development efforts. \nApplications are digitally \nsigned. Software is \ndelivered with \naccompanying SBOM \nidentifying, at a \nminimum, the softwares \ndirect dependency \ncomponents. Continuous \nmonitoring is in place  for \nthe co mponents  to \nidentify factors (such as \ndiscovered \nvulnerabilities or \nemergent risky Organizations that develop \nsoftware implement CI/CD \npractices. DevSecOps \nintegrates static and dynamic \napplication security testing into \nsoftware delivery workflows in \naccordance with the \norganizations requirements. \nDevSecOps also includes \nsoftware component analysis \nthat extracts NTIA specified \nminimum SBOM field \ninformation for each \ncomponent in the build \nprocess. SBOMs are \nmaintained and shared \nappropriately across the \ndevelopment and integration \nprocess. Components include \nhashes using a commonly \nrecognized hash algorithm \n(such as SHA256) that can be Organizations  that develop \nsoftware use process \nisolation and \nmicrosegmentation. \nDevSecOps and ZT \nsecurity concepts, \nprocesses, and capabilities \nare fully adopted and \nintegrated with CI/CD best \npractices throughout the \nentire development \nprocess. Automated \nsoftware ana lysis includes \nidentification and \ndocumentation of all \nsoftware dependencies, \nincluding components or \nservice s loaded at run -time \n(e.g., remote procedure \ncalls, calls to OS hosted \nlibraries, data feeds for AI \napplications, microservices, \n\n \n \n U/OO/ 160978  | PP-24-1951  | May 2024 Ver. 1.0  9 Advancing Zero Trust Maturity Througho ut the Application and Workload Pillar \n NSA | \n \nPreparation  Basic  Intermediate  Advanced  \norganizational \naffiliations) that increase \nsoftware risk profiles.  predictably compared to a \nsource of truth.  and other third -party \nservices).  \nSoftware risk management  \nVendors offer solutions with attractive benefits to meet the needs of public and private \nsector customers. However, along with these attractive benefits comes increased \npotential for direct or indirect cybersecurity risks traveling throughout the supply ch ain. \nAll software solutions carry some inherent risks. Prior to implementation, organizations \nshould research planned IT solutions to determine suitability and whether their security \nfeatures and capabilities meet quality and resiliency expectations.  \nDep loyed software is typically a commercial off -the-shelf (COTS) product, which \nincludes smaller COTS or open  source software components developed or sourced at \nmultiple tiers . Updates to software deployed across enterprises often fail to update the \nsmaller C OTS components with known vulnerabilities . [16] This creates multiple risk \nfactors for the software , especially when its underlying dependencies are themselves \nvulnerable. Organizations should determine if the use of such software is worth  the risk, \nif they are capable of managing that risk,  and how best to manage that risk.  \nManaging software risk involves calculating risk against need and ensuring that \ncomponents of the supply chain are secure, vulnerabilities are reduced, and the \norganiz ation is  aware of residual risks. Organizations must ensure that all needed \nresources are available and allocated to allow continual validation of these risks  and \ntheir mitigations . Those resources must also comply with modern authorization policies \nthat l imit access based on the principle of least access  and implement ABAC for \ngranular access decisions , or else be placed behind application gateways or proxies. \nProxies or application firewalls ma y also be used to mitigate other application  risks, \nsuch as ap plication vulnerabilities and exploitation attempts.  Regular security \nassessments, including penetration testing and vulnerability scanning, should be \nconducted to identify and remediate security weaknesses and risks proactively.  \nNISTs Cybersecurity Suppl y Chain Risk Management (C -SCRM) publication is \ndesigned to provide guidance to organizations on how to identify, assess, select, and \n\n \n \n U/OO/ 160978  | PP-24-1951  | May 2024 Ver. 1.0  10 Advancing Zero Trust Maturity Througho ut the Application and Workload Pillar \n NSA | \n \nimplement risk management processes and mitigating controls. C -SCRM is a \nsystematic process developed for managing exposur e to cybersecurity risks throughout \nthe supply chain and developing appropriate response strategies, policies, processes, \nand procedures.  [16]  \nNIST further cites s pecific guidance on integrating C -SCRM into enterprise risk \nmanagement processes such as: a general prioritization model of C -SCRM practices, \ntailoring implementation to an enterprises specific need s, knowing and managing \ncritical products and services, w orking closely with critical suppliers, and frequently \nassessing and monitoring supply chain relationship s. [16] \nTable 3: Software risk management maturity  \nPreparation  Basic  Intermediate  Advanced  \nAs part of developing an \nactive C -SCRM program, \nprioritization of products \nand services is defined  \nalong with policies for \naccepting and mitigating \napplication risks . \nOrganizations inventory \nand assess their supply \nchains to ensure all \nentities are known and \nvalidated.   \nA C-SCRM monitoring \nand assessment plan is \nestablished.  Organizations \nemploy tools or a \nservice to \nresearch n -tier \nrelationships and \nrisk attributes of \nsuppliers before \nthey purchase \nitems from those \nsuppliers that can \npotentially impact \nthe application \nrisk profile.  To the fullest extent possible, \norganizations implement a \nvalidation process of all software \ndelivered through the supply \nchain to the component level .  \nOrganizations augment their \nsoftwa re C-SCRM tools with \nthreat intelligence to flag any \nsoftware identified as having a \nsupply chain compromise or \nincreased risk profile for \nadditional testing and validation.  Organizations \nimplement an \nautomated \ncontinuous \nmonitoring system \nwith integrated \nthreat intelligence \nand testing to isolate \nand mitigate any \nsoftware identified \nas having a supply \nchain compromise.  \nResource authorization and integration  \nResource authorization enabl es integration between assets in a lower risk manner by \nauthen ticating and limiting all  access es and removing  access when no longer needed . \nOrganizations should ensure resource authorization can be done programmatically \nthrough a standardized, secure API. Applications (often referred to as  legacy  \n\n \n \n U/OO/ 160978  | PP-24-1951  | May 2024 Ver. 1.0  11 Advancing Zero Trust Maturity Througho ut the Application and Workload Pillar \n NSA | \n \napplications) that cannot adhere to modern, dynamic resource authorization polic ies \nthat limit their access based on PoLP , ABAC, and changing environment conditions \nshould be placed behind application gateways or proxies and planned for re placement  \nby ones that can .  \nApplic ations and workloads may need their own accounts or authentication credentials, \nsuch as certificates or API keys, to authenticate to resources and other applications. \nThe access granted by these credentials should follow PoLP and limit access to only \nwhat is needed  for the intended application functionality and integration.   \nTable 4: Resource authorization and  integration maturity  \nPreparation  Basic  Intermediate  Advanced  \nNone at this \nlevel.  Organizations \nmanually implement \nstatic rules and \nconfigurations to \ncontrol access to \napplications and \nresources . \nOrganizations begin to \nprofile access \nbehaviors to \nimplement access \ncontrol based on \ncontextual information.  Organizations automate \napplication access decisions \nbased on contextual \ninformation  and enforce time -\nbased access. The decision \ncriteria include a comparative \nanalysis of the criticality of \nthe mission vs. a risk score of \nthe application. Application \nrisk scores include a \ncompon ent for C -SCRM risk.  Organizations implement \ncontinuous application \naccess authorizations using \nreal-time automated risk \nanalysis and behavioral \nanalytics. Automated \nmechanisms \nmonitor/mitigate the \nintroduction of unauthorized \napplications or anomalous \nworkflows.  \nContinuous monitoring and  ongoing authorizations  \nContinuous monitoring and ongoing authorization are based on the idea that nothing is \nconstant, there are continuous changes, and those changes can introduce \nvulnerabilities. Automated tools and pro cesses should  continuously monitor the health, \nstatus, and operability of deployed applications  and workloads . Dashboards and alerts \nshould  be used to observe the status and changes to the workload , and alert \nappropriate personnel of significant changes . Implement ing these processes will greatly \nenhance the overall security and incident response times for the organization.  \n \n\n \n \n U/OO/ 160978  | PP-24-1951  | May 2024 Ver. 1.0  12 Advancing Zero Trust Maturity Througho ut the Application and Workload Pillar \n NSA | \n \nTable 5: Continuous monitoring and ongoing authorizations maturity  \nPreparation  Basic  Intermediate  Advanced  \nNone at this \nlevel.  Organizations \ncollect log data \nrelated to \napplications and \ndevice  health, \nstatus, and \noperability to \npopulate a \ndashboard. \nAuthorization \ndecisions are made \nmanually.  Organizations expand \nautomated capabilities of \nthe dashboard to \nrevoke/limit access to \napplications automatically. \nLimited critical user access \nis managed manually. \nAccess decision criteria \ncompare and analyze the \ncriticality of the mission vs \nrisk score of the application. \nApplication risk scores \ninclude a component for C -\nSCRM risk.  Organizati ons implement fully \nautomated continuous \nauthorizations and monitoring for \nusers and applications based on \nanomalous behavior detection \nand threat intel. A utomated \nmechanisms continuously check \nfor known vulnerabilities in \nsoftware e lements. The \nautomated continuous monitoring \nsystem integrates  real-time \nassessment of application risks \nas part of the application access  \nprocess.  \nSummary of guidance  \nThe information presented here is not a standardized solution that fits all organizatio ns, \nbut rather suggestions and considerations  for implementing ZT concepts  related to \napplication s and workloads. Discovering and defining the organizations mission and \nidentifying the supporting assets that need to be secured will help build a clearer picture \nof the as -is architecture which can be compared against the recommendations in this \npillar along with the other ZT pillar CSIs.  \nEach organization will need to evaluate their individual requirements to determine a \nsuitable solution.  Ultimately, the goal is to develop  a ZT roadmap that align s with the \norganizations ZT goals.  The following guidance are the key ideas for implementing the \nZT application and workload  pillar to secure and protect against adversarial abuse of \napplications and workloads : \n Identify a pplications/workloads within or connecting to the environment.  \n Ensure applications i mplement strong continuous authentication and granular \naccess decisions , preferably  leveraging available contextual information , as a \nprecondition for the use of the applications and workloads.  \n\n \n \n U/OO/ 160978  | PP-24-1951  | May 2024 Ver. 1.0  13 Advancing Zero Trust Maturity Througho ut the Application and Workload Pillar \n NSA | \n \n Follow PoLP , ensuring users and applications  receive only the minimum level of \naccess required to perform their job s. \n Implement micro  segmentation to limit lateral movement from applications and \nworkloads . \n Employ continuous moni toring and logging to track anomalous and suspicious \nbehavior.  \n Utilize strong encryption algorithms to encrypt data in transit and at rest to ensure \ndata integrity and confidentiality.  \n Implement regular patch management  for all applications and workloads . \n Ensure container security for containerized workloads by scanning container \nimages for vulnerabilities, limiting container privileges, protecting container \nsecrets, and implementing runtime security controls.  \n Secure APIs by implementing authentication, aut horization, and encryption \nmechanisms.  \n Conduct regular security assessments, including penetration testing and \nvulnerability scanning, to identify and remediate security weaknesses proactively.  \n Ensure application development and implementation compliance w ith relevant \nmandatory regulations and standards.  \n Exercise due diligence and research to determine if IT solutions are fit for \npurpose, to include security features and capabilities meeting quality and \nresiliency expectations.  \nFurther guidance  \nNSA is assis ting NSS community members that are piloting ZT capabilities, coordinating \nZT activities with NIST, CISA, and DoD , and developing additional ZT guidance to \nsupport system developers through the challenges of integrating ZT within NSS, DoD, \nand DIB environm ents. Upcoming additional guidance will help organize, guide, and \nsimplify incorporating ZT principles and designs into enterprise networks.  \n  \n\n \n \n U/OO/ 160978  | PP-24-1951  | May 2024 Ver. 1.0  14 Advancing Zero Trust Maturity Througho ut the Application and Workload Pillar \n NSA | \n \nWorks cited  \n[1] P. Koehler. What is a Workload? 2021. https://core.vmware.com/blog/what -workload  \n[2] IBM. What is a workload? 2024. https://www.ibm.com/topics/workload   \n[3] National Security Agency. Embracing a Zero Trust Security Model. 2021. \nhttps://media.defense.gov/2021/Feb/25/2002588479/ -1/-\n1/0/CSI_EMBRACING_ZT_SECURITY_MODEL_UOO115131 -21.PDF   \n[4] Department of Defense. Department of Defense (DoD ) Zero Trust Reference Architecture v. 2.0. \n2022. https://dodcio.defense.gov/Portals/0/Documents/Library/(U)ZT_RA_v2.0(U)_Sep22.pdf   \n[5] National Institute of Standards and Technology. NIST Special Publication 800 -207: Zero Trust \nArchitecture. 2020. https://csrc.nist.gov/publications/detail/sp/800 -207/final   \n[6] Cybersec urity and Infrastructure Security Agency. Zero Trust Maturity Model. 2023. \nhttps://www.cisa.gov/sites/default/files/2023 -04/zero_trust_maturity_model_v2_5 08.pdf   \n[7] Department of Defense. Cybersecurity Reference Architecture. 2023. \nhttps://dodcio.defense.gov/Portals/0/Documents/Library/CS -Ref-Architecture.pdf   \n[8] Depart ment of Defense. DoD Zero Trust Strategy. 2022. \nhttps://dodcio.defense.gov/Portals/0/Documents/Library/DoD -ZTStrategy.pdf   \n[9] The White House. Executive Order on Improvi ng the Nations Cybersecurity. 2021. \nhttps://www.whitehouse.gov/briefing -room/presidential -actions/2021/05/12/e xecutive -order -on-\nimproving -the-nations -cybersecurity/   \n[10] The White House. National Security Memorandum 8. 2022. https://www.whitehouse.gov/briefing -\nroom/presidential -actions/2022/01/19/memorandum -on-improving -the-cybersecurity -of-national -\nsecurity -department -of-defense -and-intelligence -community -system s/  \n[11] The White House. Federal Zero Trust Strategy Memorandum 22 -09. 2022. \nhttps://www.whitehouse.gov/wp -content/uploads/2022/01/M -22-09.pdf   \n[12] National Institute of Standards an d Technology. Computer Security Resource Center (CSRC) \nDevSecOps. 2023. https://csrc.nist.gov/projects/devsecops   \n[13] National Security Agency et al. Defending Continuous Integration/Continuous Delivery (CI/CD) \nEnvironments. 2023. https://media.defense.gov/2023/Jun/28/2003249466/ -1/-\n1/0/CSI_DEFENDING_CI_CD_ENVIRONMENTS.PDF   \n[14] National Institute of S tandards and Technology. Secure Software Development Framework \n(SSDF ). 2024. https://csrc.nist.gov/projects/ssdf   \n[15] Cybersecurity and Infrastructure Security Agency. Shifting the Balance of Cybersecurity Ri sk: \nPrinciples and Approaches for Secure by Design Software . 2023. \nhttps://www.cisa.gov/sites/default/files/2023 -10/SecureByDesign_1025_508c.pdf   \n[16] National Institute of Standards and Technology. Special Publication 800 -161r1: Cybersecurity \nSupply Chain Risk Management Practices for Systems and Organizations. 2022. \nhttps://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800 -161r1.pdf   \nDisclaimer of endorsement  \nThe information and opinions contained in this document are provided \"as is\" and without any warranties or \nguarantees. Reference herein to any speci fic commercial products, process, or service by trade name, trademark, \nmanufacturer, or otherwise, does not constitute or imply its endorsement, recommendation, or favoring by the United \nStates Government, and this guidance shall not be used for advertisin g or product endorsement purposes.  \n\n \n \n U/OO/ 160978  | PP-24-1951  | May 2024 Ver. 1.0  15 Advancing Zero Trust Maturity Througho ut the Application and Workload Pillar \n NSA | \n \nPurpose  \nThis document was developed  in furtherance of the authoring organization s cyber security mission , including their  \nresponsibilities to identify and disseminate threats, and to develop and issue cybersecurity specifications and \nmitigations. This information may be shared broadly to reach all appropriate stakeholders.  \nContact  \nCybersecurity Report Feedback: CybersecurityReports@nsa.gov  \nGeneral Cybersecurity Inquiries or Customer Requests: Cybersecurity_Requests@nsa.gov  \nDefense Industrial Base Inquiries and Cybersecuri ty Services: DIB_Defense@cyber.nsa.gov  \nMedia Inquiries / Press Desk: NSA Media Relations: 443 -634-0721, MediaRelations@nsa.gov  \n\n",
  "cves": [],
  "techniques": [],
  "advisory": "cybersecurity-alerts",
  "title": "csi-application-and-workload-pillar",
  "source": "nsa",
  "id": "f7bae47973dc5429e555d7c1e19b46b23993b250987bb9dec1c97e7220390cf8"
}