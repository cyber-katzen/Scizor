{
  "markdown": " \n \n \nNational Security Agency  \nCybersecurity  Technical Report  \n \n \n \n \n \nDoD Microelectronics: \nNSA Evaluation of Commercial ly \nAvailable  Embedded  FPGA s \n \n \n \n \n \n \nNOVEMBER  2023 \n \nU/OO/ 232094 -23 \nPP-23-3645  \nVersion 1.1 \n \n \n \n\n\n \n \n \nU/OO/ 232094 -23 | PP-23-3645 | NOV  2023 Ver. 1 .1 ii  \nNational Security Agency | Cybersecurity Technical Report  \nNSA Evaluation of C ommercially Available Embedded FPGAs  \n For additional information, guidance, or assistance with this \ncybersecurity technical report (CTR) , please contact the Joint \nFederated Assurance Center (JFAC) at \nJFAC_HWA@radium.ncsc. mil. \n  \n\n\n \n \n \nU/OO/ 232094 -23 | PP-23-3645 | NOV  2023 Ver. 1 .1 iii  \nNational Security Agency | Cybersecurity Technical Report  \nNSA Evaluation of C ommercially Available Embedded FPGAs  \nNotices and history   \nDocument change history  \nDate  Version  Description  \nOctober  2023 1.0 Initial p ublication  \nNovember 2023  1.1 Minor revisions  \nDisclaimer of warranties and endorsement  \nThe information and opinions contained in this document are provided \"as is\" and \nwithout any warranties or guarantees. Reference herein to any specific commercial \nproducts, process, or service by trade name, trademark, manufacturer, or otherwise, \ndoes not constitute or imply its endorsement, recommendation, or favoring by the \nUnited States Government, and this guidance shall not be used for advertising or \nproduct endorsement purposes.  \nPublication information  \nAuthor(s)  \nNational Security Agency  \nCybersecurit y Directorate  \nJoint Federated Assurance Center  \nContact information  \nNSA Joint Federated Assurance Center: JFAC_HWA@radium.ncsc.mil  \nCybersecurity Report Feedback / General Cybersecurity Inquiries: \nCybersecurityReports@nsa.gov   \nDefense Industrial Base Inquiries and Cybersecurity Services: \nDIB_Defense@cyber.nsa.gov   \nMedia inquiries / Press Desk : Media Relations,  443-634-0721:  \nMediaRelations@nsa.gov   \nPurpose  \nThis document was developed in furtherance of NSAs cybersecurity missions. This \nincludes its responsibilities to identify and disseminate threats to National Secu rity \nSystems, Department of Defense information systems, and the Defense Industrial Base, \nand to develop and issue cybersecurity specifications and mitigations. This information \nmay be shared broadly to reach all appropriate stakeholders.   \n\n \n \n \nU/OO/ 232094 -23 | PP-23-3645 | NOV  2023 Ver. 1 .1 iv  \nNational Security Agency | Cybersecurity Technical Report  \nNSA Evaluation of C ommercially Available Embedded FPGAs  \nExecutive s ummar y \nAn embedded Field Programmable Gate Array (e FPGA ) is a custom -sized piece of \nconfigurable FPGA fabric that has been designed for use in an application specific \nintegrated circuit  (ASIC ). Integrating this intellectual property ( IP) into an ASIC  enables \na program  to optimize their system  to meet product requirements while providing the \nability to reconfigure portions of the design after manufacture in the same way that an \nFPGA can be reprogrammed. At the time of the evaluation effort, f our different \ncommerc ial vendors were examined : Achronix, Flex Logix, Menta , and QuickLogic.  \nThe NSA JFAC Hardware Assurance (HwA) evaluation team conducted a five -phase \nevaluation of the eFPGA  commercial offerings. These five phases  and their reports  are \nnamed Rocky I -V and i nclude:  \n1. Rocky I   report on eFPGA vendors, their products, their business models, \ndesign flows, the advantages of the using this IP type , and the application spaces \nwhere this product can have the most impact.  \n2. Rocky II   report on designing custom -built eF PGA block s and evaluating  their \ndeliverables, documents, and support.  \n3. Rocky III   report on the back -end software support for developing and loading \napplications into the eFPGA in the ASIC hardware.  \n4. Rocky IV  - report summarizing the security -related benefits and vulnerabilities of \nusing an eFPGA.  \n5. Rocky V   report on actual ASIC development effort using eFPGA.  \nFollowing the completion of these research phases, the NSA HwA  evaluation team \nmade many  observations regarding the eFPGA v endors, the eFPGA pro ducts, the \nvendor support software, deliverables, integration, programming , and \nsecurity/assurance issues. These observations are as follows:  \n The four vendors evaluated have mature eFPGA products  from commonly used \nfoundries/ processes . These products  have  been used in many DoD systems . \n The eFPGA products are well supported by the necessary software and \nelectronic design automation ( EDA) models required for use in an ASIC \ndevelopment flow.  \n\n \n \n \nU/OO/ 232094 -23 | PP-23-3645 | NOV  2023 Ver. 1 .1 v  \nNational Security Agency | Cybersecurity Technical Report  \nNSA Evaluation of C ommercially Available Embedded FPGAs  \n An eFPGA provides a good assurance solution for protecting sensitive  ASIC \ndesign information from disclosure during the manufacturing of ASIC s. \n The eFPGA products are complicated and require some additional work to \nintegrate into an ASIC compared to other commonly used hard IP.  \n The NSA JFAC HwA  evaluation team believes that this product set is ready to be \nused by DoD. \nThis summary report ends with a list of recommendations to the U.S. Government \n(USG ) and to potential users of eFPGA s. They are summarized as follows:  \n The eFPGA should be viewed pr imarily as an ASIC IP block and not as an FPGA \nsubstitute.  \n The USG should engage with eFPGA vendors to communicate USG assurance \nand security needs and to influence product design and development in a \nmanner that would benefit DoD programs.  \n The USG sho uld recognize eFPGA as a  means to maintain confidentiality of \nsensitive portions of DoD-specific ASIC designs during manufacture. This fact \nmakes the continuing maturity of this product a DoD ASIC assurance priority.  \n Since eFPGA macros are custom IP blocks, th ey represent a target of \nopportunity for an adversary to attack specific programs  their targetability is \nbuilt in. Accordingly, DoD should engage JFAC to develop assurance best \npractice guidance to support this product.  \n The USG should investigate the dev elopment of security functions and \narchitectures to protect these devices and their bitstreams from malicious \nattacks. This could include government -off-the-shelf encryption and \nauthentication engines to protect the configuration information containing \nsensitive design data.  \n This report provides p otential users with a list of detailed technical \nrecommendations for selecting the correct eFPGA, developing a custom macro, \nperforming acceptance testing on the deliverable , and conducting design \nintegration.  \nThis summary report reflects the state of eFPGA offerings available in the commercial \nmarket at the time of the evaluation effort, which began in 2020. These products may \n\n \n \n \nU/OO/ 232094 -23 | PP-23-3645 | NOV  2023 Ver. 1 .1 vi  \nNational Security Agency | Cybersecurity Technical Report  \nNSA Evaluation of C ommercially Available Embedded FPGAs  \nhave matured and been enhanced in the intervening time. The reader is encouraged to \neduca te themselves on any relevant updates.  \nProviding many benefits to the ASIC designer, the current commercial offerings are \nwidely available, well supported, reasonably mature , and powerful as an assurance tool. \nThe NSA JFAC HwA  evaluation team recommends the use of eFPGAs and believes \nthat they can play an important role in protecting sensitive DoD  algorithms.   \n  \n\n \n \n \nU/OO/ 232094 -23 | PP-23-3645 | NOV  2023 Ver. 1 .1 vii  \nNational Security Agency | Cybersecurity Technical Report  \nNSA Evaluation of C ommercially Available Embedded FPGAs  \nTable of contents   \nDoD Microelectronics: NSA Evaluation of Commercially Available Embedde d \nFPGAs  ................................ ................................ ................................ ................................ ............. i \nExecutive summary  ................................ ................................ ................................ ......................  iv \nTable of c ontents  ................................ ................................ ................................ .........................  vii \n1. Introduction  ................................ ................................ ................................ ...............................  1 \n2. Embedded field programmable gate array  ................................ ................................ ............  2 \n3. Benefits and tradeoffs of using an eFPGA  ................................ ................................ ............  4 \n3.1. ASIC development risk mitigation  ................................ ................................ ................................ ...............  4 \n3.2. ASIC lifecycle management  ................................ ................................ ................................ ..........................  5 \n3.3. Improvement in space, power, and performance (SWaP)  ................................ ...............................  6 \n3.4. System costs  ................................ ................................ ................................ ................................ .......................  8 \n3.5. System security  ................................ ................................ ................................ ................................ ..................  9 \n3.6. Securing sensitive algorithms from the ASIC manufacturer  ................................ ..........................  11 \n3.7 Tradeoffs Summary  ................................ ................................ ................................ ................................ ......... 11 \n4. NSA evaluation of eFPGAs  ................................ ................................ ................................ .... 12 \n4.1. Rocky I  ................................ ................................ ................................ ................................ ................................ . 12 \n4.2. Rocky II  ................................ ................................ ................................ ................................ ................................  12 \n4.3. Rocky III  ................................ ................................ ................................ ................................ ..............................  13 \n4.4. Rocky IV  ................................ ................................ ................................ ................................ ..............................  13 \n4.5. Rocky V  ................................ ................................ ................................ ................................ ...............................  13 \n5. Study observations  ................................ ................................ ................................ ................  13 \n5.1. eFPGA vendors  ................................ ................................ ................................ ................................ ...............  14 \n5.2. Evaluated eFPGA products  ................................ ................................ ................................ .........................  14 \n5.3. Software  ................................ ................................ ................................ ................................ ..............................  16 \n5.4. Deliverables  ................................ ................................ ................................ ................................ .......................  16 \n5.5. Integration  ................................ ................................ ................................ ................................ ..........................  17 \n5.6. Programming  ................................ ................................ ................................ ................................ .....................  17 \n5.7. Assurance and security  ................................ ................................ ................................ ................................  18 \n6. Recommendations to USG  ................................ ................................ ................................ .... 18 \n7. Recommendations to users  ................................ ................................ ................................ .. 19 \n7.1. Select the appropriate product  ................................ ................................ ................................ ...................  19 \n7.2. Develop the custom macro  ................................ ................................ ................................ ..........................  20 \n7.3. Ensure acceptance testing for all eFPGA deliverables  ................................ ................................ .... 21 \n7.4. Design integration  ................................ ................................ ................................ ................................ ...........  22 \n8. Conclusions  ................................ ................................ ................................ ............................  23 \n \n \n  \n\n \n \n \nU/OO/ 232094 -23 | PP-23-3645 | NOV  2023 Ver. 1 .1 viii  \nNational Security Agency | Cybersecurity Technical Report  \nNSA Evaluation of C ommercially Available Embedded FPGAs  \nList of figures  \nFigure 1: Companies providing embedded FPGAs  ................................ ................................ ......................  1 \nFigure 2: Logic Element (LE) to ASIC - the eFPGA is an array of programmable LEs forming an ASIC \nembeddable FPGA fabric  ................................ ................................ ................................ .................  3 \nFigure 3: Same ASIC, different functions - the eFPGA provides an area on the chip that can be \nreprogrammed with different functions as needed  ................................ ................................ ...........  5 \nFigure 4: Lifecycle Management - the eFPGA provides the ability for a program to update versions of \nincluded functions in the future without refabricating the part ................................ ..........................  6 \nFigure 5: High Speed Transceivers - in many cases, moving the system FPGA fabric onto the ASIC can \neliminate expensive, complex, and power -hungry high -speed transceivers  ................................ ... 7 \nFigure 6: Volume Costs - Chart Assumptions  Approx. GlobalFou ndries DoD Trusted Access Program \nOffice wafer fabrication costs, 65% die yield on 12\" wafers and $1.5M eFPGA license fee  ...........  9 \nFigure  7: Configurable Encryption - An eFPGA allows a design to include different encryption engines for \ndifferent end products, expanding its functional use for different security realms  .........................  10 \nFigure 8: Exposed Traces - the communication traces on a printed circuit board (PCB) between an ASIC \nand FPGA parts represents a security vulnerability. Moving the FPGA fabric on the ASIC by \nmeans of an eFPGA fabric eliminates this weakness  ................................ ................................ .... 11 \n\n \n \n \nU/OO/ 232094 -23 | PP-23-3645 | NOV  2023 Ver. 1 .1 1  \nNational Security Agency | Cybersecurity Technical Report  \nNSA Evaluation of C ommercially Available Embedded FPGAs  \n1. Introduction  \nFor the last 20 years, the pace of technolog ical advancement in microelectronic s has \ngifted computer e ngineers a myriad of tools and i ntellectual property (IP) to spawn  ever \nmore advanced products. New fabrication processes, materials, memory devices, \nprocessors, and high-speed transceivers have all created new leaps in performance, \nminiaturization, and power reduction in custom DoD systems.  \nThese advances  include  field programmable gate arrays (FPGA s), which  have also \ngrown in complexity. More than just  the configurable microelectronic circuits of earlier \ngenerations , the current generation FPGAs now provide processor systems, a high level \nof security, high -speed i nput/output (I /O), and easy -to-use design environments. In \nmany ways, FPGAs now provide much of what can be done on an ap plication specif ic \nintegrated circuit (ASIC) with the added ability to be reprogrammed.  \nIn yet another advance, new ASIC IP has emerged on the commercial market known as \nthe embedded FPGA (eFPGA). This new device enhance s capabilities that can be \nobtained when designing a custom computer chip. An eFPGA is a custom -sized piece \nof configurable FPGA fabric that has been designed for use in an ASIC. Integrating this \nIP into an ASIC enables a program to optimize their system to meet product \nrequirements while providing the abi lity to reconfigure portions of the design after \nmanufacture in the same way that an FPGA can be reprogrammed.  During the \nevaluation effort, t he following four commercial vendors were examined :  \n \nFigure 1: Companies providing embedded FPGAs  \n\n\n \n \n \nU/OO/ 232094 -23 | PP-23-3645 | NOV  2023 Ver. 1 .1 2  \nNational Security Agency | Cybersecurity Technical Report  \nNSA Evaluation of C ommercially Available Embedded FPGAs  \n2. Embedded f ield programmable gate array \nAn eFPGA is an  IP block  designed to enable change s to a portion of an ASICs digital \nlogic on demand. Normally, a n ASIC  is limited to performing only the functions for which  \nit was designed. Its logic  and functions are static and unchangeable. In this light, a \ncomputer chip that needs an update d function  or a bug fix  would require  the design of \nan updated chip and a new manufactur ing cycle to produce it .  \nConversely , commercial FPGAs are microelectroni c devices designed to have their \nfunctionality programmed into them after manufacturing , but at the cost of larger size , \nless performance , and greater power consumption. They are immune to the ASIC \nredesign problems because their logic is reprogrammable. As an example, i f version A \nof a product needs a serial to parallel interface (SPI) and version B needs a universal \nasynchronous receiver/transmitter (UART) interface, the FPGA designer simply \nprograms the same FPGA device to operate differently.  \nThe eFPG A was developed to provide this same ability for an ASIC without sacrificing \nthe optimized performance, area, and power that full custom chips provide. The eFPGA \nis a piece of FPGA programmable fabric that can be integrated into an ASIC layout and \nsubseque ntly programmed in the same way that todays commercial FPGAs can. It is \nnot a replacement for FPGAs in a DoD system, but a tool to increase the flexibility and \nusefulness of an ASIC design. This new IP is designed to work within industry standard \ndesign f lows/tools, may be reprogrammed an unlimited number of times, and is \nconfigured with a bitstream in the same manner as commercial FPGAs.  \nAdditionally, since the eFPGA is programmed after fabrication, it provides a mechanism \nfor DoD programs to protect the ir sensitive algorit hms and designs from disclosure \nduring manufactur ing, while still enjoying the benefit of optimization inherent in an ASIC . \nThese can be programmed with sensitive code and functionality after the manufacturing \nprocess , thereby reducing the risk of compromise . \n \n\n \n \n \nU/OO/ 232094 -23 | PP-23-3645 | NOV  2023 Ver. 1 .1 3  \nNational Security Agency | Cybersecurity Technical Report  \nNSA Evaluation of C ommercially Available Embedded FPGAs  \n \nFigure 2: Logic Element (LE) to ASIC - the eFPGA is an array of programmable LEs forming an \nASIC embeddable FPGA fabric  \nAs depicted in F igure 2, c urrently all of the eFPGA manufacturers develop their IP from \na basic building block called a programmable logic element (LE). This LE is tiled  into a \nlarge field of programmable devices  whose n umber is determined by the user . These \nLEs all include a proprietary look-up-table (LUT) function, reg isters, multiplexors, and \nprogrammable interconnection paths. Additionally, many of the eFPGA  manufacturers  \noffer options to integrate local memory, digital signal processors (DSP), and other \nfunction al features into their fabrics.  \nEach eFPGA block has hu ndreds to thousands of input and output pins  allowing broad \naccess  to these capabilities . Configuration logic is provided with each eFPGA, either as \nan embedded function , or as a wrapper for the device. To support the designer, these \nblocks come with electronic design automation (EDA) views to assist with all of the \ncommon ASIC development phases, including: simulation, synthesis, timing analysis, \ntest insertion, place and route, clock tree synthesis, post -route extraction, physical \nverification, and manufa cturing tests . Furthering the support, eFPGA blocks are \naccompanied with advanced and easy -to-use software to assist the user with:  \n Designing a custom eFPGA block  \n Integrating it into an ASIC design  \n Implementing a configurable digital function into the fabric  \n Generating a bitstream for programming the device  \n\n\n \n \n \nU/OO/ 232094 -23 | PP-23-3645 | NOV  2023 Ver. 1 .1 4  \nNational Security Agency | Cybersecurity Technical Report  \nNSA Evaluation of C ommercially Available Embedded FPGAs  \nThese devices are  referred to as  hard macros in the ASIC world meaning they are \ndelivered as completed computer -aided design ( CAD ) layouts as opposed to hardware \ndescript ion language ( HDL) code that would require mapping to a physical library \nelement. A s such , they  are foundry and process specific . This means an eFPGA block \nthat was designed to work in a 32 nanometer (nm) process in foundry A, will require \nengineering work to make it work i n a 14nm process in foundry B.  \nHowever, these devices are cur rently available in a wide range  of technologies  and \neach vendor is prepared to port their IP to new manufacturing processes where a viable \nbusiness case exists.  \n3. Benefits  and tradeoffs  of using an eFPGA  \neFPGAs prov ide many advantages  to the ASIC designer , but with a few tradeoffs. The \nadvantages are categorized into the following six primary areas:  \n ASIC development risk mitigation  \n ASIC lifecycle management  \n Improvement in space, power, and performance  (SWaP)  \n System c osts \n System s ecurity  \n Securing s ensitive algorithms  from the ASIC m anufacturer  \nMany  of the advantages contribute in more than one of these areas and are referenced \nmany times in this report.  \n3.1. ASIC development r isk mitigation  \nAn eFPGA is a powerful tool for mitigating risk in both design and fabrication. Todays  \nelectronic designs demand greater performance at lower power, forcing programs to \nrely on advanced chip fabrication nodes. These cutting edge processes are complex \nand e xpensive , so c orrecting design issues can require  second or third fabrication runs, \nwhich are both costly and time consuming. Therefore manufacturers are always seeking \nbetter ways to mitigate the risk of working with these complex technologies.  \nBy using the new eFPGA IP, a designer can incorporate  potentially risky or immature \nalgorithms  into the eFPGA fabric  and evaluate them without first committing to an \nexpensive and time -consuming manufacturing process , as shown in Figure 3 . Using the \n\n \n \n \nU/OO/ 232094 -23 | PP-23-3645 | NOV  2023 Ver. 1 .1 5  \nNational Security Agency | Cybersecurity Technical Report  \nNSA Evaluation of C ommercially Available Embedded FPGAs  \neFPGA allows the ASIC to be updated over the chip lifespan without the need for a new \nmanufacturing cycle. Update s can include bug fixes or functional revisions.  With costs \nof a new manufacturing cycle exceeding $10M for cutting edge process nodes, this \nability represents significant cost savings and risk mitigation. While current mitigation \nstrategies, such as multi -project wafers are effective, they can require more than nine \nmonths of production and manufacturing time per iteration.  \nUsing the eFPGA redu ces the need for a dditional fabrication runs, saving  the time and \ncosts of a new production run, thereby getting the product to market in less time for less \ncost.  The eFPGA would also allow the program to support requirements for multiple \nfunctional varian ts of the ASIC.  For instance, if the program has multiple  customer s with \nslightly different I /O configuration s or different serial interface standards, the difference s \ncould  be programmed into the eFPGA, requiring one manufacturing run and reducing \nprogram  risk. \n \nFigure 3: Same ASIC, different functions - the eFPGA provides an area on the chip that can be \nreprogrammed with different functions as needed  \n3.2. ASIC l ifecycle management  \nMany ASIC products are planned as a series of releases, each with its own fabrication \nrun to incorporate increasing functionality. In this scenario, an end user may have to \nupdate an IP function to a newer version or add new functionality in subsequent ASI C \nversion releases. Historically, a version update used an existing FPGA or it needed an \n\n\n \n \n \nU/OO/ 232094 -23 | PP-23-3645 | NOV  2023 Ver. 1 .1 6  \nNational Security Agency | Cybersecurity Technical Report  \nNSA Evaluation of C ommercially Available Embedded FPGAs  \nASIC redesign that would require a subsequent fabrication run , both of which would \nmean significant added costs and schedule delays.  \nHowever, incorporating an eFPGA i nto the ASIC design can help avoid this by allowing \nthe designer to update existing hardware design or by adding new features via a new \nbitstream . This is illustrated in Figure 4. Additionally, this enables the designer to \nmanage the new rollout schedule a nd avoid the cost of additional manufacturing \nruns/fabrication spins. In some cases, the designer may choose to include the eFPGA \nfabric in the ASIC production design to meet a future, currently unstated, need.  \nOne of the vendors build s their eFPGA  macro exclusively out of standard cell librar y \nelements, while the other three use a combination of standard cells and custom \ndeveloped functions.  Using standard cell libraries simplifies the porting effort of moving \nthe product to a new manufacturing technology  and speeds the process.   \n \nFigure 4: Lifecycle Management - the eFPGA provides the ability for a program to update versions \nof included functions in the future without refabricating the part  \n3.3. Improvement in space, power , and performance  (SWaP)  \nAn eFPGA can optimize an ASIC to enhance its performance, power, and space  \nattributes . While a few of these optimizations are inherent to the eFPGA block itself, \nmost of them exist because of the added configurability in the ASIC. The eFP GA can be \ngenerated using the standard cell library and threshold voltage (Vt) option that best fits \nthe program needs. A programmable fabric could be custom made using a technologys \nlibrary and optimizing its performance while still meeting design requir ements , such as \n\n\n \n \n \nU/OO/ 232094 -23 | PP-23-3645 | NOV  2023 Ver. 1 .1 7  \nNational Security Agency | Cybersecurity Technical Report  \nNSA Evaluation of C ommercially Available Embedded FPGAs  \nlower power consumption. However, the eFPGA makes its greatest performance \ncontribution when an on -board commercial FPGA can be replaced with an ASIC that \nincorporates an e FPGA. In this scenario, the ASIC can communicate directly with the \nfabric without going off -chip through an I /O bottleneck , see Figure 5 . The \ncommunication between the ASIC and the eFPGA fabric can be pushed to the \nperformance limits of the technology and across very wide parallel hardware buses. \nThis also simplifies the c locking scheme , shorten s the insertion delay on the clock tree , \nand eliminate s the complexity of synchronizing off -chip devices with other logic on the \nASIC. Finally, the system designer has the option of instantiating multiple fabrics on an \nASIC, creating  efficient architectures for specific applications.  \nThe same manufacturing benefits can be used to create power and space efficiencies. \nThe system will require less power because the commercial FPGA has been removed \nfrom the board. In addition, the high -speed transceivers providing communication \nbetween the ASIC and commercial FPGA may also be removed , yielding substantial \npower savings. The eFPGA blocks can all be generated in power -optimized libraries for \nlower leakage and most provide low -power states , such as sleep and power -down, \nfurther improving the power profile of the system. The eFPGA can also contribute to \nreducing the space needed for a system by removing the need to include a commercial \nFPGA on a board, freeing space for other beneficial appli cations.  \n \nFigure 5: High Speed Transceivers - in many cases, moving the system FPGA fabric onto the ASIC \ncan eliminate expensive, complex , and power -hungry high -speed transceivers  \n\n\n \n \n \nU/OO/ 232094 -23 | PP-23-3645 | NOV  2023 Ver. 1 .1 8  \nNational Security Agency | Cybersecurity Technical Report  \nNSA Evaluation of C ommercially Available Embedded FPGAs  \n3.4. System c osts \nAs stated earlier, incorporatin g an eFPGA into an ASIC can potentially result in fewer \nfabrication runs, saving costs associated with creating new mask sets to support design \nmodifications or fixes. There are other potential mask related savings. If a program has \ndifferent requirements from different customers, such as different package -to-pin signal \nassignments, functions, or I/O protocols, the only way to meet these requirements \nwithout incorporating an eFPGA into the ASIC design is by including all of the options \non a single ASIC or b y producing multiple ASIC versions. Both of these options are \ncostly. By using an eFPGA, the designer can create multiple versions of an ASIC using \na single mask set and tailoring the ASIC functionality to meet differing customer \nrequirements.  \nIn addition  to the cost savings, this design approach can reduce design size since there \nis no longer the need to include every potential function or configuration option. This \nsmaller design size lends itself to improved wafer yield at manufacturing  again, likely \nreducing cost.  \nWhen the eFPGA replaces a commercial FPGA, there are secondary cost savings. \nFPGAs require complex board designs and the requisite discrete support components, \nbut an eFPGA reduces that complexity and those dependencies. The program can als o \nsave cost on IP license fees for using high -speed transceivers along with their \nassociated integration and testing costs. Using a common eFPGA across multiple \nplatforms means the license costs are amortized over a larger number of units, making \neach unit  less expensive as more are built.  \nFinally, the eFPGA can deliver cost savings to a system that has large volume \nproduction. Commercial FPGAs do not have significant quantity discounts: the costs are \nsimilar regardless of purchasing volume.  \nFor instance,  purchasing 50,000 FPGA units at $1000/per unit would cost $50M. In \ncontrast, 50,000 ASIC units with eFPGA in a cutting edge node would cost under $20M, \nand as illustrated in the following figure:  \n\n \n \n \nU/OO/ 232094 -23 | PP-23-3645 | NOV  2023 Ver. 1 .1 9  \nNational Security Agency | Cybersecurity Technical Report  \nNSA Evaluation of C ommercially Available Embedded FPGAs  \n \nFigure 6: Volume Costs - Chart A ssumptions  Approx. GlobalFoundries DoD Trusted Access \nProgram Office wafer fabrication costs, 65% die yield on 12\" wafers and $1.5M eFPGA license fee  \n3.5. System s ecurity  \nIncorporating an eFPGA into a n ASIC design  offers security benefits, but may also \nrequire a few tradeoffs . Unlike commercial FPGAs, the eFPGA is delivered without any \nsecurity features  since it is intended to be encapsulated within the anti-tamper boundary \nof the ASIC and reside under the systems  overall security protections. This allows the \ndesigner to fully optimize the block and eliminate non-applicable  anti-tamper features , \nsaving surface area and power.  \nHowever, if the program requires dedicated or custom architected security, the burden \nof protecting the programming bitstream falls on the ASIC architecture. Under this \nsetup, the designer only includes those protections that are needed. These protections \ncould be at the module level, the board level, or at the chip level similar to a commerci al \n\n\n \n \n \nU/OO/ 232094 -23 | PP-23-3645 | NOV  2023 Ver. 1 .1 10  \nNational Security Agency | Cybersecurity Technical Report  \nNSA Evaluation of C ommercially Available Embedded FPGAs  \nFPGA . While this model can provide additional engineering challenges in some \narchitectures, it also provides a few unique opportunities. With the eFPGA, the designer \nis unencumbered by commercial -grade protection mechanisms and is free to implement \nany combination of bitstream obfuscation, encryption, and authentication to meet the \nlevel of security needed for each design  as illustrated in the following figure.   \n \nFigure 7: Configurable Encryption - An eFPGA allows a design to in clude different encryption \nengines for different end products, expanding its functional use for different security realms  \nFor example, in cases of highly sensitive bitstream content, the system architect can \nimplement military -grade encryption and omit com mercial -grade protections, making the \nchip design more efficient. This customized security approach offers substantial \nprotection from reverse engineering processes developed by those nation -states \ninvested in attacking traditional commercial FPGA products . Additionally, in the \nscenarios where an eFPGA is replacing an onboard FPGA, all the board level traces \nthat were vulnerable to being probed would be included on the ASIC where these \ncommunicatio n lines can no longer be sniffed for information  as illustrated in Figure 8 . \n\n\n \n \n \nU/OO/ 232094 -23 | PP-23-3645 | NOV  2023 Ver. 1 .1 11  \nNational Security Agency | Cybersecurity Technical Report  \nNSA Evaluation of C ommercially Available Embedded FPGAs  \n \nFigure 8: Exposed Traces - the communication traces on a printed circuit board (PCB) between  an \nASIC and FPGA parts represents a security vulnerability. Moving the FPGA fabric on the ASIC by \nmeans of an eFPGA fabric eliminates this weakness  \n3.6. Securing sensitive algorithms from the ASIC manufacturer  \nIntegrating an eFPGA into an ASIC design can help improve supply chain security by \nenabling greater control of a programs hardware assurance level and reducing the \npotential exposure of design details to a third party. The eFPGA design can be ported \nto, and manufactured in a trusted facility providi ng confidence in the fabrication proce ss \nand the manufactured end products . If a Trust certified foundry is not available, a \nprogram with a sensitive  design could have the product fabricated at an unclassified \nfacility and then program the sensitive  algorithm into the eFPGA after delivery of the \nmanufactured part . This could allow for the use of commercial  foundries while protecting \nagainst  adversar ial compromise of sensitive algorithms.  \n3.7 Tradeoffs Summary  \nThe following table summarizes the tradeo ffs of using an eFPGA in a DoD ASIC based \nsystem.  \nTable 1: Benefits and tradeoff s of using eFPGA  \nBenefits of using eFPGA  Tradeoff s of using eFPGA  \nAllows a program to mitigate  risks involved \nwith immature algorithms  Adds complexity to the physical  integration of \nthe ASIC design  \n\n\n \n \n \nU/OO/ 232094 -23 | PP-23-3645 | NOV  2023 Ver. 1 .1 12  \nNational Security Agency | Cybersecurity Technical Report  \nNSA Evaluation of C ommercially Available Embedded FPGAs  \nBenefits of using eFPGA  Tradeoff s of using eFPGA  \nAllows a program to utilize the same silicon \nchip for multiple revisions of the product in \nsupp ort of its lifecycle management  The models may not fully support all the \nneeded process requirements  \nCan be used  to im prove SWaP in multichip \nsystems  The security features that come bundled with \nthe commercial FPGA nee d to be developed \nfor the eFPGA  \nLowers the cost in higher volume produc ts as \ncompared to using an FPGA  Can be more expensi ve for very low volume \nprograms  \nIncludes some inherent security enhancing \ncharacteristics   \nCan be used for algor ithm redaction  when \nfabricating a DoD system   \n4. NSA e valuation of eFPGAs  \nSince the current generation of eFPGAs is used by various U.S. Government agencies, \nlabs, and DoD suppliers, the National Security Agencys Hardware Solutions Division \nevaluated the efficacy of incorporating this feature into DoD systems. This research \neffort included five phases, identified as Rocky I  through Rocky V. This section provides \ninformation and observations stemming from that effort.  \n4.1. Rocky I  \nThe Rocky I report, Rocky Phase 1 eFPGA Overview , chronicle s NSAs basic \nresearch on eFPGA vendors, their products , their business models, and th eir design \nflows . This non -proprietary report also identifies the advantages of the using this IP type \nand the application s where eFPGAs can have the most impact.  \n4.2. Rocky II  \nThe vendor -proprietary Rocky II report, Rocky Phase II eFPGA Deliverables , details \nNSAs evaluation of vendors software and tutorials to design and create a custom -built \neFPGA block for evaluating their deliverables, documents, and support. It also assesses \nthe quality of the tools used to perform this task and the deliverables p rovided to \nintegrate the IP into an ASIC.  \n\n \n \n \nU/OO/ 232094 -23 | PP-23-3645 | NOV  2023 Ver. 1 .1 13  \nNational Security Agency | Cybersecurity Technical Report  \nNSA Evaluation of C ommercially Available Embedded FPGAs  \n4.3. Rocky III  \nThe Rocky III report, Rocky Phase III eFPGA Configuration , is also vendor proprietary. \nIt describe s use of a vendor development board or test hardware to evaluate back -end \nsoftware support for developing and loading applications into the eFPGA that is \nincorporated into  the ASIC hardware. This evaluation include d implementing a custom \ndesign, evaluating a design, creating bitstreams, and summarizing the results of the \neffort.  \n4.4. Rocky IV  \nThe Rocky IV report , Rocky Phase IV eFPGA Security and Assurance,  summariz es \nthe security related benefits and vulnerabilities of using an eFPGA, as well as the \nrecommended security architectures for protecting sensitive data associated with these \nblocks. Thi s report  is non -proprietary . \n4.5. Rocky V  \nThe Rocky V report , Rocky Phase V eFPGA ASIC Demonstration,  describes using a \ndesign vehicle to incorporate an eFPGA block from one of the vendors into an ASIC, \nmanufactur ing it in a Trusted Foundry, and evaluat ing the resulting parts. This report is \nvendor proprietary.  \nThese reports can be requested  by sending an email to  JFAC_ HwA @radium.ncsc.mil . \n5. Study o bservations  \nThe five phases of evaluation  described in sec tion 4  yielded a great deal of information  \nregarding the strengths and weaknesses of eFPGA s. In addition to the c omparisons \nwith commercial FPGAs , the studies illustrated that eFPGA macros are a unique and \npowerful ASIC IP function. Many of the NSA JFAC HwA  evaluation teams observations \nare captu red in sub-sections  5.1 through 5.7 . These observations are categorized as \neFPGA  vendor information, evaluated eFPGA product s, supporting software, ASIC \ndeliverables , IP integration , eFPGA programming, and assura nce and security . \nThe evaluation effort began in 2020 and the following observations and \nrecommendations reflect the state of eFPGA offerings available in the commercial \nmarket at that time. These products may have matured and been enhanced in the \ninterven ing time. The reader is encouraged to educate themselves on any relevant \nupdates.  \n\n \n \n \nU/OO/ 232094 -23 | PP-23-3645 | NOV  2023 Ver. 1 .1 14  \nNational Security Agency | Cybersecurity Technical Report  \nNSA Evaluation of C ommercially Available Embedded FPGAs  \n5.1. eFPGA vendors  \nFour commercial vendors participated in this evaluation   Achronix, Fle x Logix, Menta , \nand QuickLogic. Examining these companies, their products , and their business models \ngenerated the following observations:  \n All vendors have been designing and distributing eFPGA s for at least five years \nand collectively supported more than 100 ASIC development effort s. \n Some of them have performed extensive work with the DoD. \n All vendors had clear business, licensing , and pricing practices. They all had \nworked with one or more USG programs and understood the specialized \nrequirements that are typical of USG  contract s. \n All vendors provide d detailed technical support when  needed.  \n All vendors  provided the full scope of software/tools, training, documentation, and \ndeliverables necessary for a successful ASIC development effort.  \n Three vendors are headquartered in the US . Menta , is headquartered in France , \nbut has U.S. sales o ffices that can work with source restricted programs.  \n One vendor can support classified and ITAR work.  \n5.2. Evaluated eFPGA products  \nThe companies provided documentation and training on the architecture, features, \nunique capabilities , and limits  of their respective products. Evaluating this information  \nyielded the  following general observations : \n All eFPGA products evaluated in this study consist ed of a base programmable \nlogic element that could be tiled into larger configurable macros.  Each \nprogrammable logic elem ent consisted of a lookup -table  and a regis tered output. \nThese logic elements could be tiled to create an eFPGA of a size specified by the \nuser.  \n All products were customizable to the users needed size and technology \nprocess( es). \n All were portable to different manufacturing processes within 3 -12 months.  \n\n \n \n \nU/OO/ 232094 -23 | PP-23-3645 | NOV  2023 Ver. 1 .1 15  \nNational Security Agency | Cybersecurity Technical Report  \nNSA Evaluation of C ommercially Available Embedded FPGAs  \n Each vendor product was capable of supporting at least one other type of \nfunction to be embedded in the eFPGA fabric , such as digital signal processing \n(DSP) blocks, memory , or a user defined custom function.   \n While each vendor supported multiple foundries and processes, no single vendor \nproduct was available across all foundries and processes . However, a user \nshould have little problem identifying a solution using their preferred \nmanufacturing process among the group of vendors.  \n All of the vendor eFPGA products were accompanied by a configuration logic  \nmodule  that enables user  programming of the application into the device  macro.  \n None of the vendors provided built -in security feat ures, such as bitstream \nauthentication or encryption  that would normally accompany FPGA devices. \nHowever, these vendors can either provide third -party solutions or guide the user \nto third -party vendors for assistance with security features . \n None of the ven dors require d user design information to build a custom eFPGA \nblock.  \n The eFPGA deliverables were sent by protecte d https or sftp download sites.  \nHowever, none of the files were encrypted and login information was sent in the \nclear by email.  \n Menta provide d deliverables through a US -based sales office for acquisition -\nrestricted programs.  \n The vendors used architectures that utilized standard cell libraries  to varying \ndegrees . At the extremes, one vendor built their architecture solely out of \nstandard cells, while another primarily used custom blocks. In the middle , two \nvendors used a combination of both. These approaches allow  for quick stand up \ntime and would allow for mixed library cell types that could target certain areas of \nthe eFPGA for high performance  cells and other s for low power.  \n Three vendors used SRAM bit -cells or an SRAM bit -cell/latch combination  for the \nconfiguration memory . The fourth vendor used registers to store their \nconfiguration data.  \n All vendors  chose to create custom routing cells to o ptimize the area and \ncapability of the switching resources.  \n\n \n \n \nU/OO/ 232094 -23 | PP-23-3645 | NOV  2023 Ver. 1 .1 16  \nNational Security Agency | Cybersecurity Technical Report  \nNSA Evaluation of C ommercially Available Embedded FPGAs  \nIn summary , there is a wide variety of products to choose from , allow ing the prospective \nuser options  that best match their program needs.  \n5.3. Software  \nAs with commercial FPGAs, an eFPGA requires  software to synthesize, place, route , \nand verify the user application. Each vendor provided some tools to perform the entire \neFPGA implementation flow  through bitstream generation. Post bitstream processing \nsteps , such as encryption or authentication , were not supported by any of the vendors. \nWhat follows are some general observations regarding the vendor software : \n While features and ease of use of the implementation software differ ed \nsignificantly among the vendors, they all provide d what was needed to perform \ndesign synthesis, place and route , and configuration data  generation for use in \nan ASIC.   \n Two companies relied upon Synopsys Synplify for the synthesis portion of their \nimplementation flow. In one case, the user had to acquire the license, and in t he \nother , it was included in the licensing agreement.  \n5.4. Deliverables  \nAn ASIC IP block, a process , and tool -specific EDA models are needed to integrate an \neFPGA into a custom ASIC design. Each vendor provided a specific and limited set of \ndeliverables to  the us er for their ASIC design flow. What follows are general  \nobservations regarding the deliverable  files available at the time of th is study : \n Each vendor provided models to support simulation, synthesis, pre/post  route \ntiming analysis, place and route, and physical verification.   \n There was not significant support for power analysis  in the models . \n All vendors provide manufacturing test s and support  with their offerings . \n The deliverables from each vendor were checked for pin matching, correct pin \ndirection, compliance with the format standard , and for functional correctness. \nMultiple files from two vendors had  to be corrected.  \n As mentioned previously, standard cells are us ed in the layout of the different  \neFPGA architecture s to one degree or another. These are  hardened into the final  \nembedded macro . This approach can create complications for generating and \n\n \n \n \nU/OO/ 232094 -23 | PP-23-3645 | NOV  2023 Ver. 1 .1 17  \nNational Security Agency | Cybersecurity Technical Report  \nNSA Evaluation of C ommercially Available Embedded FPGAs  \napplying back -annotated timing in the form of an SDF file.  Two vendo rs provided \nSDF and a workflow to apply the timing to the macro for simulation.  Two vendors \nrelied only on their simulation models to provide timing.  This create d functional \nverification challenges at the lower geometries where accurate timing is of great \nimportance.  Here the vendors would emphasize the use of Liberty files to \nvalidate timing and simulation to verify function separate from accurate timing.  All \nfour vendors provide a means to overcome this timing challenge. However,  of all \nthe areas of ASIC development, analyzing post -route timing was the most \nchallenging.  \n The quality of the provided simulation and timing analysis models  varied widely . \nTwo products did not support dynamic loading on the outputs of the eFPGA \nmacro. This would result in the sam e simulated delay regardless of the loading.  \n The run times of the simulation models also differed significant ly. One vendors \nmodel significantly increased the simulation run time  because  of its design  and \nincompatibility with Cadence multi -threaded simulator.  The team could not \ndetermine if the simulator or the model  was the cause.  The model did simulate \ncorrectly using a single -thread license, but run time was very long.  \n5.5. Integration  \nThe eFPGA has to be integrated into the ASIC with great care. The eFPGA has \nhundreds to thousands of pins on its periphery that have to synchronize  with the ASIC \ndesign logi c and the eFPGA internal application. Ensuring that the block is inserted and \ncorre ctly attached to the ASIC logically and electrically requires precision and is time \nconsuming.  Other observations include the following:  \n Integration of the eFPGA macro was straight forward and in a manner similar to \nthat of any other embedded macro  except  with a greater pin count.  \n The high number of manufacturing test pins  did create some difficulty integrating \nthe macro . \n5.6. Programming  \nThe user application needs to be programmed into the eFPGA as a part of simulation \nverification and into hardware after  ASIC manufacturing. Some general observations \nregarding that process  include the following : \n\n \n \n \nU/OO/ 232094 -23 | PP-23-3645 | NOV  2023 Ver. 1 .1 18  \nNational Security Agency | Cybersecurity Technical Report  \nNSA Evaluation of C ommercially Available Embedded FPGAs  \n All vendor products came with an HDL configuration unit that was either \nembedded in the eFPGA macro or synthesized into the ASIC logic.  \n The programming software work ed like any FPGA implementation tool that \nsynthesized code, implemented the application , and then generated a \nconfiguration file . \n The vendors did not provide encryption or authentication support with their \nproducts. It was up to the developer to build that into their ASIC.  \n All products offered serial and parallel programing support.  \n5.7. Assurance and security  \nThe NSA JFAC  HwA  evaluation team  made the following observatio ns about assurance \nand security:  \n The eFPGA has no accompanying security features. Any requirements for \nprotecting the confidentiality of the application design fall to the user.  \n From an assurance standpoint, eFPGA should be treated as an ASIC third -party \nIP and subjected to the requisite level of acceptance testing recommended by \nthe JFA C ASIC Assurance Best Practice Guides.  \n Vendor software should undergo all the recommended acceptance testing \ncontained in the JFAC ASIC Assurance Best Practice Guides.  \n At the time of the evaluation, one of the vendor software suites had a severe \nlevel r ating in the MITRE Common Vulnerabilities and Exposures (CVE) \ndatabase.  \n Few vendors used secure communications or data delivery methods involving \ndigital signatures or encryption.  \n6. Recommendations to USG  \nAfter completing the five Rocky phases , the NSA JFAC evaluation team compiled the \nfollowing  list of recommendations for the USG regarding the use of eFPGA s in DoD \nsystems :  \n The eFPGA should be viewed primarily as an ASIC IP block and not as an FPGA \nsubstitute.  \n\n \n \n \nU/OO/ 232094 -23 | PP-23-3645 | NOV  2023 Ver. 1 .1 19  \nNational Security Agency | Cybersecurity Technical Report  \nNSA Evaluation of C ommercially Available Embedded FPGAs  \n The USG should engage with eFPGA vendor s to communicate USG assurance \nand security needs and to  influence product design and development in a \nmanner that would benefit DoD programs.  \n The USG should recognize eFPGA as a means to maintain confidentiality of \nsensitive portions of DoD-specific ASIC designs during  manufactur e. This fact \nmake s the continuing maturity of this product a DoD ASIC assurance priority.  \n Since eFPGA macros are custom IP blocks, they represent a target of \nopportunity for an adversary to attack specific programs   their targetab ility is \nbuilt in. Accordingly , DoD should engage JFAC to develop assurance best \npractice guidance to support this product.  \n The USG should investigate the development of security functions and \narchitectures to protect these devices and their bitstreams fro m malicious \nattacks. This could include government -off-the-shelf encryption and \nauthentication engines to protect the programmable portion of the macros.  \n7. Recommendations to users \nFor users of eFPGA macros in their ASIC designs, the NSA JFAC HwA  evaluation team  \nmake s the following recommendations  in the following sub-sections 7.1 through 7.4): \n7.1. Select the appropriate p roduct  \nWhen performing the cost -benefit analysis of using eFPGA in an ASIC, consider the \nfollowing:  \n eFPGA macros are large compared to the ASIC logic it is intended to implement . \nThe program should ensure that including  the eFPGA does not exceed  the \nphysical space constraints . For example, i f including the eFPGA changes the \nplanned die size of 3mm  x 3mm to 5mm  x 5mm, does this push the program out \nof budget? If so, then p lan for the larger size.  \n Which vendor product already supports the foundry and process geometry being \ntargeted by the program? If the eFPGA needs to be ported to a new process \ntechnology,  the program will need to understand the additional non-recurring \nengineering ( NRE ) costs, the schedule cost to perform the work , and the cost to \nqualify the product in that new technology. Multi -project wafer runs can be used \nto save money when qualifying  a new product if available.  \n\n \n \n \nU/OO/ 232094 -23 | PP-23-3645 | NOV  2023 Ver. 1 .1 20  \nNational Security Agency | Cybersecurity Technical Report  \nNSA Evaluation of C ommercially Available Embedded FPGAs  \n Ensure the product supports the number of separate clock signals/domains \nneeded.  \n Ensure the product supports the types of global resets needed ; synchronous, \nasynchronous.  \n Understand the number of top -level test pins needed to s upport the \nmanufacturing tests.  \n Understand the fault coverage provided by the vendor test methodology.  \n Understand the number of top -level configuration pins needed to program the \nfabric.  \n If additional functional blocks are embedded in the eFPGA, ensure the  schedule, \nthe space , and the NRE costs are understood. This include s memory, DSP , and \ncustom functions.  \n Understand the costs of using multiple instances or multiple sizes of eFPGA \nmacros in the ASIC.  \n The user should determine early in the design phase if the estimated bitstream \nsize is supportable by the system . \n7.2. Develop the c ustom macro  \nWhen developing the application and  determining the correct size of the eFPGA, the \nuser should consider the following:  \n Do not provide more information to the vendor th an is needed. This IP block is a \ncustom function that provides an inherently targetable attack surface to an \nadversary. The vendors do not require any ASIC design information to develop \nand provide the IP.  \n Work with the vendor to obtain placement models fo r their tools to determine if \nthe planned application  will fit within the estimated size  of the  device. Leave area \nmargin for future revisions to the planned eFPGA macro . \n Consider the eFPGA profile before defining the final macro. Designs with high I /O \ncount and short pipelines might benefit from tall -narrow designs to minimize \ndistance from inputs (left side) to outputs (right side). Designs with low I /O count \nand long pipelines could benefit from short -wide designs.   \n\n \n \n \nU/OO/ 232094 -23 | PP-23-3645 | NOV  2023 Ver. 1 .1 21  \nNational Security Agency | Cybersecurity Technical Report  \nNSA Evaluation of C ommercially Available Embedded FPGAs  \n Consider the routing obstacle s that embedded macros , such as memories or \nDSPs, represent when embed ded in the fabric. This can impact the best I /O \nplacement.  \n Designs that require sleep or power down modes can be significantly larger, \nmore complex , and more difficult to verify. Ensure these types of requirements \nare fully examine d prior to committing to these features.  \n Examine the test requirements for embedded macros in the eFPGA , such as \nmemory and DSP.  These can represent substantial efforts, test complexity , and \nadditional routing congest ion. \n Determine the configuration load time and confirm it is within the budgeted start \nup time for the ASIC.  \n Clearly communicate the exact process, voltage, and temperature  corners that \nare needed from the vendor to perform timing and power analysis.  \n In the case of large macros, how can voltage droop be calculated?  \n7.3. Ensure acceptance testing for all eFPGA deliverables  \n1. The user should insist that deliverables be provide d in digitally signed packages \nand encrypted. These should not be sent by email in th e clear  without encryption . \n2. Each delivery should be identifiable by a revision number.  \n3. The user should  save the deliverables in a revision control system.  \n4. The program should plan to perform acceptance testing on the electronic design \nautomation files provi ded by the vendor. This testing should:  \na. Confirm  that all of the expected models were provided and that they \ncontain the expected support need for the users tool flow.  Of particular \nconcern are:  \ni. Simulation models  they should provide the ability to be run  as \nconfigured or with configuration sequence.  It should be understood \nhow timing will be modeled in each stage of the design process.  \nb. Confirm that p in name and pin direction match across models . \nc. Confirm that e ach model can be ingested by its target tool  set. \n\n \n \n \nU/OO/ 232094 -23 | PP-23-3645 | NOV  2023 Ver. 1 .1 22  \nNational Security Agency | Cybersecurity Technical Report  \nNSA Evaluation of C ommercially Available Embedded FPGAs  \nd. Verify that the Liberty models can support the needed timing analysis, \nsimulation , and power analysis.  \ne. Verify that physical verification can be performed using the provided layout \nand schematic models.  The NSA JFAC HwA  evaluation team \nrecommends  avoiding black box GDSII/OASIS deliveries that are back \nfilled at the manufacturer especially for advanced technology nodes. The \nblack box process can complicate double patterning processes and open \nphysical verification to hidden violations.  \nf. Verify that the manufacturing tests can be run in simulation and used at \nwafer testing.  \ng. Verify that the documentation is complete and provides directions \nregarding integration of the macro.  \n7.4. Design i ntegration  \nWhen beginning the ASIC development flow, the user should:  \n1. Identify and understand any limitations of the models with respect to timing \nanalysis and back -annotated timing.  \n2. Consider that t he I/O location assignment is extremely important when using \neFPGA. They have 10 0s to 1 ,000s of I /Os that can create routing bo ttlenecks \nand impact timing.  \n3. Develop a plan to verify all of the connectivity into and out of the macro.  \n4. Work with the vendor to determine a simulation methodology to exercise the \nloading of the target application into the eFPGA simulation model  and for \nsimulating the ASIC with the macro already configured. Determine how to verify a \ncorrect load of the bitstream.  \n5. Avoid mixed languages (Verilog vs V HDL) at the eFPGA -ASIC interface. It has \nthe potential to create simulation mismatches between the register -transfer level  \nand netlist simulations.  \n6. Expect additional effort to create clock trees that are balanced with the eFPGA \ninternal  endpoints . Special routing constructs may be necessary.  \n\n \n \n \nU/OO/ 232094 -23 | PP-23-3645 | NOV  2023 Ver. 1 .1 23  \nNational Security Agency | Cybersecurity Technical Report  \nNSA Evaluation of C ommercially Available Embedded FPGAs  \n8. Conclusions  \nWith DoD raising the importance of custom microe lectronic hardware assurance, the \neFPGA stands as a n important means to support design confidentiality  in the \nmanufacturing process. This, combined with its other benefits , raise the value of this \nproduct to DoD programs.   \nFollowing the Rocky evaluation s, the NSA s JFAC Hardware Assurance team  deems \nthis IP ready for use by ASIC designs. Each  of the evaluated eFPGA s had \nshortcomings that can complicate the ASIC development phase, but none of them were \nserious enough to prevent a successful design completion. If an end user gives \nattention to the recommendations contained in this summary document, they will have \nthe information needed to ensure a successful ASIC effort.  \nFinally , if a program has questions regarding this report  or requires assistanc e, please \ncontact  NSA JFAC at JFAC_HwA@radium.ncsc.mil . \n\n",
  "cves": [],
  "techniques": [],
  "advisory": "cybersecurity-alerts",
  "title": "ctr-commercial-efpga-evaluation-report-v1.1",
  "source": "nsa",
  "id": "52d9fadf7875a99c23640de166b4b2699d13b57dea1c251374a2e2a2bf7ae23c"
}