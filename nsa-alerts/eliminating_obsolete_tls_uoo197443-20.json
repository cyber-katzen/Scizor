{
  "markdown": "  \nU/OO/197443 -20 | PP-20-1302  |  JAN 2021  Ver 1.0  \nNational Security Agency | Cybersecurity Information  \nEliminating Obsolete Transport Layer Security (TLS) \nProtocol  Configurations  \nExecutive s ummary1 \nThe National Security Agency (NSA) emphatically recommends replacing obsolete protocol configurations with ones that \nutilize strong encryption and authentication to protect all sensitive information. Over time, new attacks against T ransport \nLayer Security (TLS) and the algorithms it uses have been discovered. Network connections employing ob solete protocols \nare at an elevated risk of exploitation by adversaries.  \nSensitive and valuable data requires strong protections within electronic systems and transmissions. TLS and Secure \nSockets Layer (SSL) were developed as protocols to create private,  secure channels between a server and client using \nencryption and authentication. While the standards and most products have been updated, implementations often have \nnot kept up.  \nThe accompanying , full-length guidance helps network administrators and secur ity analysts make a plan on how to weed \nout obsolete TLS configurations in the environment by detecting, prioritizing, remediating, and then blocking obsolete TLS \nversions, cipher suites, and finally key exchange methods. This will also help organizations prepare  for cryptographic \nagility to always stay ahead of malicious actors abilities and protect important information.  \nUsing obsolete encryption provides a false sense of security because it may look as though sensitive data is protected, \neven though it really is not. The NSA previously released urgent guidance indicating obsolete and otherwise weak TLS \nprotocol implementations were being observed, and threat intelligence stating that nation -state and sufficiently resourced \nactors are able to exploit these weak communications. However, obsolete TLS configurations are still in use in U.S. \nGovernment systems . Obsolete configurations  provide  adversaries access to sensitive operational traffic using a variety of \ntechniques, such as passive decryption and modificatio n of traffic through man -in-the-middle attacks.  \nThe full version of this guidance details recommended detection and remediation strategies, as there are many ways to \ndetect obsolete TLS configurations and different organizations may need to modify their re mediation approaches to \nminimize network impacts. Detecting systems that use or allow obsolete TLS configurations is the first step that will help \nprioritize remediation efforts and provide the knowledge needed for risk determinations for allowing, blockin g, or \nremediating. Additional guidance for detecting obsolete TLS traffic, including network signatures, links to helpful tools, an d \nsample configurations, is available at github.com/nsacy ber/Mitigating -Obsolete -TLS. \nAll publicly accessible federal websites and services are required to use secure connections. Additionally, National \nInstitute of Standards and Technology guidance  and Committee on National Security Systems policy prohibit U.S.  \nGovernment and National Security Systems (NSS), respectively, from using obsolete protocol configurations. This \nguidance helps NSS, Department of Defense (DoD), and Defense Industrial Base (DIB) cybersecurity leaders make \ninformed decisions to enhance the ir cybersecurity posture. Since these risks affect all networks, all network owners and \noperators should consider taking these actions to reduce their risk exposure and make their systems harder targets for \nmalicious threat actors.  \n  \n                                            \nContact  \nCybersecurity Inquiries: 410 -854-4200, Cybersecurity_Requests@nsa.gov  \nMedia Inquiries: 443 -634-0721, MediaRelations@nsa.gov  \n\n \n \nU/OO/197443 -20 | PP-20-1302  | JAN 2021  Ver 1.0  2 \nNSA | Eliminating Obsolete TLS Protocol  Configurations  \nIntroduction  \nSensitive  and valuable data require s strong  protection s within electronic systems and transmissions. Protected \ntransmissions use  a private, secure channel between a server and a client to communicate . Transport Layer Security \n(TLS) and Secure Sockets Layer (SSL)2 were developed as protocols to create these protected channels  using encryption \nand authentication . Over time, new attacks against TLS  and the algorithms it uses have been discovered. The standards \nand most products have been updated, but implementations often have not kept up. Network connections employing \nobsolete protocols are at an elevated risk of exploitation by adversaries. As a result, all systems should avoid using  \nobsolete  configurations  for TLS and SSL protocol s. According to the Office of Management and Budget (OMB) \nmemorandum M -15-13, all publicly accessible federal websites and web services are required to only provide service \nthrough secure connections [1]. \n \nThe National Security Agency previously  released urgent guidance (ORN U/OO/800 922-17) indicating that obsolete and \notherwise weak TLS protocol implementations were being observed, and threat intelligence s tating  that nation -state and \nsufficiently resourced actors are able to exploit these weak communications . However, internal ana lysis indicates that \nobsolete  TLS configurations are still in use  in U.S. Government systems . Obsolete configurations provide  adversaries \naccess to sensitive operational traffic using a variety of techniques, such as passive decryption and modification of traffic  \nthrough man -in-the-middle attacks [2]. \n \nUsing obsolete encryption provides a false sense of security because it seems as though sensitive data is protected, even \nthough it really is not. National Institute of Standards and Technology (NIST) special publication  guidance , SP 800 -52rev2 \n(2019) , and Committee on National Security Systems (CNSS) policy, CNSSP  15 (2016) , prohibit U.S. Government and \nNational Security Systems from using obsolete protocols  [3] [4]. National Security Systems are required to use the \nalgorithms in the NSA -Approved Commercial National Security Algorithm (CNSA) Suite (see Annex B of CNSSP 15). All \nother systems are recommended to use CNSA Suite algorithms as well. Non -NSS U.S. Government systems are required \nto use the algorithms specified by NIST in SP 800 -52rev2. NSA strongly recommends detecting and remediating obsolete \nprotocols and, instead, utilizing strong encryption and authentication to protect all sensitive information.  \n \nThis guidance  document provides detection strategies that can aid network security analysts in identifying continued use \nof obsolete TLS protocol  version s, cipher suites , and key exchanges . By doing this, administrators should be alerted to \nnon-compliant deployments  so they can expeditiously be updated or disabled. Most n etwork security devices able to \ndetect such traffic can  also be configured to block  the traffic to eliminate exposure . Additional guidance for detecting \nobsolete TLS traffic, including network sig natures, links to helpful tools, and  sample  configurations , is available at \ngithub.com/nsacyber/Mitigating -Obsolete -TLS. \nAudience  \nThe primary audience s for this guidance are National Security System (NSS), Department of Defense (DoD), and \nDefense Industrial Base (DIB) cybersecurity leaders, system administrators, and network security analysts. By using the  \nfollowing  guidance , government network owners can make informed decisions to enhance their cybersecurity posture . \nSince these risks affect all networks, all network owners and operators should consider taking these actions to reduce \ntheir risk exposure and make their systems harder targets for malicious threat actors.   \n                                            \n2 SSL is the predecessor to TLS. Future references to TLS within this document are meant to  indicate all versions of TLS and its predecessors of SSL  2.0 and SSL  3.0 \n\n \n \nU/OO/197443 -20 | PP-20-1302  | JAN 2021  Ver 1.0  3 \nNSA | Eliminating Obsolete TLS Protocol  Configurations  \nObsolete TLS v ersions  \nSensitive data require s robust  protection. TLS provides confidentiality, integrity, and often authenticity protection s to data \nwhile it is in transit over a network. This occurs by providing a secured channel between a server and client to \ncommunicate for a session. Over time , new versions  of the TLS protocol are developed  and some of  the previous \nversions become obsolete for numerous technical reasons  or vulnerabilities , and therefore should no longer be used to \nsufficiently protect data .  \nNSA recommends that only TLS 1.2 or TLS 1. 3 be used3; and that SSL 2 .0, SSL 3 .0, TLS 1.0, and TLS  1.1 not be used  \n[5]. See NIST SP 800 -52 Revision 2 Appendix F for related requirements and guidance  for non -NSS U .S. Government \nsystems . \nObsolete cipher s uites  \nWithin TLS 1.2  and TLS 1.3 , NSA further recommends that cryptographic parameters meet the algorithm requirements in \nCNSS P 15, referred to as Commercial National Security Algorithms. In TLS 1.2, t he term cipher suite(s) refers to the \nnegotiated and agreed upon set of cryptographic algorithms for the TLS transmission. A list of cipher suites are offered by \nthe TLS client, and a negotiated cipher suite from that list is selected by the TLS server. Cipher suites  in TLS 1.2  consist \nof an encryption algorithm4, an authentication mechanism5, a key e xchange6 algorithm and a key derivation7 mechanism8. \nA cipher suite is identified as obsolete when one or more of the mechanisms is weak.  \nEspecially weak encryption algorithms in TLS 1.2 are designated  as NULL, RC2, RC4, DES, IDEA, and TDES/3DES ; \ncipher su ites using these algorithms should not be used9. TLS 1.3 removes  these  cipher suites , but implementations that \nsupport both TLS 1.3 and TLS 1.2 should be checked  for obsolete cipher suites.  \nObsolete key e xchange mechanisms  \nEspecially weak key exchange mech anisms indicated by the cipher suite include those designated as EXPORT or ANON; \ncipher suites using these key exchange mechanisms should not be used. Even if the cipher suite used in a TLS session is \nacceptable, a key exchange mechanism may use weak keys that allow exploitation.  TLS key exchange me thods include \nRSA key transport  and DH or ECDH key establishment. DH and ECDH include static as well as ephemeral  mechanisms. \nNSA recommends RSA key transport and ephemeral DH (DHE) or ECDH (ECDHE) mechanisms, with RSA or DHE key \nexchange using at least 3072 -bit keys and ECDHE key exchanges using the secp384r1  elliptic curve . For RSA key \ntransport and DH/DHE key exchange, keys less  than 2048 bits  should not be used, and ECDH/ECDHE using  custom \ncurves should not be used.10  \nRecommended TLS configurations  \nAll TLS implementations should be up -to-date and configured to meet CNSS and NIST guidance. Detecting systems that \nnegotiate obsolete TLS versions  or cipher suites or use weak keys is a first step that will help prioritize remediations. \nOnce detected, an organizations servers and clients negotiating obsolete TLS sessions should be reconfigured to meet \nthe requirements of  CNSSP  15. If additional intero perability  support is needed, configurations should use non-deprecated \noptions from  NIST SP 800 -52r2 as necessary . Additional options commonly used by non -government servers may also \nneed to be supported by clients; the risk of using options not approved b y NIST should be  assessed by the system owner. \nCNSSP  15 requirements for TLS are more fully explained by  IETF in the Commercial National Security Algorithm (CNSA) \n                                            \n3 This applies to all protocols using TLS, such as HTTPS and LDAPS. Datagram Transport Layer Security (DTLS) is similar to TLS standards  NSA recommends only DTLS version 1.2 \nor above be used; DTLS 1.0 is obsolete.  \n4 Encryption Algorithm is defined by NIST  and CNSS as a set of mathematically expressed rules for rendering data unintelligible by executing a series of conversions controlled by a \nkey.  \n5 Authentication Mechanism is defined by NIST and CNSS as hardware or software -based mechanisms that force u sers to prove their identity before accessing data on a device.  \n6 Key Exchange is defined by NIST and CNSS as a process of exchanging public keys (and other information) in order to establish secure communications.  \n7 Key Derivation is defined by NIST as  a process that derives keying material from a key or a shared secret.  \n8 In TLS 1.3, the cipher suite extension only specifie s the encryption algorithm and key derivation function; the key exchange and signature components are specified in other extens ions \nof the client and server hello message.  \n9 Use of DES and IDEA are not allowed in TLS 1.2 according to IETF RFC 5469 (2009), but many implementations support cipher sui tes using these algorithms . \n10 Use of custom public key parameters in key exchange mess ages is deprecated per RFC 8422 Section 5.1.1.  \n\n \n \nU/OO/197443 -20 | PP-20-1302  | JAN 2021  Ver 1.0  4 \nNSA | Eliminating Obsolete TLS Protocol  Configurations  \nSuite Profile for TLS and DTLS 1.2 and 1.3  [6]. Guidance in this document includes recomme nded versions and cipher \nsuites , as well as guidance on other TLS parameters, and provide s recommendations for extension usage. Most clients, \nespecially web browsers, will use compliant configurations just by upgrading the software to the latest version. I n some \ncases, additional configurations to disable offering obsolete encryption may be needed.  Specific instructions for \nconfiguring a server to be compliant should be available from the vendor. Additional configuration information is provided \nat github.com/nsacyber/Mitigating -Obsolete -TLS.  \nTLS also depends on proper use of certificates. Use of weak, compromised, unauthorized , or revoked  certificates can \nlead to man -in-the-middle at tacks, even for properly configured TLS implementations11. Server certificates should be \nissued by a reputable certification authority, should use approved signature schemes, and should be managed to ensure \nthey accurately represent the server and are repl aced prior to expiration. For U.S. G overnment owned servers and for \nclients representing U.S. Government employees, applicable certificate policies further restrict certificate  usage. The \nCertification Authority  - Browser Forum defines best practices for c ommercial servers. Obsolete or unauthorized \ncertificates should be revoked. CNSS guidance for TLS certificates is included in the CNSA Suite Profile for TLS and \nDTLS 1.2 and 1.3 section 5.4  [6]; NIST recommendations for TLS certificates are in NIST SP 800 -52r2 section 3.2  [3]. \nDetection s trategy  \nUsing network monitoring systems, signatures can be used to detect obsolete TLS , such as those provided at \ngithub.com/nsacyber/Mitigating -Obsolete -TLS. There are a number of open source tools that can monitor traffic using \nthese signatures, as well as commercial services that can perform active scans to detect compliance. Whether the focus \nis to detect weak tra ffic, or to identify misconfigured servers or clients, the detection strategy will be similar.  \nBecause there are many ways that obsolete TLS configurations may be exhibited in traffic, the following detection strategy \nis recommended. Signatures can be simp lified using this strategy:  \n First, identify clients offering and servers negotiating obsolete TLS versions. If a client offers, or a server \nnegotiates  SSL 2.0, SSL 3.0, or an obsolete TLS version, no further traffic analysis  is required and remediation \nstrategies should be employed.  \n Next, for sessions using TLS 1.2, analysts should  identify and remediate devices using obsolete cipher suites. \nIdentify  clients only offering and  server s negotiating obsolete TLS cipher suites  and update their configurations to \nbe compliant. Note for TLS 1.3, neither NIST nor CNSS identify cipher suites that must not be used  however, \nCNSA compliant configurations sh ould be followed [6]. \n Finally, for sessions using TLS 1.2 or TLS 1.3 and recommended cipher suites, analysts should identify and \nremediate devices  using  weak key exchange methods.  \nAlerts can identify the IP address of the organizations device responsible for the improper use. If the  organizations  \ndevice observed using obsolete TLS is a server, then it (or the web application firewall or other network device that \naccepts connections on its behalf) should be upgraded or configured to only negotiate recommended versions and ciphe r \nsuites .It should also  use recommended key exchange mechanisms, including recommended key size s or elliptic curve \ngroups . If the organizations device is a client, then it is offering an obsolete TLS version  or cipher suite  and may accept \nweak key exchange mechanism s. A client that is offering to use both recommended and obsolete cipher suites  does not \nnecessarily mean  that the server would select the obsolete cipher suite to use (that would be detected by a server rule) . \nClients should be upgraded to use the most cu rrent browser or TLS library . It should be configured to only offer \nrecommended versions  and cipher suites, and not accept sessions using weak key exchanges negotiated by a server.  \nComprehensive analysis of organizational servers can also be performed by attempting to initiate weak TLS sessions \nusing custom test clients and seeing if the server agrees to utilize obsolete cryptography. This is useful for methodically \ndetermining compliance.  \n                                            \n11 Weak certificates are ones that have keys or other properties that do not meet or exceed current policies and best practices.  Compromised certificates are ones that an unauthorized \nentity has access to the p rivate keys. Unauthorized certificates are ones that should not have been issued according to the issuers policies or proced ures. Revoked certificates are ones \nthat the issuer states are no longer to be trusted.  \n\n \n \nU/OO/197443 -20 | PP-20-1302  | JAN 2021  Ver 1.0  5 \nNSA | Eliminating Obsolete TLS Protocol  Configurations  \nRemediation  \nNetwork monitoring dev ices can be configured to alert analysts to servers and/or clients that negotiate obsolete TLS or \ncan be used to block weak TLS traffic. The choice to alert and/or block will depend on the organization. To minimize \nmission impact, organizations should use a phased approach to detecting and fixing clients and servers until an \nacceptable number have been remediated before implementing blocking rules. The following tables can help to prioritize \nresponses for each topic discussed in this document.  In addition t o addressing obsolete TLS configurations, organizations \nshould  plan to update all other servers and/or clients to support CNSSP -15 recommended algorithms.  \nThe following table indicates the prioritization and urgency for immediate remediation of obsolete TL S versions.  \nVersion  Additional \nMonitoring  Traffic Response  Asset  Response  \nSSL 2.0 N/A Immediate block  Disable service until reconfigured to only support TLS 1.2 and TLS 1.3.  \nSSL 3.0 N/A Immediate block  Disable service until reconfigured to only support TLS 1.2 and TLS 1.3.  \nTLS 1.0  N/A Immediate block  Immediately reconfigure to only support TLS 1.2 and TLS 1.3.  \nTLS 1.1  If not blocked, \ndetect obsolete \ncipher suites  Blocking \nrecommended  Reconfigure to only support TLS 1.2 and TLS 1.3  as soon as possible . \nTable 1: Prioritization of r emediation of obsolete  TLS versions  \nFor detecting obsolete cipher suites based on a key phrase listed in the EncryptionAlgorithm12 of the name, the \nrecommended priority order is laid out in the following table.  \nCipher Suite  Addi tional Monitoring  Traffic Response  Asset Response  \nNULL  N/A Immediate block  Disable or q uarantine until reconfigured . \nRC2 N/A Immediate block  Disable or q uarantine until reconfigured . \nRC4 N/A Immediate block  Disable or q uarantine until reconfigured . \nDES N/A Immediate block  Disable or q uarantine until reconfigured . \nIDEA  N/A Immediate block  Disable or q uarantine until reconfigured . \nTDES/3DES  N/A Immediate block  Disable or q uarantine until reconfigured . \nTable 2: Prioritization of remediation of obsolete TLS cipher s uites  \nFor each cipher suite not blocked due to an obsolete encryption algorithm, determine if the cipher suite uses obsolete key \nexchange methods based on the table below.  \nKey Exchange Method  Additional \nMonitoring  Traffic Response  Server Response  Client Response  \nANON  N/A Immediate block  Disable or q uarantine until \nreconfigured . Disable or q uarantine until \nreconfigured . \nEXPORT  N/A Immediate block  Disable or q uarantine until \nreconfigured . Disable or q uarantine until \nreconfigured . \nRSA with keys < 1024 bits \n(common sizes 512, 768)  N/A Immediate block  Disable or q uarantine until \nreconfigured . Install enterprise \napproved certificate.  Review configuration to ensure \nit is up to date. Reconfigure as \nnecessary.  \nDHE  with keys < 1024  bits \n(common sizes 512, 768)  N/A Immediate block  Disable or q uarantine until \nreconfigured . Review configuration to ensure \nit is up to date. Reconfigure as \nnecessary.  \nECDHE  with custom  \ncurves  N/A Immediate block  Disable or q uarantine until \nreconfigured . Reconfigure to only offer \nrecommended curves.  \nRSA with keys between \n1024 and 2048 bits \n(common sizes 1024, \n1536)  N/A Detect/Block13 Reconfigure or update to \nsupport 3072 bit RSA, DHE \nwith 3072 bits, and/or ECDHE \nwith p3 84. Install enterprise Reconfigure or update to \nsupport 3072 bit RSA, DHE \nwith 3072 bits, and/or ECDHE \nwith p3 84. \n                                            \n12 Cipher Suite naming convention for TLS 1. 2 is TLS_ KeyExchangeAlgorithm _WITH_ EncyrptionAlgorithm _MessageAuthenticationAlgorithm . \n13 Blocking is recommended, but if doing so will significantly impact mission, it may be necessary to coordinate a schedule to i nitiate blocking after mission critical se rvers are updated.  \n\n \n \nU/OO/197443 -20 | PP-20-1302  | JAN 2021  Ver 1.0  6 \nNSA | Eliminating Obsolete TLS Protocol  Configurations  \nKey Exchange Method  Additional \nMonitoring  Traffic Response  Server Response  Client Response  \napproved certificate to support \nRSA14. \nDH/DHE  with keys \nbetween 1024 and 2048  \nbits (common sizes 1024, \n1536)  N/A Detect/Block13 Reconfigure or update to \nsupport DHE with 3072 bits, \nand/or ECDHE with p3 8414.  Reco nfigure or update to \nsupport 3072 bit RSA, DHE \nwith 3072 bits, and/or ECDHE \nwith p3 84. \nTable 3: Prioritization for Remediation of Key Exchange Methods  \nConfigure deficient or out -of-date devices to meet the recommendations in [ 6]. \nObsolete TLS provides  a false sense of s ecurity  \nOrganizations encrypt network traffic to protect data in transit. However, using obsolete TLS configurations provides a \nfalse sense of  security since it looks like the data  is protected, even though it really is not. Make a plan to weed out \nobsolete TLS configurations  in the environment by detecting, remediating, and then blocking obsolete TLS versions, \ncipher suites, and finally key exchange methods. Prepare for cryptographic agility to always stay ahead of malicious \nactors abil ities and protect important information.  \nWorks  cited \n[1] Executive Office of the President [Barack Obama]. \"M -15-13: Policy to Require Secure Connections across Federal Websites and Web \nServices.\" White House, Jun. 2015. whitehouse.gov/sites/whitehouse.gov/fil es/omb/memoranda/2015/m -15-13.pdf.  \n[2] National Security Agency. U/OO/800922 -17: Cybersecurity Operational Risk Notice: Network Security Devices Utilizing Vulnerable Weak \nSignature Algorithms in TLS. NSA, 2017. www.nsa.gov/Portals/70/documents/what -we-do/cyberse curity/professional -resources/orn -\ndeprecated -signature -algorithms.pdf.  \n[3] National Institute for Standards and Technology. \"NIST SP 800 -52 Rev. 2: Guidelines for the Selection, Configuration, and Use of Transport \nLayer Security (TLS) Implementations.\" NIST, 2 019. nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800 -52R2.pdf.  \n[4] United States, Committee on National Security Systems. \"CNSSP 15: Use of Public Standards for Secure Information Sharing.\" CN SS, 2016. \nwww.cnss.gov/CNSS/issuances/Policies.cfm.  \n[5] Moriar ty K., Farrell S. Deprecating TLSv1.0 and TLSv1.1, IETF, Nov 2020, tools.ietf.org/ pdf/draft-ietf-tls-oldversions -deprecate -09.pdf.  \n[6] Cooley, D. Commercial National Security Algorithm (CNSA) Suite Profile for TLS and DTLS 1.2 and 1.3. IETF and NSA. Sep. 2020.  \ntools.ietf.org/pdf/draft -cooley -cnsa -dtls-tls-profile -06.pdf. \nDisclaimer of e ndorsement  \nThe information and opinions contained in this document are provided \"as is\" and without any warranties or guarantees. Refere nce herein to any specific \ncommercial prod ucts, process, or service by trade name, trademark, manufacturer, or otherwise, does not constitute or imply its endorsement,  \nrecommendation, or favoring by the United States Government, and this guidance shall not be used for advertising or product endorsement purposes.  \nPurpose  \nThis Information Sheet is being issued  to provide guidance on detecting and remediating obsolete TLS versions and cipher suites. The Nat ional Security \nAgency is responsible for developing, reviewing, and approving all standards, techniques, systems, and equipment related to t he security of National \nSecurity Systems (NSS). NSS are subject to the minimum standards established in Committee on  National Security Systems (CNSS) P olicy 15 (2016), \nwhile the National Institute of Standards and Technology (NIST) issues guidance in special publications for all other U.S. G overnment information \nsystems. Unless otherwise noted, protocol versions and ci pher suites that have been identified as authorized were approved for use by NIST on non -\nNSS U.S. Government information systems in SP 800 -52rev2 (2019). Nothing herein should be construed to alter or supersede guidance issued by \nCNSS for NSS or NIST for n on-NSS systems.  \nThis document was developed in furtherance of NSAs cybersecurity missions, including its responsibilities to identify and di sseminate threats to \nNational Security Systems, Department of Defense, and Defense  Industrial Base information syst ems, and to develop and issue cybersecurity \nspecifications and mitigations. This information may be shared broadly to reach all appropriate stakeholders.  \nContact  \nClient Requirements / General  Cybersecurity Inquiries: Cy bersecurity Requirements Center , 410 -854-4200,  Cybersecurity_Requests@nsa.gov   \nMedia Inquiries / Press Desk: Media Relations,  443-634-0721, MediaRelations@nsa.gov   \n                                            \n14 CNSSP 15 allows deployments using commercial technology solely for the protection of UNCLASSIFIED NSS data or for community o f interest separation to continue to use RSA and \nDiffie -Hellman at the 2048 bit level and SHA -256 in the near term.  \n\n",
  "cves": [],
  "techniques": [],
  "advisory": "cybersecurity-alerts",
  "title": "eliminating_obsolete_tls_uoo197443-20",
  "source": "nsa",
  "id": "cc1f71ae29e155be077737bbb377ee5e0bd82373b0fd9889231ec05583420b53"
}