{
  "markdown": "  \n U/OO/156920 -20| PP-20-0670  | Jul 2020 Rev. 1.0 \nNational Security Agency  | Cybersecurity Advisory  \nMitigat e the GRUB2 Boot Hole Vulnerability  \nSummary  \nEclypsium has disclosed a vulnerability , CVE -2020 -10713  also known as BootHole  [1], in the Grand Unified Bootloader \n(GRUB 2) that is widely  used to boot Linux-based operating systems . The vulnerability is triggered by modifying a \nGRUB 2 config uration  file to force a buffer overflow  allowing arbitrary code execution . The vulnerability allows malicious \nactors to subvert the boot process a nd introduce untrusted cod e, commonly referred to as boot kits, enabling highly \neffective persistence on an endpoint. The vulnerability can also be used to bypass  Unified Extensible Firmware Interface \n(UEFI ) Secure Boot validation mechanism s allowing  malici ous code to execute prior  to loading the operating system.   \nExploitation of the BootHole vulnerability requires modifying a configuration  file that is  parsed by a  vulnerable version of \nGRUB2 . The configuration file is not commonly signed , measured at boot time, or encrypted.  Physical access or \nadministrator privilege is required to exploit  the vulnerability  and subvert the boot process . Use of hardware -based full disk \nencryption may mitigate some threats  from physical access.  \nA boot compo nent known as Shim  is used to load  GRUB2 when Secure Boot is enabled . Linux distributions embed their \ndistribution specific key in Shim which allows loading of bootloaders, such as GRUB2,  signed by the distribution s specific \nkey. Many versions of Shim  have been signed by the  Microsoft Third Party UEFI  Certificate Authority (CA)  and t he \nMicrosoft CA is  trusted by many  modern business and consumer computers . The BootHole vulnerability is not in Shim, \nbut the trust of the Shim  binaries must be revoked in order to prevent  loading of vulnerable versions of GRUB2  that are  \nallowed by existing signed versions of Shim . Eclypsium and industry members have identified many vulnerable GRUB2 \nbinaries as well as many  Shim binaries that will load a vulnerable version o f GRUB2.  \nIf an endpoint does not have Secure Boot enabled, then the endpoint  is already vulnerable to boot malware  regardless of \nthe GRUB2  vulnerability being present . Linux -based endpoints may not commonly have Secure Boot enabled. Software \nthat is not maintained by a distribution, such as commercial security software, may have unsigned kernel modules that \nprevent adoption of Secure Boot unless local administrators sign the kernel modules. While all affected endpoints should \nbe mitiga ted, prioritization should be given to endpoints that have Secure Boot enabled , use software -based full disk \nencryption , or whose owners cannot maintain exclusive physical control  due to being mobile devices (e.g. laptops and \ntablets) . \nAdditional GRUB2 vul nerabilities (CVE -2020 -14308, CVE -2020 -14309, CVE -2020 -14310, CVE -2020 -14311, CVE -2020 -\n15705, CVE -2020 -15706, CVE -2020 -15707 , CVE -2020 -7205 ) and Linux kernel vulnerabilities (CVE -2019 -20908, CVE -\n2020 -15780) have been  discovered by industry members while in vestigating the BootHole vulnerability . Exploitation of the \nvulnerabilities may also allow bypass of Secure Boot as well as compromise of boot components  and must be patched . \nMitigation Actions  \nAdministrators may choose from two different options to mitiga te the GRUB2 vulnerability. The standard mitigation option \ninvolves updating an endpoints vulnerable boot components and revoking the trust of existing boot components. The \nstandard mitigation is best suited for typical consumer, business, and enterprise environments.  \nA more advanced mitigation involves implementing a Secure Boot trust infrastructure  and customizing the endpoints \nSecure Boot implementation to use that trust infrastructure . The advanced mitigation  option  is best suited for endpoints \nthat have higher security and integrity requirements.  \nStandard Mitigation: Update and Revoke Trust  of Vulnerable Boot Components  \nLinux -based endpoints require updating their boot components and revoking the trust in older boot components. \nWindows endpoints only require revoking trust  if the  endpoints firmware trusts the specific CA identified in Microsofts \nadvisory  [2]. Fully mitigating the  BootHole  vulnerability requires multiple steps that must be performed in a specific order  \n\n \n \nU/OO/156920 -20 | PP-20-0670  | Jul 2020 Rev. 1.0 4 \nNational Security Agency | Cybersecurity Advisory  \nto update and re voke the trust for existing  signed boot components . Failure to ensure each step is completed before \nproceeding to the next step may result in an endpoint no longer being able to boot  while Secure Boot is enabled . \nThe steps in this section provide a general  outline of the mitigation process. Refer to operating system, virtualization \nsoftware, and Original Equipment Manufacturer (OEM) vendor advisories linked from Eclypsiums advisory to ensure that \nall vendor specific steps are taken into account before impl ementing the mitigations.  \nStep 1: Update Boot Components  \nLinux -based  endpoints must have  their boot components  updated with patches issued by  distribution maintainers. \nUpdating the boot components must be performed before any other mitigation steps , otherw ise later steps could render \nthe endpoint unbootable  while Secure Boot is enabled . Windows endpoints do not need their boot components updated  \nsince Windows uses  different boot components than Linux endpoints and Windows boot components are  signed by a \ndifferent certificate authority.  Updating the endpoints firmware is also recommended as some OEMs require that a \nfirmware update be applied before revoking trust in older boot components  \nIn addition to traditional desktop, server, laptop, and  tablet form  factors, updates may need to be applied to network \ndevices and appliances  (e.g. firewalls, web proxies, email gateways which commonly use Linux) , installation and recovery \nmedia, dual /multi  boot endpoints, virtualization software, and cloud ve ndor provided boot images.  Note that dual/multi \nboot endpoints may need to be updated multiple times to ensure each operating system instance  has updated  boot \ncomponents . \nUpdating the endpoints boot components patch es the vulnerable code , but endpoints are still vulnerable to exploitation  \nwithout taking additional action to revoke the trust of existing signed boot components  that load vulnerable versions of \nGRUB2 . Malicious actors  could roll back patches or leverage  existing  boot componen ts to compromise  the endpoint until \ntrust is revoked.  \nStep 2: Test Boot Component Trust Revocation  \nThe UEFI Forbidden Signatures Database (DBX) contains hashes and certificates used to revoke trust of boot \ncomponents. The firmware will not execute the boot  component w hen a hash  in the DBX  match es the hash of a boot \ncomponent  or when a certificate in the DBX matches the certificate that validates the signature of  a boot component . For \nthe Boot Hole vulnerability, the DBX needs to be updated to block all the existing signed versions of Shim that can load a \nvulnerable version of GRUB2 . The DBX can be updated by installing vendor issued patches  that update the DBX or by \nrunning operating system specific tools or commands that apply the UEFI Forums UEFI Revocation List File  [3] to the \nDBX.  Refer to operating system vendor documentation , linked from Eclypsium s advisory,  for information on how to apply \nthe DBX updates  using operating system specific tools.  \nWindows endpoints only require revoking trust if t he endpoints firmware trusts the specific CA identified in Microsofts \nadvisory [2]. Microsofts knowledge base article [4] indicates that patches that apply the DBX update may not be available \nvia Windows Update until sometime in 2021.  \nSome OEMs  models have experienced problems when adding  a large amount of entries  to the DBX . Some endpoints \nmay become unbootable if too many DBX entries are added. When the problem exists, the problem typically exists in all \nfirmware revisions up to a specific  firmware  revision. Testing all different firmware revisions per model used  in an \nenterprise is crucial to ensu ring that endpoints do not become unbootable  when Secure Boot is enabled .  \nAdministrators may find  that a more straightforward testing approach  is to update  all endpoints to the latest available \nfirmware revision before applying  the UEFI Revocation List File , or apply ing a vendor issued patch , to update  the DBX.  \nSome OEMs require a firmware update before applying the DBX update.  Refer to OEM advisories , linked from \nEclypsiums advisory , for additional information and instructions.  \nUnforeseen problems may arise from applying a DBX update , as happened earlier this year [5], due to the diversity of the \nUEFI ecosystem.  Windows endpoints that use BitLocker for ful l disk encryption , but have not had  BitLocker  suspended  \nbefore applying a firmware update or a Secure Boot configuration change such as a DBX update,  will need the BitLocker \n\n \n \nU/OO/156920 -20 | PP-20-0670  | Jul 2020 Rev. 1.0 4 \nNational Security Agency | Cybersecurity Advisory  \nRecovery Key to successfully boot. Administrators must ensure a selection of endpo ints are tested that fully represent the \ndiversity  of endpoints in the enterprise that includes  all OEMs , models, and firmware revisions.  \nStep 3: Apply  Boot Component Trust Revocation  \nApply  the DBX updates  across the  enterprise o nce all endpoint boot components have been updated and the DBX \nupdates have been tested on a  representative  population of endpoints . Rem ember, if the DBX updates are applied before \nupdating the endpoints boot components, then the boot components will no longer be trusted to ex ecute by the firmware \nand could render the endpoint unable to boot  while Secure Boot is enabled . \nAdvanced Mitigation : Implement Custom UEFI Secure Boot  Trust  \nBusiness and enterprise class models may allow Secure Boot  to be customized so that  Microsoft and system vendor  \nSecure Boot  certificates  can be minimized or removed . Secure Boot customization requires that an enterprise operate \ntheir own certificate infrastructure . UEFI Option ROMs, b oot binaries, kernels, kernel modules, and drivers may all need to \nbe signed using the  enterprise s certificate infrastructure . Customization involves the largest administrative overhead but \nprovides  immediate  and complete mitigation of the GRUB 2 vulnerability.  Secure Boot customization is best suited for \nendpoints that have higher security and integrity requirements.  See the  upcoming  NSA cybersecurity technical report \nUEFI Secure Boot Customization for more information  and instructions [6]. \nDetection Guidance  \nMonitoring for changes to firmware , firmware configuration,  and boot components is recommended due to the amount of \ntime that may be  required to perform effective testing before all mitigations can be applied to all endpoints.  The Extensible \nFirmware Interface System Partition (ESP) is a location that UEFI firmware  uses to load operating system boot \ncomponents . The contents of the ESP should not change often . Security operations personnel may want to ensure \nmetadata of ESP contents such as names, paths, signatures, and hashes of binaries as well as names, paths, has hes, \nand file sizes of non-executable content (e.g. configuration files) are continuously collected  to aid in identifying  known \nvulnerable boot components and to enable the ability to perform anomaly detection . \nAdditional Guidance  \nAdditional guidance related  to hardware and firmware security is published at https://github.com/nsacyber/Hardware -and-\nFirmware -Security -Guidance  on an ongoing basis.  \nWorks Cited  \n[1] Eclypsium (2020). Theres a hole in the boot. [Online] Available at: https://www.eclypsium.com/2020/07/29/theres -a-hole-in-\nthe-boot/  \n[2] Microsoft (2020). ADV200011 | Microsoft Guidance for Add ressing Security Feature Bypass in GRUB . [Online] Available at: \nhttps://portal.msrc.microsoft.com/en -US/security -guidance/advisory/ADV200011  \n[3] UEFI Forum (2020). UEF I Revocation List File. [Online] Available at: https://www.uefi.org/revocationlistfile  \n[4] Microsoft (2020). Microsoft guidance for applying Secure Boot DBX update . [Online] Available at: \nhttps://support.microsoft.com/en -us/help/4575994/microsoft -guidance -for-applying -secure -boot-dbx-update  \n[5] ZDNet (2020). Microsoft pulls secu rity update after reports of issues affecting some PCs . [Online] Available at: \nhttps://www.zdnet.com/article/microsoft -pulls-security -update -after-reports -of-issues -affecting -some -pcs/ \n[6] National Security Agency (2020). UEFI Secure Boot Customization. [Online] Available at: https://www.nsa.gov/What -We-\nDo/Cybersecurity/Advisories -Technical -Guidance/  \n  \n\n \n \nU/OO/156920 -20 | PP-20-0670  | Jul 2020 Rev. 1.0 4 \nNational Security Agency | Cybersecurity Advisory  \nTrademarks  \nEclypsium is a registered trademark of Eclypsium,  Inc in the United States and/or other countries.  \nLinux is the registered trademark of Linus Torvalds in the U.S. and other counties.  \nWindows and BitLocker a re registered trademarks of Microsoft Corporation in the United States and/or other countries.  \nDisclaimer of Endorsement  \nThe information and opinions contained in this document are provided \"as is\" and without any warranties or guarantees. Reference herein to any specific \ncommercial products, process, or service by trade name, trademark, manufacturer, or otherwise, does not constitute or imply i ts endorsement, \nrecommendation, or favoring by the United States Government, and this guidance sha ll not be used for advertising or product endorsement purposes.  \nPurpose  \nThis document was developed in furtherance of NSAs cybersecurity missions, including its responsibilities to identify and di sseminate threats to \nNational Security Systems , Department of Defense information systems, and the Defense Industrial Base, and to develop and issue cybersecurity \nspecifications and mitigations. This information may be shared broadly to reach all appropriate stakeholders.  \nContact  \nClient Requirements / General Cybe rsecurity Inquiries: Cy bersecurity Requirements Center , 410 -854-4200,  Cybersecurity_Requests@nsa.gov   \nMedia inquiries / Press Desk: Media Relations, 443-634-0721, MediaRelations@nsa.gov   \n\n",
  "cves": [],
  "techniques": [],
  "advisory": "cybersecurity-alerts",
  "title": "csa_mitigate_the_grub2_boothole_vulnerability_20200730_nsa_gov - copy",
  "source": "nsa",
  "id": "b97ba76eb682a1bd7428b5920aec3bef7333de4556e6c16c0be26b24a33f22cc"
}