{
  "markdown": "  \nU/OO/194427 -22 | PP-22-1338  | SEP 2022 Ver . 1.0 \nNational Security Agency | Cybersecurity Advisory  \nAnnouncing the Commercial National Security \nAlgorithm Suite 2.0  \nExecutive s ummary  \nThe need for protection against a future \ndeployment of a cryptanalytically  \nrelevant quantum computer (CRQC) is \nwell documented. That story begins in \nthe mid -1990s when Peter Shor \ndiscovered a CRQC would break \npublic -key systems still used today . Continued progress in quantum computing research \nby academia, industry, and some gove rnments suggests that the vision of quantum \ncomputing will ultimately be realized. Hence, now is the time to plan, prepare, and \nbudget for an effective transition to quantum -resistant (QR) algorithms, to assure \ncontinued protection of National Security Sys tems (NSS) and related assets.   \nThis advisory notifies  NSS owners, operators, and vendors of future requirements for  \nQR algorithms for NSS. These algorithms (also referred to as post -quantum algorithms) \nare analyzed as being secure against both classical a nd quantum computer s. They are \nan update to those in the Commercial National Security Algorithm Suite (referred to as \nCNSA 1.0, the algorithms currently listed in CNSSP  15, Annex B). NSA will reference \nthis update as CNSA Suite 2.0, and any future updates will modify the version number.  \nNSA is  providing t his advisory in accordance with authorities detailed in NSD -42, NSM -\n8, NSM -10, CNSSP  11, and CNSSP  15. Its direction applies to all NSS use of public \ncryptographic algorithms (as opposed to algorithms NSA developed ), including those on \nall unclassified and c lassified NSS. Using  any cryptographic algorithms the National \nManager did not approve is generally not allow ed, and requires a waiver specific to  the \nalgorithm, implementation, and use case.  In accordance with CNSSP 11, software and \nhardware providing cry ptographic services require National Information Assurance \nPartnership  (NIAP)  or NSA validation in addition to meeting the requirements of the \nappropriate version of CNSA.   \n\n\n \n \nU/OO/194427 -22  | PP-22-1338  | SEP 2022 Ver . 1.0 2 \nNSA | Commercial National Security Algorithm Suite 2.0  \nIntroduction  \nThis advisory includes  the following sections :  \n Algorithms for software - and firmware -signing . The National Institute of \nStandards and Technology ( NIST ) standardized these algorithms some time  ago, \nbut using different  algorithms for t his special use case is new in CNSA 2.0 .  \n Symmetric -key algorithms . There is only a modest change from CNSA 1.0 in this \nsection  that allows a bit  more flexibility.  \n General -use quantum -resistant public-key algorithms . These are the main public -\nkey algorithms that most applications  will require . As they have not completed \nstandardization, this section is forward -looking.  \n Timing . Discusses the timing of the transition  to CNSA 2.0 .  \n Enforcement . Summarizes requirements related to enforc ing NSS algorithm \nrequirements . \n Additional guidanc e: RFCs . Provides links to helpful Internet Engineering Task \nForce Requests for Comment ( IETF RFCs ) used to implement CNSA 1.0 . \n Reference tables . Features  two tables that list algorithms for CNSA 2.0 and for \nCNSA 1.0.  \nAlgorithms for softwar e- and firmware -signing  \nThe reasons for choosing separate algorithms for software - and firmware -signing are \nthree -fold:  \n NIST has standardized these algorithms already, while other post -quantum \nsignat ures are not yet standardized,  \n This signatur e use -case is more urgent, and  \n This selection places algorithms with the most substantial history of cryptanalysis \nin a use case where their potential performance issues have minimal impact. In \nparticular, this usage coincides well with the requirement fo r keeping track of \nstate that is, how many times a given public key was used in signing software \nor firmware w hen deploying these signatures.  \nThe algorithms chosen for software - and firmware -signing are those specified in NIST \nSpecial Publication 800 -208. NSA recommends Leighton -Micali with SHA -256/192, but \nall NIST SP 800 -208 algorithms are approved for this use case. Note that to avoid \n\n \n \nU/OO/194427 -22  | PP-22-1338  | SEP 2022 Ver . 1.0 3 \nNSA | Commercial National Security Algorithm Suite 2.0  \nweakening the security of these signatures , you must meet all the requirements of SP \n800-208, includin g the need to manag e state and implement signing in hardware.  \nNSA encourage s vendors to begin adopting NIST SP 800 -208 signatures immediately. \nFor more information on requirement timelines, see the Timing  section. The following \ntable lists CNSA 2.0  algorithms for software and firmware  update s. \nTable I: CNSA 2.0 algorithms for software and firmware updates  \nAlgorithm  Function  Specification  Parameters  \nLeighton -Micali \nSignature (LMS)  Asymmetric algorithm for \ndigitally signing firmware \nand software  NIST SP 800 -208  All parameters approved \nfor all classification \nlevels. SHA -256/192 \nrecommended.  \nXtended Merkle \nSignature Scheme \n(XMSS)  Asymmet ric algorithm for \ndigitally signing firmware \nand software  NIST SP 800 -208 All parameters approved \nfor all classification \nlevels.  \nSymmetric -key algorithms  \nThe following table shows  the addition of SHA -512 to the list , the only change  when \ncompared  with CNSA 1.0 . \nTable II: CNSA 2.0 symmetric -key algorithms  \nAlgorithm  Function  Specification  Parameters  \nAdvanced Encryption \nStandard (AES)  Symmetric block cipher \nfor information \nprotection  FIPS PUB 197  Use 256 -bit keys for all \nclassification levels.  \nSecure Hash Algorithm \n(SHA)  Algorithm for \ncomputing a \ncondensed \nrepresentation of \ninformation  FIPS PUB 180 -4 Use SHA -384 or SHA -\n512 for all classification \nlevels.  \nGeneral -use quantum -resistant public -key algorithms  \nNIST recently announced  its standardization selections for post -quantum cryptography . \nConsequently, there are neither final standards nor Federal Informat ion Processing \nStandard ( FIPS )-validated implementations available at this time . NSA is announc ing \n\n \n \nU/OO/194427 -22  | PP-22-1338  | SEP 2022 Ver . 1.0 4 \nNSA | Commercial National Security Algorithm Suite 2.0  \nthis selection of public -key algorithms to provide future NSS requirements so vendors \nmay begin building toward these requirements, and so acquisition offici als and NSS \nowners and operators will know what the requirements are . \nNote that this will effectively deprecate the use of RSA, Diffie -Hellman (DH), and elliptic \ncurve cryptography (ECDH and ECDSA) when mandated. NSA urges NSS owners and \noperators to pay special attention to these requirements. In the interim, CNSA 1.0 \ncompliance  continues to be  required . The following section defines t ransition timelines \nand t he following table lists CNSA 2.0 algorithms:  \nTable III: CNSA 2.0 quantum -resistant public -key algorithms  \nAlgorithm  Function  Specification  Parameters  \nCRYSTALS -Kyber  Asymmetric algorithm \nfor key establishment  TBD Use Level V \nparameters for all \nclassification levels.  \nCRYSTALS -Dilithium  Asymmetric algorithm \nfor digital signatures  TBD Use Level V \nparameters for all \nclassification levels.  \nTiming  \nThe timing of the transition depends on the proliferation of standards -based \nimplementations. Because different technologies will adopt QR algorithms at different \npaces, NSA is providing an overall transition end date and the process for determining  \nspecific dates going forward .  \nNSA expect s the transition to QR algorithms for NSS to be complete by 2035 in line with \nNSM -10. NSA urges vendors and NSS owners and operators to make eve ry effort to \nmeet this deadline. Where feasible, NSS owners and operators will be required to prefer \nCNSA 2.0 algorithms when configuring systems during the transition  period . When \nappropriate , use of CNSA 2.0 algorithms will be mandatory in classes of commercial \nproducts within NSS , while reserving the option to allow other algorithms in specialized \nuse cases.  \n\n \n \nU/OO/194427 -22  | PP-22-1338  | SEP 2022 Ver . 1.0 5 \nNSA | Commercial National Security Algorithm Suite 2.0  \nThe following is the general method  for transitioning to CNSA 2.0 algorithm use:  \n1 NIAP will release protection profiles  specifying that products  support CNSA \n2.0 algorithms in accordance with NIST and other standard s from \nstandards development organizations  and the development of standards -\ncompliant cryptographic equipment.   \n2 All new equipment must meet the protection profile  requirements ; older \nequipment must meet the requirement at its next up date to remain NIAP \ncompliant.   \n3 Using CNSA 2.0 algorithms as the preferred configuration option will begin \nas soon as  validated and tested solutions  are available .  \n4 NIAP Protection Profile requirements and NSM -10 tec hnology refresh \nrequirements  will determine the r emoval of legacy algorithm support .  \n5 At that point, legacy equipment and software not refreshed regularly will \nrequire a waiver and a plan to bring it into compliance.   \nTiming for software signing and firmware signing  \nFor software signing and firmware  signing, NSA recommends:  \n1. Software and firmware  signing begin transitioning immediately.  \n2. New software and firmware use CNSA 2.0 signing algorithms by 2025.  \n3. Transitioning d eployed software and firmware not CNSA 1.0 compliant to CNSA \n2.0-compliant algorithms by 2025.  \n4. Transitioning all d eployed software and firmware to CNSA 2.0 -compliant \nsignatures by 2030.  \n\n\n \n \nU/OO/194427 -22  | PP-22-1338  | SEP 2022 Ver . 1.0 6 \nNSA | Commercial National Security Algorithm Suite 2.0  \nOther requirements for NSS  \nNSA anticipates  the following timetable f or implementing other CNSA 2.0 requirements \nfor NSS : \n Software and firmware  signing:  begin transitioning immediately, support and \nprefer CNSA 2.0 by 2025, and exclusively use CNSA 2.0 by 2030.  \n Web browsers/servers  and c loud services:  support and prefer CNSA  2.0 by \n2025, and exclusively1 use CNSA 2.0 by 2033.  \n Traditional networking equipment (e.g., virtual private networks, routers):  \nsupport and prefer CNSA 2.0 by 2026, and exclusively  use CNSA 2.0 by 2030.  \n Operating systems:  support and prefer CNSA 2.0 by 20 27, and exclusively use \nCNSA 2.0 by 2033.  \n Niche equipment  (e.g., constrained devices, large public -key infrastructure \nsystems ): support and prefer CNSA 2.0 by 2030, and exclusively use CNSA 2.0 \nby 2033.  \n Custom applications and legacy equipment : update or replace by 2033.  \n Figure 1: Transition timeline  \n                                            \n1 Even though hybrid solutions may be allow ed or require d due to protocol standards, product availability, or interoperability requirements, CNSA 2.0 algorithms \nwill become mandatory to select at the given date, and selecting CNSA 1.0 algorithms alone will no longer be approved.  \n\n\n \n \nU/OO/194427 -22  | PP-22-1338  | SEP 2022 Ver . 1.0 7 \nNSA | Commercial National Security Algorithm Suite 2.0  \nEnforcement  \nNSS owners and operators must  report on their progress in updating to CNSA 1.0 and \nCNSA 2.0 as part of their responsibilities under NSM -8 and NSM -10. Approving Officials \n(AOs) should me asure compliance as part of the Risk Management Framework  (RMF) \nprocess when ass essing Security Control 12 (SC-12). Furthermore, AOs will need to \nverify compliance with CNSA 2.0 for software - and firmware -signing on their systems.  \nNSS shoul d not be assessed against FIPS -validated in the RMF process ; instead , \nsolutions must be NSA -approved. In applications where a commercial product is \naccepted, NSA generally approves products that comply with CNSSP 11 (i.e., are NIAP -\nvalidated against an approv ed protection profile ), as long as they are configured \ncorrectly in accordance with CNSSP 15 and other specific direction s or guidance.  \nAdditional guidance : RFCs  \nThe following documents  specify how to configure solutions to  comply with CNSA \nrequirements.  These include:  \n RFC 8603 \"Commercial National Security Algorithm (CNSA) Suite Certificate and \nCertificate Revocation List (CRL) Profile\"  \nhttps://datatracker.ietf.org/doc/html/rfc8603  \n RFC 8755 \"Usi ng Commercial National Security Algorithm Suite Algorithms in \nSecure/Multipurpose Internet Mail Extensions\"  \nhttps://datatracker.ietf.org/doc/rfc8755/  \n RFC 8756 \"Commercial National Security Algorithm (CNSA) Suite Profile of \nCertificate Management over CMS\" https://datatracker.ietf.org/doc/rfc8756/  \n RFC 9151 \"Commercial National Security Algorithm ( CNSA) Suite Profile for TLS \nand DTLS 1.2 and 1.3\" https://datatracker.ietf.org/doc/rfc9151/  \n RFC 9206 \"Commercial National Security Algorithm (CNSA) Suite Cryptography \nfor Internet Protocol Security (IPsec)\"  https://datatracker.ietf.org/doc/rfc9206/  \n RFC 9212 \"Commercial National Security Algorithm (CNSA) Suite Cryptography \nfor Secure Shell (SSH)\" https://datatracker.ietf.org/doc/rfc9212/  \nThese documents currently apply  to CNSA 1.0.  NSA will release updated guidance as \nthe standardization process progresses.  \n\n \n \nU/OO/194427 -22  | PP-22-1338  | SEP 2022 Ver . 1.0 8 \nNSA | Commercial National Security Algorithm Suite 2.0  \nDisclaimer of endorsement  \nThe information and opinions contained in this document are provided \"as is\" and without any warranties or \nguarantees. Reference herein to any specific commercial product, process, or service by trade name, trademark, \nmanufacturer, or otherwise, does not constitute or imply its endorsement, recommendation, or f avoring by the United \nStates Government, and this guidance shall not be used for advertising or product endorsement purposes.  \nPurpose  \nThis document was developed to  further NSAs cybersecurity missions, including its responsibilities to identify and \ndisseminate threats and vulnerabilities to National Security Systems, Department of Defense, and Defense Industrial \nBase information systems, and to develop and issue cyb ersecurity specifications and mitigations. This information \nmay be shared broadly to reach all appropriate stakeholders.  \nContact  \nCybersecurity Report Inquiries and Feedback: CybersecurityReports@nsa.gov   \nDefense Industrial Base Inquiries and C ybersecurity Services: DIB_Defense@cyber.nsa.gov   \nMedia Inquiries / Press Desk: 443 -634-0721, MediaRelations@nsa.gov   \n\n \n \nU/OO/194427 -22  | PP-22-1338  | SEP 2022 Ver . 1.0 9 \nNSA | Commercial National Security Algorithm Suite 2.0  \nAppendix: Reference tables  \nThe following two table s list the algorithms for CNSA 2.0  and for CNSA 1.0 , \nrespectively . CNSA 1.0 is the current standard  while CNSA 2.0  is the future one. NSA \nrecommends adopt ing the CNSA 2.0 software - and firmware -signing algorithms now.  \nTable IV: CNSA 2.0 algorithms  \nAlgorithm  Function  Specification  Parameters  \nAdvanced Encryption \nStandard (AES)  Symmetric block cipher \nfor information \nprotection  FIPS PUB 197  Use 256 -bit keys for all \nclassification levels.  \nCRYSTALS -Kyber  Asymmetric algorithm \nfor key establishment  TBD Use Level V \nparameters for all \nclassification levels.  \nCRYSTALS -Dilithium  Asymmetric algorithm \nfor digital signatures  TBD Use Level V \nparameters for all \nclassification levels.  \nSecure Hash Algorithm \n(SHA)  Algorithm for \ncomputing a \ncondensed \nrepresentation of \ninformation  FIPS PUB 180 -4 Use SHA -384 or SHA -\n512 for all classification \nlevels.  \nLeighton -Micali \nSignature (LMS)  Asymmetric algorithm \nfor digitally signing \nfirmware and software  NIST SP 800 -208  All parameters \napproved for all \nclassification levels. \nSHA25 6/192 \nrecommended.  \nXtended Merkle \nSignature Scheme \n(XMSS)  Asymmetric algorithm \nfor digitally signing \nfirmware and software  NIST SP 800 -208 All parameters \napproved for all \nclassification levels.  \n \n  \n\n \n \nU/OO/194427 -22  | PP-22-1338  | SEP 2022 Ver . 1.0 10 \nNSA | Commercial National Security Algorithm Suite 2.0  \nTable V: CNSA 1.0 algorithms  \nAlgorithm  Function  Specification  Parameters  \nAdvanced Encryption \nStandard (AES)  Symmetric block cipher \nfor information \nprotection  FIPS PUB 197  Use 256 -bit keys for all \nclassification levels.  \nElliptic Curve Diffie -\nHellman (ECDH) Key \nExchange  Asymmetric algorithm \nfor key establishment  NIST SP 800 -56A Use Curve P -384 for all \nclassification levels.  \nElliptic Curve Digital \nSignature Algorithm \n(ECDSA)  Asymmetric algorithm \nfor digital signatures  FIPS PUB 186 -4  Use Curve P -384 for all \nclassification levels . \nSecure Hash Algorithm \n(SHA)  Algorithm for \ncomputing a \ncondensed \nrepresentation of \ninformation  FIPS PUB 180 -4  Use SHA -384 for all \nclassification levels.  \nDiffie -Hellman (DH) \nKey Exchange  Asymmetric algorithm \nfor key establishment  IETF RFC  3526   Minimum 3072 -bit \nmodulus for all \nclassification levels  \nRSA Asymmetric algorithm \nfor key establishment  FIPS SP 800 -56B  Minimum 3072 -bit \nmodulus for all \nclassification levels  \nRSA Asymmetric algorithm \nfor digital signatures  FIPS PUB 186 -4 Minimum 3072 -bit \nmodulus for all \nclassification levels.  \n \n\n",
  "cves": [],
  "techniques": [],
  "advisory": "cybersecurity-alerts",
  "title": "csa_cnsa_2.0_algorithms_",
  "source": "nsa",
  "id": "576649fca808cded306eb5035c474173af8887689e8b04be87a9bed89c8c9379"
}