{
  "markdown": " \n \n \n \n \n \n \n \n \n \n \n  \n   \nTo report suspicious or criminal activity related to information found in this Joint Cybersecurity Advisory , contact \nthe FBI via their victim referral page for Log4j, fbi.gov/log4j . When available, please include the following \ninformation regarding the incident: date, time, and location of the incident; type of activity; number of people \naffected; type of equipment used for the activity; the name of the submitting company or organiza tion; and a \ndesignated point of contact. To request incident response resources or technical assistance related to these \nthreats, contact CISA at CISAServiceDesk@cisa.dhs.gov . For NSA client requirements or general cybersecurity \ninquiries, contact the Cybersecurity Requirements Center at 410 -854-4200 or Cybersecurity_Requests@nsa.gov . \nAustralian organizations can visit cyber.gov.au  or call 1300 292 371 (1300  CYBER 1) to report cybersecurity \nincidents and access alerts and advisories.  Canadian organizations can report incidents by emailing CCCS at \ncontact@cyber.gc.ca . New Zealand organizations can visit NCSC.govt.nz  to report incidents.  United Kingdom \norganizations should r eport a significant cyber security incident: ncsc.gov.uk/report -an-incident  (monitored 24  hrs) \nor for urgent assistance call 03000 200 973 . \nThis document is marked TLP:WHITE. Disclosure is not limited. Sources m ay use TLP:WHITE when information \ncarries minimal or no foreseeable risk of misuse, in accordance with applicable rules and procedures for public \nrelease. Subject to standard copyright rules, TLP:WHITE information may be distributed without restriction.  \nFor more information on the Traffic Light Protocol, see cisa.gov/tlp/ .  \n \nProduct ID : AA21-356A \nDecember 22, 2021  \n \nTLP:WHITE  TLP:WHITE  \n Co-Authored by:  \nMitigating Log4Shell and Other Log4j -Related \nVulnerabilities  \nSUMMARY  \nThe Cybersecurity and Infrastructure Security Agency (CISA), the Federal Bureau of Investigation \n(FBI), National Security Agency (NSA), Australian Cyber Security Centre (ACSC), Canadian Centre \nfor Cyber Security (CCCS), the Computer Emergency Response Team  New Zealand (CERT NZ),  the \nNew Zealand National Cyber Security Centre (NZ NCSC), and the United Kingdoms National Cyber \nSecurity Centre (NCSC -UK) are releasing this joint Cybersecurity Advisory (CSA)  to provide \nmitigation guidance on addressing vulnerabi lities in Apaches Log4j software library: CVE-2021 -44228  \n(known as Log4Shell), CVE-2021 -45046 , and CVE-2021 -45105 . Malicious cyber  actors  are actively \nscanning networks to potentially exploit Log4Shell, CVE -2021 -45046, and CVE -2021 -45105 in \nvulnerable systems.  According to public reporting , Log4Shell and CVE-2021 -45046  are being actively \nexploited.  \nCISA, in collaboration with industry members of CISAs Joint Cyber Defense Collaborative (JCDC) , \npreviously published guidance  on Log4Shell  for vendors and affected organizations  in which CISA \nrecommend ed that affected organizations immediately apply  appropriate patches  (or apply \nworkarounds if unable to upgrade) , conduct a security review, and report  compromises to  CISA  or the \n\n \n   CISA | FBI |  NSA | ACSC  | CCCS  | CERT NZ  | NZ NCSC | NCSC -UK  \nTLP: WHITE  \nPage 2 of 11  |  Product ID: AA21 -356A \nTLP: WHITE  FBI. CISA also issued an Emergency Directive  directing U.S. federal civilian executive branch  (FCEB)  \nagencies  to immediately mitigate Log4j vulnerabilities  in solution stacks that accept data from the \ninternet . This joint CSA expands on the previously published guidance  by detailing steps that vendors \nand organizations  with IT and/or cloud assets  should  take reduce the risk posed by  these \nvulnerabilities .  \nThese steps include:  \n Identifying assets  affected by  Log4Shell  and other Log4j -related vulnerabilities,   \n Upgrading  Log4 j assets and affected products  to the latest version  as soon as patches are \navailable  and r emain ing alert to vendor software updates , and  \n Initiating hunt and incident response  procedures  to detect possible Log4Shell exploitation .  \nThis CSA also provides guidance for affected organizations with operational technology \n(OT)/industrial control systems ( ICS) assets.  \nLog4j is a Java -based logging library used in a variety of consumer and enterprise services, websites, \napplications, and OT  products . These  vulnerabilities , especially Log4Shell,  are severe Apache has \nrated Log4Shell and CVE -2021 -45046 as critical and CVE -2021 -45105 as high  on the Common \nVulnerability Scoring System (CVSS) . These  vulnerabilities are likely to be  exploited over  an \nextended  period . CISA, the FBI, NSA, ACSC, CCCS, CERT NZ, NZ NCSC, and NCSC -UK strongly \nurge all organizations to apply the recommendations in the Mitigations  section.  \nCISA, the FBI, NSA, ACSC, CCCS, CERT NZ, NZ NCSC, and NCSC -UK encourage leaders of \norganizations to review NCSC -UKs blog post , Log4j vulnerability: what should boards be asking? , for \ninformation on Log4Shel ls possible impact on their organization  as well as  response \nrecommendations . \nNote : this is an evolving situation , and new vulnerabilities are being discovered . CISA, the FBI, NSA, \nACSC, CCCS, CERT NZ, NZ NCSC, and NCSC -UK will update this CSA as we learn  more about this \nexploitation and have further guidance to impart . \nDISCLAIMER  \nThe information in this report is being provided as is for informational purposes only. CISA, the FBI, \nNSA, ACSC, CCCS, CERT NZ, NZ NCSC, and NCSC -UK do not endorse  any commercial product or \nservice, including any subjects of analysis. Any reference to specific commercial products, processes, \nor services by service mark, trademark, manufacturer, or otherwise, does not constitute or imply \nendorsement, recommendation, or favoring by CISA, the FBI, NSA, ACSC, CCCS, CERT NZ, NZ \nNCSC, or NCSC -UK. \nTECHNICAL DETAILS  \nLog4Shell  \nLog4Shell , disclosed on December 10, 2021, is a remote code execution (RCE) vulnerability  affecting \nApaches Log4j library, versions 2.0-beta9 to 2. 14.1. The vulnerability exists in the action the Java \n\n \n   CISA | FBI |  NSA | ACSC  | CCCS  | CERT NZ  | NZ NCSC | NCSC -UK  \nTLP: WHITE  \nPage 3 of 11  |  Product ID: AA21 -356A \nTLP: WHITE  Naming and Directory Interface (JNDI) takes to resolve variables. Affected versions of Log4j contain \nJNDI features such as message  lookup substitution that do not protect against adversary -\ncontrolled Lightweight Directory Access Protocol (LDAP ), Domain Name System (DNS),  and other  \nJNDI related endpoints.  \nAn adversary can exploit Log4Shell  by submitting a specially crafted request to  a vulnerable system \nthat causes that system to execute arbitrary code. The request allows the adversary to take full \ncontrol over the system. The adversary can then steal information, launch ransomware, or conduct \nother malicious activity.   \nCVE-2021 -45046  \nCVE-2021 -45046 , disclosed on December 13, 2021, enables a remote attacker to cause RCE, a \ndenial -of-service (DoS) condition, or other effects in certain non -default configurations . This \nvulnerability affects all versions of Log4j from 2.0 -beta9 through 2.12.1 and 2.13.0 through 2. 15.0. In \nresponse, Apache releas ed Log4j version 2. 16.0 (Java 8).  \nCVE-2021 - 45105  \nCVE-2021 -45105 , disclosed on December 1 6, 2021, enables a remote attacker to cause a DoS \ncondition  or other effects  in certain non -default configurations . According to Apache , when the logging \nconfiguration uses a non -default Pattern Layout with a Context Lookup (fo r example, \n$${ctx:loginId} ), attackers with control over Thread Context Map (MDC) input data can craft \nmalicious input data that contains a recursive lookup, resulting in a StackOverflowError  that will \nterminate the process . In response,  Apache released  Log4j version 2.17.0 (Java 8) . \nImpact  \nLog4Shell and CVE -2021 -45046 rated as critical vulnerabilities by Apache are severe because \nJava is used extensively across IT and OT platforms , they are easy to exploit, and applying \nmitigations is resource intensive. Log4Shell  is especially critical because it allows malicious actors to \nremotely run code on  vulnerable network s and take full control of system s.  \nAccording  to public  reporting, exploitation of  Log4Shell  began on or around December 1, 2021 , and a  \nproof -of-concept exploit is publicly available for this vulnerability.  The FBI has observed attempted \nexploitation and widespread scanning of the Log4j vulnerability to gain access to networks to deploy \ncryptomining and botnet malware. The FBI assess es this vulnera bility may be exploited by \nsophisticated cyber threat actors and incorporated into existing cyber criminal schemes that are \nlooking to adopt increasingly sophisticated obfuscation techniques . According to public reporting , \nCVE-2021 -45046  is being actively exploited as well.  \nCISA, the FBI, NSA, ACSC, CCCS, CERT NZ, NZ NCSC, and NCSC -UK assess that e xploitation  of \nthese vu lnerabilities, especially  Log4Shell , is likely to increase and continue over  an extended period . \nGiven the severity of the vulnerabilities and likely increased exploitation, CISA, the FBI, NSA, ACSC, \nCCCS, CERT NZ, NZ NCSC, and NCSC -UK strongly urge all organizations to apply the \nrecommendations in the Mitigations  section to identify, mitigate , and update affected assets.  \nFor more information on these vulnerabilities, see the Apache Log4j Security Vulnerabilities  webpage . \n\n \n   CISA | FBI |  NSA | ACSC  | CCCS  | CERT NZ  | NZ NCSC | NCSC -UK  \nTLP: WHITE  \nPage 4 of 11  |  Product ID: AA21 -356A \nTLP: WHITE  MITIGATION S \nVendors  \nCISA, the FBI, NSA, ACSC, CCCS, CERT NZ, NZ NCSC, and NCSC -UK encourage vendors  to: \n1. Immediately identify, mitigate, and update affected products  that use  Log4j to the latest \npatched version .   \na. For environments using Java 8 or later, upgrade to Log4j version 2. 17.0 (released \nDecember  17, 2021) or newer.   \nb. For environments using Java 7, upgrade to Log4j version 2.12. 3 (released Dec ember  \n21, 2021) . Note : Java 7 is currently end  of life an d organizations should upgrade  to \nJava 8.   \n2. Inform your end users of products that contain these vulnerabilities  and strongly urge \nthem to prioritize software updates.  CISA, the FBI, NSA, ACSC, CCCS, CERT NZ, NZ NCSC, \nand NCSC -UK strongly recommend vendors take steps to ensure messaging on software \nupdates  reaches the widest possible audience (for example, avoid placing  relevant  information \nbehind paywalls ). Note : CISA is actively maintaining a GitHub page and repository  with patch \ninformation for products  known to be affected by Log4Shell . CISA has also notified ICS \nvendors that may be affected and has asked them to confirm any assets affected by \nLog4Shell and to apply available mitigations.   \nAffected Organizations  with IT and Cloud Assets  \nCISA, the FBI, NSA, ACSC, CCCS, CERT NZ, NZ NCSC, and NCSC -UK recommend that affected \norganizations  take the following steps to patch these vulnerabilities  in their I T and cloud assets and \ninitiate threat hunting to detect possible compromise.  Organizations with OT /ICS environments should \nreview the Organiz ations with OT/ICS Assets  section  for additional guidance.  Note : this guidance \nincludes resources that may or may not be possible for all organizations. CISA, the FBI, NSA, ACSC, \nCCCS, CERT NZ, NZ NCSC, and NCSC -UK recommend that organizations apply the mi tigations \nlisted in this advisory to the extent allowed by their environments.  \n1. Identify vulnerable assets in your environment . \nKnowing where Log4j and other affected products  exist in your environment is key for protecting your \nnetworks.  \nA. Inventory all assets that make use of the Log4j Java library . According to public  reporting,  \nadversaries are patching and mitigating assets they compromise  to retain control of asset s. To \navoid missing such defense evasion , organizations should  carefully track  assets un der \ninvestigation . \n(1) Assume all versions of Java and Log4j are vulnerable and include them in the \ninventory.  \n(2) Ensure the inventory in clude s all assets , including cloud assets,  regardless of function, \noperating system, or make.  Ensure the  inventory includes th e following information \nabout each asset:  \n(a) Software versions  \n\n \n   CISA | FBI |  NSA | ACSC  | CCCS  | CERT NZ  | NZ NCSC | NCSC -UK  \nTLP: WHITE  \nPage 5 of 11  |  Product ID: AA21 -356A \nTLP: WHITE  (b) Timestamps of when last updated and by whom  \n(c) User accounts on the asset with their privilege level  \n(d) Location of asset in your enterprise topology  \nB. Identify the inventoried assets  that are likely vulnerable .  \n(1) Use CISA's GitHub repository  and CERT/CC's CVE -2021 -44228_scanner  to identify \nassets vulnerable to Log4Sh ell. \n \nAdditional resources for  detecting vulnerable instances of Log4 j are identified below . \nCISA, the FBI, NSA, ACSC, CCCS, CERT NZ, NZ NCSC, and NCSC -UK will update \nthe sources for detection rules as we obtain them . Note : due to the urgency to share \nthis information , CISA, the FBI, NSA, ACSC, CCCS, CERT NZ, NZ NCSC, and NCSC -\nUK have not yet validated this content.  \n To identify server applications that may be affected by Log4Shell and CVE -\n2021 -45046, see TrendMicro : Log4J Vulnerability Tester . \n For a list of hashes to help determine if a Java application is running a \nvulnerable version of Log4j, see:  \no Rob Fuller's GitHub page : CVE-2021 -44228 -Log4Shell -Hashes , and  \no The NCC Groups GitHub page : Cyber -Defence/Intelligence/CVE -2021 -\n44228/ . \n For PowerShell  to detect vulnerable instances, see:  \no Nathan Kulas GitHub page : PowerShellSnippets/Invoke -\nLog4ShellScan.ps1 , and \no Will Dormanns GitHub page : checkjndi.ps1 . \n For guidance on using Canary Token to test for callback, see Thinkst Canarys \nTwitter thread o n using Canary Tokens . \n For guidance on using Burpsuite Pro to scan, see:  \no Silent Signals GitHub page : burp-log4shell , and \no PortSwiggers GitHub page : active -scan -plus-plus. \n For guidance on using NetMaps Nmap Scripting Engine  (NSE) , see Divertors \nGitHub page : nse-log4shell . \n See Florian Roth's GitHub page , Fenrir 0.9.0 - Log4Shell Release , for guidance \non using Roths Fenrir tool to detect vulnerable instances.  \n2. Mitigate known and sus pected vulnerable assets in your environment.  \nA. Treat known and suspected vulnerable  asset s as compromised . These assets should be \nisolated until they are mitigated and verified  (step 2.D). The method of isolation that you \nshould use depends on the criticality of the asset . Possible isolation methods include : \n Physical ly remov ing the asset  from the network (e.g., unplug the network cable) ; \n Moving the asset to a jail VLAN with heightened monitoring and security ; \n\n \n   CISA | FBI |  NSA | ACSC  | CCCS  | CERT NZ  | NZ NCSC | NCSC -UK  \nTLP: WHITE  \nPage 6 of 11  |  Product ID: AA21 -356A \nTLP: WHITE   Blocking at the network layer (a switc h or some other device) ; \n Implementing a f irewall (including web application firewall ) with strict port control and \nlogging ; or \n Restricting the assets communication, especially to the internet and the rest of the \nenterprise network . \nB. Patch Log4j and other affected products to the latest version .  \n See the Apache Log4j Security Vulnerabilities  webpage  (as of December 2 2, 2021, the \nlatest Log4j version is 2.17.0 for Java 8 and 2.12. 3 for Java 7). Note : patching or \nupdating Java is not enough, you must upgrade the Log4j library itself.  \n For other affected products, s ee CISAs  GitHub page . \nNote : if your organization is unable  to immediately identify and patch vulnerable instances of \nLog4 j, apply appropriate workarounds. CISA, the FBI, NSA, ACSC, CCCS, CERT NZ, NZ \nNCSC, and NCSC -UK recommend  using vendor -provided mitigations when available. Due to \nthe rapidly evolving situation, these workarounds should not be considered permanent fixes , \nand organizations should apply the appropriate patch as soon as it  is made available.  \nAdditional mitigations  are identified below ; however, organizations should use these \nmitigations  at their own risk as they may be incomplete, temporary, or cause harmful e ffects , \nsuch as application instability , a DoS condition, or log evasion.  \n Remov e the Jndilookup.class  from the class path .[1] \n Delet e or renam e Jndilookup.class . Note : removal of the JndiManager  will cause \nthe JndiContextSelector  and JMSAppender  to no longer function .[2] \n Apply a h ot patch .  \no NCC Group: log4j -jndi-be-gone: A simple mitigation for CVE -2021 -44228   \no Amazon AWS:  \n GitHub page : hotpatch -for-apache -log4j2  \n Blog: Hotpatch for Apache Log4j  \nC. Keep an inv entory of known and suspected vulnerable assets and what is done with \nthem throughout this process . It is important to track patching because malicious cyber \nactors may compromise an asset and then patch it to protect their operations. Organizations \nshould  keep a meticulous record of vulnerable assets they have patched to identify whether a \nthreat actor may have patched an asset.  \nD. Verify the mitigation has worked , if possible.  \n(1) Scan the patched/mitigated asset  with the tools and methods listed in step 1. B. Use \nmore than one method to verify the mitigation was successfully applied.  \n(2) Monitor the asset closely.  \n(3) Remain alert to changes from vendors for the software on the asset.  Additionally, see \nCISA's GitHub  page  for known affected products and patch information. CISA will \ncontinually update the repository as vendors release patches.  \n \n3. Initiate hunt and incident response procedures . Given the widespread exploitation of  this \nvulnerability,  CISA, the FBI, NSA, ACSC, CCCS, CERT NZ, NZ NCSC, and NCSC -UK encourage all \n\n \n   CISA | FBI |  NSA | ACSC  | CCCS  | CERT NZ  | NZ NCSC | NCSC -UK  \nTLP: WHITE  \nPage 7 of 11  |  Product ID: AA21 -356A \nTLP: WHITE  organizations  to assume their assets that use Log4 j may have been compromised and initiate hunt \nprocedures.  \nA. Hunt for signs of exploitation and compromise . \n(1) Treat assets that use Log4j as suspect and c onduct vigorous forensic investigation of \nthose  assets . \n(2) Inspect and monitor accounts across your enterprise that exist on or connect to assets \nthat use Log4j.  \n(3) Inspect changes to confi gurations made since December 1, 2021 , and verify they were \nintended, especially on assets that use Log4j. \n(4) Use CISAs GitHub page  to detect possible exploitation or compromise.  \n \nAdditional resou rces to detect possible exploitation or compromise are identified \nbelow . Note : due to the urgency to share this information , CISA, the FBI, NSA, ACSC, \nCCCS, CERT NZ, NZ NCSC, and NCSC -UK have not yet validated this content.  \n Cisco  Talos blog : Threat Advisory: Critical Apache Log4j vulnerability being \nexploited in the wild  \n Curated Intelligence GitHub page : Log4Shell -IOCs  (Note : Curated Intelligence \nnotes that  the IOCs shared by these feeds are low -to-medium confidence we  \n[Curated Intelligence]  strongly recommend not adding them to a blocklist .) \n EmergingThreat.net : signatures to assist with detection of CVE -2021 -44228 \nactivity  \n Florian Roths GitHub page s: \no Log4j RCE Exploitation Detection  \no signature -base/yara/expl_log4j_cve_2021_44228.yar  \no log4shell -detector  \n Huntress blog: Critical RCE Vulnerability: log4j - CVE-2021 -44228  \n Mandiant blog: Now You Serial, Now You Dont  Systematically Hunting for \nDeserialization Exploits  \n Microsoft Azure GitHub page : Azure -\nSentinel/Detections/MultipleDataSources/Log4J_IPIOC_Dec112021.yaml  \n NCC Group: Log4Shell: Reconnaissance and post exploitation network \ndetection   \n Sigma GitHub pages:  \no sigma/rules/web/web_cve_2021_44228_log4j.yml  \no sigma/rules/web/web_cve_2021_44228_log4j_fields.yml  \nB. If compromise is detected, organizations should : \n(1) Initiate incident response procedures. See the joint advisory from ACSC , CCCS , NZ \nNCSC , CERT NZ,  NCSC -UK, and CISA  on Technical Approaches to  Uncovering and \nRemediating Malicious Activity  for guidance on hunting or investigating a network, and \nfor common mistakes in incident handling. CISA, the FBI, NSA, ACSC, CCCS, CERT \nNZ, NZ NCSC, and NCSC -UK encourage organizations to see CISAs Federal \n\n \n   CISA | FBI |  NSA | ACSC  | CCCS  | CERT NZ  | NZ NCSC | NCSC -UK  \nTLP: WHITE  \nPage 8 of 11  |  Product ID: AA21 -356A \nTLP: WHITE  Government Cybersecurity Incident and Vulnerability Response Playbooks . Although \ntailored to U.S. FCEB  agencies, these playbooks provide operational procedures for \nplanning and conducting cybersecurity incident and vulnerability response activities \nand detail each step for both incident and vulnerability response.   \n(2) Consider reporting compromises immediately  to applicable cybersecurity authorities.  \nOrganizations are encouraged to be as thorough as possible by including information \nsuch as IP addresses/domains used to exploit your infrastructure, exploited \napplications/servers, administrators contac t information, and the start and end dates of \nthe attack.  \n U.S. organizations should report compromises to  CISA  and the  FBI.  \n Australian organizations can visit cyber.gov.au  or call 1300 292 371 (1300 \nCYBER 1) to report cybersecurity incidents.   \n Canadian organizations can report incidents by emailing CCCS at \ncontact@cyber.gc.ca . \n New Zeal and organizations can visit NCSC.govt.nz  to report incidents.  \n UK organizations can report a significant cyber security incident at \nncsc.gov.uk/report -an-incident  (monitored 24 hrs) or, for urgent assistance, call \n03000 200 973.  \n \n4. Evaluate and apply other mitigations . \nA. Remain alert  to changes from vendors for the software on the asset , and i mmediately \napply updates to assets when notified by a vendor that their product has a patch for this \nvulnerability.  Additionally, see CISA's GitHub repository  for known affected products and patch \ninformation. CISA will continuall y update the repository as vendors release patches.  \nB. Continue to monitor Log4J assets closely . Continually  use signatures and indicators of \ncompromise that may indicate exploitation . \n(1) See the exploitation and detection resources listed in step 3.A.(4). \n(2) Be aware that there are many  ways to obfuscate the exploit string. Do not depend on \none detection  method  to work all the time.  \nC. Continue to monitor  the Apache Log4j Security Vulnerabilities  webpage  for new \nupdates . Note : as this is  an evolving situation  and new vulnerabilities in Log4J are being \ndiscovered , organizations  should ensure their Apache Log4 j is up to date. Identify  the software \nyour enterprise uses and stay on top of updates  as these  may be superseded by other \nupdates and fixes.  \nD. Block specific outbound Transmission Control Protocol ( TCP) and User Datagram \nProtocol ( UDP ) network traffic . \n(1) Outbound LDAP : for most networks, LDAP is used internally , but it is rare for LDAP \nrequest s to be routed outside a network. Organizations should block outbound LDAP \nor use an allowlist for outbound LDAP to known good destinations.  Note : this may be \ndifficult to detect  on certain ports  without a firewall that does application  layer filtering .  \n\n \n   CISA | FBI |  NSA | ACSC  | CCCS  | CERT NZ  | NZ NCSC | NCSC -UK  \nTLP: WHITE  \nPage 9 of 11  |  Product ID: AA21 -356A \nTLP: WHITE  (2) Remote Method Invocation  (RMI) : for most networks, RMI is either unused or used \nfor internal sources. Organizations should block outbound RMI or use an allowlist for \noutbound RMI to known good destinations  \n(3) Outbound DNS : organizations using enterprise DNS re solution can block outbound \nDNS from sources other than identified DNS resolvers. At a minimum, blocking direct \noutbound DNS from web application servers configured to use enterprise DNS \nresolution will mitigate the risks to those systems.  \n \nNote : blocking attacker internet IP addresses during this event is difficult due to the high volume of \nscanning from non -malicious researchers and vendors. The false positives on IP addresses are high. \nOrganizations should focus on looking for signs of success ful exploitation and not scans.  \nAffected Organizations with OT/ICS Assets  \nDue to the pervasiveness  of the  Apach e Log4j software library and the integration of the library in \noperational product sCISA, the FBI, NSA, ACSC, CCCS, CERT NZ, NZ NCSC, and NCSC -UK \nstrongly recommend  that OT asset owners and operators review their operational architecture  and \nenumerate the vulnerability status against current product alerts and advisories . If a product do es not \nhave a security advisory specifically addressing the status of the vulnerability, treat it with additional \nprotections. CISA, the FBI, NSA, ACSC, CCCS, CERT NZ, NZ NCSC, and NCSC -UK urge patching \nor deploy ment of mitigations to reduce the risk of the threat of th ese vulnerabilit ies.  \nNote : CISA, the FBI, NSA, ACSC, CCCS, CERT NZ, NZ NCSC, and NCSC -UK recommend \nprioritizing patching IT devices, especially those with internet connectivity. Affected internet -facing \ndevices as well as laptops, desktops, and tablets  are especially susceptible to exploitation of these \nvulnerabilities. OT/ICS devices if segmented appropriately from the IT environment do not face the \ninternet  and, as such,  have a smaller attack surface to this vulnerability. Exploitation of IT devices \nmay affect OT/ICS devices if the re is in sufficient network segmentation  that prevents lateral \nmovement.   \nCISA, the FBI, NSA, ACSC, CCCS, CERT NZ, NZ NCSC, and NCSC -UK recommend  that OT/ICS \nasset owner/operators take the following guidance into cons ideration : \n1. Review operational architecture and enumerate the vulnerability against current product \nalerts and advisories . If products do not have a security advisory specifically addressing their \nstatus of the vulnerability, it is recommended to treat these devices with additional protections.    \n2. Implement the steps listed in the previous section to identify and isolate vulnerable \nassets  in the OT/ICS environment.  Understand what type of products in the OT environment \nwould be affected . Many OT/ICS -specific  products incorporate vulnerable versions of the Log4j \nlibrary . \n3. Use a risk -informed decision -making process  to apply the latest version of hotfixes or \npatches  to affected devices as soon as is operationally feasible . If patches cannot be applied, \nmitigations provided  by the products manufacturer or reseller should be deployed. Note : CISA, \nthe FBI, NSA, ACSC, CCCS, CERT NZ, NZ NCSC, and NCSC -UK recommend , as quality \n\n \n   CISA | FBI |  NSA | ACSC  | CCCS  | CERT NZ  | NZ NCSC | NCSC -UK  \nTLP: WHITE  \nPage 10 of 11  |  Product ID: AA21 -356A \nTLP: WHITE  assurance,  that users test the update in a test development environment that reflects their \nproduction environment prior to installation.   \n4. Minimize network exposure for all control system devices and/or systems , and ensure \nthey are not accessible from the internet . \n5. Locate control system networks and remote devices behind firewalls and isolate them  \nfrom the business networ k. \nWhen remote access is required, use secure methods such as virtual private networks (VPNs), \nrecognizing VPNs may have vulnerabilities and should be updated to the most current version \navailable. Also recognize that a  VPN is only as secure as its connect ed devices.   \nCISA, the FBI, NSA, ACSC, CCCS, CERT NZ, NZ NCSC, and NCSC -UK also remind organizations \nto perform proper impact analysis and risk assessment prior to deploying defensive measures.  \nCISA also provides a section for control systems security recommended practices  on the ICS \nwebpage on cisa.gov . Several recommended practices are available for reading and d ownload, \nincluding  Improving Industrial Control Systems Cybersecurity with Defense -in-Depth Strategies . \nAdditional mitigation guidance and recommended practices are publicly available on the ICS \nwebpage on cisa.gov  in the Technical Information Paper, ICS-TIP-12-146-01B--Targeted Cyber \nIntrusion Detection and Mitigation Strategies . \nOrganizations observing any suspected malicious activity should follow their established internal \nprocedures and consider reporting compromises immediately . \n U.S. o rganizations should report compromises to  CISA  and the  FBI.  \n Australian organizations can visit cyber.gov.au  or call 1300 292  371 (1300 CYBER 1) to report \ncybersecurity incidents.   \n Canadian organizations can report incidents by emailing CCCS at contact@cyber.gc.ca . \n New Zealand organizations can visit NCSC.govt.nz  to report incidents.  \n UK organizations can report a significant cyber security incident at ncsc.gov.uk/report -an-\nincident  (monitored 24 hrs ) or, for urgent assistance, call 03000 200 973.  \nRESOURCES  \nFor more information, resources, and general guidance , including resources and mitigation guidance \nfrom industry members of JCDC , see CISAs webpage Apache Log4j Vulnerability Guidance . Note : \ndue to the prominent and ever evolving nature of this vulnerability, there are multiple unverified \npublished guidance documents  that are geared towards Log4j vulnerabilit ies. CISA,  the FBI, NSA, \nACSC, CCCS, CERT NZ, NZ NCSC, and NCSC -UK encourage all organizations to ve rify information \nwith trusted sources, such CISA, the FBI, NSA, ACSC, CCCS, CERT NZ, NZ NCSC, NCSC -UK, and  \nvendors . \nREFERENCES  \n[1] Reddit: Log4j 0day being exploited  \n\n \n   CISA | FBI |  NSA | ACSC  | CCCS  | CERT NZ  | NZ NCSC | NCSC -UK  \nTLP: WHITE  \nPage 11 of 11  |  Product ID: AA21 -356A \nTLP: WHITE  [2] Tech Solvency: The Story So Far  \n\n",
  "cves": [],
  "techniques": [],
  "advisory": "cybersecurity-alerts",
  "title": "joint_csa_mitigating_log4shell_other_log4j_vulnerabilities_20211222_",
  "source": "nsa",
  "id": "80b6c8605037017130daed754225274fc74e0cd51d1daf42b5a5b9c247e62895"
}