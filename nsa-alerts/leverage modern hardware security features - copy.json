{
  "markdown": " \n \n \nU/OO/18 2573-19          PP -19-1017         AUGUST 2019  1 LEVERAGE MODERN HARD WARE SECURITY FEATUR ES \nTROUBLE BENEATH THE SURFACE  \nAn emerging class of threats seeks to exploit vulnerabilities and defeat security mechanisms below the software layer. \nMalicious actors seek to gain persistence in machine firmware and bypass software security boundaries. However, the \nlatest systems are equipped with countermeasures and mitigations that address these threats.  These countermeasures \ninclude  modern int erfaces for managing firmware, support for verifying integrity at boot time, hardware virtualization \nfeatures, and anti-exploitation  features. In order to realize these benefits, enterprises must tighten hardware refresh cycles \nand enable firmware security  features when provisioning new systems. This includes traditional desktops, servers, and \nlaptops as well as smartphones and tablets in the rapidly growing mobile ecosystem.  \nAt a minimum, workstations should be refreshed every 3 -4 years and servers every 5 -7 years to ensure support. One \nstudy indicates systems more than 4 years old are up to 3 tim es more expensive to maintain [1 ], while another indicated \nbenefits of system replacement can be se en after as little as 2 years [2 ]. Mobile devices are often unsu pported and \nobsolete after 3 years, making their prompt replacement critical.  \nUNIFIED EXTENSIBLE F IRMWARE INTERFACE (U EFI) \nUEFI defines an industry -standard firmware environment common across \nmany different makes and models of computing devices. System ve ndors \nare moving toward a UEFI -focused future to accelerate the adoption of new \ntechnologies and the rate at which updates are delivered. Most traditional \ncomputing platforms have supported UEFI since 2010, and industry plans \nto phase out support for legac y Basic Input/Output System (BIOS) and \nCompatibility  Support Module (CSM) by 2020 [3 ]. Some products will not \nbe updated to support UEFI and these older operating systems and \nhardware components will fail on newer systems. Enterprises will need to \nupdate i n order to adapt. Figure 1 shows improvements provided by UEFI \nversus legacy mode.   \nProducts that before saw only bi -annual BIOS updates are now updated \nwith new UEFI firmware on a quarterly or monthly basis to rapidly counter \nthe latest vulnerabilities. E nterprises should adopt UEFI native boot to \nensure timely updates and added integrity checks for early -boot firmware.  \nUEFI Secure Boot  \nSecure Boot provides a mechanism to counter boot -time malware thr eats \nby cryptographically verifying firmware, kernels, and drivers. Enterprises \nshould enable Secure Boot and utilize OS products, hypervisors, and \nsystem components that support Secure Boot. Most UEFI \nimplementations since 2012 support Secure Boot. Each e xecutable boot \nbinary, including firmware and software, is checked against a blacklist \ndatabase and multiple trusted databases. Secure Boot can prevent the \nuse of unapproved OS images, component controllers, boot methods, \nboot-time malware (such as LoJax),  rootkits, outdated kernels, obsolete or evil drivers, and more. OS kernels can extend \nSecure Boot validation into the software environment by checking signed drivers and executables  with root privileges, \nthus blocking off -the-shelf exploit tools like Mimi katz and Metasploit.   \nFigure 1: Feature comparison between boot mechanisms  \n\n \n \nU/OO/18 2573-19          PP -19-1017         AUGUST 2019  \n2 Most systems ship with  Secure Boot in standard mode, preconfigured to support Microsoft  Windows  \nand Linux distributions such as Red H at Enterprise Linux. Secure Boot can optionally be configured in  \ncustom mode for enterprises with additional security needs.  Custom mode allows infrastructures to trust in -house \nsignatures and hashes to change the scope of perm issible boot content. For example, standard mode would have initially \ntrusted malware Superfish while custom mode could have blocked Superfish from day one.  \nUEFI Lockdown Recommendations  \nBeyond Secure Boot, UEFI configuration provides the opportunity to mi tigate misconfiguratio n and counter insider threats \n[4]. Many business class systems provide fully interactive configuration interfaces with options to tune a wide variety of \nsystem parameters. Servers may additionally provide the option of remote configur ation management. Factory default \nsettings usually focus on compatibility over system lockdown and boot hardening. Enterprises should determine a secure \nbaseline of settings to apply to each endpoint.  \nTo prevent abuse or misconfiguration of firmware featur es, set a UEFI administrator password. Disable unused device \ncomponents to prevent data loss through cameras, wireless, and external data ports. Restrict boot order to only devices \nnecessary for OS boot to protect against physical tampering and misconfigur ation. Enable platform hardening features \nprovided by hardware and firmware vendors to enforce firmware integrity. Disable legacy settings and components where \npossible to limit weaknesses in the boot process.  \nTRUSTED PLATFORM MOD ULE (TPM)  \nTPM functions as  a system integrity observer and trust anchor. Many OS distributions and hypervisor solutions leverage \nTPM for credential storage and system integrity features that are transparent to enterprise users. Most UEFI \nimplementations can store boot -time integrit y measurements in the TPM, enabling their safe storage. TPMs are also \nequipped with random number generators, secure memory, and cryptographic key generation algorithms that may be \ncompliant with FIPS 140 -2 [5]. TPMs come in two variants -- discrete TPM ch ips affixed to motherboards, or firmware \nTPM (fTPM) implementations provided by processor manufacturers such as Intel  PTT and AMD  fTPM.  \nEnterprises should enable and activate a TPM when present to utilize its features, and upgrade to systems with TPM 2.0  \nwhenever possible. Windows 7 and newer automatically leverage TPM for BitLocker  a data -at-rest solution that \nleverages encryption and TPM state. Additionally, Windows 10 leverages TPM for Credential Guard  a runtime vault \nwith TPM key -brokered acces s  and System Guard  a system integrity attestation solution that aims to identify changes \nto previously known -good software at runtime. Red Hat  Enterprise Linux (RHEL) can be configured to leverage TPM for \nkernel monitoring via Integrity Measurement Ar chitecture (IMA) and data -at-rest drive encryption through Linux Unified \nKey Setup (LUKS).  \nHARDWARE VIRTUALIZAT ION \nModern operating systems rely on virtualization features previously limited to use by type -1 hypervisors like VMware and \nXen. Virtualizatio n extensions allow operating systems to separate processor cores, regions of memory, and I/O devices \nbased on privilege level and the individual application in use. Control flow integrity and memory tagging allow kernel -level \nfunctions to be secured from u ser-level functions via hardware mechanisms  an improvement over older, purely \nsoftware -based solutions. Microsoft Windows Defender Application Guard (WDAG), Microsoft Virtualization -Based \nSecurity (VBS) including Hypervisor -Enforced Code Integrity (HVCI ), and Linux Containers (LXC) all lose functionality \nwhen utilized on older platforms lacking hardware virtualization support. Enterprises should acquire systems with \nhardware virtualization support and enable use of virtualization features in UEFI configu ration to gain the most benefit.  \nMOBILE SECURITY IS A  GROWING CONCERN  \nMobile devices make up an increasing share of the modern computing landscape. Hardware solutions that initially \nfocused on low power consumption have evolved into products that rival the  performance and versatility of modern \nlaptops. Malicious actors increasingly target mobile devices which has led to hardware -backed improvements previously \nlimited to traditional platforms. Intense competition from multiple strong hardware development com panies has resulted in \nsignificant innovation.  \n\n \n \nU/OO/18 2573-19          PP -19-1017         AUGUST 2019  \n3 ARM Trust Zone and Trusted Execution Environment (TEE)  \nTrust Zone segregates System on a Chip (SoC) processor hardware into a secure world and an unsecure world. The \nsecure portion is tasked with processing sensitive data such as biometrics and credentials. The unsecure portion handles \nuser apps and services [6]. Each vendor has a unique implementation of Trust Zone. Some vendors physically separate \nhardware components and traces while others dynamically tag and flex the assignment of SoC processor cores based on \nwhich security level needs more performance at a given time. Look for features like the Apple Secure Enclave, Google \nTitanM, and Samsung TEEGRIS and KNOX solutions.  \nPointer Authentication Codes (PA Cs) \nVersion 8.3 -A of the ARM instruction set introduced an ability to place authentication codes within memory addresses \nused to store pointers.  Malicious actors typically rely upon buffer overflows, memory leaks, and other memory attacks to \nchange the tar get of pointers and cause jumps to malicious programming (commonly referred to as Re turn Oriented \nProgramming exploits). Established solutions, such as Address Space Layout Randomization (ASLR), are routinely \ndefeated by malicio us actors [7]. PAC s enable  the hardware to check whether a pointer has been maliciously altered \nsince originally written into memory.  This provides modern mobile systems with a new defense that significantly raises the \ncomplexity of exploitation.   \nNEW THREATS, MODERN SOLUTIONS  \nUsers and OS environments are no t the only things under threat anymore. Firmware, expansion devices, and sensitive \nmemory locations also need protection from attack. Modern systems offer hardware -backed security mechanisms to \ncombat the latest threats, but these  are only effective if modern hardware is deployed throughout an enterprise an d \nrefreshed on a regular basis.  \nREFERENCES  \n[1] True cost of not replacing computers revealed in Microsoft study: more than $4,000 each.  Microsoft, 2018.  Retrieved from: \nhttps://news.microsoft.com/en -nz/2018/10/16/true -cost-of-not-replacing -computers -revealed -in-microsoft -study -more -than-4000 -each  \n[2] Replacing Enterprise PCs: The Fallacy of the 3 -4 Year Upgrade Cycle.  J. Gold Associates (2014). Retrieved from: \nhttps://i.crn.com/sites/default/files/ckfinderimages/userfiles/images/crn/custom/INTELBCCSITENEW/WhitePaper_EnterpriseRefresh .pdf  \n[3] The PC BIOS will be killed off by 2020 as Intel plans move to pure UEFI.  Ars Technica, 2017. Retrieved from: \nhttps://arstechnica.com/gadgets/2017/11/intel -to-kill-off-the-last-vestiges -of-the-ancient -pc-bios-by-2020  \n[4] UEFI Defensive Practices Guidance.  NSA, 2017. Retrieved from : https://www.nsa.gov/Portals/70/documents/what -we-\ndo/cybersecurity/professional -resources/ctr -uefi-defensive -practices -guidance.pdf  \n[5] Security Requirements for Cryptographic Modules.  NIST, 2001. Retrieved from : https://csrc.nist. gov/publications/detail/fips/140/2/final   \n[6] Arm (2014. A technical on TEE and ARM TrustZone. Retrieved from https://community.arm.com/developer/ip -products/processors/b/processors -ip-\nblog/posts/a -technical -report -on-tee-and-arm-trustzone  \n[7] Google Project Zero Team (2019). Examining Pointer Authentication on the iPhone XS. Retrieved from \nhttps://googleprojectzero.blogspot.com/2019/02/examining -pointer -authentication -on.html  \nDISCLAIMER OF WARRAN TIES AND ENDORSEMENT  \nThe information and opinions contained in this document are provided \"as is\" and without any warranties or guarantees.  Reference herein to any specific \ncommercial products, process, or service by trade name, trademark, manufacturer, or otherwise, does not constitute or imply its endorsement, \nrecommendation, or favoring by the United States Government, and this guidance shall not be used for advertising or product e ndorsement purposes.  \nAMD is a registered trademark of Advanced Micro Devices, Inc. Apple is a registered trademark s of Apple, Inc. ARM and Trust Zone are registered \ntrademarks of ARM Limited. Intel is a registered trademark of Intel Corporation. Linux is a registered trademark of Linus Tor volds. Microsoft and \nWindows are registered trademarks of Microsoft Corporation.  Red Hat and Red Hat Enterprise Linux (RHEL) are registered trademarks of Red Hat, Inc. \nSamsung and KNOX are registered trademarks of Samsung Electronics Co., Ltd. VMware is a registered trademark of VMware, Inc. Xen is a registered \ntrademark of Citrix Sys tems, Inc.  \n  \n\n \n \nU/OO/18 2573-19          PP -19-1017         AUGUST 2019  \n4 CONTACT INFORMATION  \nClient Requirements and General Cybersecurity Inquiries  \nCybersecurity Requirements Center (CRC),  410-854-4200, email: Cybersecurity_Requests@nsa.gov = \n\n",
  "cves": [],
  "techniques": [],
  "advisory": "cybersecurity-alerts",
  "title": "leverage modern hardware security features - copy",
  "source": "nsa",
  "id": "afbb2c841876d3262cc4ab83959688b896c6e6e6494ca5e613545925b1b27a0e"
}