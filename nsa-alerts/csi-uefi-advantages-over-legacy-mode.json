{
  "markdown": " \n \n 1 UEFI ADVANTAGES OVER  LEGA CY MODE   \nREASONS TO USE UNIFIE D EXTENSIBLE FIRMWAR E INTERFACE (UEFI) N ATIVE \nMODE  \nINDUSTRY SPECIFICATION  \nDevice vendors have redefined the interface between the OS and platform firmware. The interface, defined in various \nUEFI specifications, replaces the older Basic Input/Output System (BIOS). Old BIOS computers need to be replaced, and \nnewer UEFI computers should switch to UEFI native mode for several technical advantages : \nSecure Boot \nUEFI Secure Boot is an optional setting that enforces signature checking of the boo t process. Secure Boot ensures only \nsigned binaries and those matching whitelisted hashes may execute at boot time. Impacts include:  \n Malware protection for the pre -boot environment  \n Insider threat countermeasures to limit approved boot media and peripheral s \n Supply chain risk mitigation through customized key hierarchy  \nSecure Boot can be customized to support any operating system or hypervisor that supports UEFI native boot. Signed \nupdates provide zero -touch maintenance of Secure Boot variables and firmware  updates.  Legacy BIOS has no consistent, \nstandardized security solution or update mechanism.  \nGUID P artition T able (GPT) Support  \nGPT replaces the obsolete Master Boot Record (MBR) partition scheme. GPT allows for storage media boot partitions \ngreater than 2  TB in size, more than 4 partitions (up to 128), and the use of newer storage media such as PCI Express \ndevices. Data integrity is also improved through redundant disk layout structures.  \nPlatform and A rchitecture I ndependence  \nUEFI supports x86, x86_64, ARM, ARM64, PowerPC, Itanium, and other architectures. UEFI may also be emulated via \nhypervisors like Hyper -V, VMware, Xen, KVM, and others. UEFI simplifies device management through a homogeneous \nfirmware experience.  \nConsistent  Variables and Services  \nA standardized set of variables, services, and drivers are common to all UEFI implementations regardless of \nhost device. UEFI on a desktop PC features the same core set of UEFI capabilities found on a device such as a \nsmartphone. App lication developers can create software tools without worrying about platform -specific firmware \nquirks  commonly found with BIOS . Firmware developers can isolate  platform -specific code through \nmodularization.  \n \n  \n  \n\n \n \n2 U/OO/ 111747 -18          PP-18-0040          MARCH 2018  \n Modular and Extensible  \nUEFI firmware modules can  be added,  removed, or updated by vendors and device owners. New modules can \nbe created to extend the capabilities of a devices firmware.  Modules may interact with device resources (e.g. \nnetwork adapters, RAID controllers), UEFI environment variables, and  kernel -mode drivers. Firmware structure \nis standardized.  \nImproved Boot Performance  \nSome UEFI modules and drivers can be loaded in parallel , rather than legacy sequential,  to reduce boot time. Updated \nand larger Option ROMs can be used to initialize expans ion devices such as graphics, audio, networking, and storage \ncontrollers. Bootable binaries and media can be given recognizable names as opposed to cryptic part and serial numbers.  \nCALL TO ACTION  \nDevices running in legacy mode or with Compatibility Support Module (CSM) enabled should  be switched to UEFI native \nmode . The switch can be made non -destructively on deployed machines, or applied  to new machines that replace older \ndevices.  UEFI advantages to security, user productivity, and device capability should be embraced to the extent possible.  \nREFERENCES  \nVulnerability Solutions Office (2017, July 27). UEFI Defensive Practices Guidance. National Security Agency. \nU/OO/217598 -17 \nDeveloper Zone (2011, March 21). About UEFI. Intel. Retrieved from http://software.intel.com/en -us/articles/about -uefi \nJames, Justin (2011, October 19). 10 Things You Should Know About UEFI. Tech Republic. Retrieved from \nhttp://www.techrepublic.com/blog/10 -things/10 -things -you-shoul d-know -about -uefi \nHardware Dev Center (2017, May 2). UEFI Firmware. Microsoft. Retrieved from https://docs.microsoft.com/en -\nus/windows -hardware/manufacture/desktop/uefi -firmware  \nDISCLAIMER OF WARRAN TIES AND ENDORSEMENT  \nThe information and opinions cont ained in this document are provided \"as is\" and without any warranties or guarantees.  \nReference herein to any specific commercial products, process, or service by trade name, trademark, manufacturer, or \notherwise, does not constitute or imply its endorse ment, recommendation, or favoring by the United States Government, \nand this guidance shall not be used for advertising or product endorsement purposes.  \nCONTACT INFORMATION  \nClient Requirements and General Information Assurance/Cyber Security Inquiries  \nCybersecu rity Requirements Ce nter (CRC)  \n410-854-4200  \nEmail: Cybersecurity_Requests @nsa.gov  \n\n",
  "cves": [],
  "techniques": [],
  "advisory": "cybersecurity-alerts",
  "title": "csi-uefi-advantages-over-legacy-mode",
  "source": "nsa",
  "id": "23728971c3fe33c579f0790bc19f149e0133d13f4ef35068dc5b039fe0e5497b"
}