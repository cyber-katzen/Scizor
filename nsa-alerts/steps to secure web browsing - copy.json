{
  "markdown": " \n \n 1 \nCSF U/OO/156564 -18           PP -18-0352           May 2018  STEPS TO SECURE WEB BROWSING  \nBACKGROUND  \nWeb browsers pose a unique risk to enterprise infrastructure because of their frequent exposure to untrusted dynamic \ncontent. Configuring browser security settings is challenging due to uncertainty of both attack mitigation effectiveness and \nimpact on end users.  A key goal of this paper is to avoid impact to users while also mitigating as many attacks as \npossible. The following guidance use s a statistics -based approach to identify three mitigations in commonly -used web \nbrowsers that will ward off nearly all publicly known attacks. Further mitigations are provided in the advanced mitigations \nsection for administrators seeking to defend agains t adversaries with significant resources.  \nENABLE AUTOMATIC UPD ATES  \nResearch shows that 88% of publicly disclosed vulnerabilities are exploited within a day of release1. Administrator -driven \nmanual patching often incurs significant lag time before patches a re deployed. Adversaries take advantage of this lag time \nto exploit known vulnerabilities. Automatic updating limits the time available for attackers to exploit publicly disclosed \nvulnerabilities. Based on data calculated from the 2017 Common Vulnerabiliti es and Exposures (CVE) database2, \nautomatic updating mitigates 91% of publicly known browser vulnerabilities3. \nAdministrators are often hesitant to enable automatic updating out of fear that patches will break existing functionality. \nBrowser patches are t horoughly tested by vendors before deployment making them unlikely to disrupt core functionality. \nAdditionally, for administrators unwilling to enable automatic updates, administrators can internally test updates with a \nsmall subset of users in order to de tect compatibility issues before performing a full deployment to their environment4. \nENABLE REPUTATION SE RVICES  \nReputation -based blocking services (such as Microsoft SmartScreen3F5 or Google6 Safe Browsing) block browsers from \naccessing sites known to de liver malware. Most browsers offer reputation -based blocking as a core component, but \nblocking can also be achieved through the use of a trusted browser extension available through each browsers official \nextension repository. Reputation services continuou sly update from a variety of sources enabling adaptive protection \nagainst emerging threats.  Reputation -based blocking prevents an average of 87.7% of socially engineered malware and \nphishing attempts (calculated from data produced by NSS Labs7.) Third -party content networks are increasingly used to \ndeliver malware from otherwise legitimate websites. Selective content blocking (e.g., ad -blocking through a browser \nextension or at the network boundary) should be used to prevent communication with malicious sc ripts and domains. \nProperly configured selective content -blockers can have a very low impact on daily web browsing and offer significant \nsecurity and usability advantages.  \n  \n                                                \n1 Muhammad Shahzab, et al. A Large Scale Exploratory Analysis of Software Vulnerability Life Cycles. Proceedings of the 2012 In ternational \nConference of Software Engineering, pages 771 -781. June 2012. Web.  \n2 cve.mitre.org, CVE  Common Vulnerabilities and E xposures. Web.  CVE is a registered trademark of MITRE Corporation  \n3 www.cvedetails.com, CVE Detail Browser Statistic Reports, 2017. Web. (vulnerabilities categorized by description keyword)  \n4 Security Configuration Guide for Browser Updates NSA, 2016. h ttps://www.iad.gov/iad/library/ia -guidance/security -cofiguration/applications/security -\nconfiguration -guide -for-browser -updates.cfm. Web.  \n5 SmartScreen is a registered trademark of Microsoft Corporation  \n6 Google is a registered trademark of Google, Inc.  \n7 Pathak, Jayendra. Skybakmoen, Thomas. Web Browser Security Comparative Report NSSLabs, 2016. https://www.nsslabs.com/researc h-\nadvisory/library/endpoint -protection/web -browser -security/web -browser -security -comparative -report -sem-protection/comparative -report-web-browser -\nsecurity -socially -engineered -malware -protection/.  \n\n \n \n2 Footer text if necessary.  \n CSF U/OO/156564 -18           PP-18-0352           May 2018   \nDISABLE UNSAFE PLUGI NS AND EXTENSIONS  \n \nWeb browser plugins and extensions enrich web browsers by embedding extra features. Based on data calculated from \nthe 2017 CVE database, browser plugins accounted for 34.5% of browser -related vulnerabilities8. Plugins and extensions \nexpand the browsers at tack surface and provide plugin vendors with access to sensitive browser information. \nAdministrators should carefully consider the risks associated with each plugin and extension installed in their environment.  \nBrowser plugins are third -party software that  enable embedding proprietary content in the web browser.  Administrators \nshould also disable automatic plugin execution and remove all unnecessary plugins. Rather than automatic execution, \nadministrators should require manual execution confirmation (e.g.,  click-to-play).  \nBrowser extensions are installed within the web browser and often add new functionality. Unlike plugins, browser \nextensions cannot be easily selectively enabled/disabled. Administrators should investigate the impact of preventing \nunauthori zed user installation of extensions and remove any unnecessary extensions. Most web browsers support \nextension whitelisting as well, which allows administrators to pre -approve a set of extensions that users are allowed to \ninstall.  \nADVANCED MITIGATIONS  \n \nWell-resourced adversaries have the advantage of time and skill, enabling them to target weaknesses in even properly \nconfigured systems. Zero -day vulnerabilities can often defeat most web browser defenses, so administrators must add \nadditional defensive la yers in order to slow down exploitation and increase chances of detection. Additional mitigations for \nweb browsers include browser isolation, disabling unnecessary features, and enabling operating system level mitigations.  \nENABLE BROWSER ISOLA TION  \n \nBrowser  isolation is a strategy that creates a logical barrier between the web browser and the operating system. This \nbarrier decreases the impact of exploits by limiting malicious code to an ephemeral environment. Several browser \nisolation products exist, and ad ministrators should consider how they can be implemented in their environments. In \nWindows 10 F9 Enterprise environments, Application Guard for Microsoft Edge can be used to enable browser isolation. \nAdministrators should evaluate if the feature can be en abled in their environment and configure Application Guard using \nGroup Policy settings10. Other browser virtualization products also exist. Cloud Browsers completely separate the web \nbrowser from the users operating system by hosting the browser in a remot e cloud environment and by then displaying \nthe web content into a users window on their system. While cloud browsers can offer enhanced security, they do come \nwith increased costs and usability concerns, such as creating a single point of failure and thro ughput capacity. \nAdministrators should evaluate if cloud browsers fit the requirements of their environment.  \nSite isolation loads each website in its own process which prevents malicious websites from accessing unauthorized data \nin the browser. Currently, the Google Chrome11 Site Isolation feature can be enabled through the Chrome Policy  \nfeature12.  As more web browsers support this feature, administrators should analyze the impact of enabling site isolation \nin their environments.  \n \n \n                                                \n8 www.cvedetails.com , CVE Detail Browser Statistic Reports, 2017. Web (vulnerabilities categorized by description keyword)  \n9 Windows 10 is a registered trademark of Microsoft Corporation  \n10 Windows Defender Application Guard overview Microsoft, 2017. https://docs.microsoft.com/en -us/windows/threat -protection/windows -defender -\napplication -guard/wd -app-guard -overview. Web.  \n11 Chrome is a trademark of Google, Inc.  \n12 Manage site isolation Google,  2018. https://support.google.com/chrome/a/answer/7581529. Web.  \n\n \n \n3 Footer text if necessary.  \n CSF U/OO/156564 -18           PP-18-0352           May 2018   \nDISABLE UNNECESSARY FEATURES  \nSome web browser features are not intended for wide spread use in a production environment, resulting in an \nunnecessarily large attack surface. Features which provide no benefit to the end user can sometimes be disabled to \nreduce overall risk. Det ermining necessary features is dependent upon each specific environment. Examples of \nunnecessary features may include hardware acceleration, rendering of untrusted fonts, and credential management. \nAdditionally, legacy features such as VBScript and ActiveX 13 controls give web browsers deeper system level \nfunctionality and should be disabled if administrators determine that they are not needed.  \nENABLE OPERATING SYS TEM LEVEL MITIGATION S \nProtecting the browser should extend beyond the browsing environment itse lf. Building a layered defensive approach is \ncritical to both limiting the impact of intrusions and preventing attacks. Web browsers are frequently exposed to untrusted \ncontent, so the operating environment must be configured with the assumption that defen sive mitigations can fail. \nAutomatic updates should be enabled for the host operating system as well as any available anti -exploitation features. \nAdministrators should ensure that other defensive guidance, such as NSAs Top Ten Cybersecurity Mitigation \nStrategies14, is enforced in their environment.  \nDISCLAIMER OF WARRAN TIES AND ENDORSEMENT  \nThe information and opinions contained in this document are provided \"as is\" and without any warranties or guarantees.  Refer ence herein to any \nspecific commercial product s, process, or service by trade name, trademark, manufacturer, or otherwise, does not constitute or imply its endorsement, \nrecommendation, or favoring by the United States Government, and this guidance shall not be used for advertising or product e ndorseme nt purposes.  \nCONTACT INFORMATION  \nClient Requirements and Gener al Cybers ecurity Inquiries  \nCybersecurity Requirements Center (CRC), 410 -854-4200, email: Cybersecurity_Requests@nsa.gov  \n \n                                                \n13 ActiveX  is a registered trademark of Microsoft Corporation  \n14 NSAs Top Ten Cybersecurity Mitigation Strategies NSA, 2018. https://www.iad.gov/iad/library/ia -guidance/security -tips/nsas -top-ten-cybersecurity -\nmitigation -strategies.cfm. Web.  \n\n",
  "cves": [],
  "techniques": [],
  "advisory": "cybersecurity-alerts",
  "title": "steps to secure web browsing - copy",
  "source": "nsa",
  "id": "9c259191641b8ce36422563578cf9bda96677c87033f92f0ccef391f2bc6c659"
}