{
  "markdown": " \n\n\nIdentity and Access Management: Recommended Best Practices for Administrators  i  \n \n  \nDISCLAIMER  \n \nDISCLAIMER OF ENDORSEMENT  \n \nThis document was written for general informational purposes only.  It is intended to apply to a variety of factual circumstances and industry stakeholders, and the information provided herein is advisory in nature. The guidance in this document is provided as is : \nOnce published, the information within may not constitute the most up -to-date guidance or \ntechnical information. Accordingly, the document does not, and is not intended to, constitute compliance or legal advice. Readers should confer with their respective advisors and subject matter experts to obtain advice based on their individual circumstances. In no \nevent shall the United States Government be liable for any damages arising in any way out \nof the use of or reliance on this guidance.  \n Reference herein to any specific commercial product, process, or service by trade name, \ntrademark, manufacturer, or otherwise, does not constitute or imply its endorsement, \nrecommendation, or favoring by the United States Government, and this guidance shall not be used for advertising or product endorsement purposes. All trademarks are the property of their respective owners.  \n P\nURPOSE  \n The National Security Agency ( NSA ) and the Cybersecurity Infrastructure Security Agency \n(CISA ) developed this document in furtherance of their respective cybersecurity missions, \nincluding their responsibilities to develop and issue cybersecurity recommendations and mitigations.  This information may be shared broadly to reach all appropriate stakeh olders.  \n C\nONTACT  \n Client Requirements/Inquiries:  Enduring Security Framework nsaesf@cyber.nsa.gov . \n Media Inquiries / Press Desk:  \n NSA Media Relations, 443 -634- 0721, MediaRelations@nsa.gov  \n CISA Meda Relations, 703 -235- 2010, CISAM edia@cisa.dhs.gov  \n  \n\nIdentity and Access Management: Recommended Best Practices for Administrators  ii \n \n \nTable of Contents  \nIntroduction  ................................................................................................................................................. 1  \nScope  ............................................................................................................................................................ 2  \nThe Threat Landscape  ................................................................................................................................. 2  \nIAM Threat Mitigation Techniques  ............................................................................................................ 4  \nIdentity Governance  .................................................................................................................................... 4  \nWhat it Does  ............................................................................................................................................. 4  \nWhy It Matters  ......................................................................................................................................... 5  \nEnvironmental Hardening  .......................................................................................................................... 6  \nWhat it Does  ............................................................................................................................................. 6  \nWhy it Matters  ......................................................................................................................................... 7  \nSetting the Stage for Implementation  .................................................................................................... 7  \nImplementing Best Practice  ................................................................................................................... 7  \nActions to Take Now  ............................................................................................................................... 9  \nSummary  ................................................................................................................................................ 10 \nIdentity Federation and Single Sign -On ................................................................................................... 10 \nWhat it Does  ........................................................................................................................................... 10 \nWhy it Matters  ....................................................................................................................................... 10 \nFactors to consider when selecting an SSO solution  ...................................................................... 11 \nImplementing Best Practices  ................................................................................................................ 13 \nActions to Take Now  ............................................................................................................................. 13 \nSummary  ................................................................................................................................................ 13 \nMulti- Factor Authentication  ..................................................................................................................... 13 \nWhat It Does  .......................................................................................................................................... 15 \nWhy MFA Matters  .................................................................................................................................. 17 \nPreparation for Implementing MFA  ..................................................................................................... 18 \nCatalog User Populations, Device Types, and Use Cases  ................................................................ 18 \nEvaluate Assurance Requirements  .................................................................................................. 19 \nEvaluate Privacy and Operational Considerations  ......................................................................... 19 \nImplementing MFA  ................................................................................................................................ 20 \nActions to Take Now  ............................................................................................................................. 21 \nSum m\nary ................................................................................................................................................ 21 \n\nIdentity and Access Management: Recommended Best Practices for Administrators  iii \n \nIAM Auditing and Monitoring  ................................................................................................................... 22 \nWhat it Does  ........................................................................................................................................... 22 \nWhy it Matters  ....................................................................................................................................... 22 \nPreparation for Implementing Best Practice  ...................................................................................... 23 \nActions to Take Now  ............................................................................................................................. 24 \nSummary  ................................................................................................................................................ 25 \nConclusion  .................................................................................................................................................. 25 \nAppendix I: Actions to Take Now Checklist  ............................................................................................. 26 \n \n \n  \n\nIdentity and Access Management: Recommended Best Practices for Administrators  1  \n \nIntroduction  \n \nIdentity and access management (IAM) is a framework of business processes , policies, and \ntechnologies  that facilitate the management of digital identities to ensure that users only \ngain access to data when they have the appropriate credentials .  Beyond  the physical users, \nservice and system accounts are also in scope for IAM and critical for IAM administrators to \nmanage within their organizations.  Inventorying, auditing, and tracking all of these \nidentities  and their access  is imperative to ensure that proper IAM , including permissions \nand active status, is executed on a regular basis.  Managing the growing complexities of \ndigital identities can be daunting  especially with industrys push toward cloud and hybrid \ncomputing environments ; however, the need for IAM is more important today than ever. In \nrecent years , we have seen various nation state -led cyber operations successfully access \nprotected data by targeting the trust established within networks or by exploiting \nvulnerabilities in IAM products and/or IAM implementations. Specifically, the critical \ninfrastructure within the U.S. is an attractive target for the adversaries.  In fact, according to \nthe 2022 Verizon Data Breach Investigation Report, 80% of web applications attacks \nleveraged stolen credentials, a technique used by both basic cyber criminals and nation-\nstate bad actors. Additionally, excluding breaches based on user error and insider misuse , \n40% of breaches involved stolen credentials and nearly 20% involved phishing. Recent and \nnotable attacks include:  \n \n In 2021, compromised credentials were used to attack  and  shut down the Colonial \nnational gas pipeline in the U.S.1  \n In another 2021 cyberattack, an unknown attacker manipulated computer systems \nin a Florida water treatment plant to increase the concentration of sodium \nhydroxide in the water supply by a factor of 100.2  \n In 2022, another attack targeted a water treatment plant in South Staffordshire, \nU.K.3    \n \nAs such, the critical infrastructure o rganizations  have a particular  responsibility to  \nimplement, maintain, and monitor secure IAM  solutions  and processes  to protect not only \ntheir own business functions and information but also the organizations and individuals \nwith whom they interact.   It is important to keep in mind that IAM systems implement \ncredential management, authentication, and authorization functions that are foundational \nto security and  also very complex and subject to vulnerabilities if not implemented \ncorrectly. Like any kind of software, IAM solutions  are subject to software vulnerabilities \nand must be patched, updated, and managed. A vulnerable IAM solutions  can facilitate \naccess to multiple systems and data across the organization. T herefore , securing IAM \ninfrastructure is critical. Ultimately , the  goal is that o rganizations  proactively take the \n \n1 https://www.bloomberg.com/news/articles/2021 -06-04/hackers -breached -colonial -pipeline -using -\ncompromised- password .  \n2 https://arstechnica.com/information- technology/2021/02/breached -water -plant -employees -used -the-\nsame -teamviewer -password -and-no-firewall/ .  \n3 https://www.zdnet.com/article/confused- cyber -criminals -have -hacked -a-water -company -in-a-bizarre -\ncase -of-mistaken -identity/ . \n\nIdentity and Access Management: Recommended Best Practices for Administrators  2  \n \nappropriate action to protect against an attack rather than be in the position of deploying \nfundamental IAM capabilities  far too late.  \n \nTo address the risk to a wide range of critical public and private sector networks, t he \nEnduring Security Framework (ESF) hosted a working panel staffed by government and \nindustry subject matter experts tasked with assessing the challenges and threats to IAM  \nand identifying  recommendations on how to mitigate these risks. While t he working group \nrecognizes the need for a broad, layered approach to network defense, this guidance is focused on the aspects of IAM identified as critical in addressing the threats laid out in this paper.   \nScope  \n This paper sets forth the IAM best practices  for administrators to implement to  address  \nthreats that are highly likely, highly impactful, or both . Further more , it identifies  mitigation \nareas most effective in reducing the impacts of these threats  to IAM . \n This paper focuses on identifying mitigations  for the following techniques frequently used \nby bad actors : \n \n Creating  new accounts to maintain persistence.  \n Assuming control of accounts of former employees which were not suspended upon employee termination.  \n Exploiting  vulnerabilities to forge authentication assertions ( e.g. Kerberos tickets, \nSecurity Assertion Markup Language ( SAML ) assertions, OAuth2).  \n Utilizing or creating  alternative access points to systems.  \n Exploiting or utilizing  users with legitimate access.  \n Compromising  passwords through a variety of tactics ( e.g. phishing, multi -factor \nauthentication (MFA) bypass,  credential stuffing, password spraying, social \nengineering, brute force).  \n Gaining  system access and exploiting  stored credentials.  \n Exploiting  default passwords in built- in or system accounts, exploiting  active attacks \nto downgrade , and exploiting  deprecated encryption, or plain- text protocols to \naccess credentials.  \nThe Threat Landscape  \n Organizations  are subject to attack s from a broad range of threat sources including  nation-\nstates , terrorist groups , organized crime, hacktivists , and individuals  looking to harm or \nembarrass an organization.  Additionally,  organizations are subject to attack s where  a \ntrusted user is the source of the compromise (e.g. , insider threat) .  The spectrum of threat \nsources varies  wildly in capabilities, motivations, and methods . For example, nation- state \nactors have significant resources, and can establish long -term plans to gain access to \ncritical resources. They can also use indirect methods such as exploiting  the supply chain .   \n \n\nIdentity and Access Management: Recommended Best Practices for Administrators  3  \n \nExploiting known IAM  vulnerabilities could allow a bad actor the same access to resources \nas legitimate users by mimicking legitimate activity which complicates detection of the bad  \nactor. This provides the bad  actor more time to gain access to resources and elevate \nprivileges to gain persistent access.  \n \nFor example, a recent CISA Alert (AA21 -321A)4 showed that Iranian government-\nsponsored advanced persistent threat (APT) actors are actively targeting a broad range of \nvictims across multiple U.S. critical infrastructure sectors by exploiting IAM vulnerabilities \nto compromise credentials, escalate privileges, and establish new user accounts on domain controllers, servers, workstations , and in directories  responsible for authenticating and \nauthorizing users and devices. These actors could leverage this acces s for follow -on \noperations, such as data exfiltration or encryption, ransomware, and extortion.  \n Additionally, exploitation of Single Sign- On ( SSO) technology ( a component of IAM) is \nbecoming a more prevalent attack vector. Bad actors  attempt to exploit the SSO functions \nwith hopes of  easily gaining  access to protected resources throughout the system and/or \norganization. Several examples that show the impact of SSO compromise include:  \n \n In September 2021, Palo Alto Networks revealed bad  actors exploiting a \nvulnerability in Zohos ManageEngine ADSelfService Plus SSO solution. The bad \nactors were observed deploying backdoor and credential stealing tools to maintain \naccess  to the victims networks including critical infrastructure entities.5 \n The SolarWinds compromise highlighted the risk of SSO exploitation. The NSA and \nothers characterized the Golden SAML, Active Directory Federation Services \nbypass techniqu e, as shown in Figure 1,  which  gave bad actors  access to all of the \nenterprises Active Directory authentication.6  \n \nF\nigure 1 Depiction of Golden SAML Attack Process .7 \n \n4 https://www.cisa.gov/uscert/ncas/alerts/aa21 -321a . \n5 https://unit42.paloaltonetworks.com/manageengine -godzilla -nglite -kdcsponge/ . \n6 https://www.darkreading.com/attacks -breaches/solarwinds -campaign -focuses -attention -on-golden- saml -\nattack -vector . \n7 https://blog.sygnia.co/detection- and-hunting -of-golden- saml -attack.  \n\n\nIdentity and Access Management: Recommended Best Practices for Administrators  4  \n \nDefending against this broad spectrum of attacks requires a comprehensive IAM solution, \nwith operational awareness of the environment to detect anomalies and attribute anomalous activity to adversary exploits.  \nIAM Threat Mitigation Techniques  \n \nThe best practices and mitigations discussed in this paper provide tactics that help to \ncounter threats to IAM through  deterrence, prevention, detection, damage limitation, and \nresponse . Specifically,  this paper  identifies  best practices relating  to: \n \n Identity Governance - policy -based centralized orchestration of user identity \nmanagement and access control and helps support enterprise IT security and \nregulatory compliance ; \n Environmental H ardening  - makes it harder for a bad  actor to be successful in an \nattack ;  \n Identity Federation and S ingle Sign- On  Identity federation across organizations \naddresses interoperability and partnership needs centrally. SSO allows centralized \nmanagement of authentication and access thereby enabling better threat detection and response options ;  \n Multi -Factor Authentication - uses more than one factor in the authentication \nprocess which makes it harder for a bad actor to gain access;  \n IAM Monitoring and Auditing  - defines acceptable and expected behavior and then \ngenerates, collects, and analyzes logs to provide the best means to detect suspicious activity.   \n \nIdentity Governance  \n Identity governance is the process by which an organization centralizes orchestration of its \nuser and service accounts management in accordance with their policies . Identity \ngovernance provides organizations with better visibility to identities and access privileges, \nalong with better controls to detect and prevent inappropriate access. It is comprised of a set of  processes and policies that cover the segregation of duties, role management, logging, \naccess review, analytics, and reporting.  \n \nWhat it Does  \nIdentity governance solutions can manage the entire identity and access lifecycle for an organizations workforce. The most critical lifecycle events are often referred to as Join, Move, and Leave (JML) events:  \n \n Join  when a new  employee or contractor joins  the organization, the identity \ngovernance solution can collect biographical, position- related, and credential data \n(such as professional certifications or clearances) from recruiting, human capital management, and personnel security systems to build out an identity record for the individual. Identity governance systems can use this data to automatically create \n\nIdentity and Access Management: Recommended Best Practices for Administrators  5  \n \naccounts in directories and applications with entitlements based on the collected \ndata . \n Move  when an individuals role in the organization changes,  an identity \ngovernance system can automate the granting of additional entitlements needed for \ntheir new role as well as the removal of entitlements that are no longer needed.  \nWithout adequate management of Move events, long -term users tend to accumulate \nprivileges as their roles change, increasing the potential impact of insider abuse or \naccount takeover.  \n Leave  w hen users separate from an organization through retirement, termination, \nor contract expiration, their accounts and privileges must be promptly terminated. Identity governance systems can automate the disablement and removal of accounts \nin response to separation actions in human capital management systems or other \npersonnel systems. Identity governance systems also provide a record of accounts and privileges associated with the individual, ensuring  that access is completely \nremoved.  \n \nWhy It Matters  \nIdentity governance solutions implement governance policies using orchestration tools \nthat are designed to link people, applications, data and devices, and allow customers to determine who has access to what, what kind of risk that represents, and take action in \nsituations where policy violations are identified. They provide a comprehensive view of an organizations identity management practices and identify gaps in the identity management lifecycle. This centralized control and visibility help s to mitigate the risk that \nidentities and privileges will be mismanaged, as well as the risk that attackers can exploit \ndifferent systems within the organization without being detected.  \n \nAdditionally, identity governance systems maintain an inventory of active accounts and privileges that currently exist in systems and applications, enabling monitoring and \nanalysis. Account creation and modification events can be reviewed and correlated with \napproved access requests. Policy rules can be created for segregation of d uties \nrequirements, enabling administrators to identify and remove non- compliant combinations \nof privileges assigned to individuals. Automated risk analysis can identify high -risk \nindividuals so  that appropriate mitigations can be taken, such as re- assigning privileges or \nelevated monitoring of those users accounts. The access inventory also enables application and data owners to periodically review and reconcile accounts and privileges. Together, these processes support the principle of Least Privilege, ensuring that users have only the privileges required for their job functions.  \n Further, m anaging system and application accounts is also critical. Identity g overnance \nsystems can monitor and manage the creation, modification, and removal of these accounts \nto ensure they are only created and granted privileges in response to approved, \ndocumented change requests. The entitlements policies, monitoring, risk analysis, and \naccess reconciliation processes applied to user accounts as described above can also ensure that system accounts are managed in accordance with least privilege.  \n \n\nIdentity and Access Management: Recommended Best Practices for Administrators  6  \n \nEffective identity governance can mitigate the impacts of many prevalent IAM threats:  \n \n Phishing, spear  phishing, or social engineering :  Identity governance cannot \ndirectly prevent these attacks,  but can reduce the potential impact of user account \ncompromise using these techniques. A compromised account with excessive \nprivileges can do more damage than one whose privileges are contained . In \naddition, Segregation of Duty controls enforced through identity governance can \nensure that compromising a single account does not provide access to key business processes and data.  \n Insider threats :  As  with phishing and other account compromise threats, identity \ngovernance cannot prevent insiders from abusing their privileges, but it can reduce \nthe impact when these events happen if they do not have excessive privileges.  \n Creating accounts to maintain persistence :  Attackers who compromise \nprivileged accounts may attempt to create additional user accounts to maintain \naccess to a system even if the initially compromised accounts are revoked or disabled. Identity governance systems monitor account creations and can help an organization identify unauthorized account creation.  \n Privileged accounts require additional monitoring and control and should be separately managed using a Privileged Access Management (PAM) solution with strong i dentity \ngovernance. Modern PAM s olutions  include advanced capabilities such as  just -in-time \nprovisioning, in which users are temporarily granted privileged access in order to complete a specific task or resolve an issue. This further supports the principle of least privilege and reduces the number of privileged accounts that an attacker could target.  \n \nEnvironmental Hardening  \n Hardening  the enterprise environment includes  making  sure  the foundations  and  \nimplementations  of IAM  are sufficiently  secure d, assured, and  trusted.  The  degree  of \nhardening  will  vary depending  on what  is being  protected . For  example,  credential  issuing  \nsystems for  cryptographic  digital  certificates  or stores  of passwords  are more  critical  since \nthey  secure  authentication for  entire organizations.  Imple mentation of  cryptographic  \nmechanisms  must  also be  sufficient to  provide  the level  of security  assumed  and  needed  by \nthe system. \n \nWhat it Does  \nEnvironmental hardening  secures  the hardware components and software in the \nenterprise environment around the IAM solution. A defense is only as good as its weakest component. Therefore, it is important when implementing an IAM solution to include  \nsecuring the other services that are involved. C ombin ing environmental  hardening (e.g., \npatching, asset management, and network segmentation) best practices with sound  IAM \nfoundations and implementations reduces the likelihood of a compromise and limits potential damage. \n \n\nIdentity and Access Management: Recommended Best Practices for Administrators  7  \n \nWhy it Matters  \nEnvironmental hardening  generally makes it harder for a bad actor to exploit  IAM \ncomponents and software. Bad  actors target IAM solutions because they c an provide access \nto a significant amount of sensitive data , enables persistence , and be used for future  \nmalicious cyber  operations. IAM solution components must be hardened  to prevent \nfoothold s for attacker s to pivot to more critical systems .  \n \nSetting the Stage for Implementation  \n \n \n \nImplementing Best Practice  \nPhysical and \nEnvironmental \nHardening   Ensure assets are protected from interruption or data loss due \nto unauthorized access to a specific physical environment.  This \ncan be done by limiting  physical access to the data center \nhosting the IAM assets and the systems controlling logical access to the IAM assets . It is also imperative to use best \npractices to provide the appropriate resilience of these systems from other physical threats.  IAM functions and capabilities should be purposely implemented with system geo -\nredundancy , if possible , to survive and withstand a physical \nand/or destructive cyber event at one physical location.  \n For IAM system s hosted on -site in the organizations work \noffices, ensure  the server room is located behind a locked door \n\n\nIdentity and Access Management: Recommended Best Practices for Administrators  8  \n \nwith access granted only to those who have a purpose in that \nroom. A cipher lock or badge access can add MFA capabilities to \naccess the room itself.  \n Ensure  that any doors and rooms that provide access to \nsensitive or critical IAM infrastructure are monitored with \ncameras that can trigger an alarm if there is unauthorized \nphysical access to the facility (e.g., data center) and room (e.g., \non-prem ises server room).  \n For IAM system s managed offsite or through a cloud provider,  \nenvironment hardening needs to ensure remote access is \nlimited by using strong phishing -resistant MFA  and limiting \naccess based on other factors  (e.g. role -based, normal work \nhours, location, device, position). It is also key to only engage reputable cloud service providers when choosing to implement the IAM systems offsite.  \n Ensure disposal  of used assets properly  by thoroughly wip ing \nor completely destroying the asset depending on the sensitivity \nof the data.  \nNetwork \nHardening   When software patches are published for IAM components \nand/or software, perform a security risk assessment on the patch to assist with installation prioritization . If you have the \ncapacity, consider execut ing a comprehensive security test plan \non all software patches in a non- production environment to \nensure compatibility . Proceed to patch and update all impacted \ndevices and/or software as soon as possible.  \n Ensure an intrusion detection system is in place to alert security operations teams of any suspicious IAM activity.  \n Develop and set a network baseline so that anomalous network traffic and/or behaviors can be identified and flagged for security analysis to determine if it is a result of malicious or \nunauthorized activity.  \nBackups   Follow the 3-2-1 principles  in the event of a disk failure or \nother disaster : maintain three copies of the data, in at least two \nmediums, with one being offsite.  \n Build r esiliency  in the IAM system  in order to prevent access \nloss  due to failure. This resiliency can  also have the added \nbenefit of providing better performance through maintaining a lower baseload. Geodiversity should be considered in the \nresiliency plan for the IAM system.  \nLeast \nPrivileged   Limit u ser account  permissions to those that are necessary to \nperform their job.  IAM solutions can help handle this through \nlocking down privileged accounts, protecting user credentials, \nand making it easier to assign users to groups with specific \npermissions.  \n\nIdentity and Access Management: Recommended Best Practices for Administrators  9  \n \n Develop policies where normal users, system administrato rs, \nand other privileged (e.g., operation and management, \napplication/process, alias, backup, etc.) accounts are separated \nto ensure that all accesses are using least privilege permissions.  \n Audit all assets regularly in the organization to identify local \nidentities.  Remove  unnecessary local identities and  investigate \nto identify who or what process created the local identity.  \nMonitor remaining local identities for anomalous behavior.  \nNetwork \nSegmentation   Carefully design and implement n etwork segmentation with \nsecurity in mind to limit the spread of an intrusion and to \ndisrupt attempts to escalate privilege. \n Isolate IAM systems in a dedicated network segment with \nlayers of security controls between the IAM systems and other \nsystems inside and/or  outside the organization.  \nNetwork \nSecurity Assessment   Perform r egular security penetration testing and asset \nvulnerability security scanning to understand attack surfaces from both outside and inside the organizational boundaries .   \n Prioritize security hardening efforts on externally exposed \nassets. \n Assess the access allowed internally and the current vulnerabilities that could be exploited by an internal  and/or \nexternal threat actor. Implement least privilege and access \nmonitoring to reduce risk.  \nProtect and \nManage \nCritical IAM \nAssets  Identify  your credential/trust store s, control access paths , and \nprovide enterprise- wide  management. \n Protect key s and certificates at appropriate assurance levels   \nconsider hardware -based  security  modules for critical items \nsuch as  signing keys . \n Understand tradeoffs  between on- prem ises and cloud based \nIAM services and  ensure visibility into the security of cloud \nservices used.  \n Recognize and mitigate risks of using 3rd party applications for \nIAM functions . \n \nActions to Take Now  \n Take an inventory of all assets within the organization. If there is something \nmissing, or if there are additional assets that are unknown, determine the cause of \nthe discrepancy .   \n Identify all the local identities on the assets in order to know who has access to \nwhich assets.  \n Understand what security controls are in the enterprise environment now and what security gaps persist in an organizations enterprise environment.  \n Develop a network traffic baseline that can be used to detect security anomalies in the network. Any compromise to any component in a network has the potential to \nthreaten more critical enterprise systems, including IAM.  \n\nIdentity and Access Management: Recommended Best Practices for Administrators  10 \n \nSummary  \nIAM solutions are only one part of a wider enterprise environment, where compromises in \none area can eventually lead to compromises in another. Hardening the enterprise environment, including the IAM systems as critical resources,  helps to  limit the potential \nfor a compromise and keep the IAM system safe and accessible.  \n \nIdentity Federation and  Single Sign- On \n \nIdentity federation using SSO within and/or between organizations , including the \nutilization of identity providers , mitigates risks by centrally managing differences  in \npolicies and risk levels between the organizations and eliminates wide implementation and \ndependence on local identities . Without formally defining the policies and levels of trust \nand assurance between organizations  or between multiple identity providers within an \norganization, the organization is susceptible to attacks based on weaknesses in each \nfederated  IAM.  SSO provides a risk mitigation capability by centralizing the management \nand control of authentication and access across multiple systems  and from multiple \nidentity providers . Implemented properly, it can also raise the authentication assurance \nlevel required for initial sign on and can control and secure the authentication and \nauthorization information passed between systems.   \n \nWhat it Does  \nIdentity Federation and SSO simplifies identity  management internally within an enterprise \nand with trusted external partners  by reducing  the need for users to maintain multiple \nidentities in both internal and external directories, applications, and other platforms , \neliminating  the need for local identities at each  asset. It allows for seamless integration \nwith other security controls such as p rivileged a ccess m anagement for step -up \nauthentication and  increases confidence that only active users are allowed access.  \nAdditionally, it reduces the labor costs associated with managing multiple identities for each user on the various on- premises and/or cloud -based applications.  \n \nWhy it Matters  \nPasswords are a vulnerability  due to the complexity of requiring a user to remember  multi -\ncharacter passwords that almost every application requires today. SSO nominally reduces the user burden to remembering one solid, complex, and hard -to-guess passphrase, and \nfacilitates the migration to strong  MFA , potentially eliminating passwords altogether . \nImplementing  both  Identity Federation and SSO  supporting strong  MFA  allows for \nimprove d security without compromising the user experience.   \n Locally provisioned accounts  (e.g., user, system, process, admin)  on individual assets \ncreates an unmanageable environment and is a lucrative target by bad actors . For example:  \n \n Locally provisioned accounts may or may not allow for  security policy enforcement. \n\nIdentity and Access Management: Recommended Best Practices for Administrators  11 \n \n Massive volumes of locally provisioned accounts on individu al systems across the \nenterprise cannot be maintained . These accounts can include shared accounts, \nvendor default accounts, and unknown accounts (e.g., ex -employee, ex -vendor) . \n Security event monitoring is ineffective on locally provisioned accounts.   For \ninstance, the ability to monitor and  detect shared accounts, stolen credentials , and \ncracked credentials (e.g., password spraying) is considerably more difficult given \nthe volumes of assets, accounts, and individual asset configurations.  \n Adversaries , both i nternal  and external threat actors, can exploit the security policy \nand/or security event monitoring  gaps in one system to compromise the assets it \nmanages and use their access  as a foothold to launch exploits against other systems.  \n \nIdentity Federation and SSO drastically reduce the need for locally provisioned accounts \nand enables IAM administrators to have more centralized visibility and control over \naccounts. It also enabl es more effective management of default and/or shared accounts \nthat are required on an individual asset. For example, most default and shared accounts can be disabled and  those that cannot be disabled can have password s changed to highly \nrandom values protected in a password vault.   \n \nFactors to consider when selecting an SSO solution  \nSSO services may use different protocols, such as SAML  or Open ID Connect (OIDC). When \nselecting an SSO service, it is important to keep in mind the following factors : \n \n What protocol is being used?  \n How has the service provider secured the protocol and the service?  \n \nSAML  \nSAML is used for exchanging authentication and authorization data between identity \nproviders and service providers. One of the most common use cases for SAML is facilitating \nbrowser- based SSO. Up until the past few years, SAML was considered the industry \nstandard and proven workhorse for passing an authenticated user into applications while \nallowing these applications to defer authentication to a centralized identity solution.  \n If the services use  SAML, specific implementation and hardening measures are a must to be \na secure SSO option as it  is prone to exploits if it is not implemented correctly. Every year \nbrings new issues with SAML  in the form of newly discovered exploits  which gives it a reputation of not being the most secure option.  \n \nOIDC  was created to address some of the flaws in SAML However, SAML is still considered \na relevant option for SSO  and there are still requirements for developers to support it in \nmodern environments.  \n \nOpenID Connect   \nOAuth 2.0 is designed only for  authorization for granting access to data and features from \none application to another.  OIDC  is a thin layer that sits on top of OAuth 2.0 that adds login \nand profile information about the person who is logged in. OIDC  enables scenarios where \n\nIdentity and Access Management: Recommended Best Practices for Administrators  12 \n \none login can be used across multiple applications  (i.e., SSO). A n application could support \nSSO using  social networking services (i.e.,  Facebook or Twitter ) so that users can choose to \nleverage a login they already have. Authorization c ode f low enables the applications to first \nget authorization codes instead of getting tokens directly from the authorization callback \nrequest. It then use s these codes in a request to another endpoint on the authorization \nserver to exchange them for the tokens they need. The most significant advantage that this \nflow has in relation to the implicit flow is its security. T here are two characteristics of the \nauthorization code flow that make  it a better choice than SAML  when it comes to security.  \nAn example of the authorization code flow is depicted in Figure 2 below.  \n  \n \nFigu\nre 2 Diagram of Authorization Code Flow8 \n \nFirst, the process  to exchange codes for tokens happens on back channels.  Instead of \nhaving tokens traveling through users devices, the application opens a back channel  \nconnection to the authorization server, eliminating the need to pass credentials and \nother information through the users devices (like brow sers) . By establishing a \ndirection connection to each other, the application and authentication server reduce the \nchances that certain credentials will be exposed . When registering a Web App, the call \nback  configuration is important from a security point of view because it restricts what \nURLs the OIDC  provider is allowed to call after a successful authentication proces s. \n \nThe second characteristic is that, before issuing tokens, authorization servers require \napplications to authenticate themselves. This authentication process usually happens \nby applications using credentials that authorization servers assign to them .  \n \n8 https: //portswigger.net/web -security/oauth/grant -types.  \n\n\nIdentity and Access Management: Recommended Best Practices for Administrators  13 \n \n \nIn summary, OIDC is a more secure and reliable protocol because it uses a direct channel \nbetween the applications and the authentication server, protecting identity tokens . \n \nImplementing Best Practices  \nOrganizations should consider the following when assessing their SSO capability and making improvements to counter their organizations top threats  and plan for periodic \nreassessments to ensure updates  are made as needs change. \n Define and understand how assets  are audited  for any local accounts and/or \nidentities configured and active.  \n Define and understand how  the engagement with  trusted partners to audit for any \nlocal accounts and/or identities configured and active.  \n For any required and authorized local accounts/identities, define a password policy, and auditing  to ensure compliance.  \n Define a policy that disallows local accounts on any platform.  \n Implement a configuration management solution which supports the identification, tracking, and reporting of any local  accounts . \n Identify and track all exceptions for systems, platforms, and/or applications that require local accounts. Disable those that are not necessary and  establish and \nenforce password policies for those that are. Review these periodically with the application teams and/or vendors in an effort to drive them to SSO support.  \n Ensure SSO availability. If SSO fails, access to all related systems is lost. Therefore,  it \nis key to  have a solid high availability design and plan implementation which \nincludes  both local and regional geographic redundancy and the appropriate \nsecurity hardening guidelines.  \n \nActions to Take Now  \n Assess your organizations internal on- premises applications/devices/platforms \nand your cloud providers ability to connect using SSO.  \n Determine if your SSO integration can collect user context during SSO logins including location, device, and behavior.  \n \nSummary  \nOrganizations  should develop and deploy SSO friendly applications and platforms to \neliminate all local accounts and/or identities. Doing so will improve the user experience while also significantly reducing  the risk associated with local accounts which are difficult \nto manage and monitor. Local accounts that use shared passwords (e.g., root) create legal \nand forensic issues for the organization when attempting to identify the attackers identity.  \nMulti -Factor Authentication  \n Since the introduction of multi- user compute r systems, user authentication has primarily \nrelied on usernames and passwords. MFA is an approach to strengthen the authentication process by requiring the user to present multiple elements in different categories, or \n\nIdentity and Access Management: Recommended Best Practices for Administrators  14 \n \nfactors, as part of an authentication attempt. These factors are as shown in Figure 3 are \nsomething you have, something you know, and something you are.  \n \n \nFigure 3 Multi -Factor Authentication Factors  \n \nMFA incorporates more than one of the above factors as part of a login flow. Examples include:  \n Typing a password and responding to a push notification sent to a registered smartphone. \n Typing a password and providing a one- time code from a hardware authentication \ndevice.  \n Using a biometric facial scan and/or passphrase  to unlock a cr yptographic \ncredential stored on a registered device ( i.e. phone, hardware  token).  \n \nAuthentication systems are the front doors to enterprise networks, applications, and data . \nAs such, attackers are highly focused on finding and exploiting authentication vulnerabilities. Authentication systems are also high -volume user interfaces and frequently \nseen as friction points between users and their ability to perform their business functions. This combination of characteristics poses a challenge for systems engineers and \nimplementers since they must be seamless and user -friendly yet also strongly resistant to \nattacks.  \n \nMFA authenticators may take the form of software that runs on a smartphone o r other \ndevice or dedicated hardware tokens. Some MFA solutions are designed to augment \npasswords with an additional facto r, whereas , passwordless solutions can eliminate the \nneed for passwords altogether. Passwordless MFA solutions typically involve the use of \ntwo factors together, such as a cryptographic credential stored on a hardware token that is unlocked using a memorized PIN. Table X below lists some common forms of MFA.  \n\n\nIdentity and Access Management: Recommended Best Practices for Administrators  15 \n \n \nMFA Type  Examples  Relevant Standards  \nOne -time \nPasswords \n(OTP)  OTP delivered out of band by simple \nmessaging service (SMS) or email  \nHardware OTP token \nMobile OTP app  HMAC -based OTP (HOTP) \n RFC 42269 \nTime -based OTP (TOTP)  \nRFC 623810 \nOut -of-band \nPush \nNotification \nApp  Mobile app that presents options to \napprove or reject a login event from another device  N/A  \nCryptographic \nauthenticator  Fast Identity Online (FIDO) hardware \ntoken \nFIDO software token (e.g, Passkey)  \nSmartcard  \nSoftware Public Key Infrastructure (PKI) \ncredential unlocked with biometric  CTAP211 \nWeb Authentication12 \nNIST SP 800- 7413 \nNIST SP 800- 15714 \n \nIt is important to note that not all MFA solutions provide equal protection against authentication attacks, and there are critical implementation details that can impact the \nsecurity and usability of an MFA deployment. The following subsections provide guidance for selecting and implementing an MFA solution. Further guidance is also available in the National Institute of Standards and Technology  (NIST ) Special P ublication (SP)  800- 63\n15, \nNSAs  publication, Selecting Secure Multi -factor Authentication Solutions16, and the \nCybersecurity Infrastructure Security Agencys guidance on MFA .17 \n \nWhat It Does  \nMFA was created to address the shortcomings of passwords  including the fact that: \n \n Passwords can be shared with unauthorized users ; \n Users can be tricked into giving their passwords to attackers through phishing ; and  \n Users tend to use the same or closely related passwords across multiple websites, services, and computer systems, meaning  a breach of one system allows an attacker \nto obtain usernames and passwords that can be used in other systems  using \ntechniques such as credential stuffing . \n \n \n9 https://datatracker.ietf.org/doc/html/rfc4226 .  \n10 https://datatracker.ietf.org/doc/html/rfc6238 .  \n11 https://fidoalliance.org/specs/fido-v2.1- ps-202 10615/fido -client -to-authenticator -protocol -v2.1- ps-\n20210615.html .  \n12 https://www.w3.org/TR/webauthn -2/.  \n13 https://nvlpubs.nist.gov/nistpubs/specialpublications/nist.sp.800 -73-4.pdf .  \n14 https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800 -157.pdf .  \n15 NIST Special Publication , 800 -63A B. \n16 CSI_MULTIFACTOR_AUTHENTICATION_SOLUTIONS_UOO17091520.PDF (defense.gov) . \n17 https://www.cisa.gov/mfa.  \n\nIdentity and Access Management: Recommended Best Practices for Administrators  16 \n \nMFA mitigates common attacks against password s such as brute  force guessing and \ncredential stuffing  as well as common misuse practices such as  password sharing by \nrequiring the presentation of another factor in addition to the password. Unless an attacker \ncan defeat the MFA authentication  mechanism, knowing the  password by itself does not \nenable impersonation of the user. In the case of passwordless authentication systems, \npasswords are eliminated altogether as an attack vector.  \n \nSome, but not all, MFA solutions also mitigate phishing attacks. Given the prevalence of \nphishing as an attack vector,  phishing resistance should be a key consideration in choosing \nan MFA solution. Figure 4 represents different types of MFA ranging from weakest to \nstrongest.  \n \n \nFigure 4 Weakest to Strongest Types of MFA18 \n \nThe following are some general guidelines around MFA and phishing : \n \n One -time passwords, whether generated in an app or hardware token or delivered \nthrough SMS, e -mail, or some other out -of-band method, do not protect against \nphishing  unless they are combined with some other phishing -resistant technology \nsuch as mutual TLS authentication. Because the user enters the one- time password \ninto a login form, a phishing site can capture an OTP just as easily as a password \nand replay it to the legitimate site or application in real -time.   \n Push notification- based  authenticator apps that prompt the user to approve login \nattempts also generally do not protect against phishing. A phishing site can trigger a login attempt that will send a push notification to the users registered device and \nthe user may have no way of determining whether the notification is legitimate. \nSome attackers have had success rates simply triggering push notifications to users who are not even attempting to log in at the time.\n19 Some push notification- based \nMFA solutions provide additional context about the authentication attempt, such as \n \n18 https://www.cisa.gov/mfa . \n19 What Are Push Attacks? | HYPR .  \n\n\nIdentity and Access Management: Recommended Best Practices for Administrators  17 \n \nthe location from which it originated, to aid the user in determining whether it is \nlegitimate. If the login request came from a phishing s ite, the detected location of \nthe login attempt should not match the users current location. However, location \ncan be spoofed, and the basic issue remains that the push notification is not \nstrongly bound to a legitimate authentication attempt and the service to which the user is authenticating.  \n \nFurther guidance is also available in CISAs publication Implementing Phishing -Resistant \nMFA .\n20 \n \nPhishing -resistant forms of MFA include:  \n FIDO authenticators  a wide range of interoperable authenticators, both built into commonly -used operating systems (Windows, MacOS, iOS Android) and available in \nhardware tokens, based on industry standards maintained by the FIDO A lliance and \nthe World Wi de Consortium ( W3C ). \n PKI credentials, in the form of software crypto modules, smartcards, and other hardware tokens.  \n \nWhy MFA Matters \nMFA solutions can mitigate many of the most common attacks against authentication systems: \n \n Credential stuffing is the attempt to use known username/password credentials \nobtained from one system (typically through compromise and cracking of the password database) to access other systems. Credential stuffing takes advantage of the tendency for users to reuse the same credentials for multiple sites and services. With MFA, these stolen credentials are not sufficient to gain access to a users account  because the attacker cannot bypass second -factor authentication.  \n Password spraying is a similar attack where the attacker tries a relatively short list of the most commonly -used passwords against a list of known usernames. Typically,  \nthe attacker tries a small number of passwords for each user account to avoid triggering the account lockout threshold to reduce the risk of detection. If a system locks users after 10 failed attempts, the attacker may try 9 passwords for each username. Again, MFA can prevent account takeover even if the attacker discovers \nvalid username/password credentials by requiring an additional authentication \nfactor.  \n Phishing is an attempt to trick users into logging into an attacker -controlled system \nand capture their credentials. As described above, some MFA authentication systems prevent phishing by using protocols designed such that a phishing site cannot simply replay the authentication protocol messages against the legitimate \nsite.  \n Brute -force attacks are the simplest form of password attacks, where an attacker \nsimply tries different passwords in the hopes of finding valid credentials. Account \n \n20 Implementing Phishing -Resistant MFA (cisa.gov) . \n\nIdentity and Access Management: Recommended Best Practices for Administrators  18 \n \nlockouts make these attacks much more time- consuming, but  strong  MFA can \ncompletely mitigate them.  \n \nPreparation for I mplementing MFA  \n \nBefore deploying MFA, it is important to understand the full scope of use cases and \nscenarios the MFA solution needs to address. An ad -hoc approach can lead to incomplete \ncoverage, multiple systems, and users needing to enroll multiple MFA  mechanisms to \naccess all the applications they need. Up -front planning and strategy definitions can help \nensure a smooth, coherent implementation. This section details several aspects to consider  \nand further information can be found in the NSA publication  Transition to Multi -Factor \nAuthentication 21 and in CISAs publication  Capacity Implementation Guide: Implementing \nStrong Authentication.22 \n \nCatalog User Populations, Device Types, and Use Cases  \nConsider the needs of different user groups to best determine how to handle MFA \nenrollment. Questions to consider include:  \n \n What types of authenticators are suitable for each based on assurance level, usability, supportability, and cost?  \n What are the various device platforms your MFA solution needs to accommodate? Desktops, laptops, smartphones, and tablets are common requirements . \n Is MFA also needed for networking devices or other equipment?  \n What are the potential device compatibility issues for both software and hardware MFA solutions ? It is important to  consider up -to-date operating systems and \nbrowsers, available USB ports (with their A/C/Micro variations), or support for Bluetooth or Near -Field Commun ications (NFC). Its also important to consider the \nsecurity profiles of the devices and the difference between devices under enterprise \nmanagement and monitoring, devices managed by a different organization, and \npersonal, unmanaged devices, especially regarding software solutions.  \n \nAlso consider the different support needed for operating environments. In operating \nenvironments with shared workstations, portable authenticators would probably be most \nappropriate verses software authenticators tied to a specific device. Additionally, in \noperating environments that have users with managed mobile devices, the iOS and Android platforms both provide built- in authentication capabilities using the FIDO standards and \nnumerous other vendors offer authenticator applications that could meet your MFA needs without buying additional hardware. However, i f there are high -security environments \nsuch as research facilities where electronic devices are not admitted, smartphone- based \nauthenticators would not be appropriate. \n \n \n21 https://media.defense.gov/2019/Sep/09/2002180346/ -1/-1/0/Transition%20to%20Multi-\nfactor%20Authentication%20 -%20Copy.pdf. \n22https://www.cisa.gov/sites/default/files/publications/CISA_CEG_Implementing_Strong_Authentication_50\n8_1.pdf. \n\nIdentity and Access Management: Recommended Best Practices for Administrators  19 \n \nIt is important to note that organizations  may  find that a single MFA solution cannot \naccommodate all their needs, especially if managing access for external users. Deploying \ndifferent MFA solutions for different groups  of users may be required. This is a situation \nwhere ID Federation/SSO will be important.  \n \nEvaluate Assurance Requirements  \nSome use cases, applications, or data types may require higher -assurance authentication \nthan others. For example, privileged  users with operating system or database \nadministration rights should have strong, phishing -resistant authentication. The use of \nseparate user -level and administrative accounts and credentials for individuals with \nprivileged access and Privileged Access Management (PAM) systems that provide auditing \nof privileged access use are additional best practices for managing privileged access that can be deployed in conjunction with MFA. PAM may also provide work -flow management \nand be a credential proxy for systems that dont support the selected MFA. Other high -risk \nroles or functions may also require special protections if they involve management of high -\nvalue assets or critically sensitive information.  \n \nFor reference, NIST SP  800- 63-3 provides guidelines for performing a risk assessment to \nguide selection and implementation of identity and authentication systems, including MFA. \nAlso consider any regulatory or compliance mandates applicable to your organization, which may include requirements that are relevant to MFA solutions, such as  the use of \nFederal Information Protection Standards (FIPS) 140 -3 validated cryptography  or FIPS 201 \n(PIV) . \n \nEvaluate Privacy and Operational Considerations \nMany MFA solutions incorporate biometric authentication of the user, which can raise \nconcerns over privacy. The biometric authentication solutions in most widespread use today, such as  the facial recognition and fingerprint unlock mechanisms built into \nsmartphones, keep biometric templates in hardware- protected storage and are designed to \nprevent the removal of biometric data from the device. When these systems are used to authenticate to systems and services, the biometric matching occurs locally on the mobile device, and successful authentication unlocks a private key that is then used in the actual \nauthentication protocol carried out over the network. These types of protections are \nrequirements for FIDO -certified devices. Using solutions that bind biometrics templates to \na single device, instead of storing them in a central database, may help alleviate privacy concerns.  \n \nEquity across demographic groups is another potential issue with biometrics; some \nbiometric solutions perform differently for individuals of different ages, genders, and/or ethnicities. Pilot testing with a representative cross -section of your user base can help \nidentify any potential issues. Aspects of your users operating environment may also impact \nthe suitability of specific biometric modalities; the use of gloves or masks, for example, may \npreclude facial or fingerprint authentication.  \n \n\nIdentity and Access Management: Recommended Best Practices for Administrators  20 \n \nImplementing MFA  \nThe following are some best practices and considerations when embarking on an MFA \nimplementation.  \n Implement MFA as part of an enterprise SSO solution . Integrating MFA with all of an \norganizations applications can be a daunting prospect; its also not the best way to go about an MFA implementation. MFA integration is complex, and small mistakes can lead to issues like the ability for attackers to bypass MFA. This is a job for experienced IAM practitioners and vendors, not an additional -duty -as-assigned for application developers. \nAlso, allowing individual applications and projects to choose their own MFA solutions leads to a complex environment where users need to manage multiple authenticators to access all the applications they need. Having multiple MFA infrastructures also expands the attack surface and complicates maintenance.  \n Instead, as discussed in the previous section, MFA should be integrated into an enterprise authentication and SSO service that uses industry -standard, tested and proven protocols, \nlike SAML, or OpenID Connect and OAuth 2.0, to connect with your applications. A single, \ncentralized authentication service is simpler to test, secure, and maintain than several \nindependent application- level implementations. In addition, a centralized SSO system can \nenable enterprise risk -based authentication polic ies to selectively require MFA. When a \nuser has an active session with the SSO service, policies can determine whether they need \nto authenticate again when accessing additional applications. Policies can trigger the need \nto re -authenticate or perform step -up authentication (i.e., requiring higher -assurance \nauthentication than was used to initially establish a users session) when users access sensitive applications or perform high -risk activities. This provides the flexibility to require \nhigh assurance when needed without frustrating users engaged in routine, low -risk tasks \nwith repeated MFA prompts. It also provides an integration point for Zero Trust Architecture (ZTA) policies such as requiring re- authentication or step -up based on risk \nsignals from threat defense systems.  \n \nConsider the total account and authenticator lifecycle, and exception processes . \nProcuring an MFA system and enrolling users  is only the beginning of the process. Its \nimportant to consider all the needed workflows for authenticator lifecycle management \nand how edge cases and failure scenarios will be handled. Initial MFA enrollment (or \nissuance, in the case of hardware authenticators) process must provide adequate assurance \nthat the authorized user is enrolled in the MFA system. Consider the use of multiple communication channels to provide additional assurance. F or example, if a hardware token \nis physically mailed to a user, require additional authentication (e.g., with their password \nor a one -time secret provided out- of-band) as part of the enrollment process.  \n \nMaintain an inventory of the authenticators deployed in your environment.  \nVulnerabilities may be discovered in both software and hardware authenticators, so its critical to be able to identify authenticators in need of replacement or upgrade. Pay \nattention to vendor announcements and support lifecycles, and plan well in advance for \nany end -of-life authenticator solutions in need of replacement. For mobile authenticator \n\nIdentity and Access Management: Recommended Best Practices for Administrators  21 \n \napps, consider your device refresh period and how users will enroll a new device. Also have \na response plan for lost or stolen authenticators or devices to rapidly disable the lost authenticator and enable the user to enroll a new one. This can be one of the most \nchallenging aspects to manage  if a user can enroll a new MFA authenticator using their \npassword alone, this severely undermines the security of your MFA solution. A best practice, particularly in passwordless environments, is to issue multiple strong authenticators to each user, perhaps with one kept in reserve in a secure location to allow \naccess and enrollment of a new authenticator in case the primary authenticator is lost. A \nsimpler solution is using backup one- time codes, kept in secure storage by the user.  \n Routinely test and rapidly patch your MFA infrastructure. This is good advice for any \nsystem or application, but it is especially critical for MFA and other authentication \ninfrastructure. Promptly test and install any vendor security patches. Routinely test your registration and authentication flows, especially when changes are made to your infrastructure.  \n Realize that MFA is not the only solution required for securing iden tities and access. \nMFA is a critical security control, but it is only one component of securing access to your systems and applications. MFA (and SSO) enable users to establish a session with an application, but the application must implement secure session management with timeouts \nfor inactivity and maximum session lifetimes. Applications and client devices must protect \ncookies and tokens that can allow impersonation of the user if stolen. MFA cannot prevent malware on client devices from capturing users credentials or application data. Its important to understand that while MFA addresses some of the most common threats, MFA \nshould be part of a holistic cybersecurity architecture.  \n \nActions to Take Now  \n \n Determine the MFA solution best suited in your organi zations operating \nenvironment.  \n Implement MFA as part of an enterprise SSO solution.  \n Maintain a robust inventory of the MFA authenticators deployed in your \norganizations operating environment. \n Routinely test and patch your organizations MFA infrastructu re. \n \nSummary  \nMFA can provide strong protection against many of the most prevalent attacks against authentication systems. Careful planning will help ensure that your MFA implementation \nmeets your organizations needs and provides both security and usability. As with any \nenduring capability, its important to consider the full lifecycle management of MFA authenticators and infrastructure. Integrating MFA with an enterprise SSO system is essential to facilitate application adoption and enable a coherent enterprise authentication \npolicy.  \n \n\nIdentity and Access Management: Recommended Best Practices for Administrators  22 \n \nIAM Auditing and Monitoring  \n \nIAM auditing and monitoring should not only check for compliance , but also monitor for \nthreat indicators and anomalou s activities . This encompasses  the generation , collection , \nand analysis of logs , events,  and other information to provide the best means of detecting  \ncompliance related infractions and suspicious activities . Attacks such as use of stolen \ncredentials and misuse of privileged access by insiders would not be detected in a timely \nmanner, if at all, without an effective IAM auditing and monitoring program.  These auditing \nand monitoring capabilit ies can be integrated with automated tools that orchestrate \nresponse actions to counter these IAM attacks. Effective reporting from auditing and \nmonitoring also provide  situational awareness of the security posture of an organizations \nIAM.  \n \nWhat it Does  \nIAM auditing and monitoring:  \n \n Provides deterrent to users  especially privileged users  who  know their actions are \nbeing tracked ; \n Provides awareness of how system is being used and attempted to be misused ; \n Detects problems and potential problems  through indi cators of attack/compromise \nand changes in behavior ; and  \n Collects forensic evidence which also supports evaluation of effectiveness leading to \nimprovements in capabilities . \n \nWhy it Matters  \nThere are many types of threats that IAM auditing  and monitoring can counter  but they \ntend to fall into one of two buckets; insider threat and unauthorized access. Insider threats range from  authorized using their privileges to perform inappropriate actions (e.g.  \ndownloading a list of current customers) to administrators seeking to cause harm to the \norganization, to former  employees whose access was not turned off .  For example, in \nSeptember 2022, a n individual working as a cybersecurity professional in a Hawaiian-\nbased financial company , pled guilty and admitted that, after severing ties with the \ncompany, he utilized the credentials of his former employer to gain access to the companys website configuration settings and purposefully misdirected web and email traf fic to \ncomputers unaffiliated with the company  incapacitating  the companys website and \nemail.\n23 IAM auditing and monitoring could have potentially prevented this by allowing the \nsystem to remove the users access upon separation from the company.   \n \nUnauthorized access  can occur when external systems or users with lower assurance (i.e. \nweaker authentication) inappropriately gains access to an organizations system and data. Further, exploitation of vulnerabilities in security protocols, cryptographic algorithms, \nand/or third -party programs could also lead to unauthorized access.  Additionally, \n \n23 https://www.justice.gov/usao- hi/pr/honolulu -man -pleads -guilty -sabotaging -former -employer -s-\ncomputer -network.  \n\nIdentity and Access Management: Recommended Best Practices for Administrators  23 \n \nunauthorized access can occur with the theft or hijacking of a legitimate users credentials \nto attack an organizations system with the stolen or hijacked credentials.   In this instance,  \nthe impostors behavior and actions will likely be different from the normal behavior of the \nlegitimate user and can lead to detection of the identity theft.   The legitimate user may also \nreceive notifications of log in failures or other activity that they did not perform and can \nprovide out of band information to help detect the impostor.  \n \nPreparation for Implementing Best Practice  \nBelow are key considerations for  assessing an organizations auditing and monitoring \ncapability  to determine which improvements are necessary to counter top threats.  It is \nimportant to note that this is not a one- time assessment. Assessments should be made \nperiodically,  and capabilities updated in order to meet changing needs and be better \npostured  to counter new threats . \n \n Organization defines and understand s what is  considered normal /acceptable \nbehavior, suspect behavior, and misbehavior . \n Organization uses defined and de- facto policy rules, requirements/models of \nsystems, and baselines of current activity  to identify monitoring and analysis \nparameters . \n Organization identifies users with access to critical assets  (e.g., crown jewels)  and \nfocuses enhanced monitoring on critical assets (proprietary information, systems mission critical); Identify, prioritize assets).  \n Collect data including standard logs /audit records , and security events  as well as \nother data about the user s, systems, a pplications, and network behavior s.  U se the \ncollected data for real -time detection and alerting, storage for forensic use, \nbaselining of current behavior, analysis to detect trends , and indications of \nanomalous behavior .  \n Behavioral analytics will require an initial period (and ongoing updates) of collection and analysis to establish baselines and thresholds.  This should address normal day, busy day, and emergency situation baselines.  \n Avoid collect ion and analysis that does not provide useful information such a large \nnumber  of unprioritized alerts that require human analysis since this  is a waste of \nsystems and human resources and will not achieve better cybersecurity. Collecting and analyzing data that provide s actionable information to your staff and \nmanagement to raise security  awareness  and can support the business case for \nadditional funding to improving your IAM auditing and monitoring capabilities.   \n Determine the appropriate tools and capabilities to effectively derive information from the collected data.  Consider what data formats and content can be processed, configurability, scalability, growth capability to provide or interface with other systems and capabilities .  For example, a SIEM tool that can accommodate SOAR \ncapability or one that can work with advanced analytic tools including machine learning .  \n The tools and capabilities should match and best augment your staff skills and availability. Manual review of logs or of overly detailed or too frequent tool outputs will not be effective.  If your current tools are at the basic SIEM level, focus on \n\nIdentity and Access Management: Recommended Best Practices for Administrators  24 \n \nconfiguring them to alert on your most critical events and provide the most \npertinent info to staff.  Organizations with more sophisticated capabilities should start looking for anomalous behavior and developing procedures on how to deal \nwith potential insider threats . For example, when to shut them down immediately \nversus when to steer them to honeypots and collect more forensics evidence.   \n \nInitiatives such as the Defense Advanced Research Projects Agencys ( DARPA) Anomaly \nDetection at Multiple Scales ( ADAMS ) Project\n24 provide valuable information for \norganizations to use as a starting point when attempting to identify and remediate insider \nthreats.  The project developed a n Anomaly Detection Engine for Networks (ADEN) to \ndetect malicious users and characterize anomalous behavior typical of malicious users, to  \nsupport improved prediction- based actionable intelligence and response.  While only a \nsmall percentage of anomalous behavior was associated with malicious users, the project did highlight several key findings associated with behavior of malicious users, including:  \n \n Malicious users were more active and chose to do nothing significantly less times \nthan benign users.  \n Malicious users fetched significantly more sensitive information than benign users.  \n Though malicious users appeared to save more data to removable devices than benign users, these differences were not found to be statistically significant in our study.  \n Malicious users edited the data slightly less compared to benign players users. However, these differences also were not found be statistically significant.  \n Malicious users sent significantly more information out of the organization than benign users.  \n Malicious users fetched significantly less un- sensitive data in contrast to the benign \nplayers.  \n \nActions to Take Now  \n Establish baseline expectations of activity levels and policy and monitor privileged user behavior for both acceptable and sus picious  activity.  Avoid automatic response \nactions to suspicious behavior that could be important and legitimate ( e.g. system \nadministrator that flags as unusual activity due to logging in from a remote location on a weekend however could be responding to an emergency network problem).  Include manual procedures to confirm the legitimacy of these actions before determining how to respond. For example,  if the activity includes setting up new \naccounts or changing privileges a first step would be to determine if there are indications that this may be a malicious insider attack versus preparing for the startup  of a new program.  \n Monitor general user behaviors in both good and bad terms such as how many successful access attempts versus unsuccessful, what hours typically worked, whether remote access allowed, what systems accessed and amounts of data \ndownloaded.   \n \n24 https://www.darpa.mil/program/anomaly -detection -at-multiple -scales.  \n\nIdentity and Access Management: Recommended Best Practices for Administrators 25 \nMonitor activity between applications and systems and associated network traffic\nfor changes in connectivity, level of activity, and types of data.  If an attacker isattempting to move laterally within your network, this may include accesses andtraffic that are unusual.\nMonitor external traffic that may include new interactions with previously unknownsites or different types and levels of interactions.  Remember that data exfiltrationattacks may be low and slow so a change may be small , but ongoing . Be careful to\nnot include this in an accepted baseline of activity.\nSummary  \nOrganizations  will need to be able to monitor for anomalous behavior (in addition to \ntraditional security events and logs) to detect the various threats to IAM systems that are present and potentially harmful. An initial  assessment should be performed to understand \ncurrent capabilities with a  plan to improve an organizations capability to collect, analyze, \ndetect, and respond to indicators of attack and compromise.  \nConclusi on \nAmericas critical infrastructure is a prime target for a broad spectrum of threat sources \nincluding advanced and ongoing attacks from nation state and terrorist organizations \nattacks. These threats are real, ongoing, and evolving and the cybersecurity community is \nespecially concerned about certain credible threats to IAM and SSO.  IAM weaknesses are \nfrequently exploited in the most insidious threats, APTs, which have led to catastrophic \ndata breaches.   The use of SSO without a good MFA foundation and secure design \nselections, exacerbates the damage of attacks that an organization may be vulnerable to \nsuch as password cracking and authenticator hijacking.    \nThe intent of this paper was to provide a clear understanding of how various mitigations \ncounter the threats and to provide actionable recommendations on what organizations  \nshould do now.  This includes:  \nAssess your current IAM capabilities and risk posture.\nFor areas that need improvement:  select, layer, integrate, and properly configure\nsecure solutions following the best practices provided herein and in referenced\nguidance.\nMaintain the appropriate level of security to manage risk during continued\noperations.\nMaintain awareness  of correct IAM usage and of risks .\nUltimately every organization has the obligation to ensure their  IAM and SSO capabilities \nare secure to protect not only their  own assets but that of their partners and consumers as \n\nIdentity and Access Management: Recommended Best Practices for Administrators  26 \n \nAppendix I: Actions to Take Now  Checklist  \n \nEnvironmental Hardening  \n Take an inventory of all assets within the organization. If there is something missing, or \nif there are additional assets that are unknown, determine the cause of the discrepancy.  \n \n Identify all the local identities on the assets in order to know who has access to which \nassets. \n \n Understand what security controls are in the enterprise environment now and what \nsecurity gaps persist in an organizations enterprise environment.  \n \n Develop a network traffic baseline that can be used to detect security anomalies in the network. Any compromise to any component in a network has the potential to threaten \nmore critical enterprise systems, including IAM.  \n \nIdentity Federation/Single Sign -On \n Assess your organizations internal on- premises applications/devices/platforms and \nyour cloud pr oviders ability to connect using single sign- on. \n \n Determine if your single sign- on integration can collect user context during single sign-\non logins including location, device, and behavior.  \n \nMulti- Factor Authentication  \n Determine the MFA solution best suited in your organizations operating environment.  \nImplement MFA as part of an enterprise SSO solution.  \n \n Maintain a robust inventory of the MFA authenticators deployed in your organizations \noperating environment.  \n \n Routinely test and patch your organizations MFA infrastructure.  \n \nIAM Auditing and Monitoring  \n Establish baseline expectations of activity levels and policy and monitor privileged user \nbehavior for both acceptable and suspicious activity.  Avoid automatic response actions to \nsuspicious behavior that could be important and legitimate (e.g. system administrator that flags as unusual activity due to logging in from a remote location on a weekend however could be responding to an emergency network problem).  Include manual procedures to confirm the legitimacy of these actions before determining how to respond. For example, if \nthe activity includes setting up new accounts or changing privileges a first step would be to \ndetermine if there are indications that this  may be a malicious insider attack versus \npreparing for the startup of a new program.  \n\nIdentity and Access Management: Recommended Best Practices for Administrators  27 \n \n Monitor general user behaviors in both good and bad terms such as how many \nsuccessful access attempts versus unsuccessful, what hours typically worked, whether \nremote access allowed, what systems accessed and amounts of data downloaded.   \n \n Monitor activity between applications and systems and associated network traffic for \nchanges in connectivity, level of activity, and types of data.  If an attacker is attempting to \nmove laterally within your network, this may include accesses and traffic that are unusual.  \n \n Monitor external traffic that may include new interactions with previously unknown \nsites or different types and levels of interactions.  Remember that data exfiltration attacks \nmay be low and slow so a change may be small , but ongoing . Be careful to not include this \nin an accepted baseline of activity.  \n\n",
  "cves": [],
  "techniques": [],
  "advisory": "cybersecurity-alerts",
  "title": "esf identity and access management recommended best practices for administrators pp-23-0248_508c",
  "source": "nsa",
  "id": "89aee28ae6dc93ecaffafdbd07cf6e6c3d2688a054aa80c51445a6ec09e649c3"
}