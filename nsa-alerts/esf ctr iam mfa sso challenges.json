{
  "markdown": " \n \n  \n\n\nIdentity and Access Management: Developer and Vendor Challenges  i  \n \n \nDISCLAIMER  \n \nDISCLAIMER OF ENDORSEMENT  \n \nThis document was written for general informational purposes only.  It is intended to apply \nto a variety of factual circumstances and industry stakeholders, and the information \nprovided herein is advisory in nature. The guidance in this document is provided as is: \nOnce published, the information within may not constitute the most up-to-date guidance or \ntechnical information. Accordingly, the document does not, and is not intended to, \nconstitute compliance or legal advice. Readers should confer with their respective advisors \nand subject matter experts to obtain advice based on their individual circumstances. In no \nevent shall the United States Government be liable for any damages arising in any way out \nof the use of or reliance on this guidance. \n \nReference herein to any specific commercial product, process, or service by trade name, \ntrademark, manufacturer, or otherwise, does not constitute or imply its endorsement, \nrecommendation, or favoring by the United States Government, and this guidance shall not \nbe used for advertising or product endorsement purposes. All trademarks are the property \nof their respective owners. \n \nPURPOSE \n \nThe National Security Agency (NSA) and the Cybersecurity and Infrastructure Security \nAgency (CISA) developed this document in furtherance of their respective cybersecurity \nmissions, including their responsibilities to develop and issue cybersecurity \nrecommendations and mitigations.  This information may be shared broadly to reach all \nappropriate stakeholders. \n \nCONTACT \n \nClient Requirements/Inquiries:  Enduring Security Framework nsaesf@cyber.nsa.gov . \n \nMedia Inquiries / Press Desk: \n NSA Media Relations, 443-634-0721, MediaRelations@nsa.gov  \n CISA Media Relations, 703-235-2010, CISAMedia@cisa.dhs.gov  \n \n \n  \n\nIdentity and Access Management: Developer and Vendor Challenges  ii  \n \n \nContents \nExecutive Summary.............................................................................................................................................. 1  \nIntroduction ............................................................................................................................................................ 1  \nScope .......................................................................................................................................................................... 2  \nKey Challenges ....................................................................................................................................................... 2  \nMulti-Factor Authentication ......................................................................................................................... 2 \nMFA Definitional and Policy Challenges .............................................................................................. 2 \nMFA Adoption Challenges ......................................................................................................................... 3 \nMFA Sustainment and Governance Challenges ................................................................................ 4 \nSSO and Identity Federation ......................................................................................................................... 5 \nComplexity and Usability Challenges ................................................................................................... 6 \nStandards Improvement Opportunities .............................................................................................. 7 \nEcosystem Challenges................................................................................................................................. 8 \nConclusions ............................................................................................................................................................. 9  \nAppendix I: Key Recommendations for Vendors ...................................................................................... 1  \n \n  \n\nIdentity and Access Management: Developer and Vendor Challenges  1  \n \n \nExecutive Summary \nSince the introduction of multi-user computer systems, user authentication has primarily \nrelied on the use of usernames and passwords. To strengthen the authentication process, \nMulti-Factor Authentication (MFA) requires the user to present multiple elements in \ndifferent categories, or factors, as part of an authentication attempt. These factors are \nsomething you have, something you know, and something you are. Similarly, Single Sign-On \n(SSO) provides a risk mitigation capability by centralizing the management and control of \nauthentication and access across multiple systems and from multiple identity providers. \nImplemented properly, it can raise the authentication assurance level required for initial \nsign on and can control and secure the authentication and authorization information \npassed between systems.  \nFollowing on the work the Enduring Security Framework (ESF) published on identity and \naccess management (IAM) best practices for administrators, targeted for administrators to \nmake the best use of existing solutions, a working panel staffed by subject matter experts \nfrom both government and industry was tasked with assessing developer and vendor \nchallenges relating to IAM. The working panel specifically identified the adoption and \nsecure employment of MFA and SSO technologies as a key developer and vendor challenge \nthat has been difficult to meet with the technology that is currently available.   \nIntroduction \n \nSuccessful implementation of IAM in an organization involves both technology and \nprocesses; successful implementation of secure IAM capabilities depends on the vendor \ncommunity to provide solutions to achieve secure outcomes. One key factor the vendor \ncommunity must be cognizant of is the interoperability of IAM solutions since no single \nvendor can solve all IAM challenges an organization may face. Only by working together \ncan these solutions enable successful and secure outcomes. IAM solutions must enable an \norganizations staff to distinguish legitimate users conducting the organizations mission \nfrom unauthorized entities attempting to access the infrastructure while also support a \ntimely and effective response to indicators of compromise. Malicious actors are \nopportunistic and will attempt to impersonate, influence, or exploit legitimate entities to \nmake this distinction harder, and they will take advantage of gaps in the ability to manage \nthe entities and their accesses. \nThis document focuses on technical gaps and challenges related to adoption and secure \nemployment of MFA and SSO technology. The expectation is to enable developers and \nintegrators to refine their existing tools to address the gaps and, if necessary, develop new \ntools to address the challenges for their products and solutions. Further, this paper also \ntouches on, to some degree, key non-technical challenges such as cost, staffing, and user \nexperience impacts of employing these technologies. \n\nIdentity and Access Management: Developer and Vendor Challenges  2  \n \n \nScope \nWhile the working group recognizes the broad scope of the challenges relating to MFA and \nSSO, this paper specifically addresses challenges that are informed by an understanding of \nthreats in the IAM space that are actively being exploited by adversaries. This paper is \ntargeted at the challenges facing sophisticated organizations with substantial resources \nand high-end adversaries, though it also touches on some challenges (e.g., cost or ease of \nimplementation) that inhibit less sophisticated organizations defending against more \nrudimentary adversaries. \nKey Challenges \n \nMulti-Factor Authentication \nMFA is widely recognized as one, if not the most, important preventative security controls \navailable today. It provides a strong defense against various adversarial attack techniques \nsuch as password spraying1, compromised password reuse2, andin some instances\nphishing3. However, a key challenge is that it is notoriously difficult to deploy and many \norganizations, small and large, still have not done so even if they recognize the value. In this \nsection, we will focus on three types of challenges related to MFA implementation: \ndefinitional and policy challenges in the vendor community, deployment and adoption \nrelated challenges, and sustainment and governance related challenges. \nMFA Definitional and Policy Challenges \nMFA deployment is notoriously difficult for many organizations. One reason is due to \nconfusing definitions and unclear policy around different variations of MFA. Indeed, \norganizations often turn to forms of MFA believed to be easy to deploy, such as those based \non short messaging service (SMS), without careful evaluation of the relative security \ndifferences between MFA options. There is a need for clarity, interoperability, and \nstandardization amongst MFA variations to allow organizations to make value comparisons \nand to integrate these solutions into their environment. This starts with basic steps such as \nusing common terminology; terms like 2-step verification, two-factor authentication, \nand multi-factor authentication are all widely used to describe similar capabilities. \nAlthough in some cases there are subtle technical differences between various market \nterms, the confusion on terminology across the vendor community makes it difficult to \narticulate best practices for organizations to follow. Furthermore, organizations with a \ndesire, or mandate, for MFA often dont know what types of authentication mechanisms are \navailable in a particular identity solution, if the MFA solution is compatible with their \nexisting systems, or if potential new IAM solutions are compatible with the MFA they \nalready have. It is incumbent upon the IAM vendor community to work together to agree \non terminology standardization when discussing MFA to avoid confusion amongst \n \n1 https://www.splunk.com/en_us/blog/learn/password-spraying.html. \n2 https://www.keepersecurity.com/blog/2023/05/08/2fa-vs-mfa-whats-the-difference/. \n3 https://www.crowdstrike.com/cybersecurity-101/phishing/.  \n\nIdentity and Access Management: Developer and Vendor Challenges  3  \n \n \norganizations making the decision to implement MFA within their respective. An \narchitectures related problem is that generic vendor terminology such as push \nnotification does not map cleanly to technical security properties such as those articulated \nby the National Institute of Standards and Technology (NIST) Special Publication (SP) 800-\n63,4 Digital Identity Guidelines . In the context of government systems, self-validation \ninstructions are being developed by federal Identity, Credential, and Access Management \n(ICAM) groups.5 However, vendors have not yet consistently documented the mapping of \ntheir products to NIST requirements and organizations have little evidence on which to \nevaluate the mappings that vendors do produce.  \nA second problem impeding adoption of MFA is the lack of clarity regarding the security \nproperties that certain implementations provide. In SP 800-63, NIST articulates a set of \nAuthenticator Assurance Levels (AALs) as one way of classifying the relative strength of \nauthenticators based on the security properties that they provide.6 According to NIST, MFA \nis required at AAL2 and AAL3. At its core, MFA seeks to address two classes of threat: \nthose related to password reuse and compromise, and those related to adversarial use of \nphishing.  \nAll forms of MFA provide some protection against password reuse and compromise, though \nwith differing levels of security. For example, SMS-based MFA is vulnerable to a variety of \nattacks that may expose the one-time code to threat actors and is considered among the \nleast secure MFA options. Other forms of MFA, using separate hardware storage (whether \non a physically separate device or a separated embedded hardware module), are highly \nresistant to the extraction of the secret key. In addition to attacks related to password \nreuse and compromise, some forms of MFA are resistant to phishing attacks. For example, \nthe more sophisticated phishing attacks, are capable of intercepting one-time codes in real \ntime and relaying them to the system to which the user is attempting to authenticate. \nHowever, some types of MFA, such as those based on public key infrastructure (PKI) or \nFIDO2,7 are resistant to such phishing attacks through the cryptographic binding of \nauthentication to either the session with or identity of the system verifying the credential. \nVendors have a real opportunity to lead the industry and build trust with product \nconsumers with additional investments to bring such phishing-resistant authenticators to \nmore use cases, as well as simplifying and further standardizing their adoption, including in \nform factors embedded into operating systems, would greatly enhance the market.   \nMFA Adoption Challenges \nIn addition to areas where vendors could aid in defining and articulating MFA security \nproperties, vendors could also help advance other MFA deployment issues within large and \n \n4 https://pages.nist.gov/800-63-3/. \n5 https://www.cisa.gov/safecom/icam. \n6 The current version of SP 800-63 is Revision 3, although a draft of Revision 4 is out for public comment. A \ncopy of Revision 4 can be found here: https://pages.nist.gov/800-63-4/. \n77 https://fidoalliance.org/fido2/.  \n\nIdentity and Access Management: Developer and Vendor Challenges  4  \n \n \ncomplex organizations. One such issue is support for the strongest forms of MFA, such as \nthose based on PKI and FIDO2 standards, in vendor products. Most IAM vendors offering \nSSO products support both PKI and FIDO2 authentication, but some do not. And even \nwhere such support exists, it is often incomplete. For example, PKI may not be treated as a \nmultifactor authenticator within authentication policy because it is an authenticator that \nprovides multiple factors due to the way its cryptographic keys are unlocked. Similarly, \nrestrictions may exist on the types of FIDO2 authenticators that can be registered (e.g. \nthose with exportable keys, those embedded in platforms, those using server side key \nstorage) and the ability to define policy based on attestation may be lacking. Such \nenterprise features are critical to adoption. In the case of both FIDO2 and PKI, support on \nclient platforms is also inconsistent. For example, iOS and Android phones/operating \nsystems both support FIDO2 and PKI (enrolled through Mobile Device Management), but \nmay not support all required security or protocol versions (e.g. device bound FIDO2 keys, \nkey storage in embedded hardware modules, or external tokens). Additional vendor \ninvestment in supporting high assurance MFA implementations for enterprise use on both \nmobile and desktop platforms in a maximally user-friendly flow would substantially aid in \nMFA adoption by organizations of all sizes. \nThese same ease of use challenges also apply to configuring systems such as SSO providers \nto consume MFA. An often-bewildering list of options is available to be combined in \ncomplicated ways to support diverse requirements. Vendors could offer a set of pre-\ndefined default configurations, that are pre-validated end to end for defined use cases. For \nexample, a flow designed around the use of PKI and FIDO2 for maximum security or a flow \ndefined around the use of mobile push applications with number matching for supporting \nbusiness to business use cases from unknown platforms where stronger forms of MFA are \nnot currently possible. Diverse requirements do require the ability to tweak detailed \nconfiguration options but offering safe and secure default paths that are well validated end \nto end is also critical. \nMFA Sustainment and Governance Challenges \nThe final category of MFA related challenges addressed in this paper is governance and \nsustainment of MFA over time as employees join and leave the organization. All types of \nauthentication credentials  including passwords  must be directly associated to user \nidentities and their directory accounts. Robust management of this process, which is often \ncalled credential lifecycle management, is often lacking in available MFA solutions. PKI-\nbased MFA has a robust ecosystem of tools developed to register and issue PKI credentials, \nlink them to accounts in a federated manner, and manage the revocation of credentials \nwhen they are either compromised or users are unenrolled, or both. However, many other \ntypes of MFA rely on user self-enrollment and some type of one time enrollment code \nflow which is itself a potential target of threat actors. Such flows often require the \ndevelopment of custom tools by organizations to align them with their business processes. \nThe properties of these one-off flows vary widely and may be vulnerable to certain types of \nattacks that can compromise user credentials.  \n\nIdentity and Access Management: Developer and Vendor Challenges  5  \n \n \nThere is room for the IAM vendor community to develop more secure enrollment tooling to \nsupport the more complex provisioning needs of large organizations. For example, \norganizations may need to be able to enroll a user with an authenticator on one network \nwhile allowing them access to systems on a separate network. Along similar lines, tools for \nautomatically discovering and purging enrolled MFA authenticators that have not been \nused in a particular period, or whose usage deviates from the expected behavior of a user, \ncould be enhanced. Many of the approaches that are currently used to analyze user \nbehavior to determine sign-on and account-level risk could be enhanced to better support \ngovernance of MFA authenticators. This is important because strong governance over MFA \nauthenticator lifecycle enables higher trust to be placed in the use of MFA when it is \nemployed. \nFor FIDO authenticators in particular, further enhancements are necessary to support \nattestation in the enterprise context. For example, the ability to determine that an \nauthenticator was issued to a particular organization or person should be supported as a \nfirst-class capability in the market by IAM vendors. There is tension between FIDOs \nprivacy preservation properties and the desire of enterprises to track and manage \nauthenticator registration. Enterprise attestation and registration of FIDO tokens to SSO \nproviders can provide a way to navigate this tradeoff, but further refinement of the flows \nand support in the ecosystem is required to reach the necessary enterprise experience. \nSSO and Identity Federation \nIdentity Federation and SSO are critical security capabilities. By SSO, we mean a situation \nwhere an identity provider (IdP) within an organization authenticates a user and then \nconveys proof of that authentication to a series of applications  called relying parties (RPs) \n typically without requiring the user to re-authenticate for each application. SSO is built on \ntop of identity federation protocols such as security assertion markup language (SAML) or \nOpen ID Connect (OIDC) that specify how authentication may be conveyed from the IdP to \nthe RPs. These capabilities are critical for security because they make more advanced \nauthentication, such as multi-factor authentication, or contextual authentication policies8,a \nproblem to be solved once within an organization rather than handled differently for each \napplication. However, to do this, they concentrate risk into the IdP as the source of trust for \nauthentication to a swath of applications. This trade-off is typically worth it due to the \npreviously mentioned benefits, but vendors developing SSO technologies need to design \ntheir systems to the highest of security standards given their critical role in securing the \nenterprise. There are numerous challenges we have identified that could be addressed by \nIAM vendors as well as the vendors of RP systems. The following types of challenges will be \naddressed below: complexity and usability challenges, standards improvement \nopportunities, and ecosystem challenges. \n \n8 Contextual authentication policies factors in variables such as user behavior, device used, geographical \nlocation, and controls access based to determine access.  \n\nIdentity and Access Management: Developer and Vendor Challenges  6  \n \n \nComplexity and Usability Challenges \nFirst, there is still a significant tradeoff between functionality and complexity. \nOrganizations can choose streamlined IdPs with simplified configurations that arent able \nto support all the use cases that they may face, or they may deploy sophisticated tooling \nthat requires significant numbers of highly skilled personnel to operate in a secure way. \nFor many organizations, this is a difficult tradeoff that results in the deployment of SSO \ntechnology that is impossible to securely manage, undermining the security benefits of SSO. \nFor example, it is critical to maintain the security of the key material used in identity \nfederation protocols. Doing so may require the deployment of dedicated hardware security \nmodules (HSM) and robust operational practices as well as significant amounts of skilled \npersonnel to successfully integrate and sustain such systems. Choosing instead to store \nkeys less securely (i.e. on disk) opens the door to adversaries compromising the keys and \nthus gaining access to systems across the enterprise. The growth of cloud-based identity \ntools delivered as software-as-a-service (SaaS) has eased the burden of deploying SSO \nsignificantly for organizations of various sizes, but such tools are not available to all market \nsegments (e.g., operational technology (OT)) or OT networks in critical infrastructure. \nThere is room for the development of a secure-by-default, easy to use, SSO system to \naddress these gaps in the market. RP vendors could provide security configuration \nrecommendations and their impacts. For example, the management of lifetime tokens such \nas ID tokens, Access Tokens, and Refresh Tokens should come with a reasonable secure \ndefault value which prevents wider abuse scenarios. It would allow the business to reduce \nthe risk while providing a seamless user experience to restricted resources. \nSecond, tooling for understanding trust relationships and the impact to changes in the \nconfiguration could be improved.  Changes to identity configurations often have \norganization-wide impact and thus need to be carefully controlled and managed. For \nexample, a known threat vector for exploiting identity federation leverages compromising \nan on-premises IdP and pivoting to administrative accounts in the cloud that trust the on-\npremises IdP. Such identity federations are often set up unintentionally and could be \nautomatically detected by IAM vendors by correlating data between the RP and the IdP. \nSimilarly, identity federation protocols, such as SAML, support a variety of different \nconfiguration profiles. Some uses of SAML are known to be less secure than others. IAM \nvendors could aid in the detection of insecure implementations of these protocols and \nwork with the ecosystem to build awareness around these issues as well as improve the \nadoption of the more secure uses of the standards. \nFinally, there is the issue of ensuring SSO can enable secure MFA across all use cases, \nincluding privileged access use cases. As discussed above, the best path to MFA is through \nsupport in an SSO platform. Most SSO platforms in use today, both on-premises and in the \ncloud, support a variety of MFA options. However, there are often accounts that are not \nfederated through SSO. For example, this is frequently true of high-level admin accounts as \nthese accounts need to configure the setup of SSO itself in relying parties. Such accounts are \nattractive targets for threat actors and need to be protected with MFA. Some RPs support \n\nIdentity and Access Management: Developer and Vendor Challenges  7  \n \n \nthe ability to configure the privileged roles for these high-level admins so that they trust \nseparate, dedicated IdPs for privileged access management (PAM), however this \ncapability is not particularly widespread in RPs. Other RPs natively support some level of \nMFA for administrative users, but the types of MFA options available varies and is rarely as \ncomplete as a dedicated SSO platform. \nIn the cloud context, key software as a service (SaaS) vendors should either organically \nsupport a spectrum of MFA options, including phishing resistant MFA options, for their \nadministrative roles or should provide the ability to segregate trust (e.g. a separate \nfederation configuration) for administrative roles. Furthermore, for any break glass \naccounts that are required to configure such trusts or not protected by MFA, RPs should \nensure that these accounts can be protected with best practices, such as being vaulted and \nconfigured to alert on all usage. \nToday, a commonly used pattern is to employ PAM tooling that effectively functions as a \npassword vault (often with one-time use passwords) and a session monitoring tool. Users \nauthenticate to such a tool via SSO and the tool mediates administrative access to \nplatforms. Such solutions ultimately frequently rely on secrets shared between the PAM \ntools and the RP system, including long-lived secrets used to reset the passwords of \nadministrative accounts. There is an opportunity for more robust privileged authentication \nflows that leverage modern federation protocols in a way avoids the need to maintain per-\nuser passwords for administrative users. Wider support in the industry for such \napproaches would reduce the risk of privileged account compromise. \n \nStandards Improvement Opportunities \nOpen standards are a critical part of the identity ecosystem, however, there is room for \nimprovement. This paper focuses on several identity standards topics, but it is not meant to \nbe a comprehensive list of such issues. \nOne example is that there is not yet a universally adopted standard for communicating the \nstrength of MFA between IdPs and RPs. Current standards such as RFC 81769 do not cover \nall use cases and are not adopted by all vendors. Competing standards based on NIST SP \n800-63 are also in use, as are proprietary implementations of these concepts.  \nStandardization of these MFA types would aid in driving adoption of MFA in enterprise \nenvironments, especially in complicated use cases requiring different types of MFA \nstrength for different user populations. Improvements in the terminology and \nunderstanding of the security properties of MFA, as discussed in the previous section, \nwould aid in providing a basis for this type of standard. \n \n9 RFC 8176 - Authentication Method Reference Values RFC 8176 - Authentication Method Reference Values \n(ietf.org).  \n \n\nIdentity and Access Management: Developer and Vendor Challenges  8  \n \n \nA second topic is around the standardization of federation configurations themselves. The \nOpenID foundations FastFederation (FastFed) standard specifies an approach to \nexchanging metadata required by identity federation protocols. Such standards are critical \nfor simplifying and scaling the adoption of SSO technologies and should be supported \nbroadly in the ecosystem. Their continued development and adoption is important to lower \nthe burden to integrating SSO with applications and systems, thus enabling enhanced \nauthentication. \nAnother issue around standards concerns the strength of identity federation assertions \nthemselves. Many identity federation protocols use bearer assertions that are vulnerable to \ntheft and replay. The validity of bearer assertions, which can be significant, can increase \nthis risk. It is important that IAM vendors and RPs carefully consider issues such as \nassertion lifetime, assertion reuse, and assertion scope (e.g. issuer and audience) and \nprovide tools for system owners to easily manage this risk. Furthermore, the use of identity \nfederation protocols such as OAuth2 that leverage direct network back channel between \nthe RP and the IdP rather than simply passing data through the users browser (the front \nchannel) provides some security benefit by avoiding the exposure of a long-term \ncredential to the users browser. Broader support of back-channel federation protocols \nwould thus enhance security. Similarly, efforts such as the IETF OAuth2 DPoP token \nbinding work are important to reduce the risks associated with bearer tokens that can be \nstolen and be reused. Broad industry support for these efforts is important. \nFinally, there are early-stage standards activities around sharing of within-session risk. \nThese protocols (RISC and CAEP) enable identity providers and relying parties to exchange \nsignaling around risk of particular sessions. Broad support for and development of these \nstandards in the enterprise ecosystem will enable a variety of security use cases, ranging \nfrom limiting access to managed devices to quickly revoking access when accounts are \ncompromised. \nEcosystem Challenges \nBeyond complexity and standards, integration of SSO into the enterprise is still often \ndifficult for a variety of reasons. For one, architectures designed for leveraging open \nstandard based SSO together with legacy applications are not always widely understood. \nFor example, in some organizations it is still difficult to integrate applications with an \norganizational IdP due to lack of talent or knowledge of architectural options (e.g. proxy, \napplication server module, managed proxy service, etc.). Many organizations have \ndeveloped robust practices for solving these challenges, but their work is not widely known \noutside of that organization. Community development by the IAM vendor ecosystem of a \nshared, open-source repository of open standards-based modules and patterns to solve \nthese integration challenges would aid in adoption. Some vendors have created such \nrepositories, but they are typically not widely embraced by multiple vendors and \nsometimes leverage proprietary integration points rather than open standards. \n\nIdentity and Access Management: Developer and Vendor Challenges  9  \n \n \nIn addition to these capability gaps, there are several business practices in the market that \nmerit attention. In numerous RP applications, SSO capabilities are bundled with other high \nend enterprise features in such a way to make them inaccessible to small and medium \norganizations. This business practice deprives these organizations of the security benefits \nof MFA and other critical capabilities that come from adoption of SSO and is based on a \nflawed assumption that SSO is an enterprise feature. In todays market, SSO is a table \nstakes feature for organizations of all sizes and should be included in any pricing plans that \nare targeted at business customers, regardless of size. Along a similar vein, when SSO is \nsupported, SAML is often the only supported protocol option. SAML has a number of \nsecurity pitfalls and complexities that require careful configuration to avoid. For similar \nreasons, it is prone to implementation mistakes in RP applications. As discussed in the \nstandards opportunities section, RP vendors should add support for OAuth2 and OIDC as \nan alternative federation protocol. OIDC was designed to fix several of the technical \nproblems with SAML and broader support would aid in reducing security issues related to \nSAML misconfiguration or improper implementation. \nAdditionally, identity lifecycle management through open standards (e.g. SCIM) is still not \nviewed as a core part of the development of business software. Identity vendors often write \ncustom integrations against proprietary APIs to manage the lifecycle of identities in RP \nsystems, if such management is possible at all. Lifecycle management is a critical security \ncapability. For example, it helps to implement the idea of least privilege and aids in \ndetection of unexpected activity such as the creation of an account in a relying system that \nis not associated with a validated identity of the organization. SCIM and related standards \nshould be adopted as table stakes by the RP ecosystem (both SaaS and on-premises \nsoftware). \nConclusions \nThe challenges in the employment of MFA and SSO technologies in enterprise \nenvironments require further work by IAM vendors and further development of RP \napplications. These challenges span the spectrum from developing new product offerings \nto broadly adopting key ongoing standards activities. MFA and SSO are both critical \nsecurity technologies that need to be adopted securely to address key threats all \nenterprises face, but doing so in a secure manner today is more difficult than in the past. \nThrough public-private partnership, this situation can be improved, and the security of all \norganizations further enhanced. \n\nIdentity and Access Management: Developer and Vendor Challenges  1  \n \n \nAppendix I: Key Recommendations for Vendors \nKey Challenge: Ambiguous MFA terminology  \n Recommendations: \n Create standard MFA terminology that provides clear, interoperable, and \nstandardized definitions and policies allowing organizations to make value \ncomparisons and to integrate these solutions into their environment.  \n Map products to NIST requirements such as those articulated in NIST SP 800-\n6310. \nKey Challenge: Lack of clarity on security properties that certain MFA \nimplementations provide. \n Recommendations: \n Additional investment by the vendor community in bringing more phishing-\nresistant authenticators to more use cases to provide greater defense against \nsophisticated attacks. Further, simplify and standardize their adoption, including \nin the form factors embedded into operating systems would greatly enhance the \nmarket.  \n Additional vendor investment in supporting high assurance MFA \nimplementations for enterprise use on both mobile and desktop platforms in a \nmaximally user-friendly flow to promote higher MFA adoption across all sizes.  \nKey Challenge: MFA reliance on self-enrollment by the user and one time \nenrollment code flow exposes itself as a potential threat actor. \n Recommendation: \n Develop more secure enrollment tooling to support the complex provisioning \nneeds of large organizations.  \n  Develop tools for automatically discovering and purging enrollment MFA \nauthenticators that have not been used in a particular period of time or whose \nusage deviates from the expected behavior of a user could be enhanced.  \nKey Challenge: The significant tradeoff between SSO functionality and complexity. \n Recommendation: \n Research into the development of a secure-by-default, easy to use, SSO system to \naddress these gaps in the market. For example: Relying Party vendors could \nprovide security configuration recommendations and their impact. Additionally, \nmanagement of lifetime tokens such as ID token, Access Token, and Refresh \n \n10 NIST SP 800-63: Digital Identity Guidelines.  \n\nIdentity and Access Management: Developer and Vendor Challenges  2  \n \n \nToken should come with a reasonable secure default value which preventing \nabuse scenarios.   \n IAM Vendors can aid in the detection of insecure implementations of identity \nfederation protocols and work with the ecosystem to build awareness around \nthese issues as well as improve the adoption of more secure uses of standards.  \nKey Challenge: Need to improve the currently deployed open standards throughout \nthe identity ecosystem. \n Recommendation:  \n Implement broader support for and development of identity standards in the \nenterprise ecosystem. This will enable a variety of security use cases, ranging \nfrom limiting access to managed devices to quickly revoking access when \naccounts are compromised.  \nKey Challenge: Architectures for leveraging open standard based SSO together with \nlegacy applications are not always widely understood.  \n Recommendation: \n Create a shared, open-source repository of open standards-based modules and \npatterns to solve these integration challenges to aid in adoption.  \nKey Challenge: SSO capabilities are bundled with other high end enterprise features \nin such a way that makes the inaccessible to small and medium organizations. \n Recommendation: \n Include organizational SSOs in any pricing plan that are targeted at business \ncustomers, regardless of size.  \n\n",
  "cves": [],
  "techniques": [],
  "advisory": "cybersecurity-alerts",
  "title": "esf ctr iam mfa sso challenges",
  "source": "nsa",
  "id": "a129c128f0f8ca68d92b1299115178dd27ef7c4cf317519899a8c88e362fdbbf"
}